{"version":3,"file":"url.unit.spec.js","sourceRoot":"","sources":["../../../src/__tests__/utils/url.unit.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { describe, expect, test } from 'vitest';\n\nimport { isValidUrl } from '../../utils/url.js';\n\ndescribe('isValidUrl: determining whether a URL is valid is very complicated', () => {\n  test('basic case', () => {\n    expect(isValidUrl('')).toEqual(false);\n    expect(isValidUrl('1.co')).toEqual(true);\n    expect(isValidUrl('https://www.example.com')).toEqual(true);\n    expect(isValidUrl('www.example.com')).toEqual(true);\n    expect(isValidUrl('http://www.github.com/toeverything/blocksuite')).toEqual(\n      true\n    );\n  });\n\n  test('CAUTION: any link include allowed schema is a valid url!', () => {\n    expect(isValidUrl('http://www.example.cm')).toEqual(true);\n    expect(isValidUrl('https://x ')).toEqual(true);\n    expect(isValidUrl('mailto://w:80')).toEqual(true);\n  });\n\n  test('link include a unknown schema is not a valid url', () => {\n    expect(isValidUrl('xxx://www.example.com')).toEqual(false);\n    expect(isValidUrl('https://')).toEqual(false);\n    expect(isValidUrl('http://w.... !@#*(!!!!')).toEqual(false);\n  });\n\n  test('URL without protocol is a valid URL', () => {\n    expect(isValidUrl('www.example.com')).toEqual(true);\n    expect(isValidUrl('example.co')).toEqual(true);\n    expect(isValidUrl('example.cm')).toEqual(true);\n    expect(isValidUrl('1.1.1.1')).toEqual(true);\n\n    expect(isValidUrl('example.c')).toEqual(false);\n  });\n\n  test('special cases', () => {\n    expect(isValidUrl('example.com.')).toEqual(true);\n\n    // I don't know why\n    // private & local networks is excluded\n    expect(isValidUrl('127.0.0.1')).toEqual(false);\n    expect(isValidUrl('10.0.0.1')).toEqual(false);\n    expect(isValidUrl('localhost')).toEqual(false);\n    expect(isValidUrl('0.0.0.0')).toEqual(false);\n\n    expect(isValidUrl('128.0.0.1')).toEqual(true);\n    expect(isValidUrl('1.0.0.1')).toEqual(true);\n  });\n\n  test('email link is a valid URL', () => {\n    // See https://www.rapidtables.com/web/html/mailto.html\n    expect(isValidUrl('mailto:name@email.com')).toEqual(true);\n    expect(\n      isValidUrl(\n        'mailto:name@rapidtables.com?subject=The%20subject%20of%20the%20mail'\n      )\n    ).toEqual(true);\n    expect(\n      isValidUrl(\n        'mailto:name1@rapidtables.com?cc=name2@rapidtables.com&bcc=name3@rapidtables.com&subject=The%20subject%20of%20the%20email&body=The%20body%20of%20the%20email'\n      )\n    ).toEqual(true);\n    // multiple email recipients\n    expect(isValidUrl('mailto:name1@mail.com,name2@mail.com')).toEqual(true);\n  });\n\n  test('misc case', () => {\n    // Emoji domain\n    expect(isValidUrl('xn--i-7iq.ws')).toEqual(true);\n    expect(\n      isValidUrl('https://username:password@www.example.com:80/?q_a=1234567')\n    ).toEqual(true);\n\n    expect(isValidUrl('新华网.cn')).toEqual(true);\n    expect(isValidUrl('example.com/中文/にほんご')).toEqual(true);\n\n    // It's a valid url, but we don't want to support it\n    // Longest TLD up to date is `.xn--vermgensberatung-pwb`, at 24 characters in Punycode and 17 when decoded [vermögensberatung].\n    // See also https://stackoverflow.com/questions/9238640/how-long-can-a-tld-possibly-be#:~:text=Longest%20TLD%20up%20to%20date,17%20when%20decoded%20%5Bverm%C3%B6gensberatung%5D.\n    expect(isValidUrl('example.xn--vermgensberatung-pwb')).toEqual(false);\n  });\n});\n"]}