{"version":3,"file":"delete-selected-models.js","sourceRoot":"","sources":["../../../src/commands/model-crud/delete-selected-models.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AAExD,MAAM,CAAC,MAAM,2BAA2B,GAA8B,CACpE,GAAG,EACH,IAAI,EACJ,EAAE;IACF,MAAM,MAAM,GAAG,GAAG,CAAC,cAAc,CAAC;IAClC,YAAY,CACV,MAAM,EACN,uHAAuH,CACxH,CAAC;IAEF,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QACrB,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,OAAO,IAAI,EAAE,CAAC;AAChB,CAAC,CAAC","sourcesContent":["import type { Command } from '@blocksuite/block-std';\n\nimport { assertExists } from '@blocksuite/global/utils';\n\nexport const deleteSelectedModelsCommand: Command<'selectedModels'> = (\n  ctx,\n  next\n) => {\n  const models = ctx.selectedModels;\n  assertExists(\n    models,\n    '`selectedModels` is required, you need to use `getSelectedModels` command before adding this command to the pipeline.'\n  );\n\n  models.forEach(model => {\n    ctx.std.doc.deleteBlock(model);\n  });\n\n  return next();\n};\n\ndeclare global {\n  namespace BlockSuite {\n    interface Commands {\n      deleteSelectedModels: typeof deleteSelectedModelsCommand;\n    }\n  }\n}\n"]}