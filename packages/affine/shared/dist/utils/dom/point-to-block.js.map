{"version":3,"file":"point-to-block.js","sourceRoot":"","sources":["../../../src/utils/dom/point-to-block.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Point, Rect } from '@blocksuite/global/utils';\n\nimport { BLOCK_ID_ATTR, type BlockComponent } from '@blocksuite/block-std';\n\nimport { BLOCK_CHILDREN_CONTAINER_PADDING_LEFT } from '../../consts/index.js';\nimport { clamp } from '../math.js';\nimport { matchFlavours } from '../model/checker.js';\n\nconst ATTR_SELECTOR = `[${BLOCK_ID_ATTR}]`;\n\n// margin-top: calc(var(--affine-paragraph-space) + 24px);\n// h1.margin-top = 8px + 24px = 32px;\nconst MAX_SPACE = 32;\nconst STEPS = MAX_SPACE / 2 / 2;\n\n/**\n * Returns `16` if node is contained in the parent.\n * Otherwise return `0`.\n */\nfunction contains(parent: Element, node: Element) {\n  return (\n    parent.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY\n  );\n}\n\n/**\n * Returns `true` if element has `data-block-id` attribute.\n */\nfunction hasBlockId(element: Element): element is BlockComponent {\n  return element.hasAttribute(BLOCK_ID_ATTR);\n}\n\n/**\n * Returns `true` if element is default/edgeless page or note.\n */\nfunction isRootOrNoteOrSurface(element: BlockComponent) {\n  return matchFlavours(element.model, [\n    'affine:page',\n    'affine:note',\n    // @ts-ignore TODO: migrate surface model to @blocksuite/affine-model\n    'affine:surface',\n  ]);\n}\n\nfunction isBlock(element: BlockComponent) {\n  return !isRootOrNoteOrSurface(element);\n}\n\nfunction isImage({ tagName }: Element) {\n  return tagName === 'AFFINE-IMAGE';\n}\n\nfunction isDatabase({ tagName }: Element) {\n  return tagName === 'AFFINE-DATABASE-TABLE' || tagName === 'AFFINE-DATABASE';\n}\n\n/**\n * Returns the closest block element by a point in the rect.\n *\n * ```\n * ############### block\n * ||############# block\n * ||||########### block\n * ||||    ...\n * ||||  y - 2 * n\n * ||||    ...\n * ||||----------- cursor\n * ||||    ...\n * ||||  y + 2 * n\n * ||||    ...\n * ||||########### block\n * ||############# block\n * ############### block\n * ```\n */\nexport function getClosestBlockComponentByPoint(\n  point: Point,\n  state: {\n    rect?: Rect;\n    container?: Element;\n    snapToEdge?: {\n      x: boolean;\n      y: boolean;\n    };\n  } | null = null,\n  scale = 1\n): BlockComponent | null {\n  const { y } = point;\n\n  let container;\n  let element = null;\n  let bounds = null;\n  let childBounds = null;\n  let diff = 0;\n  let n = 1;\n\n  if (state) {\n    const {\n      snapToEdge = {\n        x: true,\n        y: false,\n      },\n    } = state;\n    container = state.container;\n    const rect = state.rect || container?.getBoundingClientRect();\n    if (rect) {\n      if (snapToEdge.x) {\n        point.x = Math.min(\n          Math.max(point.x, rect.left) +\n            BLOCK_CHILDREN_CONTAINER_PADDING_LEFT * scale -\n            1,\n          rect.right - BLOCK_CHILDREN_CONTAINER_PADDING_LEFT * scale - 1\n        );\n      }\n      if (snapToEdge.y) {\n        // TODO handle scale\n        if (scale !== 1) {\n          console.warn('scale is not supported yet');\n        }\n        point.y = clamp(point.y, rect.top + 1, rect.bottom - 1);\n      }\n    }\n  }\n\n  // find block element\n  element = findBlockComponent(\n    document.elementsFromPoint(point.x, point.y),\n    container\n  );\n\n  // Horizontal direction: for nested structures\n  if (element) {\n    // Database\n    if (isDatabase(element)) {\n      bounds = element.getBoundingClientRect();\n      const rows = getDatabaseBlockRowsElement(element);\n      if (rows) {\n        childBounds = rows.getBoundingClientRect();\n\n        if (childBounds.height) {\n          if (point.y < childBounds.top || point.y > childBounds.bottom) {\n            return element as BlockComponent;\n          }\n          childBounds = null;\n        } else {\n          return element as BlockComponent;\n        }\n      }\n    } else {\n      // Indented paragraphs or list\n      bounds = getRectByBlockComponent(element);\n      childBounds = element\n        .querySelector('.affine-block-children-container')\n        ?.firstElementChild?.getBoundingClientRect();\n\n      if (childBounds && childBounds.height) {\n        if (bounds.x < point.x && point.x <= childBounds.x) {\n          return element as BlockComponent;\n        }\n        childBounds = null;\n      } else {\n        return element as BlockComponent;\n      }\n    }\n\n    bounds = null;\n    element = null;\n  }\n\n  // Vertical direction\n  do {\n    point.y = y - n * 2;\n\n    if (n < 0) n--;\n    n *= -1;\n\n    // find block element\n    element = findBlockComponent(\n      document.elementsFromPoint(point.x, point.y),\n      container\n    );\n\n    if (element) {\n      bounds = getRectByBlockComponent(element);\n      diff = bounds.bottom - point.y;\n      if (diff >= 0 && diff <= STEPS * 2) {\n        return element as BlockComponent;\n      }\n      diff = point.y - bounds.top;\n      if (diff >= 0 && diff <= STEPS * 2) {\n        return element as BlockComponent;\n      }\n      bounds = null;\n      element = null;\n    }\n  } while (n <= STEPS);\n\n  return element;\n}\n\n/**\n * Find the most close block on the given position\n * @param container container which the blocks can be found inside\n * @param point position\n * @param selector selector to find the block\n */\nexport function findClosestBlockComponent(\n  container: BlockComponent,\n  point: Point,\n  selector: string\n): BlockComponent | null {\n  const children = (\n    Array.from(container.querySelectorAll(selector)) as BlockComponent[]\n  )\n    .filter(child => child.host === container.host)\n    .filter(child => child !== container);\n\n  let lastDistance = Number.POSITIVE_INFINITY;\n  let lastChild = null;\n\n  if (!children.length) return null;\n\n  for (const child of children) {\n    const rect = child.getBoundingClientRect();\n    if (rect.height === 0 || point.y > rect.bottom || point.y < rect.top)\n      continue;\n    const distance =\n      Math.pow(point.y - (rect.y + rect.height / 2), 2) +\n      Math.pow(point.x - rect.x, 2);\n\n    if (distance <= lastDistance) {\n      lastDistance = distance;\n      lastChild = child;\n    } else {\n      return lastChild;\n    }\n  }\n\n  return lastChild;\n}\n\n/**\n * Returns the closest block element by element that does not contain the page element and note element.\n */\nexport function getClosestBlockComponentByElement(\n  element: Element | null\n): BlockComponent | null {\n  if (!element) return null;\n  if (hasBlockId(element) && isBlock(element)) {\n    return element;\n  }\n  const blockComponent = element.closest<BlockComponent>(ATTR_SELECTOR);\n  if (blockComponent && isBlock(blockComponent)) {\n    return blockComponent;\n  }\n  return null;\n}\n\n/**\n * Returns rect of the block element.\n *\n * Compatible with Safari!\n * https://github.com/toeverything/blocksuite/issues/902\n * https://github.com/toeverything/blocksuite/pull/1121\n */\nexport function getRectByBlockComponent(element: Element | BlockComponent) {\n  if (isDatabase(element)) return element.getBoundingClientRect();\n  return (element.firstElementChild ?? element).getBoundingClientRect();\n}\n\n/**\n * Returns block elements excluding their subtrees.\n * Only keep block elements of same level.\n */\nexport function getBlockComponentsExcludeSubtrees(\n  elements: Element[] | BlockComponent[]\n): BlockComponent[] {\n  if (elements.length <= 1) return elements as BlockComponent[];\n  let parent = elements[0];\n  return elements.filter((node, index) => {\n    if (index === 0) return true;\n    if (contains(parent, node)) {\n      return false;\n    } else {\n      parent = node;\n      return true;\n    }\n  }) as BlockComponent[];\n}\n\n/**\n * Find block element from an `Element[]`.\n * In Chrome/Safari, `document.elementsFromPoint` does not include `affine-image`.\n */\nfunction findBlockComponent(elements: Element[], parent?: Element) {\n  const len = elements.length;\n  let element = null;\n  let i = 0;\n  while (i < len) {\n    element = elements[i];\n    i++;\n    // if parent does not contain element, it's ignored\n    if (parent && !contains(parent, element)) continue;\n    if (hasBlockId(element) && isBlock(element)) return element;\n    if (isImage(element)) {\n      const element = elements[i];\n      if (i < len && hasBlockId(element) && isBlock(element)) {\n        return elements[i];\n      }\n      return getClosestBlockComponentByElement(element);\n    }\n  }\n  return null;\n}\n\n/**\n * Gets the rows of the database.\n */\nfunction getDatabaseBlockRowsElement(element: Element) {\n  return element.querySelector('.affine-database-block-rows');\n}\n"]}