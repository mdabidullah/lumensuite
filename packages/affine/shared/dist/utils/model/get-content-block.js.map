{"version":3,"file":"get-content-block.js","sourceRoot":"","sources":["../../../src/utils/model/get-content-block.ts"],"names":[],"mappings":"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","sourcesContent":["import type { EditorHost } from '@blocksuite/block-std';\nimport type { BlockModel } from '@blocksuite/store';\n\nimport { matchFlavours } from './checker.js';\n\n/**\n *\n * @example\n * ```md\n * doc\n * - note\n *   - paragraph <- 5\n * - note <- 4 (will be skipped)\n *  - paragraph <- 3\n *    - child <- 2\n *      - child <- 1\n *  - paragraph <- when invoked here, the traverse order will be above\n * ```\n *\n * NOTE: this method will just return blocks with `content` role\n */\nexport function getPrevContentBlock(\n  editorHost: EditorHost,\n  model: BlockModel\n): BlockModel | null {\n  const getPrev = (model: BlockModel) => {\n    const parent = model.doc.getParent(model);\n    if (!parent) return null;\n\n    const index = parent.children.indexOf(model);\n    if (index > 0) {\n      let prev = parent.children[index - 1];\n      while (prev.children.length > 0) {\n        prev = prev.children[prev.children.length - 1];\n      }\n      return prev;\n    }\n\n    // in edgeless mode, limit search for the previous block within the same note\n    if (\n      // FIXME: this is a workaround to check if the editor is in edgeless mode\n      // We should use service to check if the editor is in edgeless mode\n      isInsideEdgelessEditor(editorHost) &&\n      parent.role === 'hub'\n    ) {\n      return null;\n    }\n\n    return parent;\n  };\n\n  const map: Record<string, true> = {};\n  const iterate: (model: BlockModel) => BlockModel | null = (\n    model: BlockModel\n  ) => {\n    if (model.id in map) {\n      console.error(\n        \"Can't get previous block! There's a loop in the block tree!\"\n      );\n      return null;\n    }\n    map[model.id] = true;\n\n    const prev = getPrev(model);\n    if (prev) {\n      if (prev.role === 'content' && !matchFlavours(prev, ['affine:frame'])) {\n        return prev;\n      } else {\n        return iterate(prev);\n      }\n    } else {\n      return null;\n    }\n  };\n\n  return iterate(model);\n}\n\n/**\n *\n * @example\n * ```md\n * page\n * - note\n *  - paragraph <- when invoked here, the traverse order will be following\n *    - child <- 1\n *  - sibling <- 2\n * - note <- 3 (will be skipped)\n *   - paragraph <- 4\n * ```\n *\n * NOTE: this method will skip the `affine:note` block\n */\nexport function getNextContentBlock(\n  editorHost: EditorHost,\n  model: BlockModel,\n  map: Record<string, true> = {}\n): BlockModel | null {\n  if (model.id in map) {\n    console.error(\"Can't get next block! There's a loop in the block tree!\");\n    return null;\n  }\n  map[model.id] = true;\n\n  const doc = model.doc;\n  if (model.children.length) {\n    return model.children[0];\n  }\n  let currentBlock: typeof model | null = model;\n  while (currentBlock) {\n    const nextSibling = doc.getNext(currentBlock);\n    if (nextSibling) {\n      // Assert nextSibling is not possible to be `affine:page`\n      if (model.role === 'hub') {\n        // in edgeless mode, limit search for the next block within the same note\n        if (isInsideEdgelessEditor(editorHost)) {\n          return null;\n        }\n\n        return getNextContentBlock(editorHost, nextSibling);\n      }\n      return nextSibling;\n    }\n    currentBlock = doc.getParent(currentBlock);\n  }\n  return null;\n}\n\nfunction isInsideEdgelessEditor(host: EditorHost) {\n  return Array.from(host.children).some(\n    v => v.tagName.toLowerCase() === 'affine-edgeless-root'\n  );\n}\n"]}