{"version":3,"file":"signal.js","sourceRoot":"","sources":["../../src/utils/signal.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,0BAA0B,CAAC;AAUlD,MAAM,UAAU,0BAA0B,CACxC,WAA0B,EAC1B,SAAY;IAEZ,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;IACpC,MAAM,YAAY,GAAG,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;QACjD,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;IAC1B,CAAC,CAAC,CAAC;IACH,OAAO;QACL,MAAM,EAAE,SAAS;QACjB,OAAO,EAAE,GAAG,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE;KAC1C,CAAC;AACJ,CAAC;AAED,OAAO,EAAe,MAAM,0BAA0B,CAAC","sourcesContent":["import { signal } from '@lit-labs/preact-signals';\n\ninterface Observable<T> {\n  subscribe(observer: (value: T) => void): Unsubscribable;\n}\n\ninterface Unsubscribable {\n  unsubscribe(): void;\n}\n\nexport function createSignalFromObservable<T>(\n  observable$: Observable<T>,\n  initValue: T\n) {\n  const newSignal = signal(initValue);\n  const subscription = observable$.subscribe(value => {\n    newSignal.value = value;\n  });\n  return {\n    signal: newSignal,\n    cleanup: () => subscription.unsubscribe(),\n  };\n}\n\nexport { type Signal } from '@lit-labs/preact-signals';\n"]}