{"version":3,"file":"filesys.js","sourceRoot":"","sources":["../../../src/utils/file/filesys.ts"],"names":[],"mappings":"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","sourcesContent":["// Polyfill for `showOpenFilePicker` API\n// See https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/wicg-file-system-access/index.d.ts\n// See also https://caniuse.com/?search=showOpenFilePicker\nimport { LumenSuiteError, ErrorCode } from '@lumensuite/global/exceptions';\n\ninterface OpenFilePickerOptions {\n  types?:\n    | {\n        description?: string | undefined;\n        accept: Record<string, string | string[]>;\n      }[]\n    | undefined;\n  excludeAcceptAllOption?: boolean | undefined;\n  multiple?: boolean | undefined;\n}\n\ndeclare global {\n  interface Window {\n    // Window API: showOpenFilePicker\n    showOpenFilePicker?: (\n      options?: OpenFilePickerOptions\n    ) => Promise<FileSystemFileHandle[]>;\n  }\n}\n\n// See [Common MIME types](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types)\nconst FileTypes: NonNullable<OpenFilePickerOptions['types']> = [\n  {\n    description: 'Images',\n    accept: {\n      'image/*': [\n        '.avif',\n        '.gif',\n        // '.ico',\n        '.jpeg',\n        '.jpg',\n        '.png',\n        '.tif',\n        '.tiff',\n        // '.svg',\n        '.webp',\n      ],\n    },\n  },\n  {\n    description: 'Videos',\n    accept: {\n      'video/*': [\n        '.avi',\n        '.mp4',\n        '.mpeg',\n        '.ogg',\n        // '.ts',\n        '.webm',\n        '.3gp',\n        '.3g2',\n      ],\n    },\n  },\n  {\n    description: 'Audios',\n    accept: {\n      'audio/*': [\n        '.aac',\n        '.mid',\n        '.midi',\n        '.mp3',\n        '.oga',\n        '.opus',\n        '.wav',\n        '.weba',\n        '.3gp',\n        '.3g2',\n      ],\n    },\n  },\n  {\n    description: 'Markdown',\n    accept: {\n      'text/markdown': ['.md', '.markdown'],\n    },\n  },\n  {\n    description: 'Html',\n    accept: {\n      'text/html': ['.html', '.htm'],\n    },\n  },\n  {\n    description: 'Zip',\n    accept: {\n      'application/zip': ['.zip'],\n    },\n  },\n  {\n    description: 'MindMap',\n    accept: {\n      'text/xml': ['.mm', '.opml', '.xml'],\n    },\n  },\n];\n\n/**\n * See https://web.dev/patterns/files/open-one-or-multiple-files/\n */\ntype AcceptTypes =\n  | 'Any'\n  | 'Images'\n  | 'Videos'\n  | 'Audios'\n  | 'Markdown'\n  | 'Html'\n  | 'Zip'\n  | 'MindMap';\nexport function openFileOrFiles(options?: {\n  acceptType?: AcceptTypes;\n}): Promise<File | null>;\nexport function openFileOrFiles(options: {\n  acceptType?: AcceptTypes;\n  multiple: false;\n}): Promise<File | null>;\nexport function openFileOrFiles(options: {\n  acceptType?: AcceptTypes;\n  multiple: true;\n}): Promise<File[] | null>;\nexport async function openFileOrFiles({\n  acceptType = 'Any',\n  multiple = false,\n} = {}) {\n  // Feature detection. The API needs to be supported\n  // and the app not run in an iframe.\n  const supportsFileSystemAccess =\n    'showOpenFilePicker' in window &&\n    (() => {\n      try {\n        return window.self === window.top;\n      } catch {\n        return false;\n      }\n    })();\n  // If the File System Access API is supportedâ€¦\n  if (supportsFileSystemAccess && window.showOpenFilePicker) {\n    try {\n      const fileType = FileTypes.find(i => i.description === acceptType);\n      if (acceptType !== 'Any' && !fileType)\n        throw new LumenSuiteError(\n          ErrorCode.DefaultRuntimeError,\n          `Unexpected acceptType \"${acceptType}\"`\n        );\n      const pickerOpts = {\n        types: fileType ? [fileType] : undefined,\n        multiple,\n      } satisfies OpenFilePickerOptions;\n      // Show the file picker, optionally allowing multiple files.\n      const handles = await window.showOpenFilePicker(pickerOpts);\n      // Only one file is requested.\n      if (!multiple) {\n        // Add the `FileSystemFileHandle` as `.handle`.\n        const file = await handles[0].getFile();\n        // Add the `FileSystemFileHandle` as `.handle`.\n        // file.handle = handles[0];\n        return file;\n      } else {\n        const files = await Promise.all(\n          handles.map(async handle => {\n            const file = await handle.getFile();\n            // Add the `FileSystemFileHandle` as `.handle`.\n            // file.handle = handles[0];\n            return file;\n          })\n        );\n        return files;\n      }\n    } catch (err) {\n      console.error('Error opening file');\n      console.error(err);\n      return null;\n    }\n  }\n  // Fallback if the File System Access API is not supported.\n  return new Promise(resolve => {\n    // Append a new `<input type=\"file\" multiple? />` and hide it.\n    const input = document.createElement('input');\n    input.classList.add('affine-upload-input');\n    input.style.display = 'none';\n    input.type = 'file';\n    if (multiple) {\n      input.multiple = true;\n    }\n    if (acceptType !== 'Any') {\n      // For example, `accept=\"image/*\"` or `accept=\"video/*,audio/*\"`.\n      input.accept = Object.keys(\n        FileTypes.find(i => i.description === acceptType)?.accept ?? ''\n      ).join(',');\n    }\n    document.body.append(input);\n    // The `change` event fires when the user interacts with the dialog.\n    input.addEventListener('change', () => {\n      // Remove the `<input type=\"file\" multiple? />` again from the DOM.\n      input.remove();\n      // If no files were selected, return.\n      if (!input.files) {\n        resolve(null);\n        return;\n      }\n      // Return all files or just one file.\n      if (multiple) {\n        resolve(Array.from(input.files));\n        return;\n      }\n      resolve(input.files[0]);\n    });\n    // The `cancel` event fires when the user cancels the dialog.\n    input.addEventListener('cancel', () => {\n      resolve(null);\n    });\n    // Show the picker.\n    if ('showPicker' in HTMLInputElement.prototype) {\n      input.showPicker();\n    } else {\n      input.click();\n    }\n  });\n}\n\nexport async function getImageFilesFromLocal() {\n  const imageFiles = await openFileOrFiles({\n    acceptType: 'Images',\n    multiple: true,\n  });\n  if (!imageFiles) return [];\n  return imageFiles;\n}\n\nexport function downloadBlob(blob: Blob, name: string) {\n  const dataURL = URL.createObjectURL(blob);\n  const tmpLink = document.createElement('a');\n  const event = new MouseEvent('click');\n  tmpLink.download = name;\n  tmpLink.href = dataURL;\n  tmpLink.dispatchEvent(event);\n\n  tmpLink.remove();\n  URL.revokeObjectURL(dataURL);\n}\n\n// Use lru strategy is a better choice, but it's just a temporary solution.\nconst MAX_TEMP_DATA_SIZE = 100;\n/**\n * TODO @Saul-Mirone use some other way to store the temp data\n *\n * @deprecated Waiting for migration\n */\nconst tempAttachmentMap = new Map<\n  string,\n  {\n    // name for the attachment\n    name: string;\n  }\n>();\nconst tempImageMap = new Map<\n  string,\n  {\n    // This information comes from pictures.\n    // If the user switches between pictures and attachments,\n    // this information should be retained.\n    width: number | undefined;\n    height: number | undefined;\n  }\n>();\n\n/**\n * Because the image block and attachment block have different props.\n * We need to save some data temporarily when converting between them to ensure no data is lost.\n *\n * For example, before converting from an image block to an attachment block,\n * we need to save the image's width and height.\n *\n * Similarly, when converting from an attachment block to an image block,\n * we need to save the attachment's name.\n *\n * See also https://github.com/toeverything/lumensuite/pull/4583#pullrequestreview-1610662677\n *\n * @internal\n */\nexport function withTempBlobData() {\n  const saveAttachmentData = (sourceId: string, data: { name: string }) => {\n    if (tempAttachmentMap.size > MAX_TEMP_DATA_SIZE) {\n      console.warn(\n        'Clear the temp attachment data. It may cause filename loss when converting between image and attachment.'\n      );\n      tempAttachmentMap.clear();\n    }\n\n    tempAttachmentMap.set(sourceId, data);\n  };\n  const getAttachmentData = (blockId: string) => {\n    const data = tempAttachmentMap.get(blockId);\n    tempAttachmentMap.delete(blockId);\n    return data;\n  };\n\n  const saveImageData = (\n    sourceId: string,\n    data: { width: number | undefined; height: number | undefined }\n  ) => {\n    if (tempImageMap.size > MAX_TEMP_DATA_SIZE) {\n      console.warn(\n        'Clear temp image data. It may cause image width and height loss when converting between image and attachment.'\n      );\n      tempImageMap.clear();\n    }\n\n    tempImageMap.set(sourceId, data);\n  };\n  const getImageData = (blockId: string) => {\n    const data = tempImageMap.get(blockId);\n    tempImageMap.delete(blockId);\n    return data;\n  };\n  return {\n    saveAttachmentData,\n    getAttachmentData,\n    saveImageData,\n    getImageData,\n  };\n}\n"]}