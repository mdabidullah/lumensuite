{"version":3,"file":"view-options.js","sourceRoot":"","sources":["../../../../../src/widget-presets/tools/presets/view-options/view-options.ts"],"names":[],"mappings":"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","sourcesContent":["import { popMenu } from '@blocksuite/affine-components/context-menu';\nimport {\n  ArrowRightSmallIcon,\n  DeleteIcon,\n  DuplicateIcon,\n  FilterIcon,\n  GroupingIcon,\n  InfoIcon,\n  MoreHorizontalIcon,\n} from '@blocksuite/icons/lit';\nimport { css, html } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\nimport type { SingleView } from '../../../../core/view-manager/single-view.js';\n\nimport { emptyFilterGroup } from '../../../../core/common/ast.js';\nimport {\n  popGroupSetting,\n  popSelectGroupByProperty,\n} from '../../../../core/common/group-by/setting.js';\nimport { popPropertiesSetting } from '../../../../core/common/properties.js';\nimport { WidgetBase } from '../../../../core/widget/widget-base.js';\nimport { popFilterModal } from '../../../filter/filter-modal.js';\n\nconst styles = css`\n  .affine-database-toolbar-item.more-action {\n    padding: 2px;\n    border-radius: 4px;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n  }\n\n  .affine-database-toolbar-item.more-action:hover {\n    background: var(--affine-hover-color);\n  }\n\n  .affine-database-toolbar-item.more-action svg {\n    width: 20px;\n    height: 20px;\n    fill: var(--affine-icon-color);\n  }\n\n  .more-action.active {\n    background: var(--affine-hover-color);\n  }\n`;\n\n@customElement('data-view-header-tools-view-options')\nexport class DataViewHeaderToolsViewOptions extends WidgetBase {\n  static override styles = styles;\n\n  clickMoreAction = (e: MouseEvent) => {\n    e.stopPropagation();\n    this.openMoreAction(e.target as HTMLElement);\n  };\n\n  openMoreAction = (target: HTMLElement) => {\n    this.showToolBar(true);\n    popViewOptions(target, this.view, () => {\n      this.showToolBar(false);\n    });\n  };\n\n  override render() {\n    if (this.view.readonly$.value) {\n      return;\n    }\n    return html` <div\n      class=\"affine-database-toolbar-item more-action dv-icon-20\"\n      @click=\"${this.clickMoreAction}\"\n    >\n      ${MoreHorizontalIcon()}\n    </div>`;\n  }\n\n  showToolBar(show: boolean) {\n    const tools = this.closest('data-view-header-tools');\n    if (tools) {\n      tools.showToolBar = show;\n    }\n  }\n\n  override accessor view!: SingleView;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'data-view-header-tools-view-options': DataViewHeaderToolsViewOptions;\n  }\n}\nexport const popViewOptions = (\n  target: HTMLElement,\n  view: SingleView,\n  onClose?: () => void\n) => {\n  const reopen = () => {\n    popViewOptions(target, view);\n  };\n  popMenu(target, {\n    options: {\n      style: 'min-width:300px',\n      input: {\n        initValue: view.name$.value,\n        onComplete: text => {\n          view.updateName(text);\n        },\n      },\n      items: [\n        {\n          type: 'action',\n          name: 'Properties',\n          icon: InfoIcon(),\n          postfix: ArrowRightSmallIcon(),\n          select: () => {\n            requestAnimationFrame(() => {\n              popPropertiesSetting(target, {\n                view: view,\n                onBack: reopen,\n              });\n            });\n          },\n        },\n        {\n          type: 'action',\n          name: 'Filter',\n          icon: FilterIcon(),\n          postfix: ArrowRightSmallIcon(),\n          select: () => {\n            popFilterModal(target, {\n              vars: view.vars$.value,\n              value: view.filter$.value ?? emptyFilterGroup,\n              onChange: view.updateFilter.bind(view),\n              isRoot: true,\n              onBack: reopen,\n              onDelete: () => {\n                view.updateFilter({\n                  ...(view.filter$.value ?? emptyFilterGroup),\n                  conditions: [],\n                });\n              },\n            });\n          },\n        },\n        {\n          type: 'action',\n          name: 'Group',\n          icon: GroupingIcon(),\n          postfix: ArrowRightSmallIcon(),\n          select: () => {\n            const groupBy = view.viewData$.value?.groupBy;\n            if (!groupBy) {\n              popSelectGroupByProperty(target, view);\n            } else {\n              popGroupSetting(target, view, reopen);\n            }\n          },\n        },\n        {\n          type: 'action',\n          name: 'Duplicate',\n          icon: DuplicateIcon(),\n          select: () => {\n            view.duplicate();\n          },\n        },\n        {\n          type: 'group',\n          name: '',\n          children: () => [\n            {\n              type: 'action',\n              name: 'Delete View',\n              icon: DeleteIcon(),\n              select: () => {\n                view.delete();\n              },\n              class: 'delete-item',\n            },\n          ],\n        },\n      ],\n      onClose: onClose,\n    },\n  });\n};\n"]}