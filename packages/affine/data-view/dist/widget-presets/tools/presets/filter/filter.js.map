{"version":3,"file":"filter.js","sourceRoot":"","sources":["../../../../../src/widget-presets/tools/presets/filter/filter.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AACnD,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AACzC,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAElD,OAAO,EACL,gBAAgB,GAEjB,MAAM,gCAAgC,CAAC;AACxC,OAAO,EAAE,eAAe,EAAE,MAAM,oCAAoC,CAAC;AACrE,OAAO,EAAE,UAAU,EAAE,MAAM,wCAAwC,CAAC;AACpE,OAAO,iCAAiC,CAAC;AAEzC,MAAM,MAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;CAoBjB,CAAC;IAGW,yBAAyB;4BADrC,aAAa,CAAC,+BAA+B,CAAC;;;;sBACA,UAAU;yCAAlB,SAAQ,WAAU;;;;YAAzD,6KAgDC;;;;iBA/CiB,WAAM,GAAG,MAAM,AAAT,CAAU;QAEhC,IAAY,OAAO;YACjB,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,gBAAgB,CAAC;QACrD,CAAC;QAED,IAAY,OAAO,CAAC,MAAmB;YACrC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACjC,CAAC;QAED,IAAY,QAAQ;YAClB,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QACnC,CAAC;QAEO,SAAS,CAAC,KAAiB;YACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YACvB,eAAe,CAAC,KAAK,CAAC,MAAqB,EAAE;gBAC3C,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK;gBAC3B,QAAQ,EAAE,MAAM,CAAC,EAAE;oBACjB,IAAI,CAAC,OAAO,GAAG;wBACb,GAAG,IAAI,CAAC,OAAO;wBACf,UAAU,EAAE,CAAC,MAAM,CAAC;qBACrB,CAAC;gBACJ,CAAC;gBACD,OAAO,EAAE,GAAG,EAAE;oBACZ,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBAC1B,CAAC;aACF,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAEQ,MAAM;YACb,IAAI,IAAI,CAAC,QAAQ;gBAAE,OAAO,OAAO,CAAC;YAClC,OAAO,IAAI,CAAA;gBACC,IAAI,CAAC,SAAS;;;QAGtB,UAAU,EAAE;WACT,CAAC;QACV,CAAC;QAED,WAAW,CAAC,IAAa;YACvB,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;YACrD,IAAI,KAAK,EAAE,CAAC;gBACV,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;YAC3B,CAAC;QACH,CAAC;;YA/CU,uDAAyB;;;;;SAAzB,yBAAyB","sourcesContent":["import { FilterIcon } from '@blocksuite/icons/lit';\nimport { css, html, nothing } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\nimport {\n  emptyFilterGroup,\n  type FilterGroup,\n} from '../../../../core/common/ast.js';\nimport { popCreateFilter } from '../../../../core/common/ref/ref.js';\nimport { WidgetBase } from '../../../../core/widget/widget-base.js';\nimport '../../../filter/filter-group.js';\n\nconst styles = css`\n  .affine-database-filter-button {\n    display: flex;\n    align-items: center;\n    gap: 6px;\n    font-size: 12px;\n    line-height: 20px;\n    padding: 2px 4px;\n    border-radius: 4px;\n    cursor: pointer;\n  }\n\n  .affine-database-filter-button:hover {\n    background-color: var(--affine-hover-color);\n  }\n\n  .affine-database-filter-button svg {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\n@customElement('data-view-header-tools-filter')\nexport class DataViewHeaderToolsFilter extends WidgetBase {\n  static override styles = styles;\n\n  private get _filter(): FilterGroup {\n    return this.view.filter$.value ?? emptyFilterGroup;\n  }\n\n  private set _filter(filter: FilterGroup) {\n    this.view.updateFilter(filter);\n  }\n\n  private get readonly() {\n    return this.view.readonly$.value;\n  }\n\n  private addFilter(event: MouseEvent) {\n    this.showToolBar(true);\n    popCreateFilter(event.target as HTMLElement, {\n      vars: this.view.vars$.value,\n      onSelect: filter => {\n        this._filter = {\n          ...this._filter,\n          conditions: [filter],\n        };\n      },\n      onClose: () => {\n        this.showToolBar(false);\n      },\n    });\n    return;\n  }\n\n  override render() {\n    if (this.readonly) return nothing;\n    return html`<div\n      @click=\"${this.addFilter}\"\n      class=\"affine-database-filter-button dv-icon-20\"\n    >\n      ${FilterIcon()} Filter\n    </div>`;\n  }\n\n  showToolBar(show: boolean) {\n    const tools = this.closest('data-view-header-tools');\n    if (tools) {\n      tools.showToolBar = show;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'data-view-header-tools-filter': DataViewHeaderToolsFilter;\n  }\n}\n"]}