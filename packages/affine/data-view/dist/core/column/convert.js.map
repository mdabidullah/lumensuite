{"version":3,"file":"convert.js","sourceRoot":"","sources":["../../../src/core/column/convert.ts"],"names":[],"mappings":"AAgBA,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAMjC,IAAU,EACV,EAAM,EACN,OAAkC,EAClC,EAAE;IACF,OAAO;QACL,IAAI,EAAE,IAAI,CAAC,IAAI;QACf,EAAE,EAAE,EAAE,CAAC,IAAI;QACX,OAAO;KACR,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import type { ColumnModel } from './column-config.js';\nimport type {\n  GetCellDataFromConfig,\n  GetColumnDataFromConfig,\n} from './types.js';\n\nexport type ConvertFunction<\n  From extends ColumnModel = ColumnModel,\n  To extends ColumnModel = ColumnModel,\n> = (\n  column: GetColumnDataFromConfig<From['config']>,\n  cells: (GetCellDataFromConfig<From['config']> | undefined)[]\n) => {\n  column: GetColumnDataFromConfig<To['config']>;\n  cells: (GetCellDataFromConfig<To['config']> | undefined)[];\n};\nexport const createColumnConvert = <\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  From extends ColumnModel<any, any, any>,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  To extends ColumnModel<any, any, any>,\n>(\n  from: From,\n  to: To,\n  convert: ConvertFunction<From, To>\n) => {\n  return {\n    from: from.type,\n    to: to.type,\n    convert,\n  };\n};\n"]}