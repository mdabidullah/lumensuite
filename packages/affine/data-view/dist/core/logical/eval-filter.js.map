{"version":3,"file":"eval-filter.js","sourceRoot":"","sources":["../../../src/core/logical/eval-filter.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Filter, Value, VariableOrProperty } from '../common/ast.js';\n\nimport { filterMatcher } from '../../widget-presets/filter/matcher/matcher.js';\nimport { propertyMatcher } from './property-matcher.js';\n\nconst evalRef = (\n  ref: VariableOrProperty,\n  row: Record<string, unknown>\n): unknown => {\n  if (ref.type === 'ref') {\n    return row[ref.name];\n  }\n  const value = evalRef(ref.ref, row);\n  const fn = propertyMatcher.findData(v => v.name === ref.propertyFuncName);\n  try {\n    return fn?.impl(value);\n  } catch (e) {\n    console.error(e);\n    return;\n  }\n};\n\nconst evalValue = (value: Value, _row: Record<string, unknown>): unknown => {\n  return value.value;\n  // TODO\n  // switch (value.type) {\n  //     case \"ref\":\n  //         return evalRef(value, row)\n  //     case \"literal\":\n  //         return value.value;\n  // }\n};\nexport const evalFilter = (\n  filterGroup: Filter,\n  row: Record<string, unknown>\n): boolean => {\n  const evalF = (filter: Filter): boolean => {\n    if (filter.type === 'filter') {\n      const value = evalRef(filter.left, row);\n      const func = filterMatcher.findData(v => v.name === filter.function);\n      const args = filter.args.map(value => evalValue(value, row));\n      try {\n        if ((func?.impl.length ?? 0) > args.length + 1) {\n          // skip\n          return true;\n        }\n        const impl = func?.impl(value, ...args);\n        return impl ?? true;\n      } catch (e) {\n        console.error(e);\n        return true;\n      }\n    } else if (filter.type === 'group') {\n      if (filter.op === 'and') {\n        return filter.conditions.every(f => evalF(f));\n      } else if (filter.op === 'or') {\n        return filter.conditions.some(f => evalF(f));\n      }\n    }\n    return true;\n  };\n  // console.log(evalF(filterGroup))\n  return evalF(filterGroup);\n};\n"]}