{"version":3,"file":"selection.js","sourceRoot":"","sources":["../../../../src/core/common/detail/selection.ts"],"names":[],"mappings":"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","sourcesContent":["import type { KanbanCard } from '../../../view-presets/kanban/card.js';\nimport type { KanbanCardSelection } from '../../../view-presets/kanban/types.js';\nimport type { RecordDetail } from './detail.js';\n\nimport { KanbanCell } from '../../../view-presets/kanban/cell.js';\nimport { RecordField } from './field.js';\n\ntype DetailViewSelection = {\n  propertyId: string;\n  isEditing: boolean;\n};\n\nexport class DetailSelection {\n  _selection?: DetailViewSelection;\n\n  onSelect = (selection?: DetailViewSelection) => {\n    const old = this._selection;\n    if (old) {\n      this.blur(old);\n    }\n    this._selection = selection;\n    if (selection) {\n      this.focus(selection);\n    }\n  };\n\n  get selection(): DetailViewSelection | undefined {\n    return this._selection;\n  }\n\n  set selection(selection: DetailViewSelection | undefined) {\n    if (!selection) {\n      this.onSelect();\n      return;\n    }\n    if (selection.isEditing) {\n      const container = this.getFocusCellContainer(selection);\n      const cell = container?.cell;\n      const isEditing = cell\n        ? cell.beforeEnterEditMode()\n          ? selection.isEditing\n          : false\n        : false;\n      this.onSelect({\n        propertyId: selection.propertyId,\n        isEditing,\n      });\n    } else {\n      this.onSelect(selection);\n    }\n  }\n\n  constructor(private viewEle: RecordDetail) {}\n\n  blur(selection: DetailViewSelection) {\n    const container = this.getFocusCellContainer(selection);\n    if (!container) {\n      return;\n    }\n\n    container.isFocus = false;\n    const cell = container.cell;\n\n    if (selection.isEditing) {\n      requestAnimationFrame(() => {\n        cell?.onExitEditMode();\n      });\n      if (cell?.blurCell()) {\n        container.blur();\n      }\n      container.editing = false;\n    } else {\n      container.blur();\n    }\n  }\n\n  deleteProperty() {\n    //\n  }\n\n  focus(selection: DetailViewSelection) {\n    const container = this.getFocusCellContainer(selection);\n    if (!container) {\n      return;\n    }\n    container.isFocus = true;\n    const cell = container.cell;\n    if (selection.isEditing) {\n      cell?.onEnterEditMode();\n      if (cell?.focusCell()) {\n        container.focus();\n      }\n      container.editing = true;\n    } else {\n      container.focus();\n    }\n  }\n\n  focusDown() {\n    const selection = this.selection;\n    if (!selection || selection?.isEditing) {\n      return;\n    }\n    const nextContainer =\n      this.getFocusCellContainer(selection)?.nextElementSibling;\n    if (nextContainer instanceof KanbanCell) {\n      this.selection = {\n        propertyId: nextContainer.column.id,\n        isEditing: false,\n      };\n    }\n  }\n\n  focusFirstCell() {\n    const firstId = this.viewEle.querySelector('affine-data-view-record-field')\n      ?.column.id;\n    if (firstId) {\n      this.selection = {\n        propertyId: firstId,\n        isEditing: true,\n      };\n    }\n  }\n\n  focusUp() {\n    const selection = this.selection;\n    if (!selection || selection?.isEditing) {\n      return;\n    }\n    const preContainer =\n      this.getFocusCellContainer(selection)?.previousElementSibling;\n    if (preContainer instanceof RecordField) {\n      this.selection = {\n        propertyId: preContainer.column.id,\n        isEditing: false,\n      };\n    }\n  }\n\n  getFocusCellContainer(selection: DetailViewSelection) {\n    return this.viewEle.querySelector(\n      `affine-data-view-record-field[data-column-id=\"${selection.propertyId}\"]`\n    ) as RecordField | undefined;\n  }\n\n  getSelectCard(selection: KanbanCardSelection) {\n    const { groupKey, cardId } = selection.cards[0];\n\n    return this.viewEle\n      .querySelector(`affine-data-view-kanban-group[data-key=\"${groupKey}\"]`)\n      ?.querySelector(\n        `affine-data-view-kanban-card[data-card-id=\"${cardId}\"]`\n      ) as KanbanCard | undefined;\n  }\n}\n"]}