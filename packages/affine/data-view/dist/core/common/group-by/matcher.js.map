{"version":3,"file":"matcher.js","sourceRoot":"","sources":["../../../../src/core/common/group-by/matcher.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,OAAO,EAAE,MAAM,0BAA0B,CAAC;AA+BnD,MAAM,CAAC,MAAM,cAAc,GAAG,IAAI,OAAO,EAAiB,CAAC","sourcesContent":["import type { TType } from '../../logical/typesystem.js';\nimport type { UniComponent } from '../../utils/uni-component/uni-component.js';\n\nimport { Matcher } from '../../logical/matcher.js';\n\nexport interface GroupRenderProps<\n  Data extends NonNullable<unknown> = NonNullable<unknown>,\n  Value = unknown,\n> {\n  data: Data;\n  updateData?: (data: Data) => void;\n  value: Value;\n  updateValue?: (value: Value) => void;\n  readonly: boolean;\n}\n\nexport type GroupByConfig = {\n  name: string;\n  groupName: (type: TType, value: unknown) => string;\n  defaultKeys: (type: TType) => {\n    key: string;\n    value: unknown;\n  }[];\n  valuesGroup: (\n    value: unknown,\n    type: TType\n  ) => {\n    key: string;\n    value: unknown;\n  }[];\n  addToGroup?: (value: unknown, oldValue: unknown) => unknown;\n  removeFromGroup?: (value: unknown, oldValue: unknown) => unknown;\n  view: UniComponent<GroupRenderProps>;\n};\nexport const groupByMatcher = new Matcher<GroupByConfig>();\n"]}