{"version":3,"file":"colors.js","sourceRoot":"","sources":["../../../../src/core/utils/tags/colors.ts"],"names":[],"mappings":"AAKA,MAAM,CAAC,MAAM,kBAAkB,GAAwB;IACrD;QACE,KAAK,EAAE,uBAAuB;QAC9B,IAAI,EAAE,KAAK;KACZ;IACD;QACE,KAAK,EAAE,wBAAwB;QAC/B,IAAI,EAAE,MAAM;KACb;IACD;QACE,KAAK,EAAE,0BAA0B;QACjC,IAAI,EAAE,QAAQ;KACf;IACD;QACE,KAAK,EAAE,0BAA0B;QACjC,IAAI,EAAE,QAAQ;KACf;IACD;QACE,KAAK,EAAE,yBAAyB;QAChC,IAAI,EAAE,OAAO;KACd;IACD;QACE,KAAK,EAAE,wBAAwB;QAC/B,IAAI,EAAE,MAAM;KACb;IACD;QACE,KAAK,EAAE,wBAAwB;QAC/B,IAAI,EAAE,MAAM;KACb;IACD;QACE,KAAK,EAAE,0BAA0B;QACjC,IAAI,EAAE,QAAQ;KACf;IACD;QACE,KAAK,EAAE,wBAAwB;QAC/B,IAAI,EAAE,MAAM;KACb;IACD;QACE,KAAK,EAAE,yBAAyB;QAChC,IAAI,EAAE,OAAO;KACd;CACF,CAAC;AAEF,4BAA4B;AAC5B,MAAM,kBAAkB,GAAG,kBAAkB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAExE,SAAS,cAAc;IACrB,IAAI,MAAM,GAAG,CAAC,GAAG,kBAAkB,CAAC,CAAC;IACrC,OAAO,GAAG,EAAE;QACV,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACxB,MAAM,GAAG,CAAC,GAAG,kBAAkB,CAAC,CAAC;QACnC,CAAC;QACD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;QACxD,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,OAAO,KAAK,CAAC;IACf,CAAC,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,MAAM,WAAW,GAAG,cAAc,EAAE,CAAC","sourcesContent":["export type SelectOptionColor = {\n  color: string;\n  name: string;\n};\n\nexport const selectOptionColors: SelectOptionColor[] = [\n  {\n    color: 'var(--affine-tag-red)',\n    name: 'Red',\n  },\n  {\n    color: 'var(--affine-tag-pink)',\n    name: 'Pink',\n  },\n  {\n    color: 'var(--affine-tag-orange)',\n    name: 'Orange',\n  },\n  {\n    color: 'var(--affine-tag-yellow)',\n    name: 'Yellow',\n  },\n  {\n    color: 'var(--affine-tag-green)',\n    name: 'Green',\n  },\n  {\n    color: 'var(--affine-tag-teal)',\n    name: 'Teal',\n  },\n  {\n    color: 'var(--affine-tag-blue)',\n    name: 'Blue',\n  },\n  {\n    color: 'var(--affine-tag-purple)',\n    name: 'Purple',\n  },\n  {\n    color: 'var(--affine-tag-gray)',\n    name: 'Gray',\n  },\n  {\n    color: 'var(--affine-tag-white)',\n    name: 'White',\n  },\n];\n\n/** select tag color poll */\nconst selectTagColorPoll = selectOptionColors.map(color => color.color);\n\nfunction tagColorHelper() {\n  let colors = [...selectTagColorPoll];\n  return () => {\n    if (colors.length === 0) {\n      colors = [...selectTagColorPoll];\n    }\n    const index = Math.floor(Math.random() * colors.length);\n    const color = colors.splice(index, 1)[0];\n    return color;\n  };\n}\n\nexport const getTagColor = tagColorHelper();\n"]}