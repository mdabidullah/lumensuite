{"version":3,"file":"multi-tag-view.js","sourceRoot":"","sources":["../../../../src/core/utils/tags/multi-tag-view.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,iBAAiB,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AAC1E,OAAO,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC1B,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AACnE,OAAO,EAAE,MAAM,EAAE,MAAM,0BAA0B,CAAC;AAClD,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AACvD,OAAO,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;IAK7B,YAAY;4BADxB,aAAa,CAAC,uBAAuB,CAAC;;;;sBACL,cAAc,CAAC,iBAAiB,CAAC;;;;;;;;;;4BAAzC,SAAQ,WAAiC;;;;mCAyDhE,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;2CAG9B,KAAK,CAAC,+BAA+B,CAAC;iCAGtC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;YAL/B,0KAAS,OAAO,6BAAP,OAAO,yFAAmB;YAGnC,kMAAS,eAAe,6BAAf,eAAe,yGAAe;YAGvC,oKAAS,KAAK,6BAAL,KAAK,qFAAgB;YAhEhC,6KAiEC;;;;iBAhEiB,WAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAiC3B,AAjCqB,CAiCpB;QAEO,MAAM;YACb,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;YAC1B,MAAM,GAAG,GAAG,IAAI,GAAG,CAAoB,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1E,OAAO,IAAI,CAAA;;UAEL,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;gBACpB,MAAM,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBAC3B,IAAI,CAAC,MAAM,EAAE,CAAC;oBACZ,OAAO;gBACT,CAAC;gBACD,MAAM,KAAK,GAAG,QAAQ,CAAC;oBACrB,eAAe,EAAE,MAAM,CAAC,KAAK;iBAC9B,CAAC,CAAC;gBACH,OAAO,IAAI,CAAA,uCAAuC,KAAK;eAClD,MAAM,CAAC,KAAK;YACf,CAAC;YACL,CAAC,CAAC;;KAEL,CAAC;QACJ,CAAC;QAGD,2EAAgC,EAAE,EAAC;QAAnC,IAAS,OAAO,6CAAmB;QAAnC,IAAS,OAAO,mDAAmB;QAGnC,0JAAuC;QAAvC,IAAS,eAAe,qDAAe;QAAvC,IAAS,eAAe,2DAAe;QAGvC,qIAA2B,EAAE,GAAC;QAA9B,IAAS,KAAK,2CAAgB;QAA9B,IAAS,KAAK,iDAAgB;;;;;;YAhEnB,uDAAY;;;;;SAAZ,YAAY","sourcesContent":["import { ShadowlessElement, WithDisposable } from '@blocksuite/block-std';\nimport { css } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { html } from 'lit/static-html.js';\n\nimport type { SelectTag } from './multi-tag-select.js';\n\n@customElement('affine-multi-tag-view')\nexport class MultiTagView extends WithDisposable(ShadowlessElement) {\n  static override styles = css`\n    affine-multi-tag-view {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      height: 100%;\n      min-height: 22px;\n    }\n\n    .affine-select-cell-container * {\n      box-sizing: border-box;\n    }\n\n    .affine-select-cell-container {\n      display: flex;\n      align-items: center;\n      flex-wrap: wrap;\n      gap: 6px;\n      width: 100%;\n      font-size: var(--affine-font-sm);\n    }\n\n    .affine-select-cell-container .select-selected {\n      height: 22px;\n      font-size: 14px;\n      line-height: 22px;\n      padding: 0 8px;\n      border-radius: 4px;\n      white-space: nowrap;\n      background: var(--affine-tag-white);\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  `;\n\n  override render() {\n    const values = this.value;\n    const map = new Map<string, SelectTag>(this.options?.map(v => [v.id, v]));\n    return html`\n      <div contenteditable=\"false\" class=\"affine-select-cell-container\">\n        ${repeat(values, id => {\n          const option = map.get(id);\n          if (!option) {\n            return;\n          }\n          const style = styleMap({\n            backgroundColor: option.color,\n          });\n          return html`<span class=\"select-selected\" style=${style}\n            >${option.value}</span\n          >`;\n        })}\n      </div>\n    `;\n  }\n\n  @property({ attribute: false })\n  accessor options: SelectTag[] = [];\n\n  @query('.affine-select-cell-container')\n  accessor selectContainer!: HTMLElement;\n\n  @property({ attribute: false })\n  accessor value: string[] = [];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'affine-multi-tag-view': MultiTagView;\n  }\n}\n"]}