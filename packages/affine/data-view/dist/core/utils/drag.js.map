{"version":3,"file":"drag.js","sourceRoot":"","sources":["../../../src/core/utils/drag.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,MAAM,SAAS,GAAG,CAMvB,GAAe,EACf,GAMC,EACD,EAAE;IACF,MAAM,SAAS,GAAG,GAAG,EAAE,SAAS,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAM,CAAC,CAAC;IAClD,MAAM,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;IAC7B,MAAM,MAAM,GAAG;QACb,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;QACvB,IAAI,EAAE,KAAK;QACX,IAAI,EAAE,CAAC,CAAI,EAAE,EAAE;YACb,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC9B,CAAC;KACF,CAAC;IACF,MAAM,KAAK,GAAG,GAAG,EAAE;QACjB,MAAM,CAAC,mBAAmB,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QAChD,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;QAC5C,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAC/C,GAAG,CAAC,OAAO,EAAE,CAAC;IAChB,CAAC,CAAC;IACF,MAAM,OAAO,GAAG,CAAC,GAAkB,EAAE,EAAE;QACrC,IAAI,GAAG,CAAC,GAAG,KAAK,QAAQ,EAAE,CAAC;YACzB,KAAK,EAAE,CAAC;QACV,CAAC;IACH,CAAC,CAAC;IACF,MAAM,IAAI,GAAG,CAAC,GAAiB,EAAE,EAAE;QACjC,GAAG,CAAC,cAAc,EAAE,CAAC;QACrB,MAAM,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;QACzB,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC;QAChB,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC;IACF,MAAM,EAAE,GAAG,GAAG,EAAE;QACd,IAAI,CAAC;YACH,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC;gBAAS,CAAC;YACT,KAAK,EAAE,CAAC;QACV,CAAC;IACH,CAAC,CAAC;IACF,MAAM,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;IAC7C,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;IACzC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IAE5C,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC","sourcesContent":["export const startDrag = <\n  T extends Record<string, unknown> | void,\n  P = {\n    x: number;\n  },\n>(\n  evt: MouseEvent,\n  ops: {\n    transform?: (evt: MouseEvent) => P;\n    onDrag: (p: P) => T;\n    onMove: (p: P) => T;\n    onDrop: (result: T) => void;\n    onClear: () => void;\n  }\n) => {\n  const transform = ops?.transform ?? (e => e as P);\n  const param = transform(evt);\n  const result = {\n    data: ops.onDrag(param),\n    last: param,\n    move: (p: P) => {\n      result.data = ops.onMove(p);\n    },\n  };\n  const clear = () => {\n    window.removeEventListener('pointermove', move);\n    window.removeEventListener('pointerup', up);\n    window.removeEventListener('keydown', keydown);\n    ops.onClear();\n  };\n  const keydown = (evt: KeyboardEvent) => {\n    if (evt.key === 'Escape') {\n      clear();\n    }\n  };\n  const move = (evt: PointerEvent) => {\n    evt.preventDefault();\n    const p = transform(evt);\n    result.last = p;\n    result.data = ops.onMove(p);\n  };\n  const up = () => {\n    try {\n      ops.onDrop(result.data);\n    } finally {\n      clear();\n    }\n  };\n  window.addEventListener('pointermove', move);\n  window.addEventListener('pointerup', up);\n  window.addEventListener('keydown', keydown);\n\n  return result;\n};\n"]}