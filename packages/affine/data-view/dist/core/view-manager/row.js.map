{"version":3,"file":"row.js","sourceRoot":"","sources":["../../../src/core/view-manager/row.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAuB,MAAM,0BAA0B,CAAC;AAIzE,OAAO,EAAa,QAAQ,EAAE,MAAM,WAAW,CAAC;AAOhD,MAAM,OAAO,OAAO;IAOlB,YACW,UAAsB,EACtB,KAAa;QADb,eAAU,GAAV,UAAU,CAAY;QACtB,UAAK,GAAL,KAAK,CAAQ;QARxB,WAAM,GAAG,QAAQ,CAAC,GAAG,EAAE;YACrB,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;gBACnD,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7D,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IAKA,CAAC;CACL","sourcesContent":["import { computed, type ReadonlySignal } from '@lit-labs/preact-signals';\n\nimport type { SingleView } from './single-view.js';\n\nimport { type Cell, CellBase } from './cell.js';\n\nexport interface Row {\n  cells$: ReadonlySignal<Cell[]>;\n  rowId: string;\n}\n\nexport class RowBase implements Row {\n  cells$ = computed(() => {\n    return this.singleView.columns$.value.map(columnId => {\n      return new CellBase(this.singleView, columnId, this.rowId);\n    });\n  });\n\n  constructor(\n    readonly singleView: SingleView,\n    readonly rowId: string\n  ) {}\n}\n"]}