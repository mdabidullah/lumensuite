{"version":3,"file":"view-manager.js","sourceRoot":"","sources":["../../../src/core/view-manager/view-manager.ts"],"names":[],"mappings":"AAEA,OAAO,EACL,QAAQ,EAER,MAAM,GACP,MAAM,0BAA0B,CAAC;AAyBlC,MAAM,OAAO,eAAe;IAmB1B,YAAmB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAlBzC,oBAAe,GAAG,MAAM,CAAqB,SAAS,CAAC,CAAC;QAExD,iBAAY,GAAG,QAAQ,CAAC,GAAG,EAAE;YAC3B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,mBAAc,GAAG,QAAQ,CAAC,GAAG,EAAE;YAC7B,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;QAEH,cAAS,GAAG,QAAQ,CAAC,GAAG,EAAE;YACxB,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC;QACzC,CAAC,CAAC,CAAC;QAEH,WAAM,GAAG,QAAQ,CAAC,GAAG,EAAE;YACrB,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;IAEyC,CAAC;IAE7C,MAAM,CAAC,EAAU,EAAE,QAA0B;QAC3C,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;IAC/C,CAAC;IAED,cAAc,CAAC,EAAU;QACvB,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,EAAE,CAAC;IAClC,CAAC;IAED,OAAO,CAAC,IAAmB;QACzB,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QACxB,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,WAAW,CAAC,EAAU;QACpB,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IACzC,CAAC;IAED,UAAU,CAAC,EAAU;QACnB,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QACnC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;QACpD,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;IAED,OAAO,CAAC,EAAU;QAChB,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;QACjD,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAClD,CAAC;CACF","sourcesContent":["import type { InsertToPosition } from '@blocksuite/affine-shared/utils';\n\nimport {\n  computed,\n  type ReadonlySignal,\n  signal,\n} from '@lit-labs/preact-signals';\n\nimport type { DataSource } from '../common/data-source/base.js';\nimport type { DataViewDataType, DataViewTypes } from '../view/data-view.js';\nimport type { SingleView } from './single-view.js';\n\nexport interface ViewManager {\n  dataSource: DataSource;\n  readonly$: ReadonlySignal<boolean>;\n\n  currentViewId$: ReadonlySignal<string>;\n  currentView$: ReadonlySignal<SingleView>;\n  setCurrentView(id: string): void;\n  views$: ReadonlySignal<string[]>;\n\n  viewGet(id: string): SingleView;\n  viewAdd(type: DataViewTypes): string;\n  viewDelete(id: string): void;\n  viewDuplicate(id: string): void;\n\n  viewDataGet(id: string): DataViewDataType | undefined;\n\n  moveTo(id: string, position: InsertToPosition): void;\n}\n\nexport class ViewManagerBase implements ViewManager {\n  _currentViewId$ = signal<string | undefined>(undefined);\n\n  currentView$ = computed(() => {\n    return this.viewGet(this.currentViewId$.value);\n  });\n\n  currentViewId$ = computed(() => {\n    return this._currentViewId$.value ?? this.views$.value[0];\n  });\n\n  readonly$ = computed(() => {\n    return this.dataSource.readonly$.value;\n  });\n\n  views$ = computed(() => {\n    return this.dataSource.viewDataList$.value.map(data => data.id);\n  });\n\n  constructor(public dataSource: DataSource) {}\n\n  moveTo(id: string, position: InsertToPosition): void {\n    this.dataSource.viewDataMoveTo(id, position);\n  }\n\n  setCurrentView(id: string): void {\n    this._currentViewId$.value = id;\n  }\n\n  viewAdd(type: DataViewTypes): string {\n    const id = this.dataSource.viewDataAdd(type);\n    this.setCurrentView(id);\n    return id;\n  }\n\n  viewDataGet(id: string): DataViewDataType | undefined {\n    return this.dataSource.viewDataGet(id);\n  }\n\n  viewDelete(id: string): void {\n    this.dataSource.viewDataDelete(id);\n    this.setCurrentView(this.views$.value[0]);\n  }\n\n  viewDuplicate(id: string): void {\n    const newId = this.dataSource.viewDataDuplicate(id);\n    this.setCurrentView(newId);\n  }\n\n  viewGet(id: string): SingleView {\n    const meta = this.dataSource.viewMetaGetById(id);\n    return new meta.model.dataViewManager(this, id);\n  }\n}\n"]}