{"version":3,"file":"table-view-manager.js","sourceRoot":"","sources":["../../../src/view-presets/table/table-view-manager.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  insertPositionToIndex,\n  type InsertToPosition,\n} from '@lumensuite/affine-shared/utils';\nimport { computed, type ReadonlySignal } from '@lit-labs/preact-signals';\n\nimport type { TType } from '../../core/logical/typesystem.js';\nimport type { ViewManager } from '../../core/view-manager/view-manager.js';\nimport type { TableViewData } from './define.js';\nimport type { StatCalcOpType } from './types.js';\n\nimport { emptyFilterGroup, type FilterGroup } from '../../core/common/ast.js';\nimport { defaultGroupBy } from '../../core/common/group-by.js';\nimport {\n  GroupManager,\n  sortByManually,\n} from '../../core/common/group-by/helper.js';\nimport { groupByMatcher } from '../../core/common/group-by/matcher.js';\nimport { evalFilter } from '../../core/logical/eval-filter.js';\nimport { ColumnBase } from '../../core/view-manager/column.js';\nimport {\n  type SingleView,\n  SingleViewBase,\n} from '../../core/view-manager/single-view.js';\n\nexport class TableSingleView extends SingleViewBase<TableViewData> {\n  private computedColumns$ = computed(() => {\n    return this.columnsWithoutFilter$.value.map(id => {\n      const column = this.columnGet(id);\n      return {\n        id: column.id,\n        hide: column.hide$.value,\n        width: column.width$.value,\n        statCalcType: column.statCalcOp$.value,\n      };\n    });\n  });\n\n  columns$ = computed(() => {\n    return this.columnsWithoutFilter$.value.filter(\n      id => !this.columnGetHide(id)\n    );\n  });\n\n  columnsWithoutFilter$ = computed(() => {\n    const needShow = new Set(this.dataSource.properties$.value);\n    const result: string[] = [];\n    this.viewData$.value?.columns.forEach(v => {\n      if (needShow.has(v.id)) {\n        result.push(v.id);\n        needShow.delete(v.id);\n      }\n    });\n    result.push(...needShow);\n    return result;\n  });\n\n  detailColumns$ = computed(() => {\n    return this.columnsWithoutFilter$.value.filter(\n      id => this.columnGetType(id) !== 'title'\n    );\n  });\n\n  filter$ = computed(() => {\n    return this.viewData$.value?.filter ?? emptyFilterGroup;\n  });\n\n  groupBy$ = computed(() => {\n    return this.viewData$.value?.groupBy;\n  });\n\n  groupManager = new GroupManager(this.groupBy$, this, {\n    sortGroup: ids =>\n      sortByManually(\n        ids,\n        v => v,\n        this.groupProperties.map(v => v.key)\n      ),\n    sortRow: (key, ids) => {\n      const property = this.groupProperties.find(v => v.key === key);\n      return sortByManually(ids, v => v, property?.manuallyCardSort ?? []);\n    },\n    changeGroupSort: keys => {\n      const map = new Map(this.groupProperties.map(v => [v.key, v]));\n      this.viewDataUpdate(() => {\n        return {\n          groupProperties: keys.map(key => {\n            const property = map.get(key);\n            if (property) {\n              return property;\n            }\n            return {\n              key,\n              hide: false,\n              manuallyCardSort: [],\n            };\n          }),\n        };\n      });\n    },\n    changeRowSort: (groupKeys, groupKey, keys) => {\n      const map = new Map(this.groupProperties.map(v => [v.key, v]));\n      this.viewDataUpdate(() => {\n        return {\n          groupProperties: groupKeys.map(key => {\n            if (key === groupKey) {\n              const group = map.get(key);\n              return group\n                ? {\n                    ...group,\n                    manuallyCardSort: keys,\n                  }\n                : {\n                    key,\n                    hide: false,\n                    manuallyCardSort: keys,\n                  };\n            } else {\n              return (\n                map.get(key) ?? {\n                  key,\n                  hide: false,\n                  manuallyCardSort: [],\n                }\n              );\n            }\n          }),\n        };\n      });\n    },\n  });\n\n  header$ = computed(() => {\n    return (\n      this.viewData$.value?.header ?? {\n        titleColumn: this.columnsWithoutFilter$.value.find(\n          id => this.columnGetType(id) === 'title'\n        ),\n        iconColumn: 'type',\n      }\n    );\n  });\n\n  readonly$ = computed(() => {\n    return this.viewManager.readonly$.value;\n  });\n\n  get groupProperties() {\n    return this.viewData$.value?.groupProperties ?? [];\n  }\n\n  get name(): string {\n    return this.viewData$.value?.name ?? '';\n  }\n\n  override get type(): string {\n    return this.viewData$.value?.mode ?? 'table';\n  }\n\n  constructor(viewManager: ViewManager, viewId: string) {\n    super(viewManager, viewId);\n  }\n\n  changeGroup(columnId: string | undefined) {\n    if (columnId == null) {\n      this.viewDataUpdate(() => {\n        return {\n          groupBy: undefined,\n        };\n      });\n      return;\n    }\n    const column = this.columnGet(columnId);\n    this.viewDataUpdate(_view => {\n      return {\n        groupBy: defaultGroupBy(\n          this.columnGetMeta(column.type$.value),\n          column.id,\n          column.data$.value\n        ),\n      };\n    });\n  }\n\n  checkGroup(columnId: string, type: TType, target: TType): boolean {\n    if (!groupByMatcher.isMatched(type, target)) {\n      this.changeGroup(columnId);\n      return false;\n    }\n    return true;\n  }\n\n  columnGet(columnId: string): TableColumn {\n    return new TableColumn(this, columnId);\n  }\n\n  columnGetHide(columnId: string): boolean {\n    return (\n      this.viewData$.value?.columns.find(v => v.id === columnId)?.hide ?? false\n    );\n  }\n\n  columnGetStatCalcOp(columnId: string): StatCalcOpType {\n    return this.viewData$.value?.columns.find(v => v.id === columnId)\n      ?.statCalcType;\n  }\n\n  columnGetWidth(columnId: string): number {\n    return (\n      this.viewData$.value?.columns.find(v => v.id === columnId)?.width ??\n      this.dataSource.propertyGetDefaultWidth(columnId)\n    );\n  }\n\n  columnMove(columnId: string, toAfterOfColumn: InsertToPosition): void {\n    this.viewDataUpdate(() => {\n      const columnIndex = this.computedColumns$.value.findIndex(\n        v => v.id === columnId\n      );\n      if (columnIndex < 0) {\n        return {};\n      }\n      const columns = [...this.computedColumns$.value];\n      const [column] = columns.splice(columnIndex, 1);\n      const index = insertPositionToIndex(toAfterOfColumn, columns);\n      columns.splice(index, 0, column);\n      return {\n        columns,\n      };\n    });\n  }\n\n  columnUpdateHide(columnId: string, hide: boolean): void {\n    this.viewDataUpdate(() => {\n      return {\n        columns: this.computedColumns$.value.map(v =>\n          v.id === columnId\n            ? {\n                ...v,\n                hide,\n              }\n            : v\n        ),\n      };\n    });\n  }\n\n  columnUpdateStatCalcOp(columnId: string, op?: string): void {\n    this.viewDataUpdate(() => {\n      return {\n        columns: this.computedColumns$.value.map(v =>\n          v.id === columnId\n            ? {\n                ...v,\n                statCalcType: op,\n              }\n            : v\n        ),\n      };\n    });\n  }\n\n  columnUpdateWidth(columnId: string, width: number): void {\n    this.viewDataUpdate(() => {\n      return {\n        columns: this.computedColumns$.value.map(v =>\n          v.id === columnId\n            ? {\n                ...v,\n                width: width,\n              }\n            : v\n        ),\n      };\n    });\n  }\n\n  hasHeader(rowId: string): boolean {\n    return Object.values(this.header$).some(id => this.cellGetValue(rowId, id));\n  }\n\n  isInHeader(columnId: string) {\n    return Object.values(this.header$).some(v => v === columnId);\n  }\n\n  isShow(rowId: string): boolean {\n    if (this.filter$.value?.conditions.length) {\n      const rowMap = Object.fromEntries(\n        this.columnManagerList$.value.map(column => [\n          column.id,\n          column.cellGet(rowId).jsonValue$.value,\n        ])\n      );\n      return evalFilter(this.filter$.value, rowMap);\n    }\n    return true;\n  }\n\n  override rowAdd(\n    insertPosition: InsertToPosition | number,\n    groupKey?: string\n  ): string {\n    const id = super.rowAdd(insertPosition);\n    if (!groupKey) {\n      return id;\n    }\n    this.groupManager.addToGroup(id, groupKey);\n    return id;\n  }\n\n  override rowGetNext(rowId: string): string {\n    const index = this.rows$.value.indexOf(rowId);\n    return this.rows$.value[index + 1];\n  }\n\n  override rowGetPrev(rowId: string): string {\n    const index = this.rows$.value.indexOf(rowId);\n    return this.rows$.value[index - 1];\n  }\n\n  override rowMove(\n    rowId: string,\n    position: InsertToPosition,\n    fromGroup?: string,\n    toGroup?: string\n  ) {\n    if (toGroup == null) {\n      super.rowMove(rowId, position);\n      return;\n    }\n    this.groupManager.moveCardTo(rowId, fromGroup, toGroup, position);\n  }\n\n  updateFilter(filter: FilterGroup): void {\n    this.viewDataUpdate(() => {\n      return {\n        filter,\n      };\n    });\n  }\n}\n\nexport class TableColumn extends ColumnBase {\n  statCalcOp$ = computed(() => {\n    return this.tableView.columnGetStatCalcOp(this.id);\n  });\n\n  width$: ReadonlySignal<number> = computed(() => {\n    return this.tableView.columnGetWidth(this.id);\n  });\n\n  constructor(\n    private tableView: TableSingleView,\n    columnId: string\n  ) {\n    super(tableView as SingleView, columnId);\n  }\n\n  updateStatCalcOp(type?: string): void {\n    return this.tableView.columnUpdateStatCalcOp(this.id, type);\n  }\n\n  updateWidth(width: number): void {\n    this.tableView.columnUpdateWidth(this.id, width);\n  }\n}\n"]}