{"version":3,"file":"menu.js","sourceRoot":"","sources":["../../../../src/view-presets/table/components/menu.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,uBAAuB,EAAE,MAAM,4CAA4C,CAAC;AACrF,OAAO,EACL,QAAQ,EACR,UAAU,EACV,cAAc,EACd,YAAY,EACZ,aAAa,GACd,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAK3B,OAAO,EAAE,iBAAiB,EAAE,MAAM,aAAa,CAAC;AAEhD,MAAM,CAAC,MAAM,UAAU,GAAG,CACxB,WAA6B,EAC7B,KAAa,EACb,SAAmC,EACnC,EAAE;IACF,MAAM,GAAG,GAAG,SAAS,CAAC,SAAS,CAAC;IAChC,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC;IAChC,WAAW,CAAC,eAAe,CAAC;QAC1B,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI;QACzB,KAAK,EAAE,KAAK;QACZ,OAAO,EAAE,GAAG,EAAE;YACZ,SAAS,CAAC,SAAS,GAAG,GAAG,CAAC;QAC5B,CAAC;KACF,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAAG,CACxB,WAA6B,EAC7B,GAAgB,EAChB,mBAA6C,EAC7C,EAAE;IACF,MAAM,SAAS,GAAG,mBAAmB,CAAC,SAAS,CAAC;IAChD,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC;QACrC,OAAO;IACT,CAAC;IACD,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QAC9B,MAAM,IAAI,GAAG,iBAAiB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAClD,uBAAuB,CAAC,GAAG,EAAE;YAC3B;gBACE,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,EAAE;gBACR,QAAQ,EAAE,GAAG,EAAE,CAAC;oBACd;wBACE,IAAI,EAAE,QAAQ;wBACd,IAAI,EAAE,MAAM;wBACZ,IAAI,EAAE,IAAI,CAAA;;;gBAGN,QAAQ,EAAE;mBACP;wBACP,MAAM,EAAE,GAAG,EAAE;4BACX,mBAAmB,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;wBACtD,CAAC;qBACF;iBACF;aACF;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,EAAE;gBACR,QAAQ,EAAE,GAAG,EAAE,CAAC;oBACd;wBACE,IAAI,EAAE,QAAQ;wBACd,IAAI,EAAE,aAAa;wBACnB,KAAK,EAAE,aAAa;wBACpB,IAAI,EAAE,UAAU,EAAE;wBAClB,MAAM,EAAE,GAAG,EAAE;4BACX,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;wBAC3C,CAAC;qBACF;iBACF;aACF;SACF,CAAC,CAAC;QACH,OAAO;IACT,CAAC;IACD,MAAM,GAAG,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9B,uBAAuB,CAAC,GAAG,EAAE;QAC3B;YACE,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,YAAY;YAClB,IAAI,EAAE,cAAc,EAAE;YACtB,MAAM,EAAE,GAAG,EAAE;gBACX,UAAU,CAAC,WAAW,EAAE,GAAG,CAAC,EAAE,EAAE,mBAAmB,CAAC,CAAC;YACvD,CAAC;SACF;QACD,IAAI;QACJ,mBAAmB;QACnB,cAAc;QACd,sBAAsB;QACtB,QAAQ;QACR,wBAAwB;QACxB,sBAAsB;QACtB,wBAAwB;QACxB,wBAAwB;QACxB,iBAAiB;QACjB,WAAW;QACX,SAAS;QACT,QAAQ;QACR,wBAAwB;QACxB,uBAAuB;QACvB,yBAAyB;QACzB,wBAAwB;QACxB,iBAAiB;QACjB,WAAW;QACX,SAAS;QACT,OAAO;QACP,KAAK;QACL;YACE,IAAI,EAAE,OAAO;YACb,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,GAAG,EAAE,CAAC;gBACd;oBACE,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,eAAe;oBACrB,IAAI,EAAE,IAAI,CAAA;;;cAGN,YAAY,EAAE;iBACX;oBACP,MAAM,EAAE,GAAG,EAAE;wBACX,mBAAmB,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;oBAC5D,CAAC;iBACF;gBACD;oBACE,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,cAAc;oBACpB,IAAI,EAAE,IAAI,CAAA;;;cAGN,aAAa,EAAE;iBACZ;oBACP,MAAM,EAAE,GAAG,EAAE;wBACX,mBAAmB,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;oBAC3D,CAAC;iBACF;gBACD,IAAI;gBACJ,oBAAoB;gBACpB,uBAAuB;gBACvB,yBAAyB;gBACzB,oBAAoB;gBACpB,+CAA+C;gBAC/C,OAAO;gBACP,KAAK;aACN;SACF;QACD;YACE,IAAI,EAAE,OAAO;YACb,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,GAAG,EAAE,CAAC;gBACd;oBACE,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,aAAa;oBACpB,IAAI,EAAE,UAAU,EAAE;oBAClB,MAAM,EAAE,GAAG,EAAE;wBACX,mBAAmB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;oBACxC,CAAC;iBACF;aACF;SACF;KACF,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { popFilterableSimpleMenu } from '@lumensuite/affine-components/context-menu';\nimport {\n  CopyIcon,\n  DeleteIcon,\n  ExpandFullIcon,\n  MoveLeftIcon,\n  MoveRightIcon,\n} from '@blocksuite/icons/lit';\nimport { html } from 'lit';\n\nimport type { DataViewRenderer } from '../../../core/data-view.js';\nimport type { TableSelectionController } from '../controller/selection.js';\n\nimport { TableRowSelection } from '../types.js';\n\nexport const openDetail = (\n  dataViewEle: DataViewRenderer,\n  rowId: string,\n  selection: TableSelectionController\n) => {\n  const old = selection.selection;\n  selection.selection = undefined;\n  dataViewEle.openDetailPanel({\n    view: selection.host.view,\n    rowId: rowId,\n    onClose: () => {\n      selection.selection = old;\n    },\n  });\n};\n\nexport const popRowMenu = (\n  dataViewEle: DataViewRenderer,\n  ele: HTMLElement,\n  selectionController: TableSelectionController\n) => {\n  const selection = selectionController.selection;\n  if (!TableRowSelection.is(selection)) {\n    return;\n  }\n  if (selection.rows.length > 1) {\n    const rows = TableRowSelection.rowsIds(selection);\n    popFilterableSimpleMenu(ele, [\n      {\n        type: 'group',\n        name: '',\n        children: () => [\n          {\n            type: 'action',\n            name: 'Copy',\n            icon: html` <div\n              style=\"transform: rotate(90deg);display:flex;align-items:center;\"\n            >\n              ${CopyIcon()}\n            </div>`,\n            select: () => {\n              selectionController.host.clipboardController.copy();\n            },\n          },\n        ],\n      },\n      {\n        type: 'group',\n        name: '',\n        children: () => [\n          {\n            type: 'action',\n            name: 'Delete Rows',\n            class: 'delete-item',\n            icon: DeleteIcon(),\n            select: () => {\n              selectionController.view.rowDelete(rows);\n            },\n          },\n        ],\n      },\n    ]);\n    return;\n  }\n  const row = selection.rows[0];\n  popFilterableSimpleMenu(ele, [\n    {\n      type: 'action',\n      name: 'Expand Row',\n      icon: ExpandFullIcon(),\n      select: () => {\n        openDetail(dataViewEle, row.id, selectionController);\n      },\n    },\n    // {\n    //   type: 'group',\n    //   name: '',\n    //   children: () => [\n    //     {\n    //       type: 'action',\n    //       name: 'Copy',\n    //       icon: CopyIcon,\n    //       select: () => {\n    //         //TODO\n    //       },\n    //     },\n    //     {\n    //       type: 'action',\n    //       name: 'Paste',\n    //       icon: PasteIcon,\n    //       select: () => {\n    //         //TODO\n    //       },\n    //     },\n    //   ],\n    // },\n    {\n      type: 'group',\n      name: '',\n      children: () => [\n        {\n          type: 'action',\n          name: 'Insert Before',\n          icon: html` <div\n            style=\"transform: rotate(90deg);display:flex;align-items:center;\"\n          >\n            ${MoveLeftIcon()}\n          </div>`,\n          select: () => {\n            selectionController.insertRowBefore(row.groupKey, row.id);\n          },\n        },\n        {\n          type: 'action',\n          name: 'Insert After',\n          icon: html` <div\n            style=\"transform: rotate(90deg);display:flex;align-items:center;\"\n          >\n            ${MoveRightIcon()}\n          </div>`,\n          select: () => {\n            selectionController.insertRowAfter(row.groupKey, row.id);\n          },\n        },\n        // {\n        //   type: 'action',\n        //   name: 'Duplicate',\n        //   icon: DuplicateIcon,\n        //   select: () => {\n        //     selectionController.duplicateRow(rowId);\n        //   },\n        // },\n      ],\n    },\n    {\n      type: 'group',\n      name: '',\n      children: () => [\n        {\n          type: 'action',\n          name: 'Delete Row',\n          class: 'delete-item',\n          icon: DeleteIcon(),\n          select: () => {\n            selectionController.deleteRow(row.id);\n          },\n        },\n      ],\n    },\n  ]);\n};\n"]}