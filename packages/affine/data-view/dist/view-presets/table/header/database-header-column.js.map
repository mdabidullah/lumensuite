{"version":3,"file":"database-header-column.js","sourceRoot":"","sources":["../../../../src/view-presets/table/header/database-header-column.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  type Menu,\n  type NormalMenu,\n  popMenu,\n} from '@lumensuite/affine-components/context-menu';\nimport {\n  insertPositionToIndex,\n  type InsertToPosition,\n} from '@lumensuite/affine-shared/utils';\nimport {\n  ShadowlessElement,\n  SignalWatcher,\n  WithDisposable,\n} from '@lumensuite/block-std';\nimport { assertExists } from '@lumensuite/global/utils';\nimport {\n  DeleteIcon,\n  DuplicateIcon,\n  InsertLeftIcon,\n  InsertRightIcon,\n  MoveLeftIcon,\n  MoveRightIcon,\n} from '@blocksuite/icons/lit';\nimport { css } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { createRef, ref } from 'lit/directives/ref.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { html } from 'lit/static-html.js';\n\nimport type { NumberColumnDataType } from '../../../column-presets/index.js';\nimport type { Column } from '../../../core/view-manager/column.js';\nimport type { TableColumn, TableSingleView } from '../table-view-manager.js';\n\nimport { numberFormats } from '../../../column-presets/number/utils/formats.js';\nimport { inputConfig, typeConfig } from '../../../core/common/column-menu.js';\nimport { renderUniLit } from '../../../core/index.js';\nimport { startDrag } from '../../../core/utils/drag.js';\nimport { autoScrollOnBoundary } from '../../../core/utils/frame-loop.js';\nimport { getResultInRange } from '../../../core/utils/utils.js';\nimport { DEFAULT_COLUMN_TITLE_HEIGHT } from '../consts.js';\nimport { getTableContainer } from '../types.js';\nimport { DataViewColumnPreview } from './column-renderer.js';\nimport './number-format-bar.js';\nimport {\n  getTableGroupRects,\n  getVerticalIndicator,\n  startDragWidthAdjustmentBar,\n} from './vertical-indicator.js';\n\n@customElement('affine-database-header-column')\nexport class DatabaseHeaderColumn extends SignalWatcher(\n  WithDisposable(ShadowlessElement)\n) {\n  static override styles = css`\n    affine-database-header-column {\n      display: flex;\n    }\n\n    .affine-database-header-column-grabbing * {\n      cursor: grabbing;\n    }\n  `;\n\n  private _clickColumn = () => {\n    if (this.tableViewManager.readonly$.value) {\n      return;\n    }\n    this.popMenu();\n  };\n\n  private _clickTypeIcon = (event: MouseEvent) => {\n    if (this.tableViewManager.readonly$.value) {\n      return;\n    }\n    if (this.column.type$.value === 'title') {\n      return;\n    }\n    event.stopPropagation();\n    popMenu(this, {\n      options: {\n        input: {\n          search: true,\n          placeholder: 'Search',\n        },\n        items: this.tableViewManager.allColumnMetas.map(config => {\n          return {\n            type: 'action',\n            name: config.config.name,\n            isSelected: config.type === this.column.type$.value,\n            icon: renderUniLit(this.tableViewManager.getIcon(config.type)),\n            select: () => {\n              this.column.updateType?.(config.type);\n            },\n          };\n        }),\n      },\n    });\n  };\n\n  private _columnsOffset = (header: Element, _scale: number) => {\n    const columns = header.querySelectorAll('affine-database-header-column');\n    const left: ColumnOffset[] = [];\n    const right: ColumnOffset[] = [];\n    let curr = left;\n    const offsetArr: number[] = [];\n    const columnsArr = Array.from(columns);\n    for (let i = 0; i < columnsArr.length; i++) {\n      const v = columnsArr[i];\n      if (v === this) {\n        curr = right;\n        offsetArr.push(-1);\n        continue;\n      }\n      curr.push({\n        x: v.offsetLeft + v.offsetWidth / 2,\n        ele: v,\n      });\n      offsetArr.push(\n        v.getBoundingClientRect().left - header.getBoundingClientRect().left\n      );\n      if (i === columnsArr.length - 1) {\n        offsetArr.push(\n          v.getBoundingClientRect().right - header.getBoundingClientRect().left\n        );\n      }\n    }\n    left.reverse();\n    const getInsertPosition = (offset: number, width: number) => {\n      let result: InsertToPosition | undefined = undefined;\n      for (let i = 0; i < left.length; i++) {\n        const { x, ele } = left[i];\n        if (x < offset) {\n          if (result) {\n            return result;\n          }\n          break;\n        } else {\n          result = {\n            before: true,\n            id: ele.column.id,\n          };\n        }\n      }\n      const offsetRight = offset + width;\n      for (const { x, ele } of right) {\n        if (x > offsetRight) {\n          if (result) {\n            return result;\n          }\n          break;\n        } else {\n          result = {\n            before: false,\n            id: ele.column.id,\n          };\n        }\n      }\n      return result;\n    };\n    const fixedColumns = columnsArr.map(v => ({ id: v.column.id }));\n    const getInsertOffset = (insertPosition: InsertToPosition) => {\n      return offsetArr[insertPositionToIndex(insertPosition, fixedColumns)];\n    };\n    return {\n      computeInsertInfo: (offset: number, width: number) => {\n        const insertPosition = getInsertPosition(offset, width);\n        return {\n          insertPosition: insertPosition,\n          insertOffset: insertPosition\n            ? getInsertOffset(insertPosition)\n            : undefined,\n        };\n      },\n    };\n  };\n\n  private _contextMenu = (e: MouseEvent) => {\n    if (this.tableViewManager.readonly$.value) {\n      return;\n    }\n    e.preventDefault();\n    this.popMenu(e.target as HTMLElement);\n  };\n\n  private _enterWidthDragBar = () => {\n    if (this.tableViewManager.readonly$.value) {\n      return;\n    }\n    if (this.drawWidthDragBarTask) {\n      cancelAnimationFrame(this.drawWidthDragBarTask);\n      this.drawWidthDragBarTask = 0;\n    }\n    this.drawWidthDragBar();\n  };\n\n  private _leaveWidthDragBar = () => {\n    cancelAnimationFrame(this.drawWidthDragBarTask);\n    this.drawWidthDragBarTask = 0;\n    getVerticalIndicator().remove();\n  };\n\n  private drawWidthDragBar = () => {\n    const tableContainer = getTableContainer(this);\n    const tableRect = tableContainer.getBoundingClientRect();\n    const rectList = getTableGroupRects(tableContainer);\n    getVerticalIndicator().display(\n      0,\n      tableRect.top,\n      rectList,\n      this.getBoundingClientRect().right\n    );\n    this.drawWidthDragBarTask = requestAnimationFrame(this.drawWidthDragBar);\n  };\n\n  private drawWidthDragBarTask = 0;\n\n  private moveColumn = (evt: PointerEvent) => {\n    const tableContainer = getTableContainer(this);\n    const headerContainer = this.closest('affine-database-column-header');\n    const scrollContainer = tableContainer?.parentElement;\n    assertExists(headerContainer);\n    assertExists(tableContainer);\n    assertExists(scrollContainer);\n    const columnHeaderRect = this.getBoundingClientRect();\n    const scale = columnHeaderRect.width / this.column.width$.value;\n    const headerContainerRect = tableContainer.getBoundingClientRect();\n\n    const rectOffsetLeft = evt.x - columnHeaderRect.left;\n    const offsetRight = columnHeaderRect.right - evt.x;\n\n    const startOffset =\n      (columnHeaderRect.left - headerContainerRect.left) / scale;\n    const max = (headerContainerRect.width - columnHeaderRect.width) / scale;\n\n    const { computeInsertInfo } = this._columnsOffset(headerContainer, scale);\n    const column = new DataViewColumnPreview();\n    column.tableViewManager = this.tableViewManager;\n    column.column = this.column;\n    column.table = tableContainer;\n    const dragPreview = createDragPreview(\n      tableContainer,\n      columnHeaderRect.width / scale,\n      headerContainerRect.height / scale,\n      startOffset,\n      column\n    );\n    const rectList = getTableGroupRects(tableContainer);\n    const dropPreview = getVerticalIndicator();\n    const cancelScroll = autoScrollOnBoundary(scrollContainer, {\n      boundary: {\n        left: rectOffsetLeft,\n        right: offsetRight,\n      },\n      onScroll: () => {\n        drag.move({ x: drag.last.x });\n      },\n    });\n    const html = document.querySelector('html');\n    html?.classList.toggle('affine-database-header-column-grabbing', true);\n    const drag = startDrag<{\n      insertPosition?: InsertToPosition;\n    }>(evt, {\n      onDrag: () => {\n        this.grabStatus = 'grabbing';\n        return {};\n      },\n      onMove: ({ x }: { x: number }) => {\n        this.grabStatus = 'grabbing';\n        const currentOffset = getResultInRange(\n          (x - tableContainer.getBoundingClientRect().left - rectOffsetLeft) /\n            scale,\n          0,\n          max\n        );\n        const insertInfo = computeInsertInfo(\n          currentOffset,\n          columnHeaderRect.width / scale\n        );\n        if (insertInfo.insertOffset != null) {\n          dropPreview.display(\n            0,\n            headerContainerRect.top,\n            rectList,\n            tableContainer.getBoundingClientRect().left +\n              insertInfo.insertOffset,\n            true\n          );\n        } else {\n          dropPreview.remove();\n        }\n        dragPreview.display(currentOffset);\n        return {\n          insertPosition: insertInfo.insertPosition,\n        };\n      },\n      onDrop: ({ insertPosition }) => {\n        this.grabStatus = 'grabEnd';\n        if (insertPosition) {\n          this.tableViewManager.columnMove(this.column.id, insertPosition);\n        }\n      },\n      onClear: () => {\n        cancelScroll();\n        html?.classList.toggle('affine-database-header-column-grabbing', false);\n        dropPreview.remove();\n        dragPreview.remove();\n      },\n    });\n  };\n\n  private widthDragBar = createRef();\n\n  editTitle = () => {\n    this._clickColumn();\n  };\n\n  private get readonly() {\n    return this.tableViewManager.readonly$.value;\n  }\n\n  private popMenu(ele?: HTMLElement) {\n    const enableNumberFormatting =\n      this.tableViewManager.featureFlags$.value.enable_number_formatting;\n\n    popMenu(ele ?? this, {\n      options: {\n        input: inputConfig(this.column),\n        items: [\n          {\n            type: 'group',\n            name: 'Column Prop Group ',\n            children: () => [\n              typeConfig(this.column),\n              // Number format begin\n              ...(enableNumberFormatting\n                ? ([\n                    {\n                      type: 'sub-menu',\n                      name: 'Number Format',\n\n                      hide: () =>\n                        !this.column.updateData ||\n                        this.column.type$.value !== 'number',\n                      options: {\n                        input: {\n                          search: true,\n                        },\n                        items: [\n                          numberFormatConfig(this.column),\n                          ...(numberFormats.map(format => {\n                            const data = (\n                              this.column as Column<\n                                number,\n                                NumberColumnDataType\n                              >\n                            ).data$.value;\n                            return {\n                              type: 'action',\n                              isSelected: data.format === format.type,\n                              icon: html`<span\n                                style=\"font-size: var(--affine-font-base); scale: 1.2;\"\n                                >${format.symbol}</span\n                              >`,\n                              name: format.label,\n                              select: () => {\n                                if (data.format === format.type) return;\n                                this.column.updateData(() => ({\n                                  format: format.type,\n                                }));\n                              },\n                            };\n                          }) as Menu[]),\n                        ],\n                      },\n                    },\n                  ] as Menu[])\n                : []),\n              // Number format end\n            ],\n          },\n\n          {\n            type: 'action',\n            name: 'Duplicate Column',\n            icon: DuplicateIcon(),\n            hide: () =>\n              !this.column.duplicate || this.column.type$.value === 'title',\n            select: () => {\n              this.column.duplicate?.();\n            },\n          },\n          {\n            type: 'action',\n            name: 'Insert Left Column',\n            icon: InsertLeftIcon(),\n            select: () => {\n              this.tableViewManager.columnAdd({\n                id: this.column.id,\n                before: true,\n              });\n              Promise.resolve()\n                .then(() => {\n                  const pre = this.previousElementSibling;\n                  if (pre instanceof DatabaseHeaderColumn) {\n                    pre.editTitle();\n                    pre.scrollIntoView({ inline: 'nearest', block: 'nearest' });\n                  }\n                })\n                .catch(console.error);\n            },\n          },\n          {\n            type: 'action',\n            name: 'Insert Right Column',\n            icon: InsertRightIcon(),\n            select: () => {\n              this.tableViewManager.columnAdd({\n                id: this.column.id,\n                before: false,\n              });\n              Promise.resolve()\n                .then(() => {\n                  const next = this.nextElementSibling;\n                  if (next instanceof DatabaseHeaderColumn) {\n                    next.editTitle();\n                    next.scrollIntoView({\n                      inline: 'nearest',\n                      block: 'nearest',\n                    });\n                  }\n                })\n                .catch(console.error);\n            },\n          },\n          {\n            type: 'action',\n            name: 'Move Left',\n            icon: MoveLeftIcon(),\n            hide: () => this.column.isFirst,\n            select: () => {\n              const preId = this.tableViewManager.columnGetPreColumn(\n                this.column.id\n              )?.id;\n              if (!preId) {\n                return;\n              }\n              this.tableViewManager.columnMove(this.column.id, {\n                id: preId,\n                before: true,\n              });\n            },\n          },\n          {\n            type: 'action',\n            name: 'Move Right',\n            icon: MoveRightIcon(),\n            hide: () => this.column.isLast,\n            select: () => {\n              const nextId = this.tableViewManager.columnGetNextColumn(\n                this.column.id\n              )?.id;\n              if (!nextId) {\n                return;\n              }\n              this.tableViewManager.columnMove(this.column.id, {\n                id: nextId,\n                before: false,\n              });\n            },\n          },\n          {\n            type: 'group',\n            name: 'operation',\n            children: () => [\n              {\n                type: 'action',\n                name: 'Delete Column',\n                icon: DeleteIcon(),\n                hide: () =>\n                  !this.column.delete || this.column.type$.value === 'title',\n                select: () => {\n                  this.column.delete?.();\n                },\n                class: 'delete-item',\n              },\n            ],\n          },\n        ],\n      },\n    });\n  }\n\n  private widthDragStart(event: PointerEvent) {\n    startDragWidthAdjustmentBar(\n      event,\n      getTableContainer(this),\n      this.getBoundingClientRect().width,\n      this.column\n    );\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    const table = this.closest('affine-database-table');\n    if (table) {\n      this.disposables.add(\n        table.handleEvent('dragStart', context => {\n          if (this.tableViewManager.readonly$.value) {\n            return;\n          }\n          const event = context.get('pointerState').raw;\n          const target = event.target;\n          if (target instanceof Element) {\n            if (this.widthDragBar.value?.contains(target)) {\n              event.preventDefault();\n              this.widthDragStart(event);\n              return true;\n            }\n            if (this.contains(target)) {\n              event.preventDefault();\n              this.moveColumn(event);\n              return true;\n            }\n          }\n          return false;\n        })\n      );\n    }\n  }\n\n  override render() {\n    const column = this.column;\n    const style = styleMap({\n      height: DEFAULT_COLUMN_TITLE_HEIGHT + 'px',\n    });\n    const classes = classMap({\n      'affine-database-column-move': true,\n      [this.grabStatus]: true,\n    });\n    return html`\n      <div\n        style=${style}\n        class=\"affine-database-column-content\"\n        @click=\"${this._clickColumn}\"\n        @contextmenu=\"${this._contextMenu}\"\n      >\n        ${this.readonly\n          ? null\n          : html` <button class=\"${classes}\">\n              <div class=\"hover-trigger\"></div>\n              <div class=\"control-h\"></div>\n              <div class=\"control-l\"></div>\n              <div class=\"control-r\"></div>\n            </button>`}\n        <div class=\"affine-database-column-text ${column.type$.value}\">\n          <div\n            class=\"affine-database-column-type-icon dv-hover\"\n            @click=\"${this._clickTypeIcon}\"\n          >\n            <uni-lit .uni=\"${column.icon}\"></uni-lit>\n          </div>\n          <div class=\"affine-database-column-text-content\">\n            <div class=\"affine-database-column-text-input\">\n              ${column.name$.value}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        ${ref(this.widthDragBar)}\n        @mouseenter=\"${this._enterWidthDragBar}\"\n        @mouseleave=\"${this._leaveWidthDragBar}\"\n        style=\"width: 0;position: relative;height: 100%;z-index: 1;cursor: col-resize\"\n      >\n        <div style=\"width: 8px;height: 100%;margin-left: -4px;\"></div>\n      </div>\n    `;\n  }\n\n  @property({ attribute: false })\n  accessor column!: TableColumn;\n\n  @property({ attribute: false })\n  accessor grabStatus: 'grabStart' | 'grabEnd' | 'grabbing' = 'grabEnd';\n\n  @property({ attribute: false })\n  accessor tableViewManager!: TableSingleView;\n}\n\ntype ColumnOffset = {\n  x: number;\n  ele: DatabaseHeaderColumn;\n};\n\nconst createDragPreview = (\n  container: Element,\n  width: number,\n  height: number,\n  startLeft: number,\n  content: HTMLElement\n) => {\n  const div = document.createElement('div');\n  div.append(content);\n  // div.style.pointerEvents='none';\n  div.style.opacity = '0.8';\n  div.style.position = 'absolute';\n  div.style.width = `${width}px`;\n  div.style.height = `${height}px`;\n  div.style.left = `${startLeft}px`;\n  div.style.top = `0px`;\n  div.style.zIndex = '9';\n  container.append(div);\n  return {\n    display(offset: number) {\n      div.style.left = `${Math.round(offset)}px`;\n    },\n    remove() {\n      div.remove();\n    },\n  };\n};\n\nfunction numberFormatConfig(column: Column): NormalMenu {\n  return {\n    type: 'custom',\n    render: () =>\n      html` <affine-database-number-format-bar\n        .column=\"${column}\"\n      ></affine-database-number-format-bar>`,\n  };\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'affine-database-header-column': DatabaseHeaderColumn;\n  }\n}\n"]}