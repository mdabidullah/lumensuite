{"version":3,"file":"column-stats-column.js","sourceRoot":"","sources":["../../../../src/view-presets/table/stats/column-stats-column.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  type Menu,\n  popFilterableSimpleMenu,\n} from '@lumensuite/affine-components/context-menu';\nimport {\n  ShadowlessElement,\n  SignalWatcher,\n  WithDisposable,\n} from '@lumensuite/block-std';\nimport { ArrowDownSmallIcon } from '@blocksuite/icons/lit';\nimport { Text } from '@lumensuite/store';\nimport { computed, signal } from '@lit-labs/preact-signals';\nimport { css, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\n\nimport type { GroupData } from '../../../core/common/group-by/helper.js';\nimport type { StatsFunction } from '../../../core/common/stats/type.js';\nimport type { TableColumn } from '../table-view-manager.js';\n\nimport { statsFunctions } from '../../../core/common/stats/index.js';\nimport { typesystem } from '../../../core/logical/typesystem.js';\nimport { DEFAULT_COLUMN_MIN_WIDTH } from '../consts.js';\n\nconst styles = css`\n  .stats-cell {\n    cursor: pointer;\n    transition: opacity 230ms ease;\n    font-size: 12px;\n    color: var(--affine-text-secondary-color);\n    display: flex;\n    opacity: 0;\n    min-width: ${DEFAULT_COLUMN_MIN_WIDTH}px;\n    justify-content: flex-end;\n    height: 100%;\n    align-items: center;\n  }\n\n  .affine-database-column-stats:hover .stats-cell {\n    opacity: 1;\n  }\n\n  .stats-cell:hover {\n    background-color: var(--affine-hover-color);\n    cursor: pointer;\n  }\n\n  .stats-cell[calculated='true'] {\n    opacity: 1;\n  }\n\n  .stats-cell .content {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.2rem;\n    margin-inline: 5px;\n  }\n\n  .label {\n    text-transform: uppercase;\n    color: var(--affine-text-secondary-color);\n  }\n\n  .value {\n    color: var(--affine-text-primary-color);\n  }\n`;\n\n@customElement('affine-database-column-stats-cell')\nexport class DatabaseColumnStatsCell extends SignalWatcher(\n  WithDisposable(ShadowlessElement)\n) {\n  static override styles = styles;\n\n  cellValues$ = computed(() => {\n    if (this.group) {\n      return this.group.rows.map(id => {\n        return this.column.getValue(id);\n      });\n    }\n    return this.column.cells$.value.map(cell => cell.value$.value);\n  });\n\n  groups$ = computed(() => {\n    const groups: Record<string, Record<string, StatsFunction>> = {};\n\n    statsFunctions.forEach(func => {\n      if (!typesystem.isSubtype(func.dataType, this.column.dataType$.value)) {\n        return;\n      }\n      if (!groups[func.group]) {\n        groups[func.group] = {};\n      }\n      const oldFunc = groups[func.group][func.type];\n      if (!oldFunc || typesystem.isSubtype(oldFunc.dataType, func.dataType)) {\n        if (!func.impl) {\n          delete groups[func.group][func.type];\n        } else {\n          groups[func.group][func.type] = func;\n        }\n      }\n    });\n    return groups;\n  });\n\n  openMenu = (ev: MouseEvent) => {\n    const menus: Menu[] = Object.entries(this.groups$.value).map(\n      ([group, funcs]) => {\n        return {\n          type: 'sub-menu',\n          name: group,\n          options: {\n            input: { search: true },\n            items: Object.values(funcs).map(func => {\n              return {\n                type: 'action',\n                isSelected: func.type === this.column.statCalcOp$.value,\n                name: func.menuName ?? func.type,\n                select: () => {\n                  this.column.updateStatCalcOp(func.type);\n                },\n              };\n            }),\n          },\n        };\n      }\n    );\n    popFilterableSimpleMenu(ev.target as HTMLElement, [\n      {\n        type: 'action',\n        isSelected: !this.column.statCalcOp$.value,\n        name: 'None',\n        select: () => {\n          this.column.updateStatCalcOp();\n        },\n      },\n      ...menus,\n    ]);\n  };\n\n  statsFunc$ = computed(() => {\n    return Object.values(this.groups$.value)\n      .flatMap(group => Object.values(group))\n      .find(func => func.type === this.column.statCalcOp$.value);\n  });\n\n  statsResult$ = computed(() => {\n    const meta = this.column.view.columnGetMeta(this.column.type$.value);\n    if (!meta) {\n      return null;\n    }\n    const func = this.statsFunc$.value;\n    if (!func) {\n      return null;\n    }\n    return {\n      name: func.displayName,\n      value: func.impl?.(this.values$.value, { meta }) ?? '',\n    };\n  });\n\n  subscriptionMap = new Map<unknown, () => void>();\n\n  values$ = signal<unknown[]>([]);\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n    this.disposables.addFromEvent(this, 'click', this.openMenu);\n    this.disposables.add(\n      this.cellValues$.subscribe(values => {\n        const map = new Map<unknown, () => void>();\n        values.forEach(value => {\n          if (value instanceof Text) {\n            const unsub = this.subscriptionMap.get(value);\n            if (unsub) {\n              map.set(value, unsub);\n              this.subscriptionMap.delete(value);\n            } else {\n              const f = () => {\n                this.values$.value = [...this.cellValues$.value];\n              };\n              value.yText.observe(f);\n              map.set(value, () => {\n                value.yText.unobserve(f);\n              });\n            }\n          }\n        });\n        this.subscriptionMap.forEach(unsub => {\n          unsub();\n        });\n        this.subscriptionMap = map;\n        this.values$.value = this.cellValues$.value;\n      })\n    );\n    this.disposables.add(() => {\n      this.subscriptionMap.forEach(unsub => {\n        unsub();\n      });\n    });\n  }\n\n  protected override render() {\n    const style = {\n      width: `${this.column.width$.value}px`,\n    };\n    return html` <div\n      calculated=\"${!!this.column.statCalcOp$.value}\"\n      style=\"${styleMap(style)}\"\n      class=\"stats-cell\"\n    >\n      <div class=\"content\">\n        ${!this.statsResult$.value\n          ? html`Calculate ${ArrowDownSmallIcon()}`\n          : html`\n              <span class=\"label\">${this.statsResult$.value.name}</span>\n              <span class=\"value\">${this.statsResult$.value.value} </span>\n            `}\n      </div>\n    </div>`;\n  }\n\n  @property({ attribute: false })\n  accessor column!: TableColumn;\n\n  @property({ attribute: false })\n  accessor group: GroupData | undefined = undefined;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'affine-database-column-stats-cell': DatabaseColumnStatsCell;\n  }\n}\n"]}