{"version":3,"file":"row-select-checkbox.js","sourceRoot":"","sources":["../../../../src/view-presets/table/row/row-select-checkbox.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EACL,iBAAiB,EACjB,aAAa,EACb,cAAc,GACf,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAAE,sBAAsB,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AAC/E,OAAO,EAAE,QAAQ,EAAuB,MAAM,0BAA0B,CAAC;AACzE,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAChC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAEvD,OAAO,EACL,iBAAiB,GAElB,MAAM,aAAa,CAAC;IAGR,iBAAiB;4BAD7B,aAAa,CAAC,qBAAqB,CAAC;;;;sBACE,aAAa,CAClD,cAAc,CAAC,iBAAiB,CAAC,CAClC;;;;;;;;;;iCAF8B,SAAQ,WAEtC;;;;oCA0DE,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;iCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;qCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;YAL/B,6KAAS,QAAQ,6BAAR,QAAQ,2FAAqB;YAGtC,oKAAS,KAAK,6BAAL,KAAK,qFAAU;YAGxB,gLAAS,SAAS,6BAAT,SAAS,6FAA0D;YAnE9E,6KAoEC;;;;iBAjEiB,WAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;GAmB3B,AAnBqB,CAmBpB;QAaO,iBAAiB;YACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;YAC1B,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE;gBAChD,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE,mBAAmB,CAAC,SAAS,CAClE,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,QAAQ,CACd,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC;QAEQ,MAAM;YACb,MAAM,WAAW,GAAG,QAAQ,CAAC;gBAC3B,iBAAiB,EAAE,IAAI;gBACvB,qBAAqB,EAAE,IAAI;gBAC3B,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;aACjC,CAAC,CAAC;YACH,OAAO,IAAI,CAAA;oBACK,WAAW;UACrB,IAAI,CAAC,WAAW,CAAC,KAAK;gBACtB,CAAC,CAAC,sBAAsB,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,CAAC;gBACpD,CAAC,CAAC,cAAc,EAAE;;KAEvB,CAAC;QACJ,CAAC;QAGD,2BAAsC;QAAtC,IAAS,QAAQ,8CAAqB;QAAtC,IAAS,QAAQ,oDAAqB;QAGtC,wBAAwB;QAAxB,IAAS,KAAK,2CAAU;QAAxB,IAAS,KAAK,iDAAU;QAGxB,4BAA4E;QAA5E,IAAS,SAAS,+CAA0D;QAA5E,IAAS,SAAS,qDAA0D;;;YA3C5E,gBAAW,GAAG,QAAQ,CAAC,GAAG,EAAE;gBAC1B,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;gBACvC,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,aAAa,KAAK,KAAK,EAAE,CAAC;oBACpD,OAAO,KAAK,CAAC;gBACf,CAAC;gBACD,OAAO,iBAAiB,CAAC,QAAQ,CAAC,SAAS,EAAE;oBAC3C,EAAE,EAAE,IAAI,CAAC,KAAK;oBACd,QAAQ,EAAE,IAAI,CAAC,QAAQ;iBACxB,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YA4BM,0FAA6B;YAG7B,4IAAe;YAGf,iJAAmE;;;;YAnEjE,uDAAiB;;;;;SAAjB,iBAAiB","sourcesContent":["import {\n  ShadowlessElement,\n  SignalWatcher,\n  WithDisposable,\n} from '@lumensuite/block-std';\nimport { CheckBoxCkeckSolidIcon, CheckBoxUnIcon } from '@blocksuite/icons/lit';\nimport { computed, type ReadonlySignal } from '@lit-labs/preact-signals';\nimport { css, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport {\n  TableRowSelection,\n  type TableViewSelectionWithType,\n} from '../types.js';\n\n@customElement('row-select-checkbox')\nexport class RowSelectCheckbox extends SignalWatcher(\n  WithDisposable(ShadowlessElement)\n) {\n  static override styles = css`\n    row-select-checkbox {\n      display: contents;\n    }\n    .row-select-checkbox {\n      display: flex;\n      align-items: center;\n      background-color: var(--affine-background-primary-color);\n      opacity: 0;\n      cursor: pointer;\n      font-size: 20px;\n      color: var(--affine-icon-color);\n    }\n    .row-select-checkbox:hover {\n      opacity: 1;\n    }\n    .row-select-checkbox.selected {\n      opacity: 1;\n    }\n  `;\n\n  isSelected$ = computed(() => {\n    const selection = this.selection.value;\n    if (!selection || selection.selectionType !== 'row') {\n      return false;\n    }\n    return TableRowSelection.includes(selection, {\n      id: this.rowId,\n      groupKey: this.groupKey,\n    });\n  });\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this.disposables.addFromEvent(this, 'click', () => {\n      this.closest('affine-database-table')?.selectionController.toggleRow(\n        this.rowId,\n        this.groupKey\n      );\n    });\n  }\n\n  override render() {\n    const classString = classMap({\n      'row-selected-bg': true,\n      'row-select-checkbox': true,\n      selected: this.isSelected$.value,\n    });\n    return html`\n      <div class=\"${classString}\">\n        ${this.isSelected$.value\n          ? CheckBoxCkeckSolidIcon({ style: `color:#1E96EB` })\n          : CheckBoxUnIcon()}\n      </div>\n    `;\n  }\n\n  @property({ attribute: false })\n  accessor groupKey: string | undefined;\n\n  @property({ attribute: false })\n  accessor rowId!: string;\n\n  @property({ attribute: false })\n  accessor selection!: ReadonlySignal<TableViewSelectionWithType | undefined>;\n}\n"]}