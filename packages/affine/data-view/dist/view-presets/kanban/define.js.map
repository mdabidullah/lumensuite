{"version":3,"file":"define.js","sourceRoot":"","sources":["../../../src/view-presets/kanban/define.ts"],"names":[],"mappings":"AAGA,OAAO,EAA0B,QAAQ,EAAE,MAAM,8BAA8B,CAAC;AAChF,OAAO,EAAE,gBAAgB,EAAE,MAAM,0BAA0B,CAAC;AAE5D,MAAM,CAAC,MAAM,cAAc,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;AA4BjD,MAAM,CAAC,MAAM,eAAe,GAAG,cAAc,CAAC,WAAW,CAAiB;IACxE,WAAW,EAAE,aAAa;IAC1B,eAAe,EAAE,gBAAgB;CAClC,CAAC,CAAC","sourcesContent":["import type { FilterGroup } from '../../core/common/ast.js';\nimport type { GroupBy, GroupProperty, Sort } from '../../core/common/types.js';\n\nimport { type BasicViewDataType, viewType } from '../../core/view/data-view.js';\nimport { KanbanSingleView } from './kanban-view-manager.js';\n\nexport const kanbanViewType = viewType('kanban');\n\ndeclare global {\n  interface DataViewDataTypeMap {\n    kanban: DataType;\n  }\n}\nexport type KanbanViewColumn = {\n  id: string;\n  hide?: boolean;\n};\n\ntype DataType = {\n  columns: KanbanViewColumn[];\n  filter: FilterGroup;\n  groupBy?: GroupBy;\n  sort?: Sort;\n  header: {\n    titleColumn?: string;\n    iconColumn?: string;\n    coverColumn?: string;\n  };\n  groupProperties: GroupProperty[];\n};\nexport type KanbanViewData = BasicViewDataType<\n  typeof kanbanViewType.type,\n  DataType\n>;\nexport const kanbanViewModel = kanbanViewType.modelConfig<KanbanViewData>({\n  defaultName: 'Kanban View',\n  dataViewManager: KanbanSingleView,\n});\n"]}