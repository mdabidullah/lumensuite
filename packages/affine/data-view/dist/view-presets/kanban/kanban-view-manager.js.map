{"version":3,"file":"kanban-view-manager.js","sourceRoot":"","sources":["../../../src/view-presets/kanban/kanban-view-manager.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  insertPositionToIndex,\n  type InsertToPosition,\n} from '@blocksuite/affine-shared/utils';\nimport { computed, type ReadonlySignal } from '@lit-labs/preact-signals';\n\nimport type { TType } from '../../core/logical/typesystem.js';\nimport type { KanbanViewData } from './define.js';\n\nimport { emptyFilterGroup, type FilterGroup } from '../../core/common/ast.js';\nimport { defaultGroupBy } from '../../core/common/group-by.js';\nimport {\n  GroupManager,\n  sortByManually,\n} from '../../core/common/group-by/helper.js';\nimport { groupByMatcher } from '../../core/common/group-by/matcher.js';\nimport { evalFilter } from '../../core/logical/eval-filter.js';\nimport { ColumnBase } from '../../core/view-manager/column.js';\nimport { SingleViewBase } from '../../core/view-manager/single-view.js';\n\nexport class KanbanSingleView extends SingleViewBase<KanbanViewData> {\n  columns$: ReadonlySignal<string[]> = computed(() => {\n    return this.columnsWithoutFilter$.value.filter(\n      id => !this.columnGetHide(id)\n    );\n  });\n\n  columnsWithoutFilter$ = computed(() => {\n    const needShow = new Set(this.dataSource.properties$.value);\n    const result: string[] = [];\n    this.viewData$.value?.columns.forEach(v => {\n      if (needShow.has(v.id)) {\n        result.push(v.id);\n        needShow.delete(v.id);\n      }\n    });\n    result.push(...needShow);\n    return result;\n  });\n\n  detailColumns$ = computed(() => {\n    return this.columnsWithoutFilter$.value.filter(\n      id => this.columnGetType(id) !== 'title'\n    );\n  });\n\n  filter$ = computed(() => {\n    return this.viewData$.value?.filter ?? emptyFilterGroup;\n  });\n\n  groupBy$ = computed(() => {\n    return this.viewData$.value?.groupBy;\n  });\n\n  groupManager = new GroupManager(this.groupBy$, this, {\n    sortGroup: ids =>\n      sortByManually(\n        ids,\n        v => v,\n        this.view?.groupProperties.map(v => v.key) ?? []\n      ),\n    sortRow: (key, ids) => {\n      const property = this.view?.groupProperties.find(v => v.key === key);\n      return sortByManually(ids, v => v, property?.manuallyCardSort ?? []);\n    },\n    changeGroupSort: keys => {\n      const map = new Map(this.view?.groupProperties.map(v => [v.key, v]));\n      this.viewDataUpdate(() => {\n        return {\n          groupProperties: keys.map(key => {\n            const property = map.get(key);\n            if (property) {\n              return property;\n            }\n            return {\n              key,\n              hide: false,\n              manuallyCardSort: [],\n            };\n          }),\n        };\n      });\n    },\n    changeRowSort: (groupKeys, groupKey, keys) => {\n      const map = new Map(this.view?.groupProperties.map(v => [v.key, v]));\n      this.viewDataUpdate(() => {\n        return {\n          groupProperties: groupKeys.map(key => {\n            if (key === groupKey) {\n              const group = map.get(key);\n              return group\n                ? {\n                    ...group,\n                    manuallyCardSort: keys,\n                  }\n                : {\n                    key,\n                    hide: false,\n                    manuallyCardSort: keys,\n                  };\n            } else {\n              return (\n                map.get(key) ?? {\n                  key,\n                  hide: false,\n                  manuallyCardSort: [],\n                }\n              );\n            }\n          }),\n        };\n      });\n    },\n  });\n\n  header$ = computed(() => {\n    return (\n      this.viewData$.value?.header ?? {\n        titleColumn: this.columnsWithoutFilter$.value.find(\n          id => this.columnGetType(id) === 'title'\n        ),\n        iconColumn: 'type',\n      }\n    );\n  });\n\n  readonly$ = computed(() => {\n    return this.viewManager.readonly$.value;\n  });\n\n  get columns(): string[] {\n    return this.columnsWithoutFilter$.value.filter(\n      id => !this.columnGetHide(id)\n    );\n  }\n\n  get columnsWithoutFilter(): string[] {\n    const needShow = new Set(this.dataSource.properties$.value);\n    const result: string[] = [];\n    this.view?.columns.forEach(v => {\n      if (needShow.has(v.id)) {\n        result.push(v.id);\n        needShow.delete(v.id);\n      }\n    });\n    result.push(...needShow);\n    return result;\n  }\n\n  get filter(): FilterGroup {\n    return this.view?.filter ?? emptyFilterGroup;\n  }\n\n  get header() {\n    return this.view?.header;\n  }\n\n  get type(): string {\n    return this.view?.mode ?? 'kanban';\n  }\n\n  get view() {\n    return this.viewData$.value;\n  }\n\n  addCard(position: InsertToPosition, group: string) {\n    const id = this.rowAdd(position);\n    this.groupManager.addToGroup(id, group);\n    return id;\n  }\n\n  changeGroup(columnId: string) {\n    const column = this.columnGet(columnId);\n    this.viewDataUpdate(_view => {\n      return {\n        groupBy: defaultGroupBy(\n          this.columnGetMeta(column.type$.value),\n          column.id,\n          column.data$.value\n        ),\n      };\n    });\n  }\n\n  checkGroup(columnId: string, type: TType, target: TType): boolean {\n    if (!groupByMatcher.isMatched(type, target)) {\n      this.changeGroup(columnId);\n      return false;\n    }\n    return true;\n  }\n\n  columnGet(columnId: string): KanbanColumn {\n    return new KanbanColumn(this, columnId);\n  }\n\n  columnGetHide(columnId: string): boolean {\n    return this.view?.columns.find(v => v.id === columnId)?.hide ?? false;\n  }\n\n  columnMove(columnId: string, toAfterOfColumn: InsertToPosition): void {\n    this.viewDataUpdate(view => {\n      const columnIndex = view.columns.findIndex(v => v.id === columnId);\n      if (columnIndex < 0) {\n        return {};\n      }\n      const columns = [...view.columns];\n      const [column] = columns.splice(columnIndex, 1);\n      const index = insertPositionToIndex(toAfterOfColumn, columns);\n      columns.splice(index, 0, column);\n      return {\n        columns,\n      };\n    });\n  }\n\n  columnUpdateHide(columnId: string, hide: boolean): void {\n    this.viewDataUpdate(view => {\n      return {\n        columns: view.columns.map(v =>\n          v.id === columnId\n            ? {\n                ...v,\n                hide,\n              }\n            : v\n        ),\n      };\n    });\n  }\n\n  getHeaderCover(_rowId: string): KanbanColumn | undefined {\n    const columnId = this.view?.header.coverColumn;\n    if (!columnId) {\n      return;\n    }\n    return this.columnGet(columnId);\n  }\n\n  getHeaderIcon(_rowId: string): KanbanColumn | undefined {\n    const columnId = this.view?.header.iconColumn;\n    if (!columnId) {\n      return;\n    }\n    return this.columnGet(columnId);\n  }\n\n  getHeaderTitle(_rowId: string): KanbanColumn | undefined {\n    const columnId = this.view?.header.titleColumn;\n    if (!columnId) {\n      return;\n    }\n    return this.columnGet(columnId);\n  }\n\n  hasHeader(_rowId: string): boolean {\n    const hd = this.view?.header;\n    if (!hd) {\n      return false;\n    }\n    return !!hd.titleColumn || !!hd.iconColumn || !!hd.coverColumn;\n  }\n\n  isInHeader(columnId: string) {\n    const hd = this.view?.header;\n    if (!hd) {\n      return false;\n    }\n    return (\n      hd.titleColumn === columnId ||\n      hd.iconColumn === columnId ||\n      hd.coverColumn === columnId\n    );\n  }\n\n  isShow(rowId: string): boolean {\n    if (this.filter$.value?.conditions.length) {\n      const rowMap = Object.fromEntries(\n        this.columnManagerList$.value.map(column => [\n          column.id,\n          column.cellGet(rowId).jsonValue$.value,\n        ])\n      );\n      return evalFilter(this.filter$.value, rowMap);\n    }\n    return true;\n  }\n\n  override rowGetNext(rowId: string): string {\n    const index = this.rows$.value.indexOf(rowId);\n    return this.rows$.value[index + 1];\n  }\n\n  override rowGetPrev(rowId: string): string {\n    const index = this.rows$.value.indexOf(rowId);\n    return this.rows$.value[index - 1];\n  }\n\n  override rowMove(rowId: string, position: InsertToPosition): void {\n    this.dataSource.rowMove(rowId, position);\n  }\n\n  updateFilter(filter: FilterGroup): void {\n    this.viewDataUpdate(() => {\n      return {\n        filter,\n      };\n    });\n  }\n}\n\nexport class KanbanColumn extends ColumnBase {\n  constructor(dataViewManager: KanbanSingleView, columnId: string) {\n    super(dataViewManager, columnId);\n  }\n}\n"]}