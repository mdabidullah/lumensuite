{"version":3,"file":"clipboard.js","sourceRoot":"","sources":["../../../../src/view-presets/kanban/controller/clipboard.ts"],"names":[],"mappings":"AAMA,MAAM,OAAO,yBAAyB;IAcpC,IAAY,QAAQ;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;IACxC,CAAC;IAED,YAAmB,IAAoB;QAApB,SAAI,GAAJ,IAAI,CAAgB;QAjB/B,YAAO,GAAG,CAChB,QAA6B,EAC7B,gBAA6C,EAC7C,EAAE;YACF,OAAO;YACP,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEM,aAAQ,GAAG,CAAC,QAA6B,EAAE,EAAE;YACnD,OAAO;YACP,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAOA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,aAAa;QACX,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CACvB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE;YAClC,MAAM,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC;YAChE,IAAI,CAAC,eAAe;gBAAE,OAAO,KAAK,CAAC;YAEnC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC;YACnC,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CACH,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CACvB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE;YACnC,IAAI,IAAI,CAAC,QAAQ;gBAAE,OAAO,KAAK,CAAC;YAEhC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACnB,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;CACF","sourcesContent":["import type { UIEventStateContext } from '@lumensuite/block-std';\nimport type { ReactiveController } from 'lit';\n\nimport type { DataViewKanban } from '../kanban-view.js';\nimport type { KanbanViewSelectionWithType } from '../types.js';\n\nexport class KanbanClipboardController implements ReactiveController {\n  private _onCopy = (\n    _context: UIEventStateContext,\n    _kanbanSelection: KanbanViewSelectionWithType\n  ) => {\n    // todo\n    return true;\n  };\n\n  private _onPaste = (_context: UIEventStateContext) => {\n    // todo\n    return true;\n  };\n\n  private get readonly() {\n    return this.host.view.readonly$.value;\n  }\n\n  constructor(public host: DataViewKanban) {\n    host.addController(this);\n  }\n\n  hostConnected() {\n    this.host.disposables.add(\n      this.host.handleEvent('copy', ctx => {\n        const kanbanSelection = this.host.selectionController.selection;\n        if (!kanbanSelection) return false;\n\n        this._onCopy(ctx, kanbanSelection);\n        return true;\n      })\n    );\n\n    this.host.disposables.add(\n      this.host.handleEvent('paste', ctx => {\n        if (this.readonly) return false;\n\n        this._onPaste(ctx);\n        return true;\n      })\n    );\n  }\n}\n"]}