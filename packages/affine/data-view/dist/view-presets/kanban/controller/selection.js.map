{"version":3,"file":"selection.js","sourceRoot":"","sources":["../../../../src/view-presets/kanban/controller/selection.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ReactiveController } from 'lit';\n\nimport { LumenSuiteError, ErrorCode } from '@lumensuite/global/exceptions';\nimport { assertExists } from '@lumensuite/global/utils';\n\nimport type { KanbanGroup } from '../group.js';\nimport type { DataViewKanban } from '../kanban-view.js';\nimport type {\n  KanbanCardSelection,\n  KanbanCardSelectionCard,\n  KanbanCellSelection,\n  KanbanGroupSelection,\n  KanbanViewSelection,\n  KanbanViewSelectionWithType,\n} from '../types.js';\n\nimport { KanbanCard } from '../card.js';\nimport { KanbanCell } from '../cell.js';\n\nexport class KanbanSelectionController implements ReactiveController {\n  _selection?: KanbanViewSelectionWithType;\n\n  shiftClickCard = (event: MouseEvent) => {\n    event.preventDefault();\n\n    const selection = this.selection;\n    const target = event.target as HTMLElement;\n    const closestCardId = target.closest(\n      'affine-data-view-kanban-card'\n    )?.cardId;\n    const closestGroupKey = target.closest('affine-data-view-kanban-group')\n      ?.group.key;\n    if (!closestCardId) return;\n    if (!closestGroupKey) return;\n    const cards = selection?.selectionType === 'card' ? selection.cards : [];\n\n    const newCards = cards.some(card => card.cardId === closestCardId)\n      ? cards.filter(card => card.cardId !== closestCardId)\n      : [...cards, { cardId: closestCardId, groupKey: closestGroupKey }];\n    this.selection = atLeastOne(newCards)\n      ? {\n          selectionType: 'card',\n          cards: newCards,\n        }\n      : undefined;\n  };\n\n  get selection(): KanbanViewSelectionWithType | undefined {\n    return this._selection;\n  }\n\n  set selection(data: KanbanViewSelection | undefined) {\n    if (!data) {\n      this.host.setSelection();\n      return;\n    }\n    const selection: KanbanViewSelectionWithType = {\n      ...data,\n      viewId: this.host.view.id,\n      type: 'kanban',\n    };\n\n    if (selection.selectionType === 'cell' && selection.isEditing) {\n      const container = getFocusCell(this.host, selection);\n      const cell = container?.cell;\n      const isEditing = cell\n        ? cell.beforeEnterEditMode()\n          ? selection.isEditing\n          : false\n        : false;\n      this.host.setSelection({\n        ...selection,\n        isEditing,\n      });\n    } else {\n      this.host.setSelection(selection);\n    }\n  }\n\n  get view() {\n    return this.host.view;\n  }\n\n  constructor(private host: DataViewKanban) {\n    this.host.addController(this);\n  }\n\n  blur(selection: KanbanViewSelection) {\n    if (selection.selectionType !== 'cell') {\n      const selectCards = getSelectedCards(this.host, selection);\n      selectCards.forEach(card => (card.isFocus = false));\n      return;\n    }\n    const container = getFocusCell(this.host, selection);\n    if (!container) {\n      return;\n    }\n    container.isFocus = false;\n    const cell = container?.cell;\n\n    if (selection.isEditing) {\n      requestAnimationFrame(() => {\n        cell?.onExitEditMode();\n      });\n      if (cell?.blurCell()) {\n        container.blur();\n      }\n      container.editing = false;\n    } else {\n      container.blur();\n    }\n  }\n\n  deleteCard() {\n    const selection = this.selection;\n    if (!selection || selection.selectionType === 'cell') {\n      return;\n    }\n    if (selection.selectionType === 'card') {\n      this.host.view.rowDelete(selection.cards.map(v => v.cardId));\n      this.selection = undefined;\n    }\n  }\n\n  focus(selection: KanbanViewSelection) {\n    if (selection.selectionType !== 'cell') {\n      const selectCards = getSelectedCards(this.host, selection);\n      selectCards.forEach((card, index) => {\n        if (index === 0) {\n          card.scrollIntoView({ block: 'nearest', inline: 'nearest' });\n        }\n        card.isFocus = true;\n      });\n      return;\n    }\n    const container = getFocusCell(this.host, selection);\n    if (!container) {\n      return;\n    }\n    container.scrollIntoView({ block: 'nearest', inline: 'nearest' });\n    container.isFocus = true;\n    const cell = container?.cell;\n    if (selection.isEditing) {\n      cell?.onEnterEditMode();\n      if (cell?.focusCell()) {\n        container.focus();\n      }\n      container.editing = true;\n    } else {\n      container.focus();\n    }\n  }\n\n  focusFirstCell() {\n    const group = this.host.groupManager?.groupsDataList$.value?.[0];\n    const card = group?.rows[0];\n    const columnId = card && this.host.view.getHeaderTitle(card)?.id;\n    if (group && card && columnId) {\n      this.selection = {\n        selectionType: 'cell',\n        groupKey: group.key,\n        cardId: card,\n        columnId,\n        isEditing: false,\n      };\n    }\n  }\n\n  focusIn() {\n    const selection = this.selection;\n    if (!selection) return;\n    if (selection.selectionType === 'cell' && selection.isEditing) return;\n\n    if (selection.selectionType === 'cell') {\n      this.selection = {\n        ...selection,\n        isEditing: true,\n      };\n      return;\n    }\n    if (selection.selectionType === 'card') {\n      const card = getSelectedCards(this.host, selection)[0];\n      const cell = card?.querySelector('affine-data-view-kanban-cell');\n      if (cell) {\n        this.selection = {\n          groupKey: card.groupKey,\n          cardId: card.cardId,\n          selectionType: 'cell',\n          columnId: cell.column.id,\n          isEditing: false,\n        };\n      }\n    } else {\n      // Not yet implement\n    }\n  }\n\n  focusNext(position: 'up' | 'down' | 'left' | 'right') {\n    const selection = this.selection;\n    if (!selection) {\n      return;\n    }\n\n    if (selection.selectionType === 'cell' && !selection.isEditing) {\n      // cell focus\n      const kanbanCells = getCardCellsBySelection(this.host, selection);\n      const index = kanbanCells.findIndex(\n        cell => cell.column.id === selection.columnId\n      );\n      const { cell, cardId, groupKey } = this.getNextFocusCell(\n        selection,\n        index,\n        position\n      );\n      if (cell instanceof KanbanCell) {\n        this.selection = {\n          ...selection,\n          cardId: cardId ?? selection.cardId,\n          groupKey: groupKey ?? selection.groupKey,\n          columnId: cell.column.id,\n        } satisfies KanbanCellSelection;\n      }\n    } else if (selection.selectionType === 'card') {\n      // card focus\n      const group = this.host.querySelector(\n        `affine-data-view-kanban-group[data-key=\"${selection.cards[0].groupKey}\"]`\n      );\n      const cardElements = Array.from(\n        group?.querySelectorAll('affine-data-view-kanban-card') ?? []\n      );\n\n      const index = cardElements.findIndex(\n        card => card.cardId === selection.cards[0].cardId\n      );\n      const { card, cards } = this.getNextFocusCard(selection, index, position);\n      if (card instanceof KanbanCard) {\n        const newCards = cards ?? selection.cards;\n        this.selection = atLeastOne(newCards)\n          ? {\n              ...selection,\n              cards: newCards,\n            }\n          : undefined;\n      }\n    }\n  }\n\n  focusOut() {\n    const selection = this.selection;\n    if (selection?.selectionType === 'card') {\n      if (atLeastOne(selection.cards)) {\n        this.selection = {\n          ...selection,\n          cards: [selection.cards[0]],\n        };\n      } else {\n        // Not yet implement\n        return;\n      }\n    }\n    if (selection?.selectionType !== 'cell') {\n      return;\n    }\n\n    if (selection.isEditing) {\n      this.selection = {\n        ...selection,\n        isEditing: false,\n      };\n    } else {\n      this.selection = {\n        selectionType: 'card',\n        cards: [\n          {\n            cardId: selection.cardId,\n            groupKey: selection.groupKey,\n          },\n        ],\n      };\n    }\n  }\n\n  getNextFocusCard(\n    selection: KanbanCardSelection,\n    index: number,\n    nextPosition: 'up' | 'down' | 'left' | 'right'\n  ): { card: KanbanCard; cards: KanbanCardSelectionCard[] } {\n    const group = this.host.querySelector(\n      `affine-data-view-kanban-group[data-key=\"${selection.cards[0].groupKey}\"]`\n    );\n    const kanbanCards = Array.from(\n      group?.querySelectorAll('affine-data-view-kanban-card') ?? []\n    );\n\n    if (nextPosition === 'up') {\n      const nextIndex = index - 1;\n      const nextCardIndex = nextIndex < 0 ? kanbanCards.length - 1 : nextIndex;\n      const card = kanbanCards[nextCardIndex];\n\n      return {\n        card,\n        cards: [\n          {\n            cardId: card.cardId,\n            groupKey: card.groupKey,\n          },\n        ],\n      };\n    }\n\n    if (nextPosition === 'down') {\n      const nextIndex = index + 1;\n      const nextCardIndex = nextIndex > kanbanCards.length - 1 ? 0 : nextIndex;\n      const card = kanbanCards[nextCardIndex];\n\n      return {\n        card,\n        cards: [\n          {\n            cardId: card.cardId,\n            groupKey: card.groupKey,\n          },\n        ],\n      };\n    }\n\n    const groups = Array.from(\n      this.host.querySelectorAll('affine-data-view-kanban-group')\n    );\n\n    if (nextPosition === 'right') {\n      return getNextGroupFocusElement(\n        this.host,\n        groups,\n        selection,\n        groupIndex => (groupIndex === groups.length - 1 ? 0 : groupIndex + 1)\n      );\n    }\n\n    if (nextPosition === 'left') {\n      return getNextGroupFocusElement(\n        this.host,\n        groups,\n        selection,\n        groupIndex => (groupIndex === 0 ? groups.length - 1 : groupIndex - 1)\n      );\n    }\n    throw new LumenSuiteError(\n      ErrorCode.DatabaseBlockError,\n      'Unknown arrow keys, only support: up, down, left, and right keys.'\n    );\n  }\n\n  getNextFocusCell(\n    selection: KanbanCellSelection,\n    index: number,\n    nextPosition: 'up' | 'down' | 'left' | 'right'\n  ): {\n    cell: KanbanCell;\n    cardId?: string;\n    groupKey?: string;\n  } {\n    const kanbanCells = getCardCellsBySelection(this.host, selection);\n    const group = this.host.querySelector(\n      `affine-data-view-kanban-group[data-key=\"${selection.groupKey}\"]`\n    );\n    const cards = Array.from(\n      group?.querySelectorAll('affine-data-view-kanban-card') ?? []\n    );\n\n    if (nextPosition === 'up') {\n      const nextIndex = index - 1;\n      if (nextIndex < 0) {\n        if (cards.length > 1) {\n          return getNextCardFocusCell(\n            nextPosition,\n            cards,\n            selection,\n            cardIndex => (cardIndex === 0 ? cards.length - 1 : cardIndex - 1)\n          );\n        } else {\n          return {\n            cell: kanbanCells[kanbanCells.length - 1],\n          };\n        }\n      }\n      return {\n        cell: kanbanCells[nextIndex],\n      };\n    }\n\n    if (nextPosition === 'down') {\n      const nextIndex = index + 1;\n      if (nextIndex >= kanbanCells.length) {\n        if (cards.length > 1) {\n          return getNextCardFocusCell(\n            nextPosition,\n            cards,\n            selection,\n            cardIndex => (cardIndex === cards.length - 1 ? 0 : cardIndex + 1)\n          );\n        } else {\n          return {\n            cell: kanbanCells[0],\n          };\n        }\n      }\n      return {\n        cell: kanbanCells[nextIndex],\n      };\n    }\n\n    const groups = Array.from(\n      this.host.querySelectorAll('affine-data-view-kanban-group')\n    );\n\n    if (nextPosition === 'right') {\n      return getNextGroupFocusElement(\n        this.host,\n        groups,\n        selection,\n        groupIndex => (groupIndex === groups.length - 1 ? 0 : groupIndex + 1)\n      );\n    }\n\n    if (nextPosition === 'left') {\n      return getNextGroupFocusElement(\n        this.host,\n        groups,\n        selection,\n        groupIndex => (groupIndex === 0 ? groups.length - 1 : groupIndex - 1)\n      );\n    }\n    throw new LumenSuiteError(\n      ErrorCode.DatabaseBlockError,\n      'Unknown arrow keys, only support: up, down, left, and right keys.'\n    );\n  }\n\n  hostConnected() {\n    this.host.disposables.add(\n      this.host.selection$.subscribe(selection => {\n        const old = this._selection;\n        if (old) {\n          this.blur(old);\n        }\n        this._selection = selection;\n        if (selection) {\n          this.focus(selection);\n        }\n      })\n    );\n  }\n\n  insertRowAfter() {\n    const selection = this.selection;\n    if (selection?.selectionType !== 'card') {\n      return;\n    }\n\n    const { cardId, groupKey } = selection.cards[0];\n    const id = this.view.addCard({ before: false, id: cardId }, groupKey);\n\n    requestAnimationFrame(() => {\n      const columnId = this.view.header$.value.titleColumn;\n      if (columnId) {\n        this.selection = {\n          selectionType: 'cell',\n          groupKey,\n          cardId: id,\n          columnId,\n          isEditing: true,\n        };\n      } else {\n        this.selection = {\n          selectionType: 'card',\n          cards: [\n            {\n              cardId: id,\n              groupKey,\n            },\n          ],\n        };\n      }\n    });\n  }\n\n  insertRowBefore() {\n    const selection = this.selection;\n    if (selection?.selectionType !== 'card') {\n      return;\n    }\n\n    const { cardId, groupKey } = selection.cards[0];\n    const id = this.view.addCard({ before: true, id: cardId }, groupKey);\n\n    requestAnimationFrame(() => {\n      const columnId = this.view.header$.value.titleColumn;\n      if (columnId) {\n        this.selection = {\n          selectionType: 'cell',\n          groupKey,\n          cardId: id,\n          columnId,\n          isEditing: true,\n        };\n      } else {\n        this.selection = {\n          selectionType: 'card',\n          cards: [\n            {\n              cardId: id,\n              groupKey,\n            },\n          ],\n        };\n      }\n    });\n  }\n\n  moveCard(rowId: string, key: string) {\n    const selection = this.selection;\n    if (selection?.selectionType !== 'card') {\n      return;\n    }\n    this.view.groupManager.moveCardTo(\n      rowId,\n      selection.cards[0].groupKey,\n      key,\n      'start'\n    );\n    requestAnimationFrame(() => {\n      if (this.selection?.selectionType !== 'card') return;\n\n      const newCards = selection.cards.map(card => ({\n        ...card,\n        groupKey: card.groupKey,\n      }));\n      this.selection = atLeastOne(newCards)\n        ? {\n            ...selection,\n            cards: newCards,\n          }\n        : undefined;\n    });\n  }\n}\n\ntype NextFocusCell = {\n  cell: KanbanCell;\n  cardId: string;\n  groupKey: string;\n};\ntype NextFocusCard = {\n  card: KanbanCard;\n  cards: {\n    cardId: string;\n    groupKey: string;\n  }[];\n};\nfunction getNextGroupFocusElement(\n  viewElement: Element,\n  groups: KanbanGroup[],\n  selection: KanbanCellSelection,\n  getNextGroupIndex: (groupIndex: number) => number\n): NextFocusCell;\nfunction getNextGroupFocusElement(\n  viewElement: Element,\n  groups: KanbanGroup[],\n  selection: KanbanCardSelection,\n  getNextGroupIndex: (groupIndex: number) => number\n): NextFocusCard;\nfunction getNextGroupFocusElement(\n  viewElement: Element,\n  groups: KanbanGroup[],\n  selection: KanbanCellSelection | KanbanCardSelection,\n  getNextGroupIndex: (groupIndex: number) => number\n): NextFocusCell | NextFocusCard {\n  const groupIndex = groups.findIndex(group => {\n    if (selection.selectionType === 'cell') {\n      return group.group.key === selection.groupKey;\n    }\n    return group.group.key === selection.cards[0].groupKey;\n  });\n\n  let nextGroupIndex = getNextGroupIndex(groupIndex);\n  let nextGroup = groups[nextGroupIndex];\n  while (nextGroup.group.rows.length === 0) {\n    nextGroupIndex = getNextGroupIndex(nextGroupIndex);\n    nextGroup = groups[nextGroupIndex];\n  }\n\n  const element =\n    selection.selectionType === 'cell'\n      ? getFocusCell(viewElement, selection)\n      : getSelectedCards(viewElement, selection)[0];\n  assertExists(element);\n  const rect = element.getBoundingClientRect();\n  const nextCards = Array.from(\n    nextGroup.querySelectorAll('affine-data-view-kanban-card')\n  );\n  const cardPos = nextCards\n    .map((card, index) => {\n      const targetRect = card.getBoundingClientRect();\n      return {\n        offsetY: getYOffset(rect, targetRect),\n        index,\n      };\n    })\n    .reduce((prev, curr) => {\n      if (prev.offsetY < curr.offsetY) {\n        return prev;\n      }\n      return curr;\n    });\n  const nextCard = nextCards[cardPos.index];\n\n  if (selection.selectionType === 'card') {\n    return {\n      card: nextCard,\n      cards: [\n        {\n          cardId: nextCard.cardId,\n          groupKey: nextGroup.group.key,\n        },\n      ],\n    };\n  }\n\n  const cells = Array.from(\n    nextCard.querySelectorAll('affine-data-view-kanban-cell')\n  );\n  const cellPos = cells\n    .map((card, index) => {\n      const targetRect = card.getBoundingClientRect();\n      return {\n        offsetY: getYOffset(rect, targetRect),\n        index,\n      };\n    })\n    .reduce((prev, curr) => {\n      if (prev.offsetY < curr.offsetY) {\n        return prev;\n      }\n      return curr;\n    });\n  const nextCell = cells[cellPos.index];\n\n  return {\n    cell: nextCell,\n    cardId: nextCard.cardId,\n    groupKey: nextGroup.group.key,\n  };\n}\n\nfunction getNextCardFocusCell(\n  nextPosition: 'up' | 'down',\n  cards: KanbanCard[],\n  selection: KanbanCellSelection,\n  getNextCardIndex: (cardIndex: number) => number\n): {\n  cell: KanbanCell;\n  cardId: string;\n} {\n  const cardIndex = cards.findIndex(card => card.cardId === selection.cardId);\n  const nextCardIndex = getNextCardIndex(cardIndex);\n  const nextCard = cards[nextCardIndex];\n  const nextCells = Array.from(\n    nextCard.querySelectorAll('affine-data-view-kanban-cell')\n  );\n  const nextCellIndex = nextPosition === 'up' ? nextCells.length - 1 : 0;\n  return {\n    cell: nextCells[nextCellIndex],\n    cardId: nextCard.cardId,\n  };\n}\n\nfunction getCardCellsBySelection(\n  viewElement: Element,\n  selection: KanbanCellSelection\n) {\n  const card = getSelectedCard(viewElement, selection);\n  return Array.from(\n    card?.querySelectorAll('affine-data-view-kanban-cell') ?? []\n  );\n}\n\nfunction getSelectedCard(\n  viewElement: Element,\n  selection: KanbanCellSelection\n): KanbanCard | null {\n  const group = viewElement.querySelector(\n    `affine-data-view-kanban-group[data-key=\"${selection.groupKey}\"]`\n  );\n\n  if (!group) return null;\n  return group.querySelector<KanbanCard>(\n    `affine-data-view-kanban-card[data-card-id=\"${selection.cardId}\"]`\n  );\n}\n\nfunction getSelectedCards(\n  viewElement: Element,\n  selection: KanbanCardSelection | KanbanGroupSelection\n): KanbanCard[] {\n  if (selection.selectionType === 'group') return [];\n\n  const groupKeys = selection.cards.map(card => card.groupKey);\n  const groups = groupKeys\n    .map(key =>\n      viewElement.querySelector(\n        `affine-data-view-kanban-group[data-key=\"${key}\"]`\n      )\n    )\n    .filter((group): group is Element => group !== null);\n\n  const cardIds = selection.cards.map(card => card.cardId);\n  const cards = groups\n    .flatMap(group =>\n      cardIds.map(id =>\n        group.querySelector<KanbanCard>(\n          `affine-data-view-kanban-card[data-card-id=\"${id}\"]`\n        )\n      )\n    )\n    .filter((card): card is KanbanCard => card !== null);\n\n  return cards;\n}\n\nfunction getFocusCell(viewElement: Element, selection: KanbanCellSelection) {\n  const card = getSelectedCard(viewElement, selection);\n  return card?.querySelector<KanbanCell>(\n    `affine-data-view-kanban-cell[data-column-id=\"${selection.columnId}\"]`\n  );\n}\n\nfunction getYOffset(srcRect: DOMRect, targetRect: DOMRect) {\n  return Math.abs(\n    srcRect.top +\n      (srcRect.bottom - srcRect.top) / 2 -\n      (targetRect.top + (targetRect.bottom - targetRect.top) / 2)\n  );\n}\nconst atLeastOne = <T>(v: T[]): v is [T, ...T[]] => {\n  return v.length > 0;\n};\n"]}