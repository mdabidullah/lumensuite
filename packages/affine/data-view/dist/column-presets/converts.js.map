{"version":3,"file":"converts.js","sourceRoot":"","sources":["../../src/column-presets/converts.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,iCAAiC,CAAC;AAExD,OAAO,EAAE,mBAAmB,EAAE,MAAM,kBAAkB,CAAC;AACvD,OAAO,EAAE,4BAA4B,EAAE,MAAM,0BAA0B,CAAC;AACxE,OAAO,EAAE,uBAAuB,EAAE,MAAM,oBAAoB,CAAC;AAC7D,OAAO,EAAE,yBAAyB,EAAE,MAAM,sBAAsB,CAAC;AACjE,OAAO,EAAE,uBAAuB,EAAE,MAAM,oBAAoB,CAAC;AAE7D,MAAM,CAAC,MAAM,oBAAoB,GAAG;IAClC,mBAAmB,CACjB,4BAA4B,EAC5B,uBAAuB,EACvB,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;QAClB,MAAM;QACN,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KAC9B,CAAC,CACH;IACD,mBAAmB,CACjB,uBAAuB,EACvB,yBAAyB,EACzB,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;QACnB,MAAM,EAAE,EAAE;QACV,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;KAC7C,CAAC,CACH;IACD,mBAAmB,CACjB,yBAAyB,EACzB,uBAAuB,EACvB,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;QACnB,MAAM,EAAE;YACN,OAAO,EAAE,CAAC;YACV,MAAM,EAAE,QAAiB;SAC1B;QACD,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACzB,CAAC,CACH;IACD,mBAAmB,CACjB,uBAAuB,EACvB,4BAA4B,EAC5B,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;QAClB,MAAM;QACN,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;KAC7C,CAAC,CACH;CACF,CAAC","sourcesContent":["import { clamp } from '@blocksuite/affine-shared/utils';\n\nimport { createColumnConvert } from '../core/index.js';\nimport { multiSelectColumnModelConfig } from './multi-select/define.js';\nimport { numberColumnModelConfig } from './number/define.js';\nimport { progressColumnModelConfig } from './progress/define.js';\nimport { selectColumnModelConfig } from './select/define.js';\n\nexport const presetColumnConverts = [\n  createColumnConvert(\n    multiSelectColumnModelConfig,\n    selectColumnModelConfig,\n    (column, cells) => ({\n      column,\n      cells: cells.map(v => v?.[0]),\n    })\n  ),\n  createColumnConvert(\n    numberColumnModelConfig,\n    progressColumnModelConfig,\n    (_column, cells) => ({\n      column: {},\n      cells: cells.map(v => clamp(v ?? 0, 0, 100)),\n    })\n  ),\n  createColumnConvert(\n    progressColumnModelConfig,\n    numberColumnModelConfig,\n    (_column, cells) => ({\n      column: {\n        decimal: 0,\n        format: 'number' as const,\n      },\n      cells: cells.map(v => v),\n    })\n  ),\n  createColumnConvert(\n    selectColumnModelConfig,\n    multiSelectColumnModelConfig,\n    (column, cells) => ({\n      column,\n      cells: cells.map(v => (v ? [v] : undefined)),\n    })\n  ),\n];\n"]}