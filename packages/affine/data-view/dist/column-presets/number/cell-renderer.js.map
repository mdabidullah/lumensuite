{"version":3,"file":"cell-renderer.js","sourceRoot":"","sources":["../../../src/column-presets/number/cell-renderer.ts"],"names":[],"mappings":"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","sourcesContent":["import { IS_MAC } from '@lumensuite/global/env';\nimport { baseTheme } from '@toeverything/theme';\nimport { css, html, unsafeCSS } from 'lit';\nimport { customElement, query } from 'lit/decorators.js';\n\nimport type { NumberColumnDataType } from './types.js';\n\nimport { BaseCellRenderer } from '../../core/column/index.js';\nimport { createFromBaseCellRenderer } from '../../core/column/renderer.js';\nimport { stopPropagation } from '../../core/utils/event.js';\nimport { createIcon } from '../../core/utils/uni-icon.js';\nimport { numberColumnModelConfig } from './define.js';\nimport {\n  formatNumber,\n  type NumberFormat,\n  parseNumber,\n} from './utils/formatter.js';\n\n@customElement('affine-database-number-cell')\nexport class NumberCell extends BaseCellRenderer<number, NumberColumnDataType> {\n  static override styles = css`\n    affine-database-number-cell {\n      display: block;\n      width: 100%;\n    }\n\n    .affine-database-number {\n      display: flex;\n      align-items: center;\n      justify-content: flex-end;\n      width: 100%;\n      padding: 0;\n      border: none;\n      font-family: ${unsafeCSS(baseTheme.fontSansFamily)};\n      font-size: var(--data-view-cell-text-size);\n      line-height: var(--data-view-cell-text-line-height);\n      color: var(--affine-text-primary-color);\n      font-weight: 400;\n      background-color: transparent;\n    }\n  `;\n\n  private _getFormattedString() {\n    const enableNewFormatting =\n      this.view.featureFlags$.value.enable_number_formatting;\n    const decimals = this.column.data$.value.decimal ?? 0;\n    const formatMode = (this.column.data$.value.format ??\n      'number') as NumberFormat;\n    return this.value\n      ? enableNewFormatting\n        ? formatNumber(this.value, formatMode, decimals)\n        : this.value.toString()\n      : '';\n  }\n\n  override render() {\n    return html` <div class=\"affine-database-number number\">\n      ${this._getFormattedString()}\n    </div>`;\n  }\n}\n\n@customElement('affine-database-number-cell-editing')\nexport class NumberCellEditing extends BaseCellRenderer<\n  number,\n  NumberColumnDataType\n> {\n  static override styles = css`\n    affine-database-number-cell-editing {\n      display: block;\n      width: 100%;\n      cursor: text;\n    }\n\n    .affine-database-number {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      padding: 0;\n      border: none;\n      font-family: ${unsafeCSS(baseTheme.fontSansFamily)};\n      font-size: var(--data-view-cell-text-size);\n      line-height: var(--data-view-cell-text-line-height);\n      color: var(--affine-text-primary-color);\n      font-weight: 400;\n      background-color: transparent;\n      text-align: right;\n    }\n\n    .affine-database-number:focus {\n      outline: none;\n    }\n  `;\n\n  private _getFormattedString = (value: number) => {\n    const enableNewFormatting =\n      this.view.featureFlags$.value.enable_number_formatting;\n    const decimals = this.column.data$.value.decimal ?? 0;\n    const formatMode = (this.column.data$.value.format ??\n      'number') as NumberFormat;\n    return enableNewFormatting\n      ? formatNumber(value, formatMode, decimals)\n      : value.toString();\n  };\n\n  private _keydown = (e: KeyboardEvent) => {\n    const ctrlKey = IS_MAC ? e.metaKey : e.ctrlKey;\n\n    if (e.key.toLowerCase() === 'z' && ctrlKey) {\n      e.stopPropagation();\n      return;\n    }\n\n    if (e.key === 'Enter' && !e.isComposing) {\n      requestAnimationFrame(() => {\n        this.selectCurrentCell(false);\n      });\n    }\n  };\n\n  private _setValue = (str: string = this._inputEle.value) => {\n    if (!str) {\n      this.onChange(undefined);\n      return;\n    }\n\n    const enableNewFormatting =\n      this.view.featureFlags$.value.enable_number_formatting;\n    const value = enableNewFormatting ? parseNumber(str) : parseFloat(str);\n    if (isNaN(value)) {\n      this._inputEle.value = this.value\n        ? this._getFormattedString(this.value)\n        : '';\n      return;\n    }\n\n    this._inputEle.value = this._getFormattedString(value);\n    this.onChange(value);\n  };\n\n  focusEnd = () => {\n    const end = this._inputEle.value.length;\n    this._inputEle.focus();\n    this._inputEle.setSelectionRange(end, end);\n  };\n\n  _blur() {\n    this.selectCurrentCell(false);\n  }\n\n  _focus() {\n    if (!this.isEditing) {\n      this.selectCurrentCell(true);\n    }\n  }\n\n  override firstUpdated() {\n    requestAnimationFrame(() => {\n      this.focusEnd();\n    });\n  }\n\n  override onExitEditMode() {\n    this._setValue();\n  }\n\n  override render() {\n    const formatted = this.value ? this._getFormattedString(this.value) : '';\n\n    return html`<input\n      type=\"text\"\n      autocomplete=\"off\"\n      .value=\"${formatted}\"\n      @keydown=\"${this._keydown}\"\n      @blur=\"${this._blur}\"\n      @focus=\"${this._focus}\"\n      class=\"affine-database-number number\"\n      @pointerdown=\"${stopPropagation}\"\n    />`;\n  }\n\n  @query('input')\n  private accessor _inputEle!: HTMLInputElement;\n}\n\nexport const numberColumnConfig = numberColumnModelConfig.createColumnMeta({\n  icon: createIcon('NumberIcon'),\n  cellRenderer: {\n    view: createFromBaseCellRenderer(NumberCell),\n    edit: createFromBaseCellRenderer(NumberCellEditing),\n  },\n});\n"]}