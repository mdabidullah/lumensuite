{"version":3,"file":"cell-renderer.js","sourceRoot":"","sources":["../../../src/column-presets/text/cell-renderer.ts"],"names":[],"mappings":"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","sourcesContent":["import { baseTheme } from '@toeverything/theme';\nimport { css, html, unsafeCSS } from 'lit';\nimport { customElement, query } from 'lit/decorators.js';\n\nimport { BaseCellRenderer } from '../../core/column/index.js';\nimport { createFromBaseCellRenderer } from '../../core/column/renderer.js';\nimport { createIcon } from '../../core/utils/uni-icon.js';\nimport { textColumnModelConfig } from './define.js';\n\n@customElement('affine-database-text-cell')\nexport class TextCell extends BaseCellRenderer<string> {\n  static override styles = css`\n    affine-database-text-cell {\n      display: block;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n\n    .affine-database-text {\n      display: flex;\n      align-items: center;\n      height: 100%;\n      width: 100%;\n      padding: 0;\n      border: none;\n      font-family: ${unsafeCSS(baseTheme.fontSansFamily)};\n      font-size: var(--affine-font-base);\n      line-height: var(--affine-line-height);\n      color: var(--affine-text-primary-color);\n      font-weight: 400;\n      background-color: transparent;\n    }\n  `;\n\n  override render() {\n    return html` <div class=\"affine-database-text\">${this.value ?? ''}</div>`;\n  }\n}\n@customElement('affine-database-text-cell-editing')\nexport class TextCellEditing extends BaseCellRenderer<string> {\n  static override styles = css`\n    affine-database-text-cell-editing {\n      display: block;\n      width: 100%;\n      height: 100%;\n      cursor: text;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n\n    .affine-database-text {\n      display: flex;\n      align-items: center;\n      height: 100%;\n      width: 100%;\n      padding: 0;\n      border: none;\n      font-family: ${unsafeCSS(baseTheme.fontSansFamily)};\n      font-size: var(--affine-font-base);\n      line-height: var(--affine-line-height);\n      color: var(--affine-text-primary-color);\n      font-weight: 400;\n      background-color: transparent;\n    }\n\n    .affine-database-text:focus {\n      outline: none;\n    }\n  `;\n\n  private _keydown = (e: KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.isComposing) {\n      this._setValue();\n      setTimeout(() => {\n        this.selectCurrentCell(false);\n      });\n    }\n  };\n\n  private _setValue = (str: string = this._inputEle.value) => {\n    this._inputEle.value = `${this.value ?? ''}`;\n    this.onChange(str);\n  };\n\n  focusEnd = () => {\n    const end = this._inputEle.value.length;\n    this._inputEle.focus();\n    this._inputEle.setSelectionRange(end, end);\n  };\n\n  override firstUpdated() {\n    this.focusEnd();\n  }\n\n  override onExitEditMode() {\n    this._setValue();\n  }\n\n  override render() {\n    return html`<input\n      .value=\"${this.value ?? ''}\"\n      @keydown=\"${this._keydown}\"\n      class=\"affine-database-text\"\n    />`;\n  }\n\n  @query('input')\n  private accessor _inputEle!: HTMLInputElement;\n}\n\nexport const textColumnConfig = textColumnModelConfig.createColumnMeta({\n  icon: createIcon('TextIcon'),\n\n  cellRenderer: {\n    view: createFromBaseCellRenderer(TextCell),\n    edit: createFromBaseCellRenderer(TextCellEditing),\n  },\n});\n"]}