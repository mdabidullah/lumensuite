{"version":3,"file":"cell-renderer.js","sourceRoot":"","sources":["../../../src/column-presets/progress/cell-renderer.ts"],"names":[],"mappings":"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","sourcesContent":["import { css, html } from 'lit';\nimport { customElement, query, state } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\n\nimport { BaseCellRenderer } from '../../core/column/index.js';\nimport { createFromBaseCellRenderer } from '../../core/column/renderer.js';\nimport { startDrag } from '../../core/utils/drag.js';\nimport { createIcon } from '../../core/utils/uni-icon.js';\nimport { progressColumnModelConfig } from './define.js';\n\nconst styles = css`\n  affine-database-progress-cell-editing {\n    display: block;\n    width: 100%;\n    padding: 0 4px;\n  }\n\n  affine-database-progress-cell {\n    display: block;\n    width: 100%;\n    padding: 0 4px;\n  }\n\n  .affine-database-progress {\n    display: flex;\n    align-items: center;\n    height: var(--data-view-cell-text-line-height);\n    gap: 4px;\n  }\n\n  .affine-database-progress-bar {\n    position: relative;\n    width: 104px;\n  }\n\n  .affine-database-progress-bg {\n    overflow: hidden;\n    width: 100%;\n    height: 10px;\n    border-radius: 22px;\n  }\n\n  .affine-database-progress-fg {\n    height: 100%;\n  }\n\n  .affine-database-progress-drag-handle {\n    position: absolute;\n    top: 0;\n    left: 0;\n    transform: translate(0px, -1px);\n    width: 6px;\n    height: 12px;\n    border-radius: 2px;\n    opacity: 1;\n    cursor: ew-resize;\n    background: var(--affine-primary-color);\n    transition: opacity 0.2s ease-in-out;\n  }\n\n  .progress-number {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 18px;\n    width: 25px;\n    color: var(--affine-text-secondary-color);\n    font-size: 14px;\n  }\n`;\n\nconst progressColors = {\n  empty: 'var(--affine-black-10)',\n  processing: 'var(--affine-processing-color)',\n  success: 'var(--affine-success-color)',\n};\n\n@customElement('affine-database-progress-cell')\nexport class ProgressCell extends BaseCellRenderer<number> {\n  static override styles = styles;\n\n  protected override render() {\n    const progress = this.value ?? 0;\n    let backgroundColor = progressColors.processing;\n    if (progress === 100) {\n      backgroundColor = progressColors.success;\n    }\n    const fgStyles = styleMap({\n      width: `${progress}%`,\n      backgroundColor,\n    });\n    const bgStyles = styleMap({\n      backgroundColor:\n        progress === 0 ? progressColors.empty : 'var(--affine-hover-color)',\n    });\n\n    return html` <div class=\"affine-database-progress\">\n      <div class=\"affine-database-progress-bar\">\n        <div class=\"affine-database-progress-bg\" style=${bgStyles}>\n          <div class=\"affine-database-progress-fg\" style=${fgStyles}></div>\n        </div>\n      </div>\n      <div class=\"progress-number progress\">${progress}</div>\n    </div>`;\n  }\n}\n\n@customElement('affine-database-progress-cell-editing')\nexport class ProgressCellEditing extends BaseCellRenderer<number> {\n  static override styles = styles;\n\n  startDrag = (event: MouseEvent) => {\n    const bgRect = this._progressBg.getBoundingClientRect();\n    const min = bgRect.left;\n    const max = bgRect.right;\n    const setValue = (x: number) => {\n      this.tempValue = Math.round(\n        ((Math.min(max, Math.max(min, x)) - min) / (max - min)) * 100\n      );\n    };\n    startDrag(event, {\n      onDrag: ({ x }) => {\n        setValue(x);\n        return;\n      },\n      onMove: ({ x }) => {\n        setValue(x);\n        return;\n      },\n      onDrop: () => {\n        //\n      },\n      onClear: () => {\n        //\n      },\n    });\n  };\n\n  get _value() {\n    return this.tempValue ?? this.value ?? 0;\n  }\n\n  _onChange(value?: number) {\n    this.tempValue = value;\n  }\n\n  override firstUpdated() {\n    const disposables = this._disposables;\n\n    disposables.addFromEvent(this._progressBg, 'pointerdown', this.startDrag);\n    disposables.addFromEvent(window, 'keydown', evt => {\n      if (evt.key === 'ArrowDown') {\n        this._onChange(Math.max(0, this._value - 1));\n        return;\n      }\n      if (evt.key === 'ArrowUp') {\n        this._onChange(Math.min(100, this._value + 1));\n        return;\n      }\n    });\n  }\n\n  override onCopy(_e: ClipboardEvent) {\n    _e.preventDefault();\n  }\n\n  override onCut(_e: ClipboardEvent) {\n    _e.preventDefault();\n  }\n\n  override onExitEditMode() {\n    this.onChange(this._value);\n  }\n\n  override onPaste(_e: ClipboardEvent) {\n    _e.preventDefault();\n  }\n\n  protected override render() {\n    const progress = this._value;\n    let backgroundColor = progressColors.processing;\n    if (progress === 100) {\n      backgroundColor = progressColors.success;\n    }\n    const fgStyles = styleMap({\n      width: `${progress}%`,\n      backgroundColor,\n    });\n    const bgStyles = styleMap({\n      backgroundColor:\n        progress === 0 ? progressColors.empty : 'var(--affine-hover-color)',\n    });\n    const handleStyles = styleMap({\n      left: `calc(${progress}% - 3px)`,\n    });\n\n    return html` <div class=\"affine-database-progress\">\n      <div class=\"affine-database-progress-bar\">\n        <div class=\"affine-database-progress-bg\" style=${bgStyles}>\n          <div class=\"affine-database-progress-fg\" style=${fgStyles}></div>\n          <div\n            class=\"affine-database-progress-drag-handle\"\n            style=${handleStyles}\n          ></div>\n        </div>\n      </div>\n      <div class=\"progress-number progress\">${progress}</div>\n    </div>`;\n  }\n\n  @query('.affine-database-progress-bg')\n  private accessor _progressBg!: HTMLElement;\n\n  @state()\n  private accessor tempValue: number | undefined = undefined;\n}\n\nexport const progressColumnConfig = progressColumnModelConfig.createColumnMeta({\n  icon: createIcon('ProgressIcon'),\n  cellRenderer: {\n    view: createFromBaseCellRenderer(ProgressCell),\n    edit: createFromBaseCellRenderer(ProgressCellEditing),\n  },\n});\n"]}