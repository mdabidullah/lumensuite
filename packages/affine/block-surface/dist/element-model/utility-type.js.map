{"version":3,"file":"utility-type.js","sourceRoot":"","sources":["../../src/element-model/utility-type.ts"],"names":[],"mappings":"","sourcesContent":["// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type OmitFunctionsAndKeysAndReadOnly<T, K extends keyof any> = {\n  [P in Exclude<\n    keyof T,\n    K | FunctionPropertyNames<T> | ReadOnlyPropertyNames<T>\n  >]: T[P];\n};\n\ntype FunctionPropertyNames<T> = {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\n  [K in keyof T]: T[K] extends Function ? K : never;\n}[keyof T];\n\ntype ReadOnlyPropertyNames<T> = {\n  [K in keyof T]: IfEquals<\n    { [P in K]: T[K] },\n    { -readonly [P in K]: T[K] },\n    never,\n    K\n  >;\n}[keyof T];\n\ntype IfEquals<X, Y, A = X, B = never> =\n  (<T>() => T extends X ? 1 : 2) extends <T>() => T extends Y ? 1 : 2 ? A : B;\n"]}