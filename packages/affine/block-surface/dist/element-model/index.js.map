{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/element-model/index.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,iBAAiB,EACjB,qBAAqB,EACrB,iBAAiB,EACjB,iBAAiB,EACjB,gBAAgB,GACjB,MAAM,0BAA0B,CAAC;AAElC,OAAO,EAAE,mBAAmB,EAAE,MAAM,WAAW,CAAC;AAChD,OAAO,EAAE,mBAAmB,EAAE,MAAM,cAAc,CAAC;AAEnD,MAAM,CAAC,MAAM,eAAe,GAAG;IAC7B,KAAK,EAAE,iBAAiB;IACxB,SAAS,EAAE,qBAAqB;IAChC,KAAK,EAAE,iBAAiB;IACxB,KAAK,EAAE,iBAAiB;IACxB,IAAI,EAAE,gBAAgB;IACtB,OAAO,EAAE,mBAAmB;CAC7B,CAAC;AAEF,OAAO,EACL,iBAAiB,EACjB,qBAAqB,EACrB,iBAAiB,EACjB,mBAAmB,EACnB,iBAAiB,EACjB,mBAAmB,EACnB,gBAAgB,GACjB,CAAC;AAEF,MAAM,CAAN,IAAY,iBAOX;AAPD,WAAY,iBAAiB;IAC3B,oCAAe,CAAA;IACf,4CAAuB,CAAA;IACvB,oCAAe,CAAA;IACf,wCAAmB,CAAA;IACnB,oCAAe,CAAA;IACf,kCAAa,CAAA;AACf,CAAC,EAPW,iBAAiB,KAAjB,iBAAiB,QAO5B;AAWD,MAAM,UAAU,mBAAmB,CAAC,IAAY;IAC9C,OAAO,IAAI,CAAC,iBAAiB,EAAE,IAAI,iBAAiB,CAAC;AACvD,CAAC","sourcesContent":["import {\n  BrushElementModel,\n  ConnectorElementModel,\n  GroupElementModel,\n  ShapeElementModel,\n  TextElementModel,\n} from '@blocksuite/affine-model';\n\nimport { SurfaceElementModel } from './base.js';\nimport { MindmapElementModel } from './mindmap.js';\n\nexport const elementsCtorMap = {\n  group: GroupElementModel,\n  connector: ConnectorElementModel,\n  shape: ShapeElementModel,\n  brush: BrushElementModel,\n  text: TextElementModel,\n  mindmap: MindmapElementModel,\n};\n\nexport {\n  BrushElementModel,\n  ConnectorElementModel,\n  GroupElementModel,\n  MindmapElementModel,\n  ShapeElementModel,\n  SurfaceElementModel,\n  TextElementModel,\n};\n\nexport enum CanvasElementType {\n  BRUSH = 'brush',\n  CONNECTOR = 'connector',\n  GROUP = 'group',\n  MINDMAP = 'mindmap',\n  SHAPE = 'shape',\n  TEXT = 'text',\n}\n\nexport type ElementModelMap = {\n  ['shape']: ShapeElementModel;\n  ['brush']: BrushElementModel;\n  ['connector']: ConnectorElementModel;\n  ['text']: TextElementModel;\n  ['group']: GroupElementModel;\n  ['mindmap']: MindmapElementModel;\n};\n\nexport function isCanvasElementType(type: string): type is CanvasElementType {\n  return type.toLocaleUpperCase() in CanvasElementType;\n}\n"]}