{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../src/renderer/elements/group/utils.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,UAAU,EAAE,MAAM,0BAA0B,CAAC;AACtD,OAAO,EAAE,KAAK,EAAE,MAAM,0BAA0B,CAAC;AAEjD,OAAO,EACL,aAAa,EACb,aAAa,EACb,YAAY,EACZ,mBAAmB,GACpB,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EACL,gBAAgB,EAChB,qBAAqB,EACrB,kBAAkB,EAClB,mBAAmB,GACpB,MAAM,aAAa,CAAC;AAErB,MAAM,UAAU,iBAAiB,CAAC,KAAwB,EAAE,IAAY;IACtE,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC;IACzC,MAAM,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;IACrC,MAAM,SAAS,GAAG,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC3C,MAAM,UAAU,GAAG,aAAa,CAC9B,gBAAgB,EAChB,qBAAqB,GAAG,IAAI,EAC5B,QAAQ,CACT,CAAC;IACF,MAAM,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC;IACjC,MAAM,OAAO,GAAG;QACd,mBAAmB,CAAC,CAAC,CAAC,GAAG,IAAI;QAC7B,mBAAmB,CAAC,CAAC,CAAC,GAAG,IAAI;KAC9B,CAAC;IACF,MAAM,MAAM,GAAG,kBAAkB,GAAG,IAAI,CAAC;IAEzC,IAAI,UAAU,GAAG,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC5C,MAAM,WAAW,GAAG,UAAU,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAEhD,IAAI,UAAU,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC;QACzB,IAAI,GAAG,mBAAmB,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;QACrD,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7C,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC;IACvB,CAAC;IAED,OAAO;QACL,IAAI;QACJ,KAAK;QACL,IAAI;QACJ,UAAU;QACV,WAAW;QACX,MAAM;QACN,UAAU;QACV,OAAO;QACP,UAAU,EAAE,IAAI,KAAK,CACnB,KAAK,CAAC,CAAC,EACP,KAAK,CAAC,CAAC,GAAG,WAAW,GAAG,MAAM,EAC9B,UAAU,EACV,WAAW,CACZ;KACF,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,UAAU,CAAC,KAAwB,EAAE,IAAY;IAC/D,MAAM,EAAE,UAAU,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAE1E,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,WAAW,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;AAC5E,CAAC;AAED,SAAS,iBAAiB,CAAC,IAAY;IACrC,MAAM,QAAQ,GAAG,qBAAqB,GAAG,IAAI,CAAC;IAC9C,MAAM,IAAI,GAAG,aAAa,CAAC;QACzB,QAAQ;QACR,UAAU,EAAE,gBAAgB;QAC5B,UAAU,EAAE,UAAU,CAAC,OAAO;QAC9B,SAAS,EAAE,QAAQ;KACpB,CAAC,CAAC;IAEH,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["import type { GroupElementModel } from '@lumensuite/affine-model';\n\nimport { FontWeight } from '@lumensuite/affine-model';\nimport { Bound } from '@lumensuite/global/utils';\n\nimport {\n  getFontString,\n  getLineHeight,\n  getLineWidth,\n  truncateTextByWidth,\n} from '../text/utils.js';\nimport {\n  GROUP_TITLE_FONT,\n  GROUP_TITLE_FONT_SIZE,\n  GROUP_TITLE_OFFSET,\n  GROUP_TITLE_PADDING,\n} from './consts.js';\n\nexport function titleRenderParams(group: GroupElementModel, zoom: number) {\n  let text = group.title.toString().trim();\n  const font = getGroupTitleFont(zoom);\n  const lineWidth = getLineWidth(text, font);\n  const lineHeight = getLineHeight(\n    GROUP_TITLE_FONT,\n    GROUP_TITLE_FONT_SIZE / zoom,\n    'normal'\n  );\n  const bound = group.elementBound;\n  const padding = [\n    GROUP_TITLE_PADDING[0] / zoom,\n    GROUP_TITLE_PADDING[1] / zoom,\n  ];\n  const offset = GROUP_TITLE_OFFSET / zoom;\n\n  let titleWidth = lineWidth + padding[0] * 2;\n  const titleHeight = lineHeight + padding[1] * 2;\n\n  if (titleWidth > bound.w) {\n    text = truncateTextByWidth(text, font, bound.w - 10);\n    text = text.slice(0, text.length - 1) + '..';\n    titleWidth = bound.w;\n  }\n\n  return {\n    font,\n    bound,\n    text,\n    titleWidth,\n    titleHeight,\n    offset,\n    lineHeight,\n    padding,\n    titleBound: new Bound(\n      bound.x,\n      bound.y - titleHeight - offset,\n      titleWidth,\n      titleHeight\n    ),\n  };\n}\n\nexport function titleBound(group: GroupElementModel, zoom: number) {\n  const { titleWidth, titleHeight, bound } = titleRenderParams(group, zoom);\n\n  return new Bound(bound.x, bound.y - titleHeight, titleWidth, titleHeight);\n}\n\nfunction getGroupTitleFont(zoom: number) {\n  const fontSize = GROUP_TITLE_FONT_SIZE / zoom;\n  const font = getFontString({\n    fontSize,\n    fontFamily: GROUP_TITLE_FONT,\n    fontWeight: FontWeight.Regular,\n    fontStyle: 'normal',\n  });\n\n  return font;\n}\n"]}