{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/renderer/elements/connector/index.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  type ConnectorElementModel,\n  ConnectorMode,\n  type LocalConnectorElementModel,\n  type PointStyle,\n} from '@lumensuite/affine-model';\nimport {\n  getBezierParameters,\n  type PointLocation,\n} from '@lumensuite/global/utils';\n\nimport type { RoughCanvas } from '../../../utils/rough/canvas.js';\nimport type { CanvasRenderer } from '../../canvas-renderer.js';\n\nimport { isConnectorWithLabel } from '../../../element-model/utils/connector.js';\nimport {\n  deltaInsertsToChunks,\n  getFontString,\n  getLineHeight,\n  getTextWidth,\n  isRTL,\n  type TextDelta,\n  wrapTextDeltas,\n} from '../text/utils.js';\nimport {\n  DEFAULT_ARROW_SIZE,\n  getArrowOptions,\n  renderArrow,\n  renderCircle,\n  renderDiamond,\n  renderTriangle,\n} from './utils.js';\n\nexport function connector(\n  model: ConnectorElementModel | LocalConnectorElementModel,\n  ctx: CanvasRenderingContext2D,\n  matrix: DOMMatrix,\n  renderer: CanvasRenderer,\n  rc: RoughCanvas\n) {\n  const {\n    mode,\n    path: points,\n    strokeStyle,\n    frontEndpointStyle,\n    rearEndpointStyle,\n    strokeWidth,\n  } = model;\n\n  // points might not be build yet in some senarios\n  // eg. undo/redo, copy/paste\n  if (!points.length || points.length < 2) {\n    return;\n  }\n\n  ctx.setTransform(matrix);\n\n  const hasLabel = isConnectorWithLabel(model);\n  let dx = 0;\n  let dy = 0;\n\n  if (hasLabel) {\n    ctx.save();\n\n    const { deserializedXYWH, labelXYWH } = model as ConnectorElementModel;\n    const [x, y, w, h] = deserializedXYWH;\n    const [lx, ly, lw, lh] = labelXYWH!;\n    const offset = DEFAULT_ARROW_SIZE * strokeWidth;\n\n    dx = lx - x;\n    dy = ly - y;\n\n    const path = new Path2D();\n    path.rect(-offset / 2, -offset / 2, w + offset, h + offset);\n    path.rect(dx - 3 - 0.5, dy - 3 - 0.5, lw + 6 + 1, lh + 6 + 1);\n    ctx.clip(path, 'evenodd');\n  }\n\n  const strokeColor = renderer.getColorValue(model.stroke, '#000000', true);\n\n  renderPoints(\n    model,\n    ctx,\n    rc,\n    points,\n    strokeStyle === 'dash',\n    mode === ConnectorMode.Curve,\n    strokeColor\n  );\n  renderEndpoint(\n    model,\n    points,\n    ctx,\n    rc,\n    'Front',\n    frontEndpointStyle,\n    strokeColor\n  );\n  renderEndpoint(\n    model,\n    points,\n    ctx,\n    rc,\n    'Rear',\n    rearEndpointStyle,\n    strokeColor\n  );\n\n  if (hasLabel) {\n    ctx.restore();\n\n    renderLabel(\n      model as ConnectorElementModel,\n      ctx,\n      matrix.translate(dx, dy),\n      renderer\n    );\n  }\n}\n\nfunction renderPoints(\n  model: ConnectorElementModel | LocalConnectorElementModel,\n  ctx: CanvasRenderingContext2D,\n  rc: RoughCanvas,\n  points: PointLocation[],\n  dash: boolean,\n  curve: boolean,\n  stroke: string\n) {\n  const { seed, strokeWidth, roughness, rough } = model;\n\n  if (rough) {\n    const options = {\n      seed,\n      roughness,\n      stroke,\n      strokeLineDash: dash ? [12, 12] : undefined,\n      strokeWidth,\n    };\n    if (curve) {\n      const b = getBezierParameters(points);\n      rc.path(\n        `M${b[0][0]},${b[0][1]} C${b[1][0]},${b[1][1]} ${b[2][0]},${b[2][1]} ${b[3][0]},${b[3][1]}`,\n        options\n      );\n    } else {\n      rc.linearPath(points as unknown as [number, number][], options);\n    }\n  } else {\n    ctx.save();\n    ctx.strokeStyle = stroke;\n    ctx.lineWidth = strokeWidth;\n    ctx.lineJoin = 'round';\n    ctx.lineCap = 'round';\n    dash && ctx.setLineDash([12, 12]);\n    ctx.beginPath();\n    if (curve) {\n      points.forEach((point, index) => {\n        if (index === 0) {\n          ctx.moveTo(point[0], point[1]);\n        } else {\n          const last = points[index - 1];\n          ctx.bezierCurveTo(\n            last.absOut[0],\n            last.absOut[1],\n            point.absIn[0],\n            point.absIn[1],\n            point[0],\n            point[1]\n          );\n        }\n      });\n    } else {\n      points.forEach((point, index) => {\n        if (index === 0) {\n          ctx.moveTo(point[0], point[1]);\n        } else {\n          ctx.lineTo(point[0], point[1]);\n        }\n      });\n    }\n    ctx.stroke();\n    ctx.closePath();\n    ctx.restore();\n  }\n}\n\nfunction renderEndpoint(\n  model: ConnectorElementModel | LocalConnectorElementModel,\n  location: PointLocation[],\n  ctx: CanvasRenderingContext2D,\n  rc: RoughCanvas,\n  end: 'Front' | 'Rear',\n  style: PointStyle,\n  stroke: string\n) {\n  const arrowOptions = getArrowOptions(end, model, stroke);\n\n  switch (style) {\n    case 'Arrow':\n      renderArrow(location, ctx, rc, arrowOptions);\n      break;\n    case 'Triangle':\n      renderTriangle(location, ctx, rc, arrowOptions);\n      break;\n    case 'Circle':\n      renderCircle(location, ctx, rc, arrowOptions);\n      break;\n    case 'Diamond':\n      renderDiamond(location, ctx, rc, arrowOptions);\n      break;\n  }\n}\n\nfunction renderLabel(\n  model: ConnectorElementModel,\n  ctx: CanvasRenderingContext2D,\n  matrix: DOMMatrix,\n  renderer: CanvasRenderer\n) {\n  const {\n    text,\n    labelXYWH,\n    labelStyle: {\n      color,\n      fontSize,\n      fontWeight,\n      fontStyle,\n      fontFamily,\n      textAlign,\n    },\n    labelConstraints: { hasMaxWidth, maxWidth },\n  } = model;\n  const font = getFontString({\n    fontStyle,\n    fontWeight,\n    fontSize,\n    fontFamily,\n  });\n  const [, , w, h] = labelXYWH!;\n  const cx = w / 2;\n  const cy = h / 2;\n  const deltas = wrapTextDeltas(text!, font, w);\n  const lines = deltaInsertsToChunks(deltas);\n  const lineHeight = getLineHeight(fontFamily, fontSize, fontWeight);\n  const textHeight = (lines.length - 1) * lineHeight * 0.5;\n\n  ctx.setTransform(matrix);\n\n  ctx.font = font;\n  ctx.textAlign = textAlign;\n  ctx.textBaseline = 'middle';\n  ctx.fillStyle = renderer.getColorValue(color, '#000000', true);\n\n  let textMaxWidth = textAlign === 'center' ? 0 : getMaxTextWidth(lines, font);\n  if (hasMaxWidth && maxWidth > 0) {\n    textMaxWidth = Math.min(textMaxWidth, textMaxWidth);\n  }\n\n  for (const [index, line] of lines.entries()) {\n    for (const delta of line) {\n      const str = delta.insert;\n      const rtl = isRTL(str);\n      const shouldTemporarilyAttach = rtl && !ctx.canvas.isConnected;\n      if (shouldTemporarilyAttach) {\n        // to correctly render RTL text mixed with LTR, we have to append it\n        // to the DOM\n        document.body.append(ctx.canvas);\n      }\n\n      ctx.canvas.setAttribute('dir', rtl ? 'rtl' : 'ltr');\n\n      const x =\n        textMaxWidth *\n        (textAlign === 'center'\n          ? 1\n          : textAlign === 'right'\n            ? rtl\n              ? -0.5\n              : 0.5\n            : rtl\n              ? 0.5\n              : -0.5);\n      ctx.fillText(str, x + cx, index * lineHeight - textHeight + cy);\n\n      if (shouldTemporarilyAttach) {\n        ctx.canvas.remove();\n      }\n    }\n  }\n}\n\nfunction getMaxTextWidth(lines: TextDelta[][], font: string) {\n  return Math.max(\n    ...lines.flatMap(line =>\n      line.map(delta => getTextWidth(delta.insert, font))\n    )\n  );\n}\n"]}