{"version":3,"file":"rect.js","sourceRoot":"","sources":["../../../../src/renderer/elements/shape/rect.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ShapeElementModel } from '@blocksuite/affine-model';\n\nimport type { RoughCanvas } from '../../../utils/rough/canvas.js';\nimport type { CanvasRenderer } from '../../canvas-renderer.js';\n\nimport { type Colors, drawGeneralShape } from './utils.js';\n\n/**\n * \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf)\n */\nconst K_RECT = 1 - 0.5522847498;\n\nexport function rect(\n  model: ShapeElementModel,\n  ctx: CanvasRenderingContext2D,\n  matrix: DOMMatrix,\n  renderer: CanvasRenderer,\n  rc: RoughCanvas,\n  colors: Colors\n) {\n  const {\n    filled,\n    radius,\n    rotate,\n    roughness,\n    seed,\n    shapeStyle,\n    strokeStyle,\n    strokeWidth,\n  } = model;\n  const [, , w, h] = model.deserializedXYWH;\n  const renderOffset = Math.max(strokeWidth, 0) / 2;\n  const renderWidth = w - renderOffset * 2;\n  const renderHeight = h - renderOffset * 2;\n  const r =\n    radius < 1 ? Math.min(renderWidth * radius, renderHeight * radius) : radius;\n  const cx = renderWidth / 2;\n  const cy = renderHeight / 2;\n\n  const { fillColor, strokeColor } = colors;\n\n  ctx.setTransform(\n    matrix\n      .translateSelf(renderOffset, renderOffset)\n      .translateSelf(cx, cy)\n      .rotateSelf(rotate)\n      .translateSelf(-cx, -cy)\n  );\n\n  if (shapeStyle === 'General') {\n    drawGeneralShape(ctx, model, renderer, filled, fillColor, strokeColor);\n  } else {\n    rc.path(\n      `\n      M ${r} 0\n      L ${renderWidth - r} 0\n      C ${renderWidth - K_RECT * r} 0 ${renderWidth} ${\n        K_RECT * r\n      } ${renderWidth} ${r}\n      L ${renderWidth} ${renderHeight - r}\n      C ${renderWidth} ${renderHeight - K_RECT * r} ${\n        renderWidth - K_RECT * r\n      } ${renderHeight} ${renderWidth - r} ${renderHeight}\n      L ${r} ${renderHeight}\n      C ${K_RECT * r} ${renderHeight} 0 ${renderHeight - K_RECT * r} 0 ${\n        renderHeight - r\n      }\n      L 0 ${r}\n      C 0 ${K_RECT * r} ${K_RECT * r} 0 ${r} 0\n      Z\n      `,\n      {\n        seed,\n        roughness,\n        strokeLineDash: strokeStyle === 'dash' ? [12, 12] : undefined,\n        stroke: strokeStyle === 'none' ? 'none' : strokeColor,\n        strokeWidth,\n        fill: filled ? fillColor : undefined,\n      }\n    );\n  }\n\n  ctx.setTransform(\n    ctx\n      .getTransform()\n      .translateSelf(cx, cy)\n      .rotateSelf(-rotate)\n      .translateSelf(-cx, -cy)\n      .translateSelf(-renderOffset, -renderOffset)\n      .translateSelf(cx, cy)\n      .rotateSelf(rotate)\n      .translateSelf(-cx, -cy)\n  );\n}\n"]}