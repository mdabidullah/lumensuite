{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../src/renderer/elements/shape/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  ShapeElementModel,\n  TextAlign,\n  TextVerticalAlign,\n} from '@blocksuite/affine-model';\nimport type { Bound, SerializedXYWH } from '@blocksuite/global/utils';\n\nimport type { CanvasRenderer } from '../../canvas-renderer.js';\n\nimport {\n  deltaInsertsToChunks,\n  getFontString,\n  getLineHeight,\n  getLineWidth,\n  getTextWidth,\n  measureTextInDOM,\n  type TextDelta,\n  wrapText,\n  wrapTextDeltas,\n} from '../text/utils.js';\n\nexport type Colors = {\n  color: string;\n  fillColor: string;\n  strokeColor: string;\n};\n\nexport function drawGeneralShape(\n  ctx: CanvasRenderingContext2D,\n  shapeModel: ShapeElementModel,\n  renderer: CanvasRenderer,\n  filled: boolean,\n  fillColor: string,\n  strokeColor: string\n) {\n  const sizeOffset = Math.max(shapeModel.strokeWidth, 0);\n  const w = Math.max(shapeModel.w - sizeOffset, 0);\n  const h = Math.max(shapeModel.h - sizeOffset, 0);\n\n  switch (shapeModel.shapeType) {\n    case 'rect':\n      drawRect(ctx, 0, 0, w, h, shapeModel.radius ?? 0);\n      break;\n    case 'diamond':\n      drawDiamond(ctx, 0, 0, w, h);\n      break;\n    case 'ellipse':\n      drawEllipse(ctx, 0, 0, w, h);\n      break;\n    case 'triangle':\n      drawTriangle(ctx, 0, 0, w, h);\n  }\n\n  ctx.lineWidth = shapeModel.strokeWidth;\n  ctx.strokeStyle = strokeColor;\n  ctx.fillStyle = filled ? fillColor : 'transparent';\n\n  switch (shapeModel.strokeStyle) {\n    case 'none':\n      ctx.strokeStyle = 'transparent';\n      break;\n    case 'dash':\n      ctx.setLineDash([12, 12]);\n      break;\n  }\n\n  if (shapeModel.shadow) {\n    const { blur, offsetX, offsetY, color } = shapeModel.shadow;\n    const scale = ctx.getTransform().a;\n\n    ctx.shadowBlur = blur * scale;\n    ctx.shadowOffsetX = offsetX * scale;\n    ctx.shadowOffsetY = offsetY * scale;\n    ctx.shadowColor = renderer.getPropertyValue(color);\n  }\n\n  ctx.stroke();\n  ctx.fill();\n\n  if (shapeModel.shadow) {\n    ctx.shadowBlur = 0;\n    ctx.shadowOffsetX = 0;\n    ctx.shadowOffsetY = 0;\n  }\n\n  ctx.fill();\n  ctx.stroke();\n}\n\nfunction drawRect(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  radius: number\n) {\n  const r =\n    radius < 1\n      ? Math.max(Math.min(width * radius, height * radius), 0)\n      : radius;\n  ctx.beginPath();\n  ctx.moveTo(x + r, y);\n  ctx.lineTo(x + width - r, y);\n  ctx.arcTo(x + width, y, x + width, y + r, r);\n  ctx.lineTo(x + width, y + height - r);\n  ctx.arcTo(x + width, y + height, x + width - r, y + height, r);\n  ctx.lineTo(x + r, y + height);\n  ctx.arcTo(x, y + height, x, y + height - r, r);\n  ctx.lineTo(x, y + r);\n  ctx.arcTo(x, y, x + r, y, r);\n  ctx.closePath();\n}\n\nfunction drawDiamond(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number\n) {\n  ctx.beginPath();\n  ctx.moveTo(width / 2, y);\n  ctx.lineTo(width, height / 2);\n  ctx.lineTo(width / 2, height);\n  ctx.lineTo(x, height / 2);\n  ctx.closePath();\n}\n\nfunction drawEllipse(\n  ctx: CanvasRenderingContext2D,\n  _x: number,\n  _y: number,\n  width: number,\n  height: number\n) {\n  const cx = width / 2;\n  const cy = height / 2;\n  ctx.beginPath();\n  ctx.ellipse(cx, cy, width / 2, height / 2, 0, 0, 2 * Math.PI);\n  ctx.closePath();\n}\n\nfunction drawTriangle(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number\n) {\n  ctx.beginPath();\n  ctx.moveTo(width / 2, y);\n  ctx.lineTo(width, height);\n  ctx.lineTo(x, height);\n  ctx.closePath();\n}\n\nexport function horizontalOffset(\n  width: number,\n  textAlign: TextAlign,\n  horiPadding: number\n) {\n  return textAlign === 'center'\n    ? width / 2\n    : textAlign === 'right'\n      ? width - horiPadding\n      : horiPadding;\n}\n\nexport function verticalOffset(\n  lines: TextDelta[][],\n  lineHeight: number,\n  height: number,\n  textVerticalAlign: TextVerticalAlign,\n  verticalPadding: number\n) {\n  return textVerticalAlign === 'center'\n    ? Math.max((height - lineHeight * lines.length) / 2, verticalPadding)\n    : textVerticalAlign === 'top'\n      ? verticalPadding\n      : height - lineHeight * lines.length - verticalPadding;\n}\nexport function normalizeShapeBound(\n  shape: ShapeElementModel,\n  bound: Bound\n): Bound {\n  if (!shape.text) return bound;\n\n  const [verticalPadding, horiPadding] = shape.padding;\n  const yText = shape.text;\n  const { fontFamily, fontSize, fontStyle, fontWeight } = shape;\n  const lineHeight = getLineHeight(fontFamily, fontSize, fontWeight);\n  const font = getFontString({\n    fontStyle,\n    fontWeight,\n    fontSize,\n    fontFamily,\n  });\n  const widestCharWidth =\n    [...yText.toString()]\n      .map(char => getTextWidth(char, font))\n      .sort((a, b) => a - b)\n      .pop() ?? getTextWidth('W', font);\n\n  if (bound.w < widestCharWidth + horiPadding * 2) {\n    bound.w = widestCharWidth + horiPadding * 2;\n  }\n  const deltas: TextDelta[] = (yText.toDelta() as TextDelta[]).flatMap(\n    delta => ({\n      insert: wrapText(delta.insert, font, bound.w - horiPadding * 2),\n      attributes: delta.attributes,\n    })\n  ) as TextDelta[];\n  const lines = deltaInsertsToChunks(deltas);\n\n  if (bound.h < lineHeight * lines.length + verticalPadding * 2) {\n    bound.h = lineHeight * lines.length + verticalPadding * 2;\n  }\n\n  return bound;\n}\n\nexport function fitContent(shape: ShapeElementModel) {\n  const font = getFontString(shape);\n\n  if (!shape.text) {\n    return;\n  }\n\n  const [verticalPadding, horiPadding] = shape.padding;\n  const lines = deltaInsertsToChunks(\n    wrapTextDeltas(shape.text, font, shape.maxWidth || Number.MAX_SAFE_INTEGER)\n  );\n  const { lineHeight, lineGap } = measureTextInDOM(\n    shape.fontFamily,\n    shape.fontSize,\n    shape.fontWeight\n  );\n  let maxWidth = 0;\n  let height = 0;\n\n  lines.forEach(line => {\n    for (const delta of line) {\n      const str = delta.insert;\n\n      maxWidth = Math.max(maxWidth, getLineWidth(str, font));\n      height += lineHeight + lineGap;\n    }\n  });\n\n  height = Math.max(lineHeight + lineGap, height);\n\n  maxWidth += horiPadding * 2;\n  height += verticalPadding * 2;\n\n  const newXYWH = `[${shape.x},${shape.y},${maxWidth},${height}]`;\n\n  if (shape.xywh !== newXYWH) {\n    shape.xywh = newXYWH as SerializedXYWH;\n  }\n}\n"]}