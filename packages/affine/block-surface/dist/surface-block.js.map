{"version":3,"file":"surface-block.js","sourceRoot":"","sources":["../src/surface-block.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Color } from '@lumensuite/affine-model';\nimport type { EditorHost, SurfaceSelection } from '@lumensuite/block-std';\nimport type { Slot } from '@lumensuite/global/utils';\n\nimport { ThemeObserver } from '@lumensuite/affine-shared/theme';\nimport { BlockComponent, RANGE_SYNC_EXCLUDE_ATTR } from '@lumensuite/block-std';\nimport {\n  GfxControllerIdentifier,\n  type Viewport,\n} from '@lumensuite/block-std/gfx';\nimport { Bound, values } from '@lumensuite/global/utils';\nimport { css, html } from 'lit';\nimport { customElement, query } from 'lit/decorators.js';\n\nimport type { Overlay } from './renderer/canvas-renderer.js';\nimport type { ElementRenderer } from './renderer/elements/index.js';\nimport type { SurfaceBlockModel } from './surface-model.js';\nimport type { SurfaceBlockService } from './surface-service.js';\n\nimport { ConnectorElementModel } from './element-model/index.js';\nimport { CanvasRenderer } from './renderer/canvas-renderer.js';\n\nexport interface SurfaceContext {\n  viewport: Viewport;\n  host: EditorHost;\n  overlays: Record<string, Overlay>;\n  elementRenderers: Record<string, ElementRenderer>;\n  selection: {\n    selectedIds: string[];\n    slots: {\n      updated: Slot<SurfaceSelection[]>;\n    };\n  };\n}\n\n@customElement('affine-surface')\nexport class SurfaceBlockComponent extends BlockComponent<\n  SurfaceBlockModel,\n  SurfaceBlockService\n> {\n  static isConnector = (element: unknown): element is ConnectorElementModel => {\n    return element instanceof ConnectorElementModel;\n  };\n\n  static override styles = css`\n    .affine-edgeless-surface-block-container {\n      width: 100%;\n      height: 100%;\n    }\n\n    .affine-edgeless-surface-block-container canvas {\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      position: absolute;\n      z-index: 1;\n      pointer-events: none;\n      transform-origin: 0 0;\n      transform: var(--canvas-transform);\n    }\n\n    edgeless-block-portal-container {\n      position: relative;\n      box-sizing: border-box;\n      overflow: hidden;\n      display: block;\n      height: 100%;\n      font-family: var(--affine-font-family);\n      font-size: var(--affine-font-base);\n      line-height: var(--affine-line-height);\n      color: var(--affine-text-primary-color);\n      font-weight: 400;\n    }\n\n    .affine-block-children-container.edgeless {\n      padding-left: 0;\n      position: relative;\n      overflow: hidden;\n      height: 100%;\n      /**\n       * Fix: pointerEvent stops firing after a short time.\n       * When a gesture is started, the browser intersects the touch-action values of the touched element and its ancestors,\n       * up to the one that implements the gesture (in other words, the first containing scrolling element)\n       * https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action\n       */\n      touch-action: none;\n      background-color: var(--affine-background-primary-color);\n      background-image: radial-gradient(\n        var(--affine-edgeless-grid-color) 1px,\n        var(--affine-background-primary-color) 1px\n      );\n      z-index: 0;\n    }\n\n    .affine-edgeless-block-child {\n      position: absolute;\n      transform-origin: center;\n      box-sizing: border-box;\n      border: 2px solid var(--affine-white-10);\n      border-radius: 8px;\n      box-shadow: var(--affine-shadow-3);\n      pointer-events: all;\n    }\n  `;\n\n  private _cachedViewport = new Bound();\n\n  private _initCanvasTransform = () => {\n    const refresh = () => {\n      this._surfaceContainer.style.setProperty(\n        '--canvas-transform',\n        this._getReversedTransform()\n      );\n    };\n\n    this._disposables.add(\n      this._gfx.viewport.viewportUpdated.on(() => {\n        refresh();\n      })\n    );\n\n    refresh();\n  };\n\n  private _initThemeObserver = () => {\n    this.disposables.add(ThemeObserver.subscribe(() => this.requestUpdate()));\n  };\n\n  private _lastTime = 0;\n\n  private _renderer!: CanvasRenderer;\n\n  fitToViewport = (bound: Bound) => {\n    const { viewport } = this._gfx;\n    bound = bound.expand(30);\n    if (Date.now() - this._lastTime > 200)\n      this._cachedViewport = viewport.viewportBounds;\n    this._lastTime = Date.now();\n\n    if (this._cachedViewport.contains(bound)) return;\n\n    this._cachedViewport = this._cachedViewport.unite(bound);\n    viewport.setViewportByBound(this._cachedViewport, [0, 0, 0, 0], true);\n  };\n\n  refresh = () => {\n    this._renderer?.refresh();\n  };\n\n  private get _edgelessService() {\n    return this.std.getService('affine:page') as unknown as SurfaceContext;\n  }\n\n  private get _gfx() {\n    return this.std.get(GfxControllerIdentifier);\n  }\n\n  get renderer() {\n    return this._renderer;\n  }\n\n  private _getReversedTransform() {\n    const { translateX, translateY, zoom } = this._gfx.viewport;\n\n    return `scale(${1 / zoom}) translate(${-translateX}px, ${-translateY}px)`;\n  }\n\n  private _initOverlays() {\n    values(this._edgelessService.overlays).forEach(overlay => {\n      this._renderer.addOverlay(overlay);\n    });\n  }\n\n  private _initRenderer() {\n    const gfx = this._gfx;\n\n    this._renderer = new CanvasRenderer({\n      viewport: gfx.viewport,\n      layerManager: gfx.layer,\n      gridManager: gfx.grid,\n      enableStackingCanvas: true,\n      provider: {\n        generateColorProperty: (color: Color, fallback: string) =>\n          ThemeObserver.generateColorProperty(color, fallback),\n        getColorValue: (color: Color, fallback?: string, real?: boolean) =>\n          ThemeObserver.getColorValue(color, fallback, real),\n        getColorScheme: () => ThemeObserver.mode,\n        getPropertyValue: (property: string) =>\n          ThemeObserver.getPropertyValue(property),\n        selectedElements: () => this._edgelessService.selection.selectedIds,\n      },\n      onStackingCanvasCreated(canvas) {\n        canvas.className = 'indexable-canvas';\n      },\n      elementRenderers: this._edgelessService.elementRenderers,\n    });\n\n    this._disposables.add(\n      this.model.elementUpdated.on(payload => {\n        // ignore externalXYWH update cause it's updated by the renderer\n        if (payload.props['externalXYWH']) return;\n        this._renderer.refresh();\n      })\n    );\n    this._disposables.add(\n      this.model.elementAdded.on(() => {\n        this._renderer.refresh();\n      })\n    );\n    this._disposables.add(\n      this.model.elementRemoved.on(() => {\n        this._renderer.refresh();\n      })\n    );\n    this._disposables.add(() => {\n      this._renderer.dispose();\n    });\n    this._disposables.add(\n      this._renderer.stackingCanvasUpdated.on(payload => {\n        if (payload.added.length) {\n          this._surfaceContainer.append(...payload.added);\n        }\n\n        if (payload.removed.length) {\n          payload.removed.forEach(canvas => {\n            canvas.remove();\n          });\n        }\n      })\n    );\n    this._disposables.add(\n      this._edgelessService.selection.slots.updated.on(() => {\n        this._renderer.refresh();\n      })\n    );\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n\n    this.setAttribute(RANGE_SYNC_EXCLUDE_ATTR, 'true');\n\n    this._initThemeObserver();\n    this._initRenderer();\n    this._initOverlays();\n  }\n\n  override firstUpdated() {\n    this._renderer.attach(this._surfaceContainer);\n    this._surfaceContainer.append(...this._renderer.stackingCanvas);\n    this._initCanvasTransform();\n  }\n\n  override render() {\n    return html`\n      <div class=\"affine-edgeless-surface-block-container\">\n        <!-- attach canvas later in renderer -->\n      </div>\n    `;\n  }\n\n  @query('.affine-edgeless-surface-block-container')\n  private accessor _surfaceContainer!: HTMLElement;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'affine-surface': SurfaceBlockComponent;\n  }\n}\n"]}