{"version":3,"file":"hatch-filler.js","sourceRoot":"","sources":["../../../../src/utils/rough/fillers/hatch-filler.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAEpD,MAAM,OAAO,WAAY,SAAQ,aAAa;IACnC,YAAY,CAAC,WAAsB,EAAE,CAAkB;QAC9D,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAC/C,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,YAAY,EAAE,CAAC,CAAC,YAAY,GAAG,EAAE,EAAE,CAAC,CAAC;QACvE,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;QACjD,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnC,OAAO,GAAG,CAAC;IACb,CAAC;CACF","sourcesContent":["import type { OpSet, ResolvedOptions } from '../core.js';\nimport type { Point } from '../geometry.js';\n\nimport { HachureFiller } from './hachure-filler.js';\n\nexport class HatchFiller extends HachureFiller {\n  override fillPolygons(polygonList: Point[][], o: ResolvedOptions): OpSet {\n    const set = this._fillPolygons(polygonList, o);\n    const o2 = Object.assign({}, o, { hachureAngle: o.hachureAngle + 90 });\n    const set2 = this._fillPolygons(polygonList, o2);\n    set.ops = set.ops.concat(set2.ops);\n    return set;\n  }\n}\n"]}