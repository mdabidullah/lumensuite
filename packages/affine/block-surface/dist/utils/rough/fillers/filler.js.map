{"version":3,"file":"filler.js","sourceRoot":"","sources":["../../../../src/utils/rough/fillers/filler.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AAClD,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAC;AAChD,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AAClD,OAAO,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AAE3D,MAAM,OAAO,GAAkC,EAAE,CAAC;AAElD,MAAM,UAAU,SAAS,CACvB,CAAkB,EAClB,MAAoB;IAEpB,IAAI,UAAU,GAAG,CAAC,CAAC,SAAS,IAAI,SAAS,CAAC;IAC1C,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;QACzB,QAAQ,UAAU,EAAE,CAAC;YACnB,KAAK,QAAQ;gBACX,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;oBACzB,OAAO,CAAC,UAAU,CAAC,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;gBACjD,CAAC;gBACD,MAAM;YACR,KAAK,aAAa;gBAChB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;oBACzB,OAAO,CAAC,UAAU,CAAC,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC;gBAChD,CAAC;gBACD,MAAM;YACR,KAAK,MAAM;gBACT,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;oBACzB,OAAO,CAAC,UAAU,CAAC,GAAG,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC;gBAC9C,CAAC;gBACD,MAAM;YACR,KAAK,QAAQ;gBACX,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;oBACzB,OAAO,CAAC,UAAU,CAAC,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;gBACjD,CAAC;gBACD,MAAM;YACR,KAAK,aAAa;gBAChB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;oBACzB,OAAO,CAAC,UAAU,CAAC,GAAG,IAAI,gBAAgB,CAAC,MAAM,CAAC,CAAC;gBACrD,CAAC;gBACD,MAAM;YACR,KAAK,SAAS,CAAC;YACf;gBACE,UAAU,GAAG,SAAS,CAAC;gBACvB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;oBACzB,OAAO,CAAC,UAAU,CAAC,GAAG,IAAI,aAAa,CAAC,MAAM,CAAC,CAAC;gBAClD,CAAC;gBACD,MAAM;QACV,CAAC;IACH,CAAC;IACD,OAAO,OAAO,CAAC,UAAU,CAAC,CAAC;AAC7B,CAAC","sourcesContent":["import type { ResolvedOptions } from '../core.js';\nimport type { PatternFiller, RenderHelper } from './filler-interface.js';\n\nimport { DashedFiller } from './dashed-filler.js';\nimport { DotFiller } from './dot-filler.js';\nimport { HachureFiller } from './hachure-filler.js';\nimport { HatchFiller } from './hatch-filler.js';\nimport { ZigZagFiller } from './zigzag-filler.js';\nimport { ZigZagLineFiller } from './zigzag-line-filler.js';\n\nconst fillers: Record<string, PatternFiller> = {};\n\nexport function getFiller(\n  o: ResolvedOptions,\n  helper: RenderHelper\n): PatternFiller {\n  let fillerName = o.fillStyle || 'hachure';\n  if (!fillers[fillerName]) {\n    switch (fillerName) {\n      case 'zigzag':\n        if (!fillers[fillerName]) {\n          fillers[fillerName] = new ZigZagFiller(helper);\n        }\n        break;\n      case 'cross-hatch':\n        if (!fillers[fillerName]) {\n          fillers[fillerName] = new HatchFiller(helper);\n        }\n        break;\n      case 'dots':\n        if (!fillers[fillerName]) {\n          fillers[fillerName] = new DotFiller(helper);\n        }\n        break;\n      case 'dashed':\n        if (!fillers[fillerName]) {\n          fillers[fillerName] = new DashedFiller(helper);\n        }\n        break;\n      case 'zigzag-line':\n        if (!fillers[fillerName]) {\n          fillers[fillerName] = new ZigZagLineFiller(helper);\n        }\n        break;\n      case 'hachure':\n      default:\n        fillerName = 'hachure';\n        if (!fillers[fillerName]) {\n          fillers[fillerName] = new HachureFiller(helper);\n        }\n        break;\n    }\n  }\n  return fillers[fillerName];\n}\n"]}