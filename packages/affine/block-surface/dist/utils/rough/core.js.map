{"version":3,"file":"core.js","sourceRoot":"","sources":["../../../src/utils/rough/core.ts"],"names":[],"mappings":"AAGA,MAAM,CAAC,MAAM,KAAK,GAAG,4BAA4B,CAAC","sourcesContent":["import type { Point } from './geometry.js';\nimport type { Random } from './math.js';\n\nexport const SVGNS = 'http://www.w3.org/2000/svg';\n\nexport interface Config {\n  options?: Options;\n}\n\nexport interface DrawingSurface {\n  width: number | SVGAnimatedLength;\n  height: number | SVGAnimatedLength;\n}\n\nexport interface Options {\n  maxRandomnessOffset?: number;\n  roughness?: number;\n  bowing?: number;\n  stroke?: string;\n  strokeWidth?: number;\n  curveFitting?: number;\n  curveTightness?: number;\n  curveStepCount?: number;\n  fill?: string;\n  fillStyle?: string;\n  fillWeight?: number;\n  hachureAngle?: number;\n  hachureGap?: number;\n  simplification?: number;\n  dashOffset?: number;\n  dashGap?: number;\n  zigzagOffset?: number;\n  seed?: number;\n  strokeLineDash?: number[];\n  strokeLineDashOffset?: number;\n  fillLineDash?: number[];\n  fillLineDashOffset?: number;\n  disableMultiStroke?: boolean;\n  disableMultiStrokeFill?: boolean;\n  preserveVertices?: boolean;\n  fixedDecimalPlaceDigits?: number;\n}\n\nexport interface ResolvedOptions extends Options {\n  maxRandomnessOffset: number;\n  roughness: number;\n  bowing: number;\n  stroke: string;\n  strokeWidth: number;\n  curveFitting: number;\n  curveTightness: number;\n  curveStepCount: number;\n  fillStyle: string;\n  fillWeight: number;\n  hachureAngle: number;\n  hachureGap: number;\n  dashOffset: number;\n  dashGap: number;\n  zigzagOffset: number;\n  seed: number;\n  randomizer?: Random;\n  disableMultiStroke: boolean;\n  disableMultiStrokeFill: boolean;\n  preserveVertices: boolean;\n}\n\nexport declare type OpType = 'move' | 'bcurveTo' | 'lineTo';\nexport declare type OpSetType = 'path' | 'fillPath' | 'fillSketch';\n\nexport interface Op {\n  op: OpType;\n  data: number[];\n}\n\nexport interface OpSet {\n  type: OpSetType;\n  ops: Op[];\n  size?: Point;\n  path?: string;\n}\n\nexport interface Drawable {\n  shape: string;\n  options: ResolvedOptions;\n  sets: OpSet[];\n}\n\nexport interface PathInfo {\n  d: string;\n  stroke: string;\n  strokeWidth: number;\n  fill?: string;\n}\n"]}