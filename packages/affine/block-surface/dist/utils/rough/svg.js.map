{"version":3,"file":"svg.js","sourceRoot":"","sources":["../../../src/utils/rough/svg.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  Config,\n  Drawable,\n  OpSet,\n  Options,\n  ResolvedOptions,\n} from './core.js';\nimport type { Point } from './geometry.js';\n\nimport { SVGNS } from './core.js';\nimport { RoughGenerator } from './generator.js';\n\nexport class RoughSVG {\n  private gen: RoughGenerator;\n\n  private svg: SVGSVGElement;\n\n  get generator(): RoughGenerator {\n    return this.gen;\n  }\n\n  constructor(svg: SVGSVGElement, config?: Config) {\n    this.svg = svg;\n    this.gen = new RoughGenerator(config);\n  }\n\n  private fillSketch(\n    doc: Document,\n    drawing: OpSet,\n    o: ResolvedOptions\n  ): SVGPathElement {\n    let fweight = o.fillWeight;\n    if (fweight < 0) {\n      fweight = o.strokeWidth / 2;\n    }\n    const path = doc.createElementNS(SVGNS, 'path');\n    path.setAttribute('d', this.opsToPath(drawing, o.fixedDecimalPlaceDigits));\n    path.setAttribute('stroke', o.fill || '');\n    path.setAttribute('stroke-width', fweight + '');\n    path.setAttribute('fill', 'none');\n    if (o.fillLineDash) {\n      path.setAttribute('stroke-dasharray', o.fillLineDash.join(' ').trim());\n    }\n    if (o.fillLineDashOffset) {\n      path.setAttribute('stroke-dashoffset', `${o.fillLineDashOffset}`);\n    }\n    return path;\n  }\n\n  arc(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    start: number,\n    stop: number,\n    closed = false,\n    options?: Options\n  ): SVGGElement {\n    const d = this.gen.arc(x, y, width, height, start, stop, closed, options);\n    return this.draw(d);\n  }\n\n  circle(\n    x: number,\n    y: number,\n    diameter: number,\n    options?: Options\n  ): SVGGElement {\n    const d = this.gen.circle(x, y, diameter, options);\n    return this.draw(d);\n  }\n\n  curve(points: Point[], options?: Options): SVGGElement {\n    const d = this.gen.curve(points, options);\n    return this.draw(d);\n  }\n\n  draw(drawable: Drawable): SVGGElement {\n    const sets = drawable.sets || [];\n    const o = drawable.options || this.getDefaultOptions();\n    const doc = this.svg.ownerDocument || window.document;\n    const g = doc.createElementNS(SVGNS, 'g');\n    const precision = drawable.options.fixedDecimalPlaceDigits;\n    for (const drawing of sets) {\n      let path = null;\n      switch (drawing.type) {\n        case 'path': {\n          path = doc.createElementNS(SVGNS, 'path');\n          path.setAttribute('d', this.opsToPath(drawing, precision));\n          path.setAttribute('stroke', o.stroke);\n          path.setAttribute('stroke-width', o.strokeWidth + '');\n          path.setAttribute('fill', 'none');\n          if (o.strokeLineDash) {\n            path.setAttribute(\n              'stroke-dasharray',\n              o.strokeLineDash.join(' ').trim()\n            );\n          }\n          if (o.strokeLineDashOffset) {\n            path.setAttribute('stroke-dashoffset', `${o.strokeLineDashOffset}`);\n          }\n          break;\n        }\n        case 'fillPath': {\n          path = doc.createElementNS(SVGNS, 'path');\n          path.setAttribute('d', this.opsToPath(drawing, precision));\n          path.setAttribute('stroke', 'none');\n          path.setAttribute('stroke-width', '0');\n          path.setAttribute('fill', o.fill || '');\n          if (drawable.shape === 'curve' || drawable.shape === 'polygon') {\n            path.setAttribute('fill-rule', 'evenodd');\n          }\n          break;\n        }\n        case 'fillSketch': {\n          path = this.fillSketch(doc, drawing, o);\n          break;\n        }\n      }\n      if (path) {\n        g.append(path);\n      }\n    }\n    return g;\n  }\n\n  ellipse(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    options?: Options\n  ): SVGGElement {\n    const d = this.gen.ellipse(x, y, width, height, options);\n    return this.draw(d);\n  }\n\n  getDefaultOptions(): ResolvedOptions {\n    return this.gen.defaultOptions;\n  }\n\n  line(\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    options?: Options\n  ): SVGGElement {\n    const d = this.gen.line(x1, y1, x2, y2, options);\n    return this.draw(d);\n  }\n\n  linearPath(points: Point[], options?: Options): SVGGElement {\n    const d = this.gen.linearPath(points, options);\n    return this.draw(d);\n  }\n\n  opsToPath(drawing: OpSet, fixedDecimalPlaceDigits?: number): string {\n    return this.gen.opsToPath(drawing, fixedDecimalPlaceDigits);\n  }\n\n  path(d: string, options?: Options): SVGGElement {\n    const drawing = this.gen.path(d, options);\n    return this.draw(drawing);\n  }\n\n  polygon(points: Point[], options?: Options): SVGGElement {\n    const d = this.gen.polygon(points, options);\n    return this.draw(d);\n  }\n\n  rectangle(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    options?: Options\n  ): SVGGElement {\n    const d = this.gen.rectangle(x, y, width, height, options);\n    return this.draw(d);\n  }\n}\n"]}