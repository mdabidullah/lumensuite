{"version":3,"file":"absolutize.js","sourceRoot":"","sources":["../../../src/utils/path-data-parser/absolutize.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Segment } from './parser.js';\n\n// Translate relative commands to absolute commands\nexport function absolutize(segments: Segment[]): Segment[] {\n  let cx = 0,\n    cy = 0;\n  let subx = 0,\n    suby = 0;\n  const out: Segment[] = [];\n  for (const { key, data } of segments) {\n    switch (key) {\n      case 'M':\n        out.push({ key: 'M', data: [...data] });\n        [cx, cy] = data;\n        [subx, suby] = data;\n        break;\n      case 'm':\n        cx += data[0];\n        cy += data[1];\n        out.push({ key: 'M', data: [cx, cy] });\n        subx = cx;\n        suby = cy;\n        break;\n      case 'L':\n        out.push({ key: 'L', data: [...data] });\n        [cx, cy] = data;\n        break;\n      case 'l':\n        cx += data[0];\n        cy += data[1];\n        out.push({ key: 'L', data: [cx, cy] });\n        break;\n      case 'C':\n        out.push({ key: 'C', data: [...data] });\n        cx = data[4];\n        cy = data[5];\n        break;\n      case 'c': {\n        const newdata = data.map((d, i) => (i % 2 ? d + cy : d + cx));\n        out.push({ key: 'C', data: newdata });\n        cx = newdata[4];\n        cy = newdata[5];\n        break;\n      }\n      case 'Q':\n        out.push({ key: 'Q', data: [...data] });\n        cx = data[2];\n        cy = data[3];\n        break;\n      case 'q': {\n        const newdata = data.map((d, i) => (i % 2 ? d + cy : d + cx));\n        out.push({ key: 'Q', data: newdata });\n        cx = newdata[2];\n        cy = newdata[3];\n        break;\n      }\n      case 'A':\n        out.push({ key: 'A', data: [...data] });\n        cx = data[5];\n        cy = data[6];\n        break;\n      case 'a':\n        cx += data[5];\n        cy += data[6];\n        out.push({\n          key: 'A',\n          data: [data[0], data[1], data[2], data[3], data[4], cx, cy],\n        });\n        break;\n      case 'H':\n        out.push({ key: 'H', data: [...data] });\n        cx = data[0];\n        break;\n      case 'h':\n        cx += data[0];\n        out.push({ key: 'H', data: [cx] });\n        break;\n      case 'V':\n        out.push({ key: 'V', data: [...data] });\n        cy = data[0];\n        break;\n      case 'v':\n        cy += data[0];\n        out.push({ key: 'V', data: [cy] });\n        break;\n      case 'S':\n        out.push({ key: 'S', data: [...data] });\n        cx = data[2];\n        cy = data[3];\n        break;\n      case 's': {\n        const newdata = data.map((d, i) => (i % 2 ? d + cy : d + cx));\n        out.push({ key: 'S', data: newdata });\n        cx = newdata[2];\n        cy = newdata[3];\n        break;\n      }\n      case 'T':\n        out.push({ key: 'T', data: [...data] });\n        cx = data[0];\n        cy = data[1];\n        break;\n      case 't':\n        cx += data[0];\n        cy += data[1];\n        out.push({ key: 'T', data: [cx, cy] });\n        break;\n      case 'Z':\n      case 'z':\n        out.push({ key: 'Z', data: [] });\n        cx = subx;\n        cy = suby;\n        break;\n    }\n  }\n  return out;\n}\n"]}