{"version":3,"file":"curve-to-bezier.js","sourceRoot":"","sources":["../../../src/utils/points-on-curve/curve-to-bezier.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Point } from '../rough/geometry.js';\n\nfunction clone(p: Point): Point {\n  return [...p] as Point;\n}\n\nexport function curveToBezier(\n  pointsIn: readonly Point[],\n  curveTightness = 0\n): Point[] {\n  const len = pointsIn.length;\n  if (len < 3) {\n    throw new Error('A curve must have at least three points.');\n  }\n  const out: Point[] = [];\n  if (len === 3) {\n    out.push(\n      clone(pointsIn[0]),\n      clone(pointsIn[1]),\n      clone(pointsIn[2]),\n      clone(pointsIn[2])\n    );\n  } else {\n    const points: Point[] = [];\n    points.push(pointsIn[0], pointsIn[0]);\n    for (let i = 1; i < pointsIn.length; i++) {\n      points.push(pointsIn[i]);\n      if (i === pointsIn.length - 1) {\n        points.push(pointsIn[i]);\n      }\n    }\n    const b: Point[] = [];\n    const s = 1 - curveTightness;\n    out.push(clone(points[0]));\n    for (let i = 1; i + 2 < points.length; i++) {\n      const cachedVertArray = points[i];\n      b[0] = [cachedVertArray[0], cachedVertArray[1]];\n      b[1] = [\n        cachedVertArray[0] + (s * points[i + 1][0] - s * points[i - 1][0]) / 6,\n        cachedVertArray[1] + (s * points[i + 1][1] - s * points[i - 1][1]) / 6,\n      ];\n      b[2] = [\n        points[i + 1][0] + (s * points[i][0] - s * points[i + 2][0]) / 6,\n        points[i + 1][1] + (s * points[i][1] - s * points[i + 2][1]) / 6,\n      ];\n      b[3] = [points[i + 1][0], points[i + 1][1]];\n      out.push(b[1], b[2], b[3]);\n    }\n  }\n  return out;\n}\n"]}