{"version":3,"file":"priority-queue.js","sourceRoot":"","sources":["../../src/utils/priority-queue.ts"],"names":[],"mappings":"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","sourcesContent":["type PriorityQueueNode<T, K> = {\n  value: T;\n  priority: K;\n};\n\nexport class PriorityQueue<T, K> {\n  heap: PriorityQueueNode<T, K>[] = [];\n\n  constructor(private _compare: (a: K, b: K) => number) {}\n\n  bubbleDown(): void {\n    let index = 0;\n    const length = this.heap.length;\n    const element = this.heap[0];\n\n    for (;;) {\n      const leftChildIndex = 2 * index + 1;\n      const rightChildIndex = 2 * index + 2;\n      let swap = -1;\n      let leftChild: PriorityQueueNode<T, K>,\n        rightChild: PriorityQueueNode<T, K>;\n\n      if (leftChildIndex < length) {\n        leftChild = this.heap[leftChildIndex];\n        if (this._compare(leftChild.priority, element.priority) < 0) {\n          swap = leftChildIndex;\n        }\n      }\n\n      if (rightChildIndex < length) {\n        leftChild = this.heap[leftChildIndex];\n        rightChild = this.heap[rightChildIndex];\n        if (\n          (swap === null &&\n            this._compare(rightChild.priority, element.priority) < 0) ||\n          (swap !== null &&\n            this._compare(rightChild.priority, leftChild.priority) < 0)\n        ) {\n          swap = rightChildIndex;\n        }\n      }\n\n      if (swap === -1) break;\n\n      this.heap[index] = this.heap[swap];\n      this.heap[swap] = element;\n      index = swap;\n    }\n  }\n\n  bubbleUp(index: number = this.heap.length - 1): void {\n    const element = this.heap[index];\n\n    while (index > 0) {\n      const parentIndex = Math.floor((index - 1) / 2);\n      const parent = this.heap[parentIndex];\n\n      if (this._compare(parent.priority, element.priority) <= 0) break;\n\n      this.heap[parentIndex] = element;\n      this.heap[index] = parent;\n      index = parentIndex;\n    }\n  }\n\n  dequeue(): T | null {\n    const min = this.heap[0];\n    const end = this.heap.pop();\n    if (this.heap.length > 0 && end) {\n      this.heap[0] = end;\n      this.bubbleDown();\n    }\n    return min?.value ?? null;\n  }\n\n  empty(): boolean {\n    return this.heap.length === 0;\n  }\n\n  enqueue(value: T, priority: K): void {\n    const node = { value, priority };\n    this.heap.push(node);\n    this.bubbleUp();\n  }\n}\n"]}