{"version":3,"file":"surface-service.js","sourceRoot":"","sources":["../src/surface-service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AACrD,OAAO,EAAE,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AAEpE,OAAO,EAA0B,kBAAkB,EAAE,MAAM,oBAAoB,CAAC;AAEhF,MAAM,OAAO,mBAAoB,SAAQ,YAAY;aAC1B,YAAO,GAAG,kBAAkB,CAAC,KAAK,CAAC,OAAO,CAAC;IAIpE,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,KAAK,CAAC;IACrD,CAAC;IAEQ,OAAO;QACd,KAAK,CAAC,OAAO,EAAE,CAAC;QAEhB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,iBAAiB,CACvC,gBAAgB,CACjB,CAAC,CAAC,CAAsB,CAAC;QAE1B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAClB,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE;gBAC1D,IAAI,OAAO,CAAC,OAAO,KAAK,gBAAgB,EAAE,CAAC;oBACzC,UAAU,CAAC,OAAO,EAAE,CAAC;oBACrB,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CACnC,OAAO,CAAC,EAAE,CACiB,CAAC;oBAC9B,IAAI,CAAC,OAAO;wBAAE,OAAO;oBACrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;gBACzB,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC","sourcesContent":["import { BlockService } from '@lumensuite/block-std';\nimport { GfxControllerIdentifier } from '@lumensuite/block-std/gfx';\n\nimport { type SurfaceBlockModel, SurfaceBlockSchema } from './surface-model.js';\n\nexport class SurfaceBlockService extends BlockService {\n  static override readonly flavour = SurfaceBlockSchema.model.flavour;\n\n  surface!: SurfaceBlockModel;\n\n  get layer() {\n    return this.std.get(GfxControllerIdentifier).layer;\n  }\n\n  override mounted(): void {\n    super.mounted();\n\n    this.surface = this.doc.getBlockByFlavour(\n      'affine:surface'\n    )[0] as SurfaceBlockModel;\n\n    if (!this.surface) {\n      const disposable = this.doc.slots.blockUpdated.on(payload => {\n        if (payload.flavour === 'affine:surface') {\n          disposable.dispose();\n          const surface = this.doc.getBlockById(\n            payload.id\n          ) as SurfaceBlockModel | null;\n          if (!surface) return;\n          this.surface = surface;\n        }\n      });\n    }\n  }\n}\n"]}