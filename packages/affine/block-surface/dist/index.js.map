{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAGA,OAAO,sCAAsC,CAAC;AAE9C,OAAO,EAAoB,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAC9E,OAAO,EAAE,YAAY,EAAE,YAAY,EAAE,MAAM,aAAa,CAAC;AACzD,OAAO,EACL,mBAAmB,EACnB,qBAAqB,GACtB,MAAM,yBAAyB,CAAC;AAEjC,OAAO,EAAE,iBAAiB,EAAE,MAAM,0BAA0B,CAAC;AAC7D,OAAO,EAAE,mBAAmB,EAAE,MAAM,4BAA4B,CAAC;AAEjE,OAAO,EAAE,YAAY,EAAE,MAAM,wCAAwC,CAAC;AACtE,OAAO,EAAE,oBAAoB,EAAE,MAAM,oCAAoC,CAAC;AAC1E,OAAO,EAAE,iCAAiC,EAAE,MAAM,iCAAiC,CAAC;AAKpF,cAAc,qBAAqB,CAAC;AACpC,OAAO,EACL,wBAAwB,EACxB,iBAAiB,EACjB,0BAA0B,EAC1B,oCAAoC,EACpC,sBAAsB,GACvB,MAAM,iCAAiC,CAAC;AACzC,OAAO,EAAE,YAAY,EAAE,MAAM,6BAA6B,CAAC;AAG3D,OAAO,EACL,OAAO,IAAI,YAAY,EACvB,oBAAoB,EACpB,SAAS,GACV,MAAM,2BAA2B,CAAC;AACnC,OAAO,EAAE,cAAc,EAAE,OAAO,EAAE,MAAM,+BAA+B,CAAC;AACxE,cAAc,qCAAqC,CAAC;AAEpD,OAAO,EACL,gBAAgB,EAChB,mBAAmB,GACpB,MAAM,8BAA8B,CAAC;AACtC,OAAO,EAAE,UAAU,EAAE,MAAM,oCAAoC,CAAC;AAChE,OAAO,EACL,gBAAgB,EAChB,aAAa,EACb,oBAAoB,EACpB,qBAAqB,EACrB,kBAAkB,EAClB,cAAc,GACf,MAAM,mCAAmC,CAAC;AAC3C,OAAO,EACL,YAAY,EACZ,wBAAwB,EACxB,gBAAgB,EAChB,cAAc,GACf,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAAE,qBAAqB,EAAE,MAAM,oBAAoB,CAAC;AAE3D,OAAO,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,MAAM,oBAAoB,CAAC;AAE3E,OAAO,EACL,wBAAwB,EACxB,oBAAoB,GACrB,MAAM,mBAAmB,CAAC;AAC3B,OAAO,EAAE,uBAAuB,EAAE,MAAM,0BAA0B,CAAC;AACnE,OAAO,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAC;AAChD,OAAO,EAAE,WAAW,EAAE,MAAM,yBAAyB,CAAC;AAEtD,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAE5C,OAAO,EACL,WAAW,EACX,KAAK,EACL,qBAAqB,EACrB,8BAA8B,EAC9B,+BAA+B,EAC/B,yBAAyB,EACzB,SAAS,EACT,oBAAoB,EACpB,UAAU,EACV,SAAS,EACT,SAAS,EACT,cAAc,EACd,qBAAqB,EACrB,iBAAiB,EACjB,sBAAsB,EACtB,mBAAmB,EACnB,oBAAoB,EACpB,oBAAoB,EACpB,YAAY,EACZ,IAAI,EACJ,QAAQ,EACR,QAAQ,GACT,MAAM,0BAA0B,CAAC;AAClC,OAAO,EAAE,kBAAkB,EAAE,MAAM,qBAAqB,CAAC;AAEzD,OAAO,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,MAAM,kBAAkB,CAAC;AAE3E,MAAM,CAAC,MAAM,cAAc,GAAG;IAC5B,iCAAiC;IACjC,oBAAoB;CACrB,CAAC;AAEF,MAAM,CAAC,MAAM,SAAS,GAAG;IACvB,cAAc;IACd,kBAAkB;IAClB,aAAa;IACb,gBAAgB;IAChB,qBAAqB;IACrB,oBAAoB;IACpB,cAAc;IACd,YAAY;IACZ,wBAAwB;IACxB,gBAAgB;CACjB,CAAC;AAEF,MAAM,CAAC,MAAM,WAAW,GAAG;IACzB,WAAW;IACX,KAAK;IACL,iBAAiB;IACjB,kBAAkB;IAClB,qBAAqB;IACrB,8BAA8B;IAC9B,+BAA+B;IAC/B,yBAAyB;IACzB,SAAS;IACT,oBAAoB;IACpB,UAAU;IACV,SAAS;IACT,SAAS;IACT,cAAc;IACd,qBAAqB;IACrB,iBAAiB;IACjB,oBAAoB;IACpB,sBAAsB;IACtB,mBAAmB;IACnB,oBAAoB;IACpB,oBAAoB;IACpB,YAAY;IACZ,IAAI;IACJ,QAAQ;IACR,QAAQ;CACT,CAAC","sourcesContent":["import type { SurfaceBlockModel } from './surface-model.js';\nimport type { SurfaceBlockService } from './surface-service.js';\n\nimport './commands/reassociate-connectors.js';\n\nexport { type IModelCoord, ZOOM_MAX, ZOOM_MIN, ZOOM_STEP } from './consts.js';\nexport { GRID_GAP_MAX, GRID_GAP_MIN } from './consts.js';\nexport {\n  SurfaceElementModel,\n  SurfaceGroupLikeModel,\n} from './element-model/base.js';\n\nexport { CanvasElementType } from './element-model/index.js';\nexport { MindmapElementModel } from './element-model/mindmap.js';\nexport type { SerializedMindmapElement } from './element-model/mindmap.js';\nexport { MindmapUtils } from './element-model/utils/mindmap/index.js';\nimport { isConnectorWithLabel } from './element-model/utils/connector.js';\nimport { isConnectorAndBindingsAllSelected } from './managers/connector-manager.js';\nexport type {\n  MindmapNode,\n  NodeDetail,\n} from './element-model/utils/mindmap/layout.js';\nexport * from './elements/index.js';\nexport {\n  calculateNearestLocation,\n  ConnectionOverlay,\n  ConnectorEndpointLocations,\n  ConnectorEndpointLocationsOnTriangle,\n  ConnectorPathGenerator,\n} from './managers/connector-manager.js';\nexport { LayerManager } from './managers/layer-manager.js';\nexport type { BlockLayer } from './managers/layer-manager.js';\nexport type { ReorderingDirection } from './managers/layer-manager.js';\nexport {\n  compare as compareLayer,\n  renderableInEdgeless,\n  SortOrder,\n} from './managers/layer-utils.js';\nexport { CanvasRenderer, Overlay } from './renderer/canvas-renderer.js';\nexport * from './renderer/elements/group/consts.js';\nexport type { ElementRenderer } from './renderer/elements/index.js';\nexport {\n  elementRenderers,\n  normalizeShapeBound,\n} from './renderer/elements/index.js';\nexport { fitContent } from './renderer/elements/shape/utils.js';\nimport {\n  getCursorByCoord,\n  getLineHeight,\n  isFontStyleSupported,\n  isFontWeightSupported,\n  normalizeTextBound,\n  splitIntoLines,\n} from './renderer/elements/text/utils.js';\nimport {\n  getFontFaces,\n  getFontFacesByFontFamily,\n  isSameFontFamily,\n  wrapFontFamily,\n} from './utils/font.js';\nexport { SurfaceBlockComponent } from './surface-block.js';\nexport type { SurfaceContext } from './surface-block.js';\nexport { SurfaceBlockModel, SurfaceBlockSchema } from './surface-model.js';\nexport type { SurfaceBlockService } from './surface-service.js';\nexport {\n  EdgelessSurfaceBlockSpec,\n  PageSurfaceBlockSpec,\n} from './surface-spec.js';\nexport { SurfaceBlockTransformer } from './surface-transformer.js';\nexport { AStarRunner } from './utils/a-star.js';\nexport { RoughCanvas } from './utils/rough/canvas.js';\nexport type { Options } from './utils/rough/core.js';\nexport { sortIndex } from './utils/sort.js';\n\nimport {\n  almostEqual,\n  clamp,\n  getBoundsWithRotation,\n  getPointFromBoundsWithRotation,\n  getPointsFromBoundsWithRotation,\n  getQuadBoundsWithRotation,\n  getStroke,\n  getSvgPathFromStroke,\n  intersects,\n  isOverlap,\n  isPointIn,\n  lineIntersects,\n  linePolygonIntersects,\n  normalizeDegAngle,\n  polygonGetPointTangent,\n  polygonNearestPoint,\n  polygonPointDistance,\n  polyLineNearestPoint,\n  rotatePoints,\n  sign,\n  toDegree,\n  toRadian,\n} from '@blocksuite/global/utils';\nimport { generateKeyBetween } from 'fractional-indexing';\n\nimport { generateElementId, normalizeWheelDeltaY } from './utils/index.js';\n\nexport const ConnectorUtils = {\n  isConnectorAndBindingsAllSelected,\n  isConnectorWithLabel,\n};\n\nexport const TextUtils = {\n  splitIntoLines,\n  normalizeTextBound,\n  getLineHeight,\n  getCursorByCoord,\n  isFontWeightSupported,\n  isFontStyleSupported,\n  wrapFontFamily,\n  getFontFaces,\n  getFontFacesByFontFamily,\n  isSameFontFamily,\n};\n\nexport const CommonUtils = {\n  almostEqual,\n  clamp,\n  generateElementId,\n  generateKeyBetween,\n  getBoundsWithRotation,\n  getPointFromBoundsWithRotation,\n  getPointsFromBoundsWithRotation,\n  getQuadBoundsWithRotation,\n  getStroke,\n  getSvgPathFromStroke,\n  intersects,\n  isOverlap,\n  isPointIn,\n  lineIntersects,\n  linePolygonIntersects,\n  normalizeDegAngle,\n  normalizeWheelDeltaY,\n  polygonGetPointTangent,\n  polygonNearestPoint,\n  polygonPointDistance,\n  polyLineNearestPoint,\n  rotatePoints,\n  sign,\n  toDegree,\n  toRadian,\n};\n\ndeclare global {\n  namespace BlockSuite {\n    interface BlockServices {\n      'affine:surface': SurfaceBlockService;\n    }\n    interface BlockModels {\n      'affine:surface': SurfaceBlockModel;\n    }\n  }\n}\n"]}