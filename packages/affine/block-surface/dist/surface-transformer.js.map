{"version":3,"file":"surface-transformer.js","sourceRoot":"","sources":["../src/surface-transformer.ts"],"names":[],"mappings":"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","sourcesContent":["import type { SurfaceBlockProps } from '@blocksuite/block-std/gfx';\nimport type {\n  FromSnapshotPayload,\n  SnapshotReturn,\n  ToSnapshotPayload,\n  Y,\n} from '@blocksuite/store';\n\nimport { BaseBlockTransformer, DocCollection } from '@blocksuite/store';\n\nconst SURFACE_TEXT_UNIQ_IDENTIFIER = 'affine:surface:text';\n// Used for group children field\nconst SURFACE_YMAP_UNIQ_IDENTIFIER = 'affine:surface:ymap';\n\nexport class SurfaceBlockTransformer extends BaseBlockTransformer<SurfaceBlockProps> {\n  private _elementToJSON(element: Y.Map<unknown>) {\n    const value: Record<string, unknown> = {};\n    element.forEach((_value, _key) => {\n      value[_key] = this._toJSON(_value);\n    });\n\n    return value;\n  }\n\n  private _fromJSON(value: unknown): unknown {\n    if (value instanceof Object) {\n      if (Reflect.has(value, SURFACE_TEXT_UNIQ_IDENTIFIER)) {\n        const yText = new DocCollection.Y.Text();\n        yText.applyDelta(Reflect.get(value, 'delta'));\n        return yText;\n      } else if (Reflect.has(value, SURFACE_YMAP_UNIQ_IDENTIFIER)) {\n        const yMap = new DocCollection.Y.Map();\n        const json = Reflect.get(value, 'json') as Record<string, unknown>;\n        Object.entries(json).forEach(([key, value]) => {\n          yMap.set(key, value);\n        });\n        return yMap;\n      }\n    }\n    return value;\n  }\n\n  private _toJSON(value: unknown): unknown {\n    if (value instanceof DocCollection.Y.Text) {\n      return {\n        [SURFACE_TEXT_UNIQ_IDENTIFIER]: true,\n        delta: value.toDelta(),\n      };\n    } else if (value instanceof DocCollection.Y.Map) {\n      return {\n        [SURFACE_YMAP_UNIQ_IDENTIFIER]: true,\n        json: value.toJSON(),\n      };\n    }\n    return value;\n  }\n\n  elementFromJSON(element: Record<string, unknown>) {\n    const yMap = new DocCollection.Y.Map();\n    Object.entries(element).forEach(([key, value]) => {\n      yMap.set(key, this._fromJSON(value));\n    });\n\n    return yMap;\n  }\n\n  override async fromSnapshot(\n    payload: FromSnapshotPayload\n  ): Promise<SnapshotReturn<SurfaceBlockProps>> {\n    const snapshotRet = await super.fromSnapshot(payload);\n    const elementsJSON = snapshotRet.props.elements as unknown as Record<\n      string,\n      unknown\n    >;\n    const yMap = new DocCollection.Y.Map<Y.Map<unknown>>();\n\n    Object.entries(elementsJSON).forEach(([key, value]) => {\n      const element = this.elementFromJSON(value as Record<string, unknown>);\n\n      yMap.set(key, element);\n    });\n\n    const elements = this._internal.Boxed(yMap);\n\n    snapshotRet.props = {\n      elements,\n    };\n\n    return snapshotRet;\n  }\n\n  override async toSnapshot(payload: ToSnapshotPayload<SurfaceBlockProps>) {\n    const snapshot = await super.toSnapshot(payload);\n    const elementsValue = payload.model.elements.getValue();\n    const value: Record<string, unknown> = {};\n    if (elementsValue) {\n      elementsValue.forEach((element, key) => {\n        value[key] = this._elementToJSON(element as Y.Map<unknown>);\n      });\n    }\n    snapshot.props = {\n      elements: value,\n    };\n\n    return snapshot;\n  }\n}\n"]}