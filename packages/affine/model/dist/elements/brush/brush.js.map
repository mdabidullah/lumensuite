{"version":3,"file":"brush.js","sourceRoot":"","sources":["../../../src/elements/brush/brush.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  BaseElementProps,\n  PointTestOptions,\n} from '@lumensuite/block-std/gfx';\n\nimport {\n  convert,\n  derive,\n  field,\n  GfxPrimitiveElementModel,\n  watch,\n} from '@lumensuite/block-std/gfx';\nimport {\n  Bound,\n  getBoundFromPoints,\n  getPointsFromBoundsWithRotation,\n  getQuadBoundsWithRotation,\n  getSolidStrokePoints,\n  getSvgPathFromStroke,\n  inflateBound,\n  isPointOnlines,\n  type IVec,\n  type IVec3,\n  lineIntersects,\n  PointLocation,\n  polyLineNearestPoint,\n  type SerializedXYWH,\n  transformPointsToNewBound,\n  Vec,\n} from '@lumensuite/global/utils';\n\nimport type { Color } from '../../consts/index.js';\n\nexport type BrushProps = BaseElementProps & {\n  /**\n   * [[x0,y0,pressure0?],[x1,y1,pressure1?]...]\n   * pressure is optional and exsits when pressure sensitivity is supported, otherwise not.\n   */\n  points: number[][];\n  color: Color;\n  lineWidth: number;\n};\n\nexport class BrushElementModel extends GfxPrimitiveElementModel<BrushProps> {\n  /**\n   * The SVG path commands for the brush.\n   */\n  get commands() {\n    if (!this._local.has('commands')) {\n      const stroke = getSolidStrokePoints(this.points, this.lineWidth);\n      const commands = getSvgPathFromStroke(stroke);\n\n      this._local.set('commands', commands);\n    }\n\n    return this._local.get('commands') as string;\n  }\n\n  override get connectable() {\n    return false;\n  }\n\n  override get type() {\n    return 'brush';\n  }\n\n  static override propsToY(props: BrushProps) {\n    return props;\n  }\n\n  override containsBound(bounds: Bound) {\n    const points = getPointsFromBoundsWithRotation(this);\n    return points.some(point => bounds.containsPoint(point));\n  }\n\n  override getLineIntersections(start: IVec, end: IVec) {\n    const tl = [this.x, this.y];\n    const points = getPointsFromBoundsWithRotation(this, _ =>\n      this.points.map(point => Vec.add(point, tl))\n    );\n\n    const box = Bound.fromDOMRect(getQuadBoundsWithRotation(this));\n\n    if (box.w < 8 && box.h < 8) {\n      return Vec.distanceToLineSegment(start, end, box.center) < 5 ? [] : null;\n    }\n\n    if (box.intersectLine(start, end, true)) {\n      const len = points.length;\n      for (let i = 1; i < len; i++) {\n        const result = lineIntersects(start, end, points[i - 1], points[i]);\n        if (result) {\n          return [\n            new PointLocation(\n              result,\n              Vec.normalize(Vec.sub(points[i], points[i - 1]))\n            ),\n          ];\n        }\n      }\n    }\n    return null;\n  }\n\n  override getNearestPoint(point: IVec): IVec {\n    const { x, y } = this;\n\n    return polyLineNearestPoint(\n      this.points.map(p => Vec.add(p, [x, y])),\n      point\n    ) as IVec;\n  }\n\n  override getRelativePointLocation(position: IVec): PointLocation {\n    const point = Bound.deserialize(this.xywh).getRelativePoint(position);\n    return new PointLocation(point);\n  }\n\n  override includesPoint(\n    px: number,\n    py: number,\n    options?: PointTestOptions\n  ): boolean {\n    const hit = isPointOnlines(\n      Bound.deserialize(this.xywh),\n      this.points as [number, number][],\n      this.rotate,\n      [px, py],\n      (options?.hitThreshold ?? 10) / Math.min(options?.zoom ?? 1, 1)\n    );\n    return hit;\n  }\n\n  @field()\n  accessor color: Color = '#000000';\n\n  @watch((_, instance) => {\n    instance['_local'].delete('commands');\n  })\n  @derive((lineWidth: number, instance: Instance) => {\n    if (lineWidth === instance.lineWidth) return {};\n\n    const bound = instance.elementBound;\n    const points = instance.points;\n    const transformed = transformPointsToNewBound(\n      points.map(([x, y]) => ({ x, y })),\n      bound,\n      lineWidth / 2,\n      inflateBound(bound, lineWidth - instance.lineWidth),\n      lineWidth / 2\n    );\n\n    return {\n      points: transformed.points.map((p, i) => [\n        p.x,\n        p.y,\n        ...(points[i][2] !== undefined ? [points[i][2]] : []),\n      ]),\n      xywh: transformed.bound.serialize(),\n    };\n  })\n  @field()\n  accessor lineWidth: number = 4;\n\n  @watch((_, instance) => {\n    instance['_local'].delete('commands');\n  })\n  @derive((points: IVec[], instance: Instance) => {\n    const lineWidth = instance.lineWidth;\n    const bound = getBoundFromPoints(points);\n    const boundWidthLineWidth = inflateBound(bound, lineWidth);\n\n    return {\n      xywh: boundWidthLineWidth.serialize(),\n    };\n  })\n  @convert((points: (IVec | IVec3)[], instance) => {\n    const lineWidth = instance.lineWidth;\n    const bound = getBoundFromPoints(points as IVec[]);\n    const boundWidthLineWidth = inflateBound(bound, lineWidth);\n    const relativePoints = points.map(([x, y, pressure]) => [\n      x - boundWidthLineWidth.x,\n      y - boundWidthLineWidth.y,\n      ...(pressure !== undefined ? [pressure] : []),\n    ]);\n\n    return relativePoints;\n  })\n  @field()\n  accessor points: (IVec | IVec3)[] = [];\n\n  @field(0)\n  accessor rotate: number = 0;\n\n  @derive((xywh: SerializedXYWH, instance: Instance) => {\n    const bound = Bound.deserialize(xywh);\n    if (bound.w === instance.w && bound.h === instance.h) return {};\n\n    const { lineWidth } = instance;\n\n    const transformed = transformPointsToNewBound(\n      instance.points.map(([x, y]) => ({ x, y })),\n      instance,\n      lineWidth / 2,\n      bound,\n      lineWidth / 2\n    );\n\n    return {\n      points: transformed.points.map((p, i) => [\n        p.x,\n        p.y,\n        ...(instance.points[i][2] !== undefined ? [instance.points[i][2]] : []),\n      ]),\n    };\n  })\n  @field()\n  accessor xywh: SerializedXYWH = '[0,0,0,0]';\n}\n\ntype Instance = GfxPrimitiveElementModel<BrushProps> & BrushProps;\n\ndeclare global {\n  namespace LumenSuite {\n    interface SurfaceElementModelMap {\n      brush: BrushElementModel;\n    }\n  }\n}\n"]}