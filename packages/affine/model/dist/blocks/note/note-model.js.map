{"version":3,"file":"note-model.js","sourceRoot":"","sources":["../../../src/blocks/note/note-model.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,KAAK,EAAE,MAAM,0BAA0B,CAAC;AACjD,OAAO,EAAE,UAAU,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAC;AAElE,OAAO,EAEL,6BAA6B,EAC7B,wBAAwB,EACxB,yBAAyB,EACzB,mBAAmB,EACnB,mBAAmB,EACnB,UAAU,EACV,eAAe,GAEhB,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAC;AAErD,MAAM,CAAC,MAAM,eAAe,GAAG,iBAAiB,CAAC;IAC/C,OAAO,EAAE,aAAa;IACtB,KAAK,EAAE,GAAc,EAAE,CAAC,CAAC;QACvB,IAAI,EAAE,QAAQ,UAAU,MAAM;QAC9B,UAAU,EAAE,6BAA6B;QACzC,KAAK,EAAE,IAAI;QACX,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,eAAe,CAAC,cAAc;QAC3C,QAAQ,EAAE;YACR,KAAK,EAAE;gBACL,YAAY,EAAE,mBAAmB;gBACjC,UAAU,EAAE,wBAAwB;gBACpC,WAAW,EAAE,yBAAyB;gBACtC,UAAU,EAAE,mBAAmB;aAChC;SACF;KACF,CAAC;IACF,QAAQ,EAAE;QACR,OAAO,EAAE,CAAC;QACV,IAAI,EAAE,KAAK;QACX,MAAM,EAAE,CAAC,aAAa,CAAC;QACvB,QAAQ,EAAE;YACR,kBAAkB;YAClB,aAAa;YACb,aAAa;YACb,gBAAgB;YAChB,iBAAiB;YACjB,kBAAkB;YAClB,cAAc;YACd,iBAAiB;YACjB,mBAAmB;YACnB,oBAAoB;YACpB,gBAAgB;YAChB,cAAc;SACf;KACF;IACD,OAAO,EAAE,GAAG,EAAE;QACZ,OAAO,IAAI,cAAc,EAAE,CAAC;IAC9B,CAAC;CACF,CAAC,CAAC;AA+BH,MAAM,OAAO,cACX,SAAQ,aAAa,CAAY,UAAU,CAAC;IAGpC,aAAa;QACnB,OAAO,IAAI,CAAC,WAAW,KAAK,eAAe,CAAC,OAAO,CAAC;IACtD,CAAC;IAEQ,aAAa,CAAC,MAAa;QAClC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YAAE,OAAO,KAAK,CAAC;QACxC,OAAO,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IACrC,CAAC;IAEQ,aAAa,CAAC,CAAS,EAAE,CAAS;QACzC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YAAE,OAAO,KAAK,CAAC;QAExC,MAAM,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,OAAO,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzC,CAAC;IAEQ,eAAe,CAAC,KAAY;QACnC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YAAE,OAAO,KAAK,CAAC;QACxC,OAAO,KAAK,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;CACF","sourcesContent":["import type { GfxElementGeometry } from '@lumensuite/block-std/gfx';\nimport type { SerializedXYWH } from '@lumensuite/global/utils';\n\nimport { Bound } from '@lumensuite/global/utils';\nimport { BlockModel, defineBlockSchema } from '@lumensuite/store';\n\nimport {\n  type Color,\n  DEFAULT_NOTE_BACKGROUND_COLOR,\n  DEFAULT_NOTE_BORDER_SIZE,\n  DEFAULT_NOTE_BORDER_STYLE,\n  DEFAULT_NOTE_CORNER,\n  DEFAULT_NOTE_SHADOW,\n  NOTE_WIDTH,\n  NoteDisplayMode,\n  type StrokeStyle,\n} from '../../consts/index.js';\nimport { GfxCompatible } from '../../utils/index.js';\n\nexport const NoteBlockSchema = defineBlockSchema({\n  flavour: 'affine:note',\n  props: (): NoteProps => ({\n    xywh: `[0,0,${NOTE_WIDTH},95]`,\n    background: DEFAULT_NOTE_BACKGROUND_COLOR,\n    index: 'a0',\n    hidden: false,\n    displayMode: NoteDisplayMode.DocAndEdgeless,\n    edgeless: {\n      style: {\n        borderRadius: DEFAULT_NOTE_CORNER,\n        borderSize: DEFAULT_NOTE_BORDER_SIZE,\n        borderStyle: DEFAULT_NOTE_BORDER_STYLE,\n        shadowType: DEFAULT_NOTE_SHADOW,\n      },\n    },\n  }),\n  metadata: {\n    version: 1,\n    role: 'hub',\n    parent: ['affine:page'],\n    children: [\n      'affine:paragraph',\n      'affine:list',\n      'affine:code',\n      'affine:divider',\n      'affine:database',\n      'affine:data-view',\n      'affine:image',\n      'affine:bookmark',\n      'affine:attachment',\n      'affine:surface-ref',\n      'affine:embed-*',\n      'affine:latex',\n    ],\n  },\n  toModel: () => {\n    return new NoteBlockModel();\n  },\n});\n\ntype NoteProps = {\n  xywh: SerializedXYWH;\n  background: Color;\n  index: string;\n  displayMode: NoteDisplayMode;\n  edgeless: NoteEdgelessProps;\n  /**\n   * @deprecated\n   * use `displayMode` instead\n   * hidden:true -> displayMode:NoteDisplayMode.EdgelessOnly:\n   *  means the note is visible only in the edgeless mode\n   * hidden:false -> displayMode:NoteDisplayMode.DocAndEdgeless:\n   *  means the note is visible in the doc and edgeless mode\n   */\n  hidden: boolean;\n};\n\ntype NoteEdgelessProps = {\n  style: {\n    borderRadius: number;\n    borderSize: number;\n    borderStyle: StrokeStyle;\n    shadowType: string;\n  };\n  collapse?: boolean;\n  collapsedHeight?: number;\n  scale?: number;\n};\n\nexport class NoteBlockModel\n  extends GfxCompatible<NoteProps>(BlockModel)\n  implements GfxElementGeometry\n{\n  private _isSelectable(): boolean {\n    return this.displayMode !== NoteDisplayMode.DocOnly;\n  }\n\n  override containsBound(bounds: Bound): boolean {\n    if (!this._isSelectable()) return false;\n    return super.containsBound(bounds);\n  }\n\n  override includesPoint(x: number, y: number): boolean {\n    if (!this._isSelectable()) return false;\n\n    const bound = Bound.deserialize(this.xywh);\n    return bound.isPointInBound([x, y], 0);\n  }\n\n  override intersectsBound(bound: Bound): boolean {\n    if (!this._isSelectable()) return false;\n    return super.intersectsBound(bound);\n  }\n}\n\ndeclare global {\n  namespace LumenSuite {\n    interface BlockModels {\n      'affine:note': NoteBlockModel;\n    }\n    interface EdgelessBlockModelMap {\n      'affine:note': NoteBlockModel;\n    }\n  }\n}\n"]}