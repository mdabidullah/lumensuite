{"version":3,"file":"edgeless-text-model.js","sourceRoot":"","sources":["../../../src/blocks/edgeless-text/edgeless-text-model.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,UAAU,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAC;AAElE,OAAO,EACL,UAAU,EACV,SAAS,EACT,UAAU,EACV,SAAS,GAEV,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAC;AAUrD,MAAM,CAAC,MAAM,uBAAuB,GAAG,iBAAiB,CAAC;IACvD,OAAO,EAAE,sBAAsB;IAC/B,KAAK,EAAE,GAAsB,EAAE,CAAC,CAAC;QAC/B,IAAI,EAAE,aAAa;QACnB,KAAK,EAAE,IAAI;QACX,KAAK,EAAE,SAAS;QAChB,UAAU,EAAE,UAAU,CAAC,KAAK;QAC5B,SAAS,EAAE,SAAS,CAAC,MAAM;QAC3B,UAAU,EAAE,UAAU,CAAC,OAAO;QAC9B,SAAS,EAAE,SAAS,CAAC,IAAI;QACzB,KAAK,EAAE,CAAC;QACR,MAAM,EAAE,CAAC;QACT,WAAW,EAAE,KAAK;KACnB,CAAC;IACF,QAAQ,EAAE;QACR,OAAO,EAAE,CAAC;QACV,IAAI,EAAE,KAAK;QACX,MAAM,EAAE,CAAC,gBAAgB,CAAC;QAC1B,QAAQ,EAAE;YACR,kBAAkB;YAClB,aAAa;YACb,aAAa;YACb,cAAc;YACd,iBAAiB;YACjB,mBAAmB;YACnB,4BAA4B;YAC5B,cAAc;SACf;KACF;IACD,OAAO,EAAE,GAAG,EAAE;QACZ,OAAO,IAAI,sBAAsB,EAAE,CAAC;IACtC,CAAC;CACF,CAAC,CAAC;AAEH,MAAM,OAAO,sBACX,SAAQ,aAAa,CAAoB,UAAU,CAAC;CACpB","sourcesContent":["import type { GfxElementGeometry } from '@blocksuite/block-std/gfx';\nimport type { SerializedXYWH } from '@blocksuite/global/utils';\n\nimport { BlockModel, defineBlockSchema } from '@blocksuite/store';\n\nimport {\n  FontFamily,\n  FontStyle,\n  FontWeight,\n  TextAlign,\n  type TextStyleProps,\n} from '../../consts/index.js';\nimport { GfxCompatible } from '../../utils/index.js';\n\ntype EdgelessTextProps = {\n  xywh: SerializedXYWH;\n  index: string;\n  scale: number;\n  rotate: number;\n  hasMaxWidth: boolean;\n} & Omit<TextStyleProps, 'fontSize'>;\n\nexport const EdgelessTextBlockSchema = defineBlockSchema({\n  flavour: 'affine:edgeless-text',\n  props: (): EdgelessTextProps => ({\n    xywh: '[0,0,16,16]',\n    index: 'a0',\n    color: '#000000',\n    fontFamily: FontFamily.Inter,\n    fontStyle: FontStyle.Normal,\n    fontWeight: FontWeight.Regular,\n    textAlign: TextAlign.Left,\n    scale: 1,\n    rotate: 0,\n    hasMaxWidth: false,\n  }),\n  metadata: {\n    version: 1,\n    role: 'hub',\n    parent: ['affine:surface'],\n    children: [\n      'affine:paragraph',\n      'affine:list',\n      'affine:code',\n      'affine:image',\n      'affine:bookmark',\n      'affine:attachment',\n      'affine:embed-!(synced-doc)',\n      'affine:latex',\n    ],\n  },\n  toModel: () => {\n    return new EdgelessTextBlockModel();\n  },\n});\n\nexport class EdgelessTextBlockModel\n  extends GfxCompatible<EdgelessTextProps>(BlockModel)\n  implements GfxElementGeometry {}\n\ndeclare global {\n  namespace BlockSuite {\n    interface BlockModels {\n      'affine:edgeless-text': EdgelessTextBlockModel;\n    }\n\n    interface EdgelessBlockModelMap {\n      'affine:edgeless-text': EdgelessTextBlockModel;\n    }\n\n    interface EdgelessTextModelMap {\n      'edgeless-text': EdgelessTextBlockModel;\n    }\n  }\n}\n"]}