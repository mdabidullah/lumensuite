{"version":3,"file":"frame-model.js","sourceRoot":"","sources":["../../../src/blocks/frame/frame-model.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  type GfxBlockElementModel,\n  type GfxContainerElement,\n  gfxContainerSymbol,\n  type GfxElementGeometry,\n  type GfxModel,\n  type PointTestOptions,\n  SurfaceBlockModel,\n} from '@blocksuite/block-std/gfx';\nimport { Bound, type SerializedXYWH } from '@blocksuite/global/utils';\nimport { BlockModel, defineBlockSchema, type Text } from '@blocksuite/store';\n\nimport type { Color } from '../../consts/index.js';\n\nimport { GfxCompatible } from '../../utils/index.js';\n\nexport type FrameBlockProps = {\n  title: Text;\n  background: Color;\n  xywh: SerializedXYWH;\n  index: string;\n  childElementIds?: Record<string, boolean>;\n};\n\nexport const FrameBlockSchema = defineBlockSchema({\n  flavour: 'affine:frame',\n  props: (internal): FrameBlockProps => ({\n    title: internal.Text(),\n    background: '--affine-palette-transparent',\n    xywh: `[0,0,100,100]`,\n    index: 'a0',\n    childElementIds: Object.create(null),\n  }),\n  metadata: {\n    version: 1,\n    role: 'content',\n    parent: ['affine:surface'],\n    children: [],\n  },\n  toModel: () => {\n    return new FrameBlockModel();\n  },\n});\n\nexport class FrameBlockModel\n  extends GfxCompatible<FrameBlockProps>(BlockModel)\n  implements GfxElementGeometry, GfxContainerElement\n{\n  [gfxContainerSymbol] = true as const;\n\n  get childElements() {\n    const surface = this.doc\n      .getBlocks()\n      .find(model => model instanceof SurfaceBlockModel);\n    if (!surface) return [];\n\n    const elements: BlockSuite.EdgelessModel[] = [];\n\n    for (const key of this.childIds) {\n      const element =\n        surface.getElementById(key) ||\n        (surface.doc.getBlockById(key) as GfxBlockElementModel);\n\n      element && elements.push(element);\n    }\n\n    return elements;\n  }\n\n  get childIds() {\n    return [...(this.childElementIds ? Object.keys(this.childElementIds) : [])];\n  }\n\n  addChild(element: BlockSuite.EdgelessModel | string): void {\n    const id = typeof element === 'string' ? element : element.id;\n    this.doc.transact(() => {\n      if (!this.childElementIds) this.childElementIds = {};\n      this.childElementIds[id] = true;\n    });\n  }\n\n  override containsBound(bound: Bound): boolean {\n    return this.elementBound.contains(bound);\n  }\n\n  hasDescendant(element: string | GfxModel): boolean {\n    const id = typeof element === 'string' ? element : element.id;\n    return !!this.childElementIds?.[id];\n  }\n\n  override includesPoint(x: number, y: number, _: PointTestOptions): boolean {\n    const bound = Bound.deserialize(this.xywh);\n    return bound.isPointInBound([x, y]);\n  }\n\n  override intersectsBound(selectedBound: Bound): boolean {\n    const bound = Bound.deserialize(this.xywh);\n    return (\n      bound.isIntersectWithBound(selectedBound) || selectedBound.contains(bound)\n    );\n  }\n\n  removeChild(element: BlockSuite.EdgelessModel | string): void {\n    const id = typeof element === 'string' ? element : element.id;\n    this.doc.transact(() => {\n      this.childElementIds && delete this.childElementIds[id];\n    });\n  }\n}\n\ndeclare global {\n  namespace BlockSuite {\n    interface EdgelessBlockModelMap {\n      'affine:frame': FrameBlockModel;\n    }\n    interface BlockModels {\n      'affine:frame': FrameBlockModel;\n    }\n  }\n}\n"]}