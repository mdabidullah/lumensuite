{"version":3,"file":"root-block-model.js","sourceRoot":"","sources":["../../../src/blocks/root/root-block-model.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,UAAU,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAC;AAMlE,MAAM,OAAO,cAAe,SAAQ,UAA0B;IAC5D;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE;YACrB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;gBAC/B,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;gBACxC,IAAI,KAAK,YAAY,cAAc,EAAE,CAAC;oBACpC,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;oBACrE,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC;wBAC/D,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE;4BAC3C,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE;yBAC9B,CAAC,CAAC;oBACL,CAAC;gBACH,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAED,MAAM,CAAC,MAAM,eAAe,GAAG,iBAAiB,CAAC;IAC/C,OAAO,EAAE,aAAa;IACtB,KAAK,EAAE,CAAC,QAAQ,EAAkB,EAAE,CAAC,CAAC;QACpC,KAAK,EAAE,QAAQ,CAAC,IAAI,EAAE;KACvB,CAAC;IACF,QAAQ,EAAE;QACR,OAAO,EAAE,CAAC;QACV,IAAI,EAAE,MAAM;KACb;IACD,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,cAAc,EAAE;CACpC,CAAC,CAAC","sourcesContent":["import type { Text } from '@blocksuite/store';\n\nimport { BlockModel, defineBlockSchema } from '@blocksuite/store';\n\ntype RootBlockProps = {\n  title: Text;\n};\n\nexport class RootBlockModel extends BlockModel<RootBlockProps> {\n  constructor() {\n    super();\n    this.created.once(() => {\n      this.doc.slots.rootAdded.on(id => {\n        const model = this.doc.getBlockById(id);\n        if (model instanceof RootBlockModel) {\n          const newDocMeta = this.doc.collection.meta.getDocMeta(model.doc.id);\n          if (!newDocMeta || newDocMeta.title !== model.title.toString()) {\n            this.doc.collection.setDocMeta(model.doc.id, {\n              title: model.title.toString(),\n            });\n          }\n        }\n      });\n    });\n  }\n}\n\nexport const RootBlockSchema = defineBlockSchema({\n  flavour: 'affine:page',\n  props: (internal): RootBlockProps => ({\n    title: internal.Text(),\n  }),\n  metadata: {\n    version: 2,\n    role: 'root',\n  },\n  toModel: () => new RootBlockModel(),\n});\n\ndeclare global {\n  namespace BlockSuite {\n    interface BlockModels {\n      'affine:page': RootBlockModel;\n    }\n  }\n}\n"]}