{"version":3,"file":"paragraph-model.js","sourceRoot":"","sources":["../../../src/blocks/paragraph/paragraph-model.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAsB,MAAM,mBAAmB,CAAC;AAY1E,MAAM,CAAC,MAAM,oBAAoB,GAAG,iBAAiB,CAAC;IACpD,OAAO,EAAE,kBAAkB;IAC3B,KAAK,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;QAClB,IAAI,EAAE,MAAuB;QAC7B,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE;KACtB,CAAC;IACF,QAAQ,EAAE;QACR,OAAO,EAAE,CAAC;QACV,IAAI,EAAE,SAAS;QACf,MAAM,EAAE;YACN,aAAa;YACb,iBAAiB;YACjB,kBAAkB;YAClB,aAAa;YACb,sBAAsB;SACvB;KACF;CACF,CAAC,CAAC","sourcesContent":["import { defineBlockSchema, type SchemaToModel } from '@lumensuite/store';\n\nexport type ParagraphType =\n  | 'text'\n  | 'quote'\n  | 'h1'\n  | 'h2'\n  | 'h3'\n  | 'h4'\n  | 'h5'\n  | 'h6';\n\nexport const ParagraphBlockSchema = defineBlockSchema({\n  flavour: 'affine:paragraph',\n  props: internal => ({\n    type: 'text' as ParagraphType,\n    text: internal.Text(),\n  }),\n  metadata: {\n    version: 1,\n    role: 'content',\n    parent: [\n      'affine:note',\n      'affine:database',\n      'affine:paragraph',\n      'affine:list',\n      'affine:edgeless-text',\n    ],\n  },\n});\n\nexport type ParagraphBlockModel = SchemaToModel<typeof ParagraphBlockSchema>;\n\ndeclare global {\n  namespace LumenSuite {\n    interface BlockModels {\n      'affine:paragraph': ParagraphBlockModel;\n    }\n  }\n}\n"]}