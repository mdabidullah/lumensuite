{"version":3,"file":"forward-delete.js","sourceRoot":"","sources":["../../src/utils/forward-delete.ts"],"names":[],"mappings":"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","sourcesContent":["import type { BlockStdScope } from '@lumensuite/block-std';\n\nimport { EMBED_BLOCK_FLAVOUR_LIST } from '@lumensuite/affine-shared/consts';\nimport {\n  getNextContentBlock,\n  matchFlavours,\n} from '@lumensuite/affine-shared/utils';\n\nexport function forwardDelete(std: BlockStdScope) {\n  const { doc, host } = std;\n  const text = std.selection.find('text');\n  if (!text) return;\n  const isCollapsed = text.isCollapsed();\n  const model = doc.getBlock(text.from.blockId)?.model;\n  if (!model || !matchFlavours(model, ['affine:paragraph'])) return;\n  const isEnd = isCollapsed && text.from.index === model.text.length;\n  if (!isEnd) return;\n  const parent = doc.getParent(model);\n  if (!parent) return;\n\n  const nextSibling = doc.getNext(model);\n  const ignoreForwardDeleteFlavourList: LumenSuite.Flavour[] = [\n    'affine:attachment',\n    'affine:bookmark',\n    // @ts-ignore TODO: should be fixed after database model is migrated to affine-models\n    'affine:database',\n    'affine:code',\n    'affine:image',\n    'affine:divider',\n    ...EMBED_BLOCK_FLAVOUR_LIST,\n  ];\n\n  if (matchFlavours(nextSibling, ignoreForwardDeleteFlavourList)) {\n    std.selection.setGroup('note', [\n      std.selection.create('block', { blockId: nextSibling.id }),\n    ]);\n    return true;\n  }\n\n  if (nextSibling?.text) {\n    model.text.join(nextSibling.text);\n    if (nextSibling.children) {\n      const parent = doc.getParent(nextSibling);\n      if (!parent) return false;\n      doc.moveBlocks(nextSibling.children, parent, model, false);\n    }\n\n    doc.deleteBlock(nextSibling);\n    return true;\n  }\n\n  const nextBlock = getNextContentBlock(host, model);\n  if (nextBlock?.text) {\n    model.text.join(nextBlock.text);\n    if (nextBlock.children) {\n      const parent = doc.getParent(nextBlock);\n      if (!parent) return false;\n      doc.moveBlocks(nextBlock.children, parent, doc.getParent(model), false);\n    }\n    doc.deleteBlock(nextBlock);\n    return true;\n  }\n\n  if (nextBlock) {\n    std.selection.setGroup('note', [\n      std.selection.create('block', { blockId: nextBlock.id }),\n    ]);\n  }\n  return true;\n}\n"]}