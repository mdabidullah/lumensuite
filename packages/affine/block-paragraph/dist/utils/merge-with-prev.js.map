{"version":3,"file":"merge-with-prev.js","sourceRoot":"","sources":["../../src/utils/merge-with-prev.ts"],"names":[],"mappings":"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","sourcesContent":["import type { RootBlockModel } from '@lumensuite/affine-model';\nimport type { ExtendedModel } from '@lumensuite/affine-shared/types';\nimport type { EditorHost } from '@lumensuite/block-std';\nimport type { BlockModel, Text } from '@lumensuite/store';\n\nimport {\n  asyncSetInlineRange,\n  focusTextModel,\n} from '@lumensuite/affine-components/rich-text';\nimport { EMBED_BLOCK_FLAVOUR_LIST } from '@lumensuite/affine-shared/consts';\nimport {\n  focusTitle,\n  getDocTitleInlineEditor,\n  getPrevContentBlock,\n  matchFlavours,\n} from '@lumensuite/affine-shared/utils';\n\n/**\n * Merge the paragraph with prev block\n *\n * Before press backspace\n * - line1\n *   - line2\n *   - |aaa\n *   - line3\n *\n * After press backspace\n * - line1\n *   - line2|aaa\n *   - line3\n */\nexport function mergeWithPrev(editorHost: EditorHost, model: BlockModel) {\n  const doc = model.doc;\n  const parent = doc.getParent(model);\n  if (!parent) return false;\n  const prevBlock = getPrevContentBlock(editorHost, model);\n  if (!prevBlock) {\n    return handleNoPreviousSibling(editorHost, model);\n  }\n\n  if (matchFlavours(prevBlock, ['affine:paragraph', 'affine:list'])) {\n    const modelIndex = parent.children.indexOf(model);\n    if (\n      (modelIndex === -1 || modelIndex === parent.children.length - 1) &&\n      parent.role === 'content'\n    )\n      return false;\n\n    const lengthBeforeJoin = prevBlock.text?.length ?? 0;\n    prevBlock.text.join(model.text as Text);\n    doc.deleteBlock(model, {\n      bringChildrenTo: parent,\n    });\n    asyncSetInlineRange(editorHost, prevBlock, {\n      index: lengthBeforeJoin,\n      length: 0,\n    }).catch(console.error);\n    return true;\n  }\n\n  if (\n    matchFlavours(prevBlock, [\n      'affine:attachment',\n      'affine:bookmark',\n      'affine:code',\n      'affine:image',\n      'affine:divider',\n      ...EMBED_BLOCK_FLAVOUR_LIST,\n    ])\n  ) {\n    const selection = editorHost.selection.create('block', {\n      blockId: prevBlock.id,\n    });\n    editorHost.selection.setGroup('note', [selection]);\n\n    if (model.text?.length === 0) {\n      doc.deleteBlock(model, {\n        bringChildrenTo: parent,\n      });\n    }\n\n    return true;\n  }\n\n  if (matchFlavours(prevBlock, ['affine:edgeless-text'])) {\n    return true;\n  }\n\n  // @ts-ignore TODO: should be fixed after database model is migrated to affine-models\n  if (matchFlavours(parent, ['affine:database'])) {\n    doc.deleteBlock(model);\n    focusTextModel(editorHost.std, prevBlock.id, prevBlock.text?.yText.length);\n    return true;\n  }\n\n  return false;\n}\n\nfunction handleNoPreviousSibling(editorHost: EditorHost, model: ExtendedModel) {\n  const doc = model.doc;\n  const text = model.text;\n  const parent = doc.getParent(model);\n  if (!parent) return false;\n  const titleEditor = getDocTitleInlineEditor(editorHost);\n  // Probably no title, e.g. in edgeless mode\n  if (!titleEditor) {\n    if (\n      matchFlavours(parent, ['affine:edgeless-text']) ||\n      model.children.length > 0\n    ) {\n      doc.deleteBlock(model, {\n        bringChildrenTo: parent,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  const rootModel = model.doc.root as RootBlockModel;\n  const title = rootModel.title;\n\n  doc.captureSync();\n  let textLength = 0;\n  if (text) {\n    textLength = text.length;\n    title.join(text);\n  }\n\n  // Preserve at least one block to be able to focus on container click\n  if (doc.getNext(model) || model.children.length > 0) {\n    const parent = doc.getParent(model);\n    if (!parent) return false;\n    doc.deleteBlock(model, {\n      bringChildrenTo: parent,\n    });\n  } else {\n    text?.clear();\n  }\n  focusTitle(editorHost, title.length - textLength);\n  return true;\n}\n"]}