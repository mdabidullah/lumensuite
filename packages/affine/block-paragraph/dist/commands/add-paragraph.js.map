{"version":3,"file":"add-paragraph.js","sourceRoot":"","sources":["../../src/commands/add-paragraph.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,cAAc,EAAE,MAAM,yCAAyC,CAAC;AAEzE;;GAEG;AACH,MAAM,CAAC,MAAM,mBAAmB,GAM5B,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;IAChB,MAAM,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC;IACpB,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,GAAG,CAAC;IAC/B,GAAG,CAAC,WAAW,EAAE,CAAC;IAElB,IAAI,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;IAC1B,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,MAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACpC,OAAO,GAAG,IAAI,EAAE,OAAO,CAAC;IAC1B,CAAC;IACD,IAAI,CAAC,OAAO;QAAE,OAAO;IAErB,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC;IAC3C,IAAI,CAAC,KAAK;QAAE,OAAO;IAEnB,IAAI,EAAU,CAAC;IACf,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QAC9B,UAAU;QACV,OAAO;QACP,QAAQ;QACR,EAAE;QACF,SAAS;QACT,MAAM;QACN,MAAM;QACN,QAAQ;QACR,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,kBAAkB,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IACtD,CAAC;SAAM,CAAC;QACN,MAAM,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,MAAM;YAAE,OAAO;QACpB,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,KAAK,GAAG,CAAC;YAAE,OAAO;QACtB,UAAU;QACV,OAAO;QACP,EAAE;QACF,SAAS;QACT,MAAM;QACN,IAAI;QACJ,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,kBAAkB,EAAE,EAAE,EAAE,MAAM,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,cAAc,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IACxB,OAAO,IAAI,CAAC,EAAE,oBAAoB,EAAE,EAAE,EAAE,CAAC,CAAC;AAC5C,CAAC,CAAC","sourcesContent":["import type { Command } from '@blocksuite/block-std';\n\nimport { focusTextModel } from '@blocksuite/affine-components/rich-text';\n\n/**\n * Add a paragraph next to the current block.\n */\nexport const addParagraphCommand: Command<\n  never,\n  'paragraphConvertedId',\n  {\n    blockId?: string;\n  }\n> = (ctx, next) => {\n  const { std } = ctx;\n  const { doc, selection } = std;\n  doc.captureSync();\n\n  let blockId = ctx.blockId;\n  if (!blockId) {\n    const text = selection.find('text');\n    blockId = text?.blockId;\n  }\n  if (!blockId) return;\n\n  const model = doc.getBlock(blockId)?.model;\n  if (!model) return;\n\n  let id: string;\n  if (model.children.length > 0) {\n    // before:\n    // aaa|\n    //   bbb\n    //\n    // after:\n    // aaa\n    //   |\n    //   bbb\n    id = doc.addBlock('affine:paragraph', {}, model, 0);\n  } else {\n    const parent = doc.getParent(model);\n    if (!parent) return;\n    const index = parent.children.indexOf(model);\n    if (index < 0) return;\n    // before:\n    // aaa|\n    //\n    // after:\n    // aaa\n    // |\n    id = doc.addBlock('affine:paragraph', {}, parent, index + 1);\n  }\n\n  focusTextModel(std, id);\n  return next({ paragraphConvertedId: id });\n};\n\ndeclare global {\n  namespace BlockSuite {\n    interface Commands {\n      addParagraph: typeof addParagraphCommand;\n    }\n  }\n}\n"]}