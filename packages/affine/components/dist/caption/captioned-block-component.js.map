{"version":3,"file":"captioned-block-component.js","sourceRoot":"","sources":["../../src/caption/captioned-block-component.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,cAAc,EAAqB,MAAM,uBAAuB,CAAC;AAC1E,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AACpC,OAAO,EAAE,SAAS,EAAY,GAAG,EAAE,MAAM,uBAAuB,CAAC;AACjE,OAAO,EAAkB,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAIvE,MAAM,OAAO,uBAIX,SAAQ,cAA0C;IAClD,IAAI,aAAa;QACf,IAAI,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;YAC5D,OAAO,CAAC,KAAK,CACX,qEAAqE,CACtE,CAAC;QACJ,CAAC;QACD,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;IACtC,CAAC;IAED;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC3C,CAAC;IAEO,iBAAiB,CAAC,OAAgB;QACxC,MAAM,KAAK,GAAG,QAAQ,CAAC;YACrB,QAAQ,EAAE,UAAU;YACpB,GAAG,IAAI,CAAC,oBAAoB;SAC7B,CAAC,CAAC;QAEH,OAAO,IAAI,CAAA,cAAc,KAAK;QAC1B,OAAO;QACP,IAAI,CAAC,gBAAgB;YACrB,CAAC,CAAC,IAAI,CAAA;cACA,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;mCACN;YAC3B,CAAC,CAAC,OAAO;QACT,IAAI,CAAC,kBAAkB;YACvB,CAAC,CAAC,IAAI,CAAA,kCAAkC,IAAI,4BAA4B;YACxE,CAAC,CAAC,OAAO;QACT,IAAI,CAAC,YAAY;YACjB,CAAC,CAAC,IAAI,CAAA,4BAA4B,IAAI,sBAAsB;YAC5D,CAAC,CAAC,OAAO;WACN,CAAC;IACV,CAAC;IAGD,sCACE,SAAS,EAAsB,CAAC;IAFlC,qEAAqE;IACrE,IAAiB,iBAAiB,uDACA;IADlC,IAAiB,iBAAiB,6DACA;IAElC,yCAAiE,SAAS,CAAC;IAA3E,IAAmB,oBAAoB,0DAAoC;IAA3E,IAAmB,oBAAoB,gEAAoC;IAE3E,uCAAwC,IAAI,CAAC;IAA7C,IAAmB,kBAAkB,wDAAQ;IAA7C,IAAmB,kBAAkB,8DAAQ;IAE7C,qCAAsC,KAAK,CAAC;IAA5C,IAAmB,gBAAgB,sDAAS;IAA5C,IAAmB,gBAAgB,4DAAS;IAE5C,iCAAkC,KAAK,CAAC;IAAxC,IAAmB,YAAY,kDAAS;IAAxC,IAAmB,YAAY,wDAAS;CACzC","sourcesContent":["import type { BlockModel } from '@lumensuite/store';\n\nimport { BlockComponent, type BlockService } from '@lumensuite/block-std';\nimport { html, nothing } from 'lit';\nimport { createRef, type Ref, ref } from 'lit/directives/ref.js';\nimport { type StyleInfo, styleMap } from 'lit/directives/style-map.js';\n\nimport type { BlockCaptionEditor } from './block-caption.js';\n\nexport class CaptionedBlockComponent<\n  Model extends BlockModel = BlockModel,\n  Service extends BlockService = BlockService,\n  WidgetName extends string = string,\n> extends BlockComponent<Model, Service, WidgetName> {\n  get captionEditor() {\n    if (!this.useCaptionEditor || !this._captionEditorRef.value) {\n      console.error(\n        'Oops! Please enable useCaptionEditor before accessing captionEditor'\n      );\n    }\n    return this._captionEditorRef.value;\n  }\n\n  constructor() {\n    super();\n    this.addRenderer(this._renderWithWidget);\n  }\n\n  private _renderWithWidget(content: unknown) {\n    const style = styleMap({\n      position: 'relative',\n      ...this.blockContainerStyles,\n    });\n\n    return html`<div style=${style} class=\"affine-block-component\">\n      ${content}\n      ${this.useCaptionEditor\n        ? html`<block-caption-editor\n            ${ref(this._captionEditorRef)}\n          ></block-caption-editor>`\n        : nothing}\n      ${this.showBlockSelection\n        ? html`<affine-block-selection .block=${this}></affine-block-selection>`\n        : nothing}\n      ${this.useZeroWidth\n        ? html`<block-zero-width .block=${this}></block-zero-width>`\n        : nothing}\n    </div>`;\n  }\n\n  // There may be multiple block-caption-editors in a nested structure.\n  private accessor _captionEditorRef: Ref<BlockCaptionEditor> =\n    createRef<BlockCaptionEditor>();\n\n  protected accessor blockContainerStyles: StyleInfo | undefined = undefined;\n\n  protected accessor showBlockSelection = true;\n\n  protected accessor useCaptionEditor = false;\n\n  protected accessor useZeroWidth = false;\n}\n"]}