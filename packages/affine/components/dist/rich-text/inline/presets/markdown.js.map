{"version":3,"file":"markdown.js","sourceRoot":"","sources":["../../../../src/rich-text/inline/presets/markdown.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-useless-escape */\n\nimport type { BlockComponent, ExtensionType } from '@blocksuite/block-std';\n\nimport {\n  KEYBOARD_ALLOW_DEFAULT,\n  KEYBOARD_PREVENT_DEFAULT,\n} from '@blocksuite/inline';\n\nimport { InlineMarkdownExtension } from '../../extension/markdown-matcher.js';\n\n// inline markdown match rules:\n// covert: ***test*** + space\n// covert: ***t est*** + space\n// not convert: *** test*** + space\n// not convert: ***test *** + space\n// not convert: *** test *** + space\n\nexport const BoldItalicMarkdown = InlineMarkdownExtension({\n  name: 'bolditalic',\n  pattern: /(?:\\*\\*\\*)([^\\s\\*](?:[^*]*?[^\\s\\*])?)(?:\\*\\*\\*)$/g,\n  action: ({ inlineEditor, prefixText, inlineRange, pattern, undoManager }) => {\n    const match = pattern.exec(prefixText);\n    if (!match) {\n      return KEYBOARD_ALLOW_DEFAULT;\n    }\n\n    const annotatedText = match[0];\n    const startIndex = inlineRange.index - annotatedText.length;\n\n    inlineEditor.insertText(\n      {\n        index: startIndex + annotatedText.length,\n        length: 0,\n      },\n      ' '\n    );\n    inlineEditor.setInlineRange({\n      index: startIndex + annotatedText.length + 1,\n      length: 0,\n    });\n\n    undoManager.stopCapturing();\n\n    inlineEditor.formatText(\n      {\n        index: startIndex,\n        length: annotatedText.length,\n      },\n      {\n        bold: true,\n        italic: true,\n      }\n    );\n\n    inlineEditor.deleteText({\n      index: startIndex + annotatedText.length,\n      length: 1,\n    });\n    inlineEditor.deleteText({\n      index: startIndex + annotatedText.length - 3,\n      length: 3,\n    });\n    inlineEditor.deleteText({\n      index: startIndex,\n      length: 3,\n    });\n\n    inlineEditor.setInlineRange({\n      index: startIndex + annotatedText.length - 6,\n      length: 0,\n    });\n\n    return KEYBOARD_PREVENT_DEFAULT;\n  },\n});\n\nexport const BoldMarkdown = InlineMarkdownExtension({\n  name: 'bold',\n  pattern: /(?:\\*\\*)([^\\s\\*](?:[^*]*?[^\\s\\*])?)(?:\\*\\*)$/g,\n  action: ({ inlineEditor, prefixText, inlineRange, pattern, undoManager }) => {\n    const match = pattern.exec(prefixText);\n    if (!match) {\n      return KEYBOARD_ALLOW_DEFAULT;\n    }\n    const annotatedText = match[0];\n    const startIndex = inlineRange.index - annotatedText.length;\n\n    inlineEditor.insertText(\n      {\n        index: startIndex + annotatedText.length,\n        length: 0,\n      },\n      ' '\n    );\n    inlineEditor.setInlineRange({\n      index: startIndex + annotatedText.length + 1,\n      length: 0,\n    });\n\n    undoManager.stopCapturing();\n\n    inlineEditor.formatText(\n      {\n        index: startIndex,\n        length: annotatedText.length,\n      },\n      {\n        bold: true,\n      }\n    );\n\n    inlineEditor.deleteText({\n      index: startIndex + annotatedText.length,\n      length: 1,\n    });\n    inlineEditor.deleteText({\n      index: startIndex + annotatedText.length - 2,\n      length: 2,\n    });\n    inlineEditor.deleteText({\n      index: startIndex,\n      length: 2,\n    });\n\n    inlineEditor.setInlineRange({\n      index: startIndex + annotatedText.length - 4,\n      length: 0,\n    });\n\n    return KEYBOARD_PREVENT_DEFAULT;\n  },\n});\n\nexport const ItalicExtension = InlineMarkdownExtension({\n  name: 'italic',\n  pattern: /(?:\\*)([^\\s\\*](?:[^*]*?[^\\s\\*])?)(?:\\*)$/g,\n  action: ({ inlineEditor, prefixText, inlineRange, pattern, undoManager }) => {\n    const match = pattern.exec(prefixText);\n    if (!match) {\n      return KEYBOARD_ALLOW_DEFAULT;\n    }\n    const annotatedText = match[0];\n    const startIndex = inlineRange.index - annotatedText.length;\n\n    inlineEditor.insertText(\n      {\n        index: startIndex + annotatedText.length,\n        length: 0,\n      },\n      ' '\n    );\n    inlineEditor.setInlineRange({\n      index: startIndex + annotatedText.length + 1,\n      length: 0,\n    });\n\n    undoManager.stopCapturing();\n\n    inlineEditor.formatText(\n      {\n        index: startIndex,\n        length: annotatedText.length,\n      },\n      {\n        italic: true,\n      }\n    );\n\n    inlineEditor.deleteText({\n      index: startIndex + annotatedText.length,\n      length: 1,\n    });\n    inlineEditor.deleteText({\n      index: startIndex + annotatedText.length - 1,\n      length: 1,\n    });\n    inlineEditor.deleteText({\n      index: startIndex,\n      length: 1,\n    });\n\n    inlineEditor.setInlineRange({\n      index: startIndex + annotatedText.length - 2,\n      length: 0,\n    });\n\n    return KEYBOARD_PREVENT_DEFAULT;\n  },\n});\n\nexport const StrikethroughExtension = InlineMarkdownExtension({\n  name: 'strikethrough',\n  pattern: /(?:~~)([^\\s~](?:[^~]*?[^\\s~])?)(?:~~)$/g,\n  action: ({ inlineEditor, prefixText, inlineRange, pattern, undoManager }) => {\n    const match = pattern.exec(prefixText);\n    if (!match) {\n      return KEYBOARD_ALLOW_DEFAULT;\n    }\n    const annotatedText = match[0];\n    const startIndex = inlineRange.index - annotatedText.length;\n\n    inlineEditor.insertText(\n      {\n        index: startIndex + annotatedText.length,\n        length: 0,\n      },\n      ' '\n    );\n    inlineEditor.setInlineRange({\n      index: startIndex + annotatedText.length + 1,\n      length: 0,\n    });\n\n    undoManager.stopCapturing();\n\n    inlineEditor.formatText(\n      {\n        index: startIndex,\n        length: annotatedText.length,\n      },\n      {\n        strike: true,\n      }\n    );\n\n    inlineEditor.deleteText({\n      index: startIndex + annotatedText.length,\n      length: 1,\n    });\n    inlineEditor.deleteText({\n      index: startIndex + annotatedText.length - 2,\n      length: 2,\n    });\n    inlineEditor.deleteText({\n      index: startIndex,\n      length: 2,\n    });\n\n    inlineEditor.setInlineRange({\n      index: startIndex + annotatedText.length - 4,\n      length: 0,\n    });\n\n    return KEYBOARD_PREVENT_DEFAULT;\n  },\n});\n\nexport const UnderthroughExtension = InlineMarkdownExtension({\n  name: 'underthrough',\n  pattern: /(?:~)([^\\s~](?:[^~]*?[^\\s~])?)(?:~)$/g,\n  action: ({ inlineEditor, prefixText, inlineRange, pattern, undoManager }) => {\n    const match = pattern.exec(prefixText);\n    if (!match) {\n      return KEYBOARD_ALLOW_DEFAULT;\n    }\n    const annotatedText = match[0];\n    const startIndex = inlineRange.index - annotatedText.length;\n\n    inlineEditor.insertText(\n      {\n        index: startIndex + annotatedText.length,\n        length: 0,\n      },\n      ' '\n    );\n    inlineEditor.setInlineRange({\n      index: startIndex + annotatedText.length + 1,\n      length: 0,\n    });\n\n    undoManager.stopCapturing();\n\n    inlineEditor.formatText(\n      {\n        index: startIndex,\n        length: annotatedText.length,\n      },\n      {\n        underline: true,\n      }\n    );\n\n    inlineEditor.deleteText({\n      index: startIndex + annotatedText.length,\n      length: 1,\n    });\n    inlineEditor.deleteText({\n      index: inlineRange.index - 1,\n      length: 1,\n    });\n    inlineEditor.deleteText({\n      index: startIndex,\n      length: 1,\n    });\n\n    inlineEditor.setInlineRange({\n      index: startIndex + annotatedText.length - 2,\n      length: 0,\n    });\n\n    return KEYBOARD_PREVENT_DEFAULT;\n  },\n});\n\nexport const CodeExtension = InlineMarkdownExtension({\n  name: 'code',\n  pattern: /(?:`)([^\\s`](?:[^`]*?[^\\s`])?)(?:`)$/g,\n  action: ({ inlineEditor, prefixText, inlineRange, pattern, undoManager }) => {\n    const match = pattern.exec(prefixText);\n    if (!match) {\n      return KEYBOARD_ALLOW_DEFAULT;\n    }\n    const annotatedText = match[0];\n    const startIndex = inlineRange.index - annotatedText.length;\n\n    if (prefixText.match(/^([* \\n]+)$/g)) {\n      return KEYBOARD_ALLOW_DEFAULT;\n    }\n\n    inlineEditor.insertText(\n      {\n        index: startIndex + annotatedText.length,\n        length: 0,\n      },\n      ' '\n    );\n    inlineEditor.setInlineRange({\n      index: startIndex + annotatedText.length + 1,\n      length: 0,\n    });\n\n    undoManager.stopCapturing();\n\n    inlineEditor.formatText(\n      {\n        index: startIndex,\n        length: annotatedText.length,\n      },\n      {\n        code: true,\n      }\n    );\n\n    inlineEditor.deleteText({\n      index: startIndex + annotatedText.length,\n      length: 1,\n    });\n    inlineEditor.deleteText({\n      index: startIndex + annotatedText.length - 1,\n      length: 1,\n    });\n    inlineEditor.deleteText({\n      index: startIndex,\n      length: 1,\n    });\n\n    inlineEditor.setInlineRange({\n      index: startIndex + annotatedText.length - 2,\n      length: 0,\n    });\n\n    return KEYBOARD_PREVENT_DEFAULT;\n  },\n});\n\nexport const LinkExtension = InlineMarkdownExtension({\n  name: 'link',\n  pattern: /(?:\\[(.+?)\\])(?:\\((.+?)\\))$/g,\n  action: ({ inlineEditor, prefixText, inlineRange, pattern, undoManager }) => {\n    const startIndex = prefixText.search(pattern);\n    const matchedText = prefixText.match(pattern)?.[0];\n    const hrefText = prefixText.match(/(?:\\[(.*?)\\])/g)?.[0];\n    const hrefLink = prefixText.match(/(?:\\((.*?)\\))/g)?.[0];\n    if (startIndex === -1 || !matchedText || !hrefText || !hrefLink) {\n      return KEYBOARD_ALLOW_DEFAULT;\n    }\n    const start = inlineRange.index - matchedText.length;\n\n    inlineEditor.insertText(\n      {\n        index: inlineRange.index,\n        length: 0,\n      },\n      ' '\n    );\n    inlineEditor.setInlineRange({\n      index: inlineRange.index + 1,\n      length: 0,\n    });\n\n    undoManager.stopCapturing();\n\n    inlineEditor.formatText(\n      {\n        index: start,\n        length: hrefText.length,\n      },\n      {\n        link: hrefLink.slice(1, hrefLink.length - 1),\n      }\n    );\n\n    inlineEditor.deleteText({\n      index: inlineRange.index + matchedText.length,\n      length: 1,\n    });\n    inlineEditor.deleteText({\n      index: inlineRange.index - hrefLink.length - 1,\n      length: hrefLink.length + 1,\n    });\n    inlineEditor.deleteText({\n      index: start,\n      length: 1,\n    });\n\n    inlineEditor.setInlineRange({\n      index: start + hrefText.length - 1,\n      length: 0,\n    });\n\n    return KEYBOARD_PREVENT_DEFAULT;\n  },\n});\n\nexport const LatexExtension = InlineMarkdownExtension({\n  name: 'latex',\n  /* eslint-disable no-useless-escape */\n  pattern:\n    /(?:\\$\\$)(?<content>[^\\s\\$]+)(?:\\$\\$)$|(?<blockPrefix>\\$\\$\\$\\$)|(?<inlinePrefix>\\$\\$)$/g,\n  action: ({ inlineEditor, prefixText, inlineRange, pattern, undoManager }) => {\n    const match = pattern.exec(prefixText);\n    if (!match || !match.groups) {\n      return KEYBOARD_ALLOW_DEFAULT;\n    }\n    const content = match.groups['content'];\n    const inlinePrefix = match.groups['inlinePrefix'];\n    const blockPrefix = match.groups['blockPrefix'];\n\n    if (blockPrefix === '$$$$') {\n      inlineEditor.insertText(\n        {\n          index: inlineRange.index,\n          length: 0,\n        },\n        ' '\n      );\n      inlineEditor.setInlineRange({\n        index: inlineRange.index + 1,\n        length: 0,\n      });\n\n      undoManager.stopCapturing();\n\n      const blockComponent =\n        inlineEditor.rootElement.closest<BlockComponent>('[data-block-id]');\n      if (!blockComponent) return KEYBOARD_ALLOW_DEFAULT;\n\n      const doc = blockComponent.doc;\n      const parentComponent = blockComponent.parentComponent;\n      if (!parentComponent) return KEYBOARD_ALLOW_DEFAULT;\n\n      const index = parentComponent.model.children.indexOf(\n        blockComponent.model\n      );\n      if (index === -1) return KEYBOARD_ALLOW_DEFAULT;\n\n      inlineEditor.deleteText({\n        index: inlineRange.index - 4,\n        length: 5,\n      });\n\n      const id = doc.addBlock(\n        'affine:latex',\n        {\n          latex: '',\n        },\n        parentComponent.model,\n        index + 1\n      );\n      blockComponent.host.updateComplete\n        .then(() => {\n          const latexBlock = blockComponent.std.view.getBlock(id);\n          if (!latexBlock || latexBlock.flavour !== 'affine:latex') return;\n\n          //FIXME(@Flrande): wait for refactor\n          // @ts-ignore\n          latexBlock.toggleEditor();\n        })\n        .catch(console.error);\n\n      return KEYBOARD_PREVENT_DEFAULT;\n    }\n\n    if (inlinePrefix === '$$') {\n      inlineEditor.insertText(\n        {\n          index: inlineRange.index,\n          length: 0,\n        },\n        ' '\n      );\n      inlineEditor.setInlineRange({\n        index: inlineRange.index + 1,\n        length: 0,\n      });\n\n      undoManager.stopCapturing();\n\n      inlineEditor.deleteText({\n        index: inlineRange.index - 2,\n        length: 3,\n      });\n      inlineEditor.insertText(\n        {\n          index: inlineRange.index - 2,\n          length: 0,\n        },\n        ' '\n      );\n      inlineEditor.formatText(\n        {\n          index: inlineRange.index - 2,\n          length: 1,\n        },\n        {\n          latex: '',\n        }\n      );\n\n      inlineEditor\n        .waitForUpdate()\n        .then(async () => {\n          await inlineEditor.waitForUpdate();\n\n          const textPoint = inlineEditor.getTextPoint(\n            inlineRange.index - 2 + 1\n          );\n          if (!textPoint) return;\n\n          const [text] = textPoint;\n          const latexNode = text.parentElement?.closest('affine-latex-node');\n          if (!latexNode) return;\n\n          latexNode.toggleEditor();\n        })\n        .catch(console.error);\n\n      return KEYBOARD_PREVENT_DEFAULT;\n    }\n\n    if (!content || content.length === 0) {\n      return KEYBOARD_ALLOW_DEFAULT;\n    }\n\n    inlineEditor.insertText(\n      {\n        index: inlineRange.index,\n        length: 0,\n      },\n      ' '\n    );\n    inlineEditor.setInlineRange({\n      index: inlineRange.index + 1,\n      length: 0,\n    });\n\n    undoManager.stopCapturing();\n\n    const startIndex = inlineRange.index - 2 - content.length - 2;\n    inlineEditor.deleteText({\n      index: startIndex,\n      length: 2 + content.length + 2,\n    });\n    inlineEditor.insertText(\n      {\n        index: startIndex,\n        length: 0,\n      },\n      ' '\n    );\n    inlineEditor.formatText(\n      {\n        index: startIndex,\n        length: 1,\n      },\n      {\n        latex: String.raw`${content}`,\n      }\n    );\n\n    inlineEditor.setInlineRange({\n      index: startIndex + 1,\n      length: 0,\n    });\n\n    return KEYBOARD_PREVENT_DEFAULT;\n  },\n});\n\nexport const MarkdownExtensions: ExtensionType[] = [\n  BoldItalicMarkdown,\n  BoldMarkdown,\n  ItalicExtension,\n  StrikethroughExtension,\n  UnderthroughExtension,\n  CodeExtension,\n  LinkExtension,\n  LatexExtension,\n];\n"]}