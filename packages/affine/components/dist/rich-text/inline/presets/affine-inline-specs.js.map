{"version":3,"file":"affine-inline-specs.js","sourceRoot":"","sources":["../../../../src/rich-text/inline/presets/affine-inline-specs.ts"],"names":[],"mappings":"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","sourcesContent":["import type { InlineEditor, InlineRootElement } from '@blocksuite/inline';\n\nimport { ReferenceInfoSchema } from '@blocksuite/affine-model';\nimport { StdIdentifier } from '@blocksuite/block-std';\nimport { html } from 'lit';\nimport { z } from 'zod';\n\nimport {\n  type AffineTextAttributes,\n  InlineSpecExtension,\n} from '../../extension/index.js';\nimport { ReferenceNodeConfig } from './nodes/reference-node/reference-config.js';\n\nexport type AffineInlineEditor = InlineEditor<AffineTextAttributes>;\nexport type AffineInlineRootElement = InlineRootElement<AffineTextAttributes>;\n\nexport const BoldInlineSpecExtension = InlineSpecExtension({\n  name: 'bold',\n  schema: z.literal(true).optional().nullable().catch(undefined),\n  match: delta => {\n    return !!delta.attributes?.bold;\n  },\n  renderer: ({ delta }) => {\n    return html`<affine-text .delta=${delta}></affine-text>`;\n  },\n});\n\nexport const ItalicInlineSpecExtension = InlineSpecExtension({\n  name: 'italic',\n  schema: z.literal(true).optional().nullable().catch(undefined),\n  match: delta => {\n    return !!delta.attributes?.italic;\n  },\n  renderer: ({ delta }) => {\n    return html`<affine-text .delta=${delta}></affine-text>`;\n  },\n});\n\nexport const UnderlineInlineSpecExtension = InlineSpecExtension({\n  name: 'underline',\n  schema: z.literal(true).optional().nullable().catch(undefined),\n  match: delta => {\n    return !!delta.attributes?.underline;\n  },\n  renderer: ({ delta }) => {\n    return html`<affine-text .delta=${delta}></affine-text>`;\n  },\n});\n\nexport const StrikeInlineSpecExtension = InlineSpecExtension({\n  name: 'strike',\n  schema: z.literal(true).optional().nullable().catch(undefined),\n  match: delta => {\n    return !!delta.attributes?.strike;\n  },\n  renderer: ({ delta }) => {\n    return html`<affine-text .delta=${delta}></affine-text>`;\n  },\n});\n\nexport const CodeInlineSpecExtension = InlineSpecExtension({\n  name: 'code',\n  schema: z.literal(true).optional().nullable().catch(undefined),\n  match: delta => {\n    return !!delta.attributes?.code;\n  },\n  renderer: ({ delta }) => {\n    return html`<affine-text .delta=${delta}></affine-text>`;\n  },\n});\n\nexport const BackgroundInlineSpecExtension = InlineSpecExtension({\n  name: 'background',\n  schema: z.string().optional().nullable().catch(undefined),\n  match: delta => {\n    return !!delta.attributes?.background;\n  },\n  renderer: ({ delta }) => {\n    return html`<affine-text .delta=${delta}></affine-text>`;\n  },\n});\n\nexport const ColorInlineSpecExtension = InlineSpecExtension({\n  name: 'color',\n  schema: z.string().optional().nullable().catch(undefined),\n  match: delta => {\n    return !!delta.attributes?.color;\n  },\n  renderer: ({ delta }) => {\n    return html`<affine-text .delta=${delta}></affine-text>`;\n  },\n});\n\nexport const LatexInlineSpecExtension = InlineSpecExtension(\n  'latex',\n  provider => {\n    const std = provider.get(StdIdentifier);\n    return {\n      name: 'latex',\n      schema: z.string().optional().nullable().catch(undefined),\n      match: delta => typeof delta.attributes?.latex === 'string',\n      renderer: ({ delta, selected, editor, startOffset, endOffset }) => {\n        return html`<affine-latex-node\n          .std=${std}\n          .delta=${delta}\n          .selected=${selected}\n          .editor=${editor}\n          .startOffset=${startOffset}\n          .endOffset=${endOffset}\n        ></affine-latex-node>`;\n      },\n      embed: true,\n    };\n  }\n);\n\nexport const ReferenceInlineSpecExtension = InlineSpecExtension(\n  'reference',\n  provider => {\n    const std = provider.get(StdIdentifier);\n    const config = new ReferenceNodeConfig(std);\n    return {\n      name: 'reference',\n      schema: z\n        .object({\n          type: z.enum([\n            // @deprecated Subpage is deprecated, use LinkedPage instead\n            'Subpage',\n            'LinkedPage',\n          ]),\n        })\n        .merge(ReferenceInfoSchema)\n        .optional()\n        .nullable()\n        .catch(undefined),\n      match: delta => {\n        return !!delta.attributes?.reference;\n      },\n      renderer: ({ delta, selected }) => {\n        return html`<affine-reference\n          .delta=${delta}\n          .selected=${selected}\n          .config=${config}\n        ></affine-reference>`;\n      },\n      embed: true,\n    };\n  }\n);\n\nexport const LinkInlineSpecExtension = InlineSpecExtension({\n  name: 'link',\n  schema: z.string().optional().nullable().catch(undefined),\n  match: delta => {\n    return !!delta.attributes?.link;\n  },\n  renderer: ({ delta }) => {\n    return html`<affine-link .delta=${delta}></affine-link>`;\n  },\n});\n\nexport const LatexEditorUnitSpecExtension = InlineSpecExtension({\n  name: 'latex-editor-unit',\n  schema: z.undefined(),\n  match: () => true,\n  renderer: ({ delta }) => {\n    return html`<latex-editor-unit .delta=${delta}></latex-editor-unit>`;\n  },\n});\n\nexport const InlineSpecExtensions = [\n  BoldInlineSpecExtension,\n  ItalicInlineSpecExtension,\n  UnderlineInlineSpecExtension,\n  StrikeInlineSpecExtension,\n  CodeInlineSpecExtension,\n  BackgroundInlineSpecExtension,\n  ColorInlineSpecExtension,\n  LatexInlineSpecExtension,\n  ReferenceInlineSpecExtension,\n  LinkInlineSpecExtension,\n  LatexEditorUnitSpecExtension,\n];\n"]}