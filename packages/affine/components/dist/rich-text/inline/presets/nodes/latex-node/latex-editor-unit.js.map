{"version":3,"file":"latex-editor-unit.js","sourceRoot":"","sources":["../../../../../../src/rich-text/inline/presets/nodes/latex-node/latex-editor-unit.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAO,EAAE,iBAAiB,EAAE,MAAM,uBAAuB,CAAC;AAC1D,OAAO,EAAoB,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AACxE,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;IAG1C,eAAe;4BAD3B,aAAa,CAAC,mBAAmB,CAAC;;;;sBACE,iBAAiB;;;;+BAAzB,SAAQ,WAAiB;;;;iCAsCnD,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;YAC/B,oKAAS,KAAK,6BAAL,KAAK,qFAEZ;YAzCJ,6KA0CC;;;YA1CY,uDAAe;;QAC1B,IAAI,SAAS;YACX,OAAO,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;QAC3C,CAAC;QAED,IAAI,QAAQ;YACV,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACnC,CAAC;QAEQ,MAAM;YACb,MAAM,YAAY,GAAG,IAAI,CAAA;sBACP,IAAI,CAAC,KAAK,CAAC,MAAM;aAC1B,CAAC;YAEV,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACjC,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/B,IAAI,CAAC,SAAS,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAC5B,OAAO,YAAY,CAAC;YACtB,CAAC;YAED,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;YAC1C,MAAM,MAAM,GAAG,SAAS,CAAC,gBAAgB,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACjE,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBACxB,OAAO,YAAY,CAAC;YACtB,CAAC;YAED,OAAO,IAAI,CAAA;SACN,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBACpB,OAAO,IAAI,CAAA;iBACF,KAAK,CAAC,OAAO;kBACZ,QAAQ,CAAC;oBACf,KAAK,EAAE,KAAK,CAAC,KAAK;iBACnB,CAAC;mBACO,CAAC;YACd,CAAC,CAAC;MACF,CAAC;QACL,CAAC;QAGD,uEAAoD;YAClD,MAAM,EAAE,gBAAgB;SACzB,EAAC;QAFF,IAAS,KAAK,2CAEZ;QAFF,IAAS,KAAK,iDAEZ;;;;;;;;SAzCS,eAAe","sourcesContent":["import type { AffineTextAttributes } from '@blocksuite/affine-components/rich-text';\n\nimport { ShadowlessElement } from '@blocksuite/block-std';\nimport { type DeltaInsert, ZERO_WIDTH_SPACE } from '@blocksuite/inline';\nimport { html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\n\n@customElement('latex-editor-unit')\nexport class LatexEditorUnit extends ShadowlessElement {\n  get latexMenu() {\n    return this.closest('latex-editor-menu');\n  }\n\n  get vElement() {\n    return this.closest('v-element');\n  }\n\n  override render() {\n    const plainContent = html`<span\n      ><v-text .str=${this.delta.insert}></v-text\n    ></span>`;\n\n    const latexMenu = this.latexMenu;\n    const vElement = this.vElement;\n    if (!latexMenu || !vElement) {\n      return plainContent;\n    }\n\n    const lineIndex = this.vElement.lineIndex;\n    const tokens = latexMenu.highlightTokens$.value[lineIndex] ?? [];\n    if (tokens.length === 0) {\n      return plainContent;\n    }\n\n    return html`<span\n      >${tokens.map(token => {\n        return html`<v-text\n          .str=${token.content}\n          style=${styleMap({\n            color: token.color,\n          })}\n        ></v-text>`;\n      })}</span\n    >`;\n  }\n\n  @property({ attribute: false })\n  accessor delta: DeltaInsert<AffineTextAttributes> = {\n    insert: ZERO_WIDTH_SPACE,\n  };\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'latex-editor-unit': LatexEditorUnit;\n  }\n}\n"]}