{"version":3,"file":"format.js","sourceRoot":"","sources":["../../../src/rich-text/keymap/format.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,iBAAiB,EAAE,MAAM,oBAAoB,CAAC;AAEvD,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,GAAkB,EAAE,EAAE,CACrD,iBAAiB;KACd,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC;KAC/B,MAAM,CACL,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE;IACd,OAAO;QACL,GAAG,GAAG;QACN,CAAC,MAAM,CAAC,MAAgB,CAAC,EAAE,GAAG,CAAC,EAAE;YAC/B,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG,GAAG,CAAC;YAC/B,IAAI,GAAG,CAAC,QAAQ;gBAAE,OAAO;YAEzB,MAAM,aAAa,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC7C,IAAI,CAAC,aAAa;gBAAE,OAAO;YAE3B,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACxB,GAAG,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC;YAC9C,OAAO,IAAI,CAAC;QACd,CAAC;KACF,CAAC;AACJ,CAAC,EACD,EAAoC,CACrC,CAAC","sourcesContent":["import type { BlockStdScope, UIEventHandler } from '@lumensuite/block-std';\n\nimport { textFormatConfigs } from '../format/index.js';\n\nexport const textFormatKeymap = (std: BlockStdScope) =>\n  textFormatConfigs\n    .filter(config => config.hotkey)\n    .reduce(\n      (acc, config) => {\n        return {\n          ...acc,\n          [config.hotkey as string]: ctx => {\n            const { doc, selection } = std;\n            if (doc.readonly) return;\n\n            const textSelection = selection.find('text');\n            if (!textSelection) return;\n\n            config.action(std.host);\n            ctx.get('keyboardState').raw.preventDefault();\n            return true;\n          },\n        };\n      },\n      {} as Record<string, UIEventHandler>\n    );\n"]}