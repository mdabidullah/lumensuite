{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../src/rich-text/format/config.ts"],"names":[],"mappings":"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","sourcesContent":["import type { EditorHost } from '@blocksuite/block-std';\nimport type { TemplateResult } from 'lit';\n\nimport {\n  BoldIcon,\n  CodeIcon,\n  ItalicIcon,\n  LinkIcon,\n  StrikethroughIcon,\n  UnderlineIcon,\n} from '@blocksuite/affine-components/icons';\n\nexport interface TextFormatConfig {\n  id: string;\n  name: string;\n  icon: TemplateResult<1>;\n  hotkey?: string;\n  activeWhen: (host: EditorHost) => boolean;\n  action: (host: EditorHost) => void;\n}\n\nexport const textFormatConfigs: TextFormatConfig[] = [\n  {\n    id: 'bold',\n    name: 'Bold',\n    icon: BoldIcon,\n    hotkey: 'Mod-b',\n    activeWhen: host => {\n      const [result] = host.std.command\n        .chain()\n        .isTextStyleActive({ key: 'bold' })\n        .run();\n      return result;\n    },\n    action: host => {\n      host.std.command.chain().toggleBold().run();\n    },\n  },\n  {\n    id: 'italic',\n    name: 'Italic',\n    icon: ItalicIcon,\n    hotkey: 'Mod-i',\n    activeWhen: host => {\n      const [result] = host.std.command\n        .chain()\n        .isTextStyleActive({ key: 'italic' })\n        .run();\n      return result;\n    },\n    action: host => {\n      host.std.command.chain().toggleItalic().run();\n    },\n  },\n  {\n    id: 'underline',\n    name: 'Underline',\n    icon: UnderlineIcon,\n    hotkey: 'Mod-u',\n    activeWhen: host => {\n      const [result] = host.std.command\n        .chain()\n        .isTextStyleActive({ key: 'underline' })\n        .run();\n      return result;\n    },\n    action: host => {\n      host.std.command.chain().toggleUnderline().run();\n    },\n  },\n  {\n    id: 'strike',\n    name: 'Strikethrough',\n    icon: StrikethroughIcon,\n    hotkey: 'Mod-shift-s',\n    activeWhen: host => {\n      const [result] = host.std.command\n        .chain()\n        .isTextStyleActive({ key: 'strike' })\n        .run();\n      return result;\n    },\n    action: host => {\n      host.std.command.chain().toggleStrike().run();\n    },\n  },\n  {\n    id: 'code',\n    name: 'Code',\n    icon: CodeIcon,\n    hotkey: 'Mod-e',\n    activeWhen: host => {\n      const [result] = host.std.command\n        .chain()\n        .isTextStyleActive({ key: 'code' })\n        .run();\n      return result;\n    },\n    action: host => {\n      host.std.command.chain().toggleCode().run();\n    },\n  },\n  {\n    id: 'link',\n    name: 'Link',\n    icon: LinkIcon,\n    hotkey: 'Mod-k',\n    activeWhen: host => {\n      const [result] = host.std.command\n        .chain()\n        .isTextStyleActive({ key: 'link' })\n        .run();\n      return result;\n    },\n    action: host => {\n      host.std.command.chain().toggleLink().run();\n    },\n  },\n];\n"]}