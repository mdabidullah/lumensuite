{"version":3,"file":"toolbar.js","sourceRoot":"","sources":["../../src/toolbar/toolbar.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,kCAAkC,CAAC;AAC9D,OAAO,EAAE,eAAe,EAAE,MAAM,iCAAiC,CAAC;AAClE,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACvD,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;IAGrC,aAAa;4BADzB,aAAa,CAAC,gBAAgB,CAAC;;;;sBACG,cAAc,CAAC,UAAU,CAAC;6BAAlC,SAAQ,WAA0B;;;;YAA7D,6KAsCC;;;;iBArCiB,WAAM,GAAG,GAAG,CAAA;;QAEtB,UAAU;;;;;;;;;;;;;;;;;;;;GAoBf,AAtBqB,CAsBpB;QAEO,iBAAiB;YACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;YAE1B,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,EAAE,aAAa,EAAE,CAAC,CAAe,EAAE,EAAE;gBACtE,CAAC,CAAC,eAAe,EAAE,CAAC;gBACpB,CAAC,CAAC,cAAc,EAAE,CAAC;YACrB,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC;QACjE,CAAC;QAEQ,MAAM;YACb,OAAO,IAAI,CAAA,eAAe,CAAC;QAC7B,CAAC;;YArCU,uDAAa;;;;;SAAb,aAAa","sourcesContent":["import { PANEL_BASE } from '@blocksuite/affine-shared/styles';\nimport { stopPropagation } from '@blocksuite/affine-shared/utils';\nimport { WithDisposable } from '@blocksuite/block-std';\nimport { css, html, LitElement } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\n@customElement('editor-toolbar')\nexport class EditorToolbar extends WithDisposable(LitElement) {\n  static override styles = css`\n    :host {\n      ${PANEL_BASE};\n      height: 36px;\n      box-sizing: content-box;\n    }\n\n    :host([data-without-bg]) {\n      border-color: transparent;\n      background: transparent;\n      box-shadow: none;\n    }\n\n    ::slotted(*) {\n      display: flex;\n      height: 100%;\n      justify-content: center;\n      align-items: center;\n      gap: 8px;\n      color: var(--affine-text-primary-color);\n      fill: currentColor;\n    }\n  `;\n\n  override connectedCallback() {\n    super.connectedCallback();\n\n    this._disposables.addFromEvent(this, 'pointerdown', (e: PointerEvent) => {\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    this._disposables.addFromEvent(this, 'wheel', stopPropagation);\n  }\n\n  override render() {\n    return html`<slot></slot>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'editor-toolbar': EditorToolbar;\n  }\n}\n"]}