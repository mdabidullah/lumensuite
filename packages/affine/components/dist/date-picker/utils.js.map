{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/date-picker/utils.ts"],"names":[],"mappings":"AAEA;;;;GAIG;AACH,SAAS,kBAAkB,CAAC,GAAW;IACrC,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3B,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,MAAM,CAAC,IAAgB;IACrC,4BAA4B;IAC5B,IAAI,IAAI,YAAY,IAAI;QAAE,OAAO,IAAI,CAAC;IACtC,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,kBAAkB,CAAC,IAAI,CAAC;QAAE,IAAI,GAAG,CAAC,IAAI,CAAC;IACvE,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC;AAC5C,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,kBAAkB,CAAC,SAAoB;IACrD,MAAM,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;IAC/B,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;AAC1D,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,iBAAiB,CAAC,SAAoB;IACpD,MAAM,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;IAC/B,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9D,CAAC;AAED,MAAM,UAAU,cAAc,CAAC,SAAoB;IACjD,MAAM,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;IAC/B,MAAM,eAAe,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC;IACjD,MAAM,cAAc,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;IAC/C,MAAM,mBAAmB,GAAG,IAAI,IAAI,CAAC,eAAe,CAAC,CAAC;IACtD,mBAAmB,CAAC,OAAO,CACzB,eAAe,CAAC,OAAO,EAAE,GAAG,eAAe,CAAC,MAAM,EAAE,CACrD,CAAC;IACF,MAAM,iBAAiB,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC;IACnD,iBAAiB,CAAC,OAAO,CACvB,cAAc,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,CACzD,CAAC;IACF,MAAM,MAAM,GAAG,EAAE,CAAC;IAClB,IAAI,IAAI,GAAG,EAAE,CAAC;IACd,MAAM,GAAG,GAAG,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAC;IAC1C,OAAO,GAAG,IAAI,iBAAiB,EAAE,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACzB,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACtB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,GAAG,EAAE,CAAC;QACZ,CAAC;QACD,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;IACjC,CAAC;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,MAAM,UAAU,KAAK,CAAC,IAAY,EAAE,IAAY,EAAE,KAAa;IAC7D,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;IACvC,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;AAC7C,CAAC","sourcesContent":["export type MaybeDate = Date | string | number | undefined;\n\n/**\n * @deprecated should not use raw string to represent timestamp\n * @param str\n * @returns\n */\nfunction _isTimestampString(str: string) {\n  return /^\\d+$/.test(str);\n}\n\n/**\n * Parse the given date to Date object\n * @param date\n * @returns\n */\nexport function toDate(date?: MaybeDate) {\n  // TODO: handle invalid date\n  if (date instanceof Date) return date;\n  if (typeof date === 'string' && _isTimestampString(date)) date = +date;\n  return date ? new Date(date) : new Date();\n}\n\n/**\n * get the first day of the month of the given date\n * @param maybeDate\n */\nexport function getFirstDayOfMonth(maybeDate: MaybeDate) {\n  const date = toDate(maybeDate);\n  return new Date(date.getFullYear(), date.getMonth(), 1);\n}\n\n/**\n * get the last day of the month of the given date\n * @param maybeDate\n * @example\n * getLastDayOfMonth('2021-01-01') // 2021-01-31\n */\nexport function getLastDayOfMonth(maybeDate: MaybeDate) {\n  const date = toDate(maybeDate);\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n}\n\nexport function getMonthMatrix(maybeDate: MaybeDate) {\n  const date = toDate(maybeDate);\n  const firstDayOfMonth = getFirstDayOfMonth(date);\n  const lastDayOfMonth = getLastDayOfMonth(date);\n  const firstDayOfFirstWeek = new Date(firstDayOfMonth);\n  firstDayOfFirstWeek.setDate(\n    firstDayOfMonth.getDate() - firstDayOfMonth.getDay()\n  );\n  const lastDayOfLastWeek = new Date(lastDayOfMonth);\n  lastDayOfLastWeek.setDate(\n    lastDayOfMonth.getDate() + (6 - lastDayOfMonth.getDay())\n  );\n  const matrix = [];\n  let week = [];\n  const day = new Date(firstDayOfFirstWeek);\n  while (day <= lastDayOfLastWeek) {\n    week.push(new Date(day));\n    if (week.length === 7) {\n      matrix.push(week);\n      week = [];\n    }\n    day.setDate(day.getDate() + 1);\n  }\n  return matrix;\n}\n\nexport function clamp(num1: number, num2: number, value: number) {\n  const [min, max] = [num1, num2].sort();\n  return Math.min(Math.max(value, min), max);\n}\n"]}