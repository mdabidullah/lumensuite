{"version":3,"file":"toast.js","sourceRoot":"","sources":["../../src/toast/toast.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,SAAS,EAAE,MAAM,qBAAqB,CAAC;AAChD,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAE3B,OAAO,EAAE,oBAAoB,EAAE,MAAM,aAAa,CAAC;AACnD,OAAO,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAC;AAErD,IAAI,cAAc,GAA0B,IAAI,CAAC;AAEjD;;;;;GAKG;AACH,MAAM,CAAC,MAAM,KAAK,GAAG,CACnB,UAAsB,EACtB,OAAe,EACf,QAAQ,GAAG,IAAI,EACf,EAAE;IACF,IAAI,CAAC,cAAc,EAAE,CAAC;QACpB,cAAc,GAAG,oBAAoB,CAAC,UAAU,CAAC,CAAC;IACpD,CAAC;IAED,MAAM,MAAM,GAAG;;;mBAGE,SAAS,CAAC,cAAc;;;;;;;;;;GAUxC,CAAC;IAEF,MAAM,QAAQ,GAAG,IAAI,CAAA,eAAe,MAAM,UAAU,CAAC;IACrD,MAAM,OAAO,GAAG,aAAa,CAAiB,QAAQ,CAAC,CAAC;IACxD,yBAAyB;IACzB,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC;IAC9B,cAAc,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;IAEhC,MAAM,MAAM,GAAG;QACb;YACE,OAAO,EAAE,CAAC;SACX;QACD,EAAE,OAAO,EAAE,CAAC,EAAE;KACf,CAAC;IACF,MAAM,OAAO,GAAG;QACd,QAAQ,EAAE,GAAG;QACb,MAAM,EAAE,mCAAmC;QAC3C,IAAI,EAAE,UAAmB;KAC1B,CAAC,CAAC,sCAAsC;IACzC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAEjC,UAAU,CAAC,GAAG,EAAE;QACd,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;QACjC,MAAM,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACpD,SAAS,CAAC,QAAQ;aACf,IAAI,CAAC,GAAG,EAAE;YACT,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC;YAC9B,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;YAC3B,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;YAC5B,OAAO,CAAC,gBAAgB,CACtB,eAAe,EACf,GAAG,EAAE;gBACH,OAAO,CAAC,MAAM,EAAE,CAAC;YACnB,CAAC,EACD;gBACE,IAAI,EAAE,IAAI;aACX,CACF,CAAC;QACJ,CAAC,CAAC;aACD,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC,EAAE,QAAQ,CAAC,CAAC;IACb,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC","sourcesContent":["import type { EditorHost } from '@blocksuite/block-std';\n\nimport { baseTheme } from '@toeverything/theme';\nimport { html } from 'lit';\n\nimport { createToastContainer } from './create.js';\nimport { htmlToElement } from './html-to-element.js';\n\nlet ToastContainer: HTMLDivElement | null = null;\n\n/**\n * @example\n * ```ts\n * toast('Hello World');\n * ```\n */\nexport const toast = (\n  editorHost: EditorHost,\n  message: string,\n  duration = 2500\n) => {\n  if (!ToastContainer) {\n    ToastContainer = createToastContainer(editorHost);\n  }\n\n  const styles = `\n    max-width: 480px;\n    text-align: center;\n    font-family: ${baseTheme.fontSansFamily};\n    font-size: var(--affine-font-sm);\n    padding: 6px 12px;\n    margin: 10px 0 0 0;\n    color: var(--affine-white);\n    background: var(--affine-tooltip);\n    box-shadow: var(--affine-float-button-shadow);\n    border-radius: 10px;\n    transition: all 230ms cubic-bezier(0.21, 1.02, 0.73, 1);\n    opacity: 0;\n  `;\n\n  const template = html`<div style=\"${styles}\"></div>`;\n  const element = htmlToElement<HTMLDivElement>(template);\n  // message is not trusted\n  element.textContent = message;\n  ToastContainer?.append(element);\n\n  const fadeIn = [\n    {\n      opacity: 0,\n    },\n    { opacity: 1 },\n  ];\n  const options = {\n    duration: 230,\n    easing: 'cubic-bezier(0.21, 1.02, 0.73, 1)',\n    fill: 'forwards' as const,\n  }; // satisfies KeyframeAnimationOptions;\n  element.animate(fadeIn, options);\n\n  setTimeout(() => {\n    const fadeOut = fadeIn.reverse();\n    const animation = element.animate(fadeOut, options);\n    animation.finished\n      .then(() => {\n        element.style.maxHeight = '0';\n        element.style.margin = '0';\n        element.style.padding = '0';\n        element.addEventListener(\n          'transitionend',\n          () => {\n            element.remove();\n          },\n          {\n            once: true,\n          }\n        );\n      })\n      .catch(console.error);\n  }, duration);\n  return element;\n};\n"]}