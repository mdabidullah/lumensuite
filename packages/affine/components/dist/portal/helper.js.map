{"version":3,"file":"helper.js","sourceRoot":"","sources":["../../src/portal/helper.ts"],"names":[],"mappings":"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","sourcesContent":["import { assertExists, Slot } from '@blocksuite/global/utils';\nimport {\n  autoUpdate,\n  computePosition,\n  type ComputePositionReturn,\n} from '@floating-ui/dom';\nimport { render } from 'lit';\n\nimport type { AdvancedPortalOptions, PortalOptions } from './types.js';\n\n/**\n * Similar to `<blocksuite-portal>`, but only renders once when called.\n *\n * The template should be a **static** template since it will not be re-rendered unless `updatePortal` is called.\n *\n * See {@link Portal} for more details.\n */\nexport function createSimplePortal({\n  template,\n  container = document.body,\n  signal = new AbortController().signal,\n  renderOptions,\n  shadowDom = true,\n  identifyWrapper = true,\n}: PortalOptions) {\n  const portalRoot = document.createElement('div');\n  if (identifyWrapper) {\n    portalRoot.classList.add('blocksuite-portal');\n  }\n  if (shadowDom) {\n    portalRoot.attachShadow({\n      mode: 'open',\n      ...(typeof shadowDom !== 'boolean' ? shadowDom : {}),\n    });\n  }\n  signal.addEventListener('abort', () => {\n    portalRoot.remove();\n  });\n\n  const root = shadowDom ? portalRoot.shadowRoot : portalRoot;\n  assertExists(root);\n\n  let updateId = 0;\n  const updatePortal: (id: number) => void = id => {\n    if (id !== updateId) {\n      console.warn(\n        'Potentially infinite recursion! Please clean up the old event listeners before `updatePortal`'\n      );\n      return;\n    }\n    updateId++;\n    const curId = updateId;\n    const templateResult =\n      template instanceof Function\n        ? template({ updatePortal: () => updatePortal(curId) })\n        : template;\n    assertExists(templateResult);\n    render(templateResult, root, renderOptions);\n  };\n\n  updatePortal(updateId);\n  container.append(portalRoot);\n\n  return portalRoot;\n}\n\n/**\n * Where el is the DOM element you'd like to test for visibility\n */\nfunction isElementVisible(el: Element) {\n  // The API is not stable, so we need to check the existence of the function first\n  // See also https://caniuse.com/?search=checkVisibility\n  if (el.checkVisibility) {\n    // See https://drafts.csswg.org/cssom-view-1/#dom-element-checkvisibility\n    return el.checkVisibility();\n  }\n  // Fallback to the old way\n  // Remove this when the `checkVisibility` API is stable\n  if (!el.isConnected) return false;\n\n  if (el instanceof HTMLElement) {\n    // See https://stackoverflow.com/questions/19669786/check-if-element-is-visible-in-dom\n    return !(el.offsetParent === null);\n  }\n  return true;\n}\n\n/**\n * Similar to `createSimplePortal`, but supports auto update position.\n *\n * The template should be a **static** template since it will not be re-rendered.\n *\n * See {@link createSimplePortal} for more details.\n *\n * @example\n * ```ts\n * createLitPortal({\n *   template: RenameModal({\n *     model,\n *     abortController: renameAbortController,\n *   }),\n *   computePosition: {\n *     referenceElement: anchor,\n *     placement: 'top-end',\n *     middleware: [flip(), offset(4)],\n *     autoUpdate: true,\n *   },\n *   abortController: renameAbortController,\n * });\n * ```\n */\nexport function createLitPortal({\n  computePosition: positionConfigOrFn,\n  abortController,\n  closeOnClickAway = false,\n  ...portalOptions\n}: AdvancedPortalOptions) {\n  let positionSlot = new Slot<ComputePositionReturn>();\n  const template = portalOptions.template;\n  const templateWithPosition =\n    template instanceof Function\n      ? ({ updatePortal }: { updatePortal: () => void }) => {\n          // We need to create a new slot for each template, otherwise the slot may be used in the old template\n          positionSlot = new Slot<ComputePositionReturn>();\n          return template({ updatePortal, positionSlot });\n        }\n      : template;\n\n  const portalRoot = createSimplePortal({\n    ...portalOptions,\n    signal: abortController.signal,\n    template: templateWithPosition,\n  });\n\n  if (closeOnClickAway) {\n    // Avoid triggering click away listener on initial render\n    setTimeout(() =>\n      document.addEventListener(\n        'click',\n        e => {\n          if (portalRoot.contains(e.target as Node)) return;\n          abortController.abort();\n        },\n        {\n          signal: abortController.signal,\n        }\n      )\n    );\n  }\n\n  if (!positionConfigOrFn) {\n    return portalRoot;\n  }\n\n  const visibility = portalRoot.style.visibility;\n  portalRoot.style.visibility = 'hidden';\n  portalRoot.style.position = 'fixed';\n  portalRoot.style.left = '0';\n  portalRoot.style.top = '0';\n\n  Object.assign(portalRoot.style, portalOptions.portalStyles);\n\n  const computePositionOptions =\n    positionConfigOrFn instanceof Function\n      ? positionConfigOrFn(portalRoot)\n      : positionConfigOrFn;\n  const { referenceElement, ...options } = computePositionOptions;\n  assertExists(referenceElement, 'referenceElement is required');\n  const update = () => {\n    if (\n      computePositionOptions.abortWhenRefRemoved !== false &&\n      referenceElement instanceof Element &&\n      !isElementVisible(referenceElement)\n    ) {\n      abortController.abort();\n    }\n    computePosition(referenceElement, portalRoot, options)\n      .then(positionReturn => {\n        const { x, y } = positionReturn;\n        // Use transform maybe cause overlay-mask offset issue\n        // portalRoot.style.transform = `translate(${x}px, ${y}px)`;\n        portalRoot.style.left = `${x}px`;\n        portalRoot.style.top = `${y}px`;\n        if (portalRoot.style.visibility === 'hidden') {\n          portalRoot.style.visibility = visibility;\n        }\n        positionSlot.emit(positionReturn);\n      })\n      .catch(console.error);\n  };\n  if (!computePositionOptions.autoUpdate) {\n    update();\n  } else {\n    const autoUpdateOptions =\n      computePositionOptions.autoUpdate === true\n        ? {}\n        : computePositionOptions.autoUpdate;\n    const cleanup = autoUpdate(\n      referenceElement,\n      portalRoot,\n      update,\n      autoUpdateOptions\n    );\n    abortController.signal.addEventListener('abort', () => {\n      cleanup();\n    });\n  }\n\n  return portalRoot;\n}\n"]}