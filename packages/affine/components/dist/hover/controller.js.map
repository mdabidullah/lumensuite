{"version":3,"file":"controller.js","sourceRoot":"","sources":["../../src/hover/controller.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ReactiveController, ReactiveElement } from 'lit';\n\nimport {\n  type AdvancedPortalOptions,\n  createLitPortal,\n} from '@blocksuite/affine-components/portal';\nimport { DisposableGroup } from '@blocksuite/global/utils';\n\nimport type { HoverOptions } from './types.js';\n\nimport { whenHover } from './when-hover.js';\n\ntype OptionsParams = Omit<\n  ReturnType<typeof whenHover>,\n  'setFloating' | 'dispose'\n> & {\n  abortController: AbortController;\n};\ntype HoverPortalOptions = Omit<AdvancedPortalOptions, 'abortController'>;\n\nconst DEFAULT_HOVER_OPTIONS: HoverOptions = {\n  transition: {\n    duration: 100,\n    in: {\n      opacity: '1',\n      transition: 'opacity 0.1s ease-in-out',\n    },\n    out: {\n      opacity: '0',\n      transition: 'opacity 0.1s ease-in-out',\n    },\n  },\n  setPortalAsFloating: true,\n  allowMultiple: false,\n};\n\nconst abortHoverPortal = ({\n  portal,\n  hoverOptions,\n  abortController,\n}: {\n  portal: HTMLDivElement | undefined;\n  hoverOptions: HoverOptions;\n  abortController: AbortController;\n}) => {\n  if (!portal || !hoverOptions.transition) {\n    abortController.abort();\n    return;\n  }\n  // Transition out\n  Object.assign(portal.style, hoverOptions.transition.out);\n\n  portal.addEventListener(\n    'transitionend',\n    () => {\n      abortController.abort();\n    },\n    { signal: abortController.signal }\n  );\n  portal.addEventListener(\n    'transitioncancel',\n    () => {\n      abortController.abort();\n    },\n    { signal: abortController.signal }\n  );\n\n  // Make sure the portal is aborted after the transition ends\n  setTimeout(() => abortController.abort(), hoverOptions.transition.duration);\n};\n\nexport class HoverController implements ReactiveController {\n  static globalAbortController?: AbortController;\n\n  private _abortController?: AbortController;\n\n  private readonly _hoverOptions: HoverOptions;\n\n  private _isHovering = false;\n\n  private readonly _onHover: (\n    options: OptionsParams\n  ) => HoverPortalOptions | null;\n\n  private _portal?: HTMLDivElement;\n\n  private _setReference: (element?: Element | undefined) => void = () => {\n    console.error('setReference is not ready');\n  };\n\n  protected _disposables = new DisposableGroup();\n\n  host: ReactiveElement;\n\n  /**\n   * Callback when the portal needs to be aborted.\n   */\n  onAbort = () => {\n    this.abort();\n  };\n\n  /**\n   * Whether the host is currently hovering.\n   *\n   * This property is unreliable when the floating element disconnect from the DOM suddenly.\n   */\n  get isHovering() {\n    return this._isHovering;\n  }\n\n  get portal() {\n    return this._portal;\n  }\n\n  get setReference() {\n    return this._setReference;\n  }\n\n  constructor(\n    host: ReactiveElement,\n    onHover: (options: OptionsParams) => HoverPortalOptions | null,\n    hoverOptions?: Partial<HoverOptions>\n  ) {\n    this._hoverOptions = { ...DEFAULT_HOVER_OPTIONS, ...hoverOptions };\n    (this.host = host).addController(this);\n    this._onHover = onHover;\n  }\n\n  abort(force = false) {\n    if (!this._abortController) return;\n    if (force) {\n      this._abortController.abort();\n      return;\n    }\n    abortHoverPortal({\n      portal: this._portal,\n      hoverOptions: this._hoverOptions,\n      abortController: this._abortController,\n    });\n  }\n\n  hostConnected() {\n    if (this._disposables.disposed) {\n      this._disposables = new DisposableGroup();\n    }\n    // Start a timer when the host is connected\n    const { setReference, setFloating, dispose } = whenHover(isHover => {\n      if (!this.host.isConnected) {\n        return;\n      }\n\n      this._isHovering = isHover;\n      if (!isHover) {\n        this.onAbort();\n        return;\n      }\n\n      if (this._abortController) {\n        return;\n      }\n\n      this._abortController = new AbortController();\n      this._abortController.signal.addEventListener('abort', () => {\n        this._abortController = undefined;\n      });\n\n      if (!this._hoverOptions.allowMultiple) {\n        HoverController.globalAbortController?.abort();\n        HoverController.globalAbortController = this._abortController;\n      }\n\n      const portalOptions = this._onHover({\n        setReference,\n        abortController: this._abortController,\n      });\n      if (!portalOptions) {\n        // Sometimes the portal is not ready to show\n        this._abortController.abort();\n        return;\n      }\n      this._portal = createLitPortal({\n        ...portalOptions,\n        abortController: this._abortController,\n      });\n\n      const transition = this._hoverOptions.transition;\n      if (transition) {\n        Object.assign(this._portal.style, transition.in);\n      }\n\n      if (this._hoverOptions.setPortalAsFloating) {\n        setFloating(this._portal);\n      }\n    }, this._hoverOptions);\n    this._setReference = setReference;\n    this._disposables.add(dispose);\n  }\n\n  hostDisconnected() {\n    this._abortController?.abort();\n    this._disposables.dispose();\n  }\n}\n"]}