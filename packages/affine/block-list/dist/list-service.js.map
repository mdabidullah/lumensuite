{"version":3,"file":"list-service.js","sourceRoot":"","sources":["../src/list-service.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,UAAU,EAAE,MAAM,yCAAyC,CAAC;AACrE,OAAO,EAAE,eAAe,EAAE,MAAM,0BAA0B,CAAC;AAC3D,OAAO,EAAE,aAAa,EAAE,MAAM,iCAAiC,CAAC;AAChE,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AAErD,OAAO,EAAE,+BAA+B,EAAE,MAAM,qBAAqB,CAAC;AACtE,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAC9C,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,MAAM,aAAa,CAAC;AACvD,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AAEvD,MAAM,OAAO,gBAAiB,SAAQ,YAAY;IAAlD;;QAGW,WAAM,GAAG;YAChB,IAAI,EAAE,WAAW;YACjB,MAAM,EAAE,UAAU;YAClB,MAAM,EAAE,YAAY;SACrB,CAAC;IAiDJ,CAAC;aAvD0B,YAAO,GAAG,eAAe,CAAC,KAAK,CAAC,OAAO,AAAhC,CAAiC;IAQxD,OAAO;QACd,KAAK,CAAC,OAAO,EAAE,CAAC;QAEhB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACtC,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC;QACrC,IAAI,CAAC,MAAM;YAAE,OAAO;QAEpB,qBAAqB,CAAC,GAAG,EAAE;YACzB,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CACrC,2BAA2B,EAC3B,MAAM,CACP,CAAC;YACF,IAAI,CAAC,MAAM;gBAAE,OAAO;YACpB,IAAI,CAAC,WAAW,CAAC,GAAG;YAClB,sFAAsF;YACtF,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC;gBAChC,OAAO,EAAE,eAAe,CAAC,KAAK,CAAC,OAAO;gBACtC,SAAS,EAAE,CAAC,EACV,gBAAgB,GAGjB,EAAE,EAAE;oBACH,gBAAgB,CAAC,OAAO,CAAC,CAAC,EAAkB,EAAE,EAAE;wBAC9C,MAAM,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;wBACvB,MAAM,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC;wBACnB,IACE,aAAa,CAAC,KAAK,EAAE,CAAC,aAAa,CAAC,CAAC;4BACrC,KAAK,CAAC,IAAI,KAAK,UAAU,EACzB,CAAC;4BACD,MAAM,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;4BACnC,IAAI,CAAC,IAAI,CAAC,cAAc;iCACrB,IAAI,CAAC,GAAG,EAAE;gCACT,+BAA+B,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;gCAC5C,IAAI,IAAI,EAAE,CAAC;oCACT,+BAA+B,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;gCAC7C,CAAC;4BACH,CAAC,CAAC;iCACD,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;wBAC1B,CAAC;oBACH,CAAC,CAAC,CAAC;oBACH,OAAO,KAAK,CAAC;gBACf,CAAC;aACF,CAAC,CACH,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC","sourcesContent":["import type { BlockComponent } from '@lumensuite/block-std';\n\nimport { textKeymap } from '@lumensuite/affine-components/rich-text';\nimport { ListBlockSchema } from '@lumensuite/affine-model';\nimport { matchFlavours } from '@lumensuite/affine-shared/utils';\nimport { BlockService } from '@lumensuite/block-std';\n\nimport { correctNumberedListsOrderToPrev } from './commands/utils.js';\nimport { listKeymap } from './list-keymap.js';\nimport { listPrefix, toggleStyles } from './styles.js';\nimport { getListIcon } from './utils/get-list-icon.js';\n\nexport class ListBlockService extends BlockService {\n  static override readonly flavour = ListBlockSchema.model.flavour;\n\n  readonly styles = {\n    icon: getListIcon,\n    prefix: listPrefix,\n    toggle: toggleStyles,\n  };\n\n  override mounted(): void {\n    super.mounted();\n\n    this.bindHotKey(listKeymap(this.std));\n    this.bindHotKey(textKeymap(this.std));\n    const rootId = this.std.doc.root?.id;\n    if (!rootId) return;\n\n    requestAnimationFrame(() => {\n      const widget = this.host.view.getWidget(\n        'affine-drag-handle-widget',\n        rootId\n      );\n      if (!widget) return;\n      this.disposables.add(\n        // @ts-expect-error TODO: fix after migrate drag handle widget to a standalone package\n        widget.constructor.registerOption({\n          flavour: ListBlockSchema.model.flavour,\n          onDragEnd: ({\n            draggingElements,\n          }: {\n            draggingElements: BlockComponent[];\n          }) => {\n            draggingElements.forEach((el: BlockComponent) => {\n              const model = el.model;\n              const doc = el.doc;\n              if (\n                matchFlavours(model, ['affine:list']) &&\n                model.type === 'numbered'\n              ) {\n                const next = el.doc.getNext(model);\n                this.host.updateComplete\n                  .then(() => {\n                    correctNumberedListsOrderToPrev(doc, model);\n                    if (next) {\n                      correctNumberedListsOrderToPrev(doc, next);\n                    }\n                  })\n                  .catch(console.error);\n              }\n            });\n            return false;\n          },\n        })\n      );\n    });\n  }\n}\n"]}