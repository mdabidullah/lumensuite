{"version":3,"file":"list-block.js","sourceRoot":"","sources":["../src/list-block.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,OAAO,EAAE,uBAAuB,EAAE,MAAM,uCAAuC,CAAC;AAChF,OAAO,EACL,kBAAkB,EAClB,UAAU,EACV,WAAW,GACZ,MAAM,qCAAqC,CAAC;AAC7C,OAAO,EACL,6BAA6B,GAE9B,MAAM,yCAAyC,CAAC;AACjD,OAAO,yCAAyC,CAAC;AACjD,OAAO,oCAAoC,CAAC;AAC5C,OAAO,EACL,qCAAqC,EACrC,aAAa,GACd,MAAM,kCAAkC,CAAC;AAC1C,OAAO,EAAE,eAAe,EAAE,MAAM,oCAAoC,CAAC;AACrE,OAAO,EAAE,kBAAkB,EAAE,MAAM,iCAAiC,CAAC;AACrE,OAAO,EAAE,sBAAsB,EAAE,MAAM,uBAAuB,CAAC;AAC/D,OAAO,EAAE,MAAM,EAAE,MAAM,0BAA0B,CAAC;AAClD,OAAO,EAAE,IAAI,EAAE,OAAO,EAAuB,MAAM,KAAK,CAAC;AACzD,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAIhE,OAAO,EAAE,+BAA+B,EAAE,MAAM,qBAAqB,CAAC;AACtE,OAAO,EAAE,eAAe,EAAE,MAAM,aAAa,CAAC;AAC9C,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;IAG1C,kBAAkB;4BAD9B,aAAa,CAAC,aAAa,CAAC;;;;sBACW,uBAAuB;;;;;;;kCAA/B,SAAQ,WAGvC;;;;YAGS,yBAAoB,GAA+B,IAAI,CAAC;YAExD,iBAAY,GAAG,CAAC,CAAa,EAAE,EAAE;gBACvC,CAAC,CAAC,eAAe,EAAE,CAAC;gBAEpB,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;oBACjC,IAAI,CAAC,eAAe,EAAE,CAAC;oBACvB,OAAO;gBACT,CAAC;qBAAM,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,MAAM,EAAE,CAAC;oBACtC,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ;wBAAE,OAAO;oBAE9B,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;oBACvB,MAAM,cAAc,GAAG,EAAE,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;oBACxD,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;oBACjD,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;wBACvB,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iCAAiC,CAAC,CAAC;wBACtE,IAAI,OAAO,EAAE,CAAC;4BACZ,kBAAkB,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;wBACnD,CAAC;oBACH,CAAC;oBACD,OAAO;gBACT,CAAC;gBACD,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC,CAAC;YAqJe,kHAA2B,KAAK,EAAC;YAGjC,yKAAoC,IAAI,GAAC;YAExC,6GAAuB;gBACvC,MAAM,EAAE,QAAQ;aACjB,EAAC;QACJ,CAAC;;;oDATE,KAAK,EAAE;4CAGP,KAAK,CAAC,WAAW,CAAC;YAFnB,6NAAiB,wBAAwB,6BAAxB,wBAAwB,2HAAS;YAGlD,qMAAiB,gBAAgB,6BAAhB,gBAAgB,2GAAyB;YArL5D,6KA0LC;;;;iBAtLiB,WAAM,GAAG,eAAe,AAAlB,CAAmB;QA2BzC,IAAI,iBAAiB;YACnB,OAAO,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QAC1C,CAAC;QAED,IAAI,gBAAgB;YAClB,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;QACxC,CAAC;QAED,IAAI,YAAY;YACd,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;QACzC,CAAC;QAED,IAAI,aAAa;YACf,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,6BAA6B,CAAC,UAAU,CAAC,CAAC;QAChE,CAAC;QAED,IAAI,uBAAuB;YACzB,OAAO,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC;QACpD,CAAC;QAED,IAAa,yBAAyB;YACpC,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,aAAa,EAAE,KAAK,UAAU,EAAE,CAAC;gBACjE,OAAO,IAAI,CAAC,OAAO,CAAiB,aAAa,CAAC,CAAC;YACrD,CAAC;YACD,OAAO,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;QAEO,OAAO;YACb,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YACtC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;gBACzB,OAAO,OAAO;qBACX,MAAM,CAAgB,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;qBACjE,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;QACL,CAAC;QAEO,eAAe;YACrB,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;gBACtB,IAAI,CAAC,wBAAwB,GAAG,CAAC,IAAI,CAAC,wBAAwB,CAAC;gBAC/D,OAAO;YACT,CAAC;YACD,MAAM,iBAAiB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;YAChD,IAAI,CAAC,wBAAwB,GAAG,iBAAiB,CAAC;YAClD,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;YACvB,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE;gBAC/B,SAAS,EAAE,iBAAiB;aACF,CAAC,CAAC;QAChC,CAAC;QAEO,eAAe,CAAC,WAAoB;YAC1C,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC;YACpD,IAAI,UAAU;gBAAE,OAAO,OAAO,CAAC;YAE/B,MAAM,kBAAkB,GAAG,IAAI,CAAA;;;eAGpB,IAAI,CAAC,eAAe;;QAE3B,UAAU;WACP,CAAC;YAER,MAAM,mBAAmB,GAAG,IAAI,CAAA;;;eAGrB,IAAI,CAAC,eAAe;;QAE3B,WAAW;WACR,CAAC;YAER,OAAO,WAAW,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,kBAAkB,CAAC;QAChE,CAAC;QAEQ,iBAAiB;YACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;YAE1B,IAAI,CAAC,oBAAoB,GAAG,sBAAsB,CAAC,IAAI,CAAC,CAAC;YAEzD,IAAI,CAAC,WAAW,CAAC,GAAG,CAClB,MAAM,CAAC,GAAG,EAAE;gBACV,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC;gBACpC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;gBACtC,iCAAiC;gBACjC,IAAI,IAAI,KAAK,UAAU,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC;oBACpD,+BAA+B,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBAC/D,CAAC;gBACD,gDAAgD;gBAChD,IAAI,IAAI,KAAK,UAAU,IAAI,KAAK,KAAK,IAAI,EAAE,CAAC;oBAC1C,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;gBAC1B,CAAC;YACH,CAAC,CAAC,CACH,CAAC;QACJ,CAAC;QAEQ,KAAK,CAAC,iBAAiB;YAC9B,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,iBAAiB,EAAE,CAAC;YAC/C,MAAM,IAAI,CAAC,gBAAgB,EAAE,cAAc,CAAC;YAC5C,OAAO,MAAM,CAAC;QAChB,CAAC;QAEQ,WAAW;YAClB,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC;YACrC,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ;gBACjC,CAAC,CAAC,IAAI,CAAC,wBAAwB;gBAC/B,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC;YACtB,MAAM,QAAQ,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;YAE9D,MAAM,OAAO,GACX,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO;gBAC9C,CAAC,CAAC,sBAAsB;gBACxB,CAAC,CAAC,EAAE,CAAC;YAET,MAAM,QAAQ,GAAG,IAAI,CAAA;+CACsB,SAAS;gBAChD,CAAC,CAAC,wBAAwB;gBAC1B,CAAC,CAAC,EAAE;6BACiB,qCAAqC;;QAE1D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC;WAC5B,CAAC;YAER,OAAO,IAAI,CAAA;mBACI,6BAA6B;qBAC3B,iCAAiC,OAAO,EAAE;YACnD,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,QAAQ;;qBAElC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK;iCACT,IAAI,CAAC,yBAAyB,IAAI,OAAO;2BAC/C,IAAI,CAAC,GAAG,CAAC,OAAO;iCACV,IAAI,CAAC,iBAAiB;gCACvB,IAAI,CAAC,gBAAgB;uCACd,IAAI,CAAC,uBAAuB;4BACvC,IAAI,CAAC,YAAY;wBACrB,IAAI,CAAC,GAAG,CAAC,QAAQ;mCACN,IAAI,CAAC,oBAAoB;+BAC7B,KAAK;8BACN,KAAK;6CACU,GAAG,EAAE,CACpC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;;;;UAIjC,QAAQ;;KAEb,CAAC;QACJ,CAAC;QAGD,2CAAkD;QAAlD,IAAiB,wBAAwB,8DAAS;QAAlD,IAAiB,wBAAwB,oEAAS;QAGlD,mCAA0D;QAA1D,IAAiB,gBAAgB,sDAAyB;QAA1D,IAAiB,gBAAgB,4DAAyB;QAE1D,uCAEE;QAFF,IAAkB,oBAAoB,0DAEpC;QAFF,IAAkB,oBAAoB,gEAEpC;;YAzLS,uDAAkB;;;;;SAAlB,kBAAkB","sourcesContent":["/// <reference types=\"vite/client\" />\nimport type { ListBlockModel } from '@blocksuite/affine-model';\nimport type { BaseSelection, BlockComponent } from '@blocksuite/block-std';\nimport type { InlineRangeProvider } from '@blocksuite/inline';\n\nimport { CaptionedBlockComponent } from '@blocksuite/affine-components/caption';\nimport {\n  playCheckAnimation,\n  toggleDown,\n  toggleRight,\n} from '@blocksuite/affine-components/icons';\nimport {\n  DefaultInlineManagerExtension,\n  type RichText,\n} from '@blocksuite/affine-components/rich-text';\nimport '@blocksuite/affine-components/rich-text';\nimport '@blocksuite/affine-shared/commands';\nimport {\n  BLOCK_CHILDREN_CONTAINER_PADDING_LEFT,\n  NOTE_SELECTOR,\n} from '@blocksuite/affine-shared/consts';\nimport { DocModeProvider } from '@blocksuite/affine-shared/services';\nimport { getViewportElement } from '@blocksuite/affine-shared/utils';\nimport { getInlineRangeProvider } from '@blocksuite/block-std';\nimport { effect } from '@lit-labs/preact-signals';\nimport { html, nothing, type TemplateResult } from 'lit';\nimport { customElement, query, state } from 'lit/decorators.js';\n\nimport type { ListBlockService } from './list-service.js';\n\nimport { correctNumberedListsOrderToPrev } from './commands/utils.js';\nimport { listBlockStyles } from './styles.js';\nimport { getListIcon } from './utils/get-list-icon.js';\n\n@customElement('affine-list')\nexport class ListBlockComponent extends CaptionedBlockComponent<\n  ListBlockModel,\n  ListBlockService\n> {\n  static override styles = listBlockStyles;\n\n  private _inlineRangeProvider: InlineRangeProvider | null = null;\n\n  private _onClickIcon = (e: MouseEvent) => {\n    e.stopPropagation();\n\n    if (this.model.type === 'toggle') {\n      this._toggleChildren();\n      return;\n    } else if (this.model.type === 'todo') {\n      if (this.doc.readonly) return;\n\n      this.doc.captureSync();\n      const checkedPropObj = { checked: !this.model.checked };\n      this.doc.updateBlock(this.model, checkedPropObj);\n      if (this.model.checked) {\n        const checkEl = this.querySelector('.affine-list-block__todo-prefix');\n        if (checkEl) {\n          playCheckAnimation(checkEl).catch(console.error);\n        }\n      }\n      return;\n    }\n    this._select();\n  };\n\n  get attributeRenderer() {\n    return this.inlineManager.getRenderer();\n  }\n\n  get attributesSchema() {\n    return this.inlineManager.getSchema();\n  }\n\n  get embedChecker() {\n    return this.inlineManager.embedChecker;\n  }\n\n  get inlineManager() {\n    return this.std.get(DefaultInlineManagerExtension.identifier);\n  }\n\n  get markdownShortcutHandler() {\n    return this.inlineManager.markdownShortcutHandler;\n  }\n\n  override get topContenteditableElement() {\n    if (this.std.get(DocModeProvider).getEditorMode() === 'edgeless') {\n      return this.closest<BlockComponent>(NOTE_SELECTOR);\n    }\n    return this.rootComponent;\n  }\n\n  private _select() {\n    const selection = this.host.selection;\n    selection.update(selList => {\n      return selList\n        .filter<BaseSelection>(sel => !sel.is('text') && !sel.is('block'))\n        .concat(selection.create('block', { blockId: this.blockId }));\n    });\n  }\n\n  private _toggleChildren() {\n    if (this.doc.readonly) {\n      this._isCollapsedWhenReadOnly = !this._isCollapsedWhenReadOnly;\n      return;\n    }\n    const newCollapsedState = !this.model.collapsed;\n    this._isCollapsedWhenReadOnly = newCollapsedState;\n    this.doc.captureSync();\n    this.doc.updateBlock(this.model, {\n      collapsed: newCollapsedState,\n    } as Partial<ListBlockModel>);\n  }\n\n  private _toggleTemplate(isCollapsed: boolean) {\n    const noChildren = this.model.children.length === 0;\n    if (noChildren) return nothing;\n\n    const toggleDownTemplate = html`<div\n      contenteditable=\"false\"\n      class=\"toggle-icon\"\n      @click=${this._toggleChildren}\n    >\n      ${toggleDown}\n    </div>`;\n\n    const toggleRightTemplate = html`<div\n      contenteditable=\"false\"\n      class=\"toggle-icon toggle-icon__collapsed\"\n      @click=${this._toggleChildren}\n    >\n      ${toggleRight}\n    </div>`;\n\n    return isCollapsed ? toggleRightTemplate : toggleDownTemplate;\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n\n    this._inlineRangeProvider = getInlineRangeProvider(this);\n\n    this.disposables.add(\n      effect(() => {\n        const type = this.model.type$.value;\n        const order = this.model.order$.value;\n        // old numbered list has no order\n        if (type === 'numbered' && !Number.isInteger(order)) {\n          correctNumberedListsOrderToPrev(this.doc, this.model, false);\n        }\n        // if list is not numbered, order should be null\n        if (type !== 'numbered' && order !== null) {\n          this.model.order = null;\n        }\n      })\n    );\n  }\n\n  override async getUpdateComplete() {\n    const result = await super.getUpdateComplete();\n    await this._richTextElement?.updateComplete;\n    return result;\n  }\n\n  override renderBlock(): TemplateResult<1> {\n    const { model, _onClickIcon } = this;\n    const collapsed = this.doc.readonly\n      ? this._isCollapsedWhenReadOnly\n      : !!model.collapsed;\n    const listIcon = getListIcon(model, !collapsed, _onClickIcon);\n\n    const checked =\n      this.model.type === 'todo' && this.model.checked\n        ? 'affine-list--checked'\n        : '';\n\n    const children = html`<div\n      class=\"affine-block-children-container ${collapsed\n        ? 'affine-list__collapsed'\n        : ''}\"\n      style=\"padding-left: ${BLOCK_CHILDREN_CONTAINER_PADDING_LEFT}px;\"\n    >\n      ${this.renderChildren(this.model)}\n    </div>`;\n\n    return html`\n      <div class=${'affine-list-block-container'}>\n        <div class=${`affine-list-rich-text-wrapper ${checked}`}>\n          ${this._toggleTemplate(collapsed)} ${listIcon}\n          <rich-text\n            .yText=${this.model.text.yText}\n            .inlineEventSource=${this.topContenteditableElement ?? nothing}\n            .undoManager=${this.doc.history}\n            .attributeRenderer=${this.attributeRenderer}\n            .attributesSchema=${this.attributesSchema}\n            .markdownShortcutHandler=${this.markdownShortcutHandler}\n            .embedChecker=${this.embedChecker}\n            .readonly=${this.doc.readonly}\n            .inlineRangeProvider=${this._inlineRangeProvider}\n            .enableClipboard=${false}\n            .enableUndoRedo=${false}\n            .verticalScrollContainerGetter=${() =>\n              getViewportElement(this.host)}\n          ></rich-text>\n        </div>\n\n        ${children}\n      </div>\n    `;\n  }\n\n  @state()\n  private accessor _isCollapsedWhenReadOnly = false;\n\n  @query('rich-text')\n  private accessor _richTextElement: RichText | null = null;\n\n  override accessor blockContainerStyles = {\n    margin: '10px 0',\n  };\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'affine-list': ListBlockComponent;\n  }\n}\n"]}