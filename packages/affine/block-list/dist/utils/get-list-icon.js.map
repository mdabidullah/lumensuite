{"version":3,"file":"get-list-icon.js","sourceRoot":"","sources":["../../src/utils/get-list-icon.ts"],"names":[],"mappings":"AAEA,OAAO,EACL,WAAW,EACX,eAAe,EACf,iBAAiB,EACjB,UAAU,EACV,WAAW,GACZ,MAAM,qCAAqC,CAAC;AAC7C,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAE3B,OAAO,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AAEzD,MAAM,WAAW,GAAG,CAAC,KAAqB,EAAU,EAAE;IACpD,IAAI,IAAI,GAAG,CAAC,CAAC;IACb,IAAI,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACxC,OAAO,MAAM,EAAE,OAAO,KAAK,KAAK,CAAC,OAAO,EAAE,CAAC;QACzC,IAAI,EAAE,CAAC;QACP,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAEF,MAAM,UAAU,WAAW,CACzB,KAAqB,EACrB,YAAqB,EACrB,OAAgC;IAEhC,MAAM,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;IAChC,QAAQ,KAAK,CAAC,IAAI,EAAE,CAAC;QACnB,KAAK,UAAU;YACb,OAAO,IAAI,CAAA;;;iBAGA,OAAO;;UAEd,WAAW,CAAC,IAAI,GAAG,WAAW,CAAC,MAAM,CAAC;aACnC,CAAC;QACV,KAAK,UAAU;YACb,OAAO,IAAI,CAAA;;;iBAGA,OAAO;;UAEd,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;aACpD,CAAC;QACV,KAAK,MAAM;YACT,OAAO,IAAI,CAAA;;gBAED,4DAA4D,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE;iBACjG,OAAO;;UAEd,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,iBAAiB,EAAE;aACpD,CAAC;QACV,KAAK,QAAQ;YACX,OAAO,IAAI,CAAA;;;iBAGA,OAAO;;UAEd,YAAY,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW;aACpC,CAAC;QACV;YACE,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YACtD,OAAO,IAAI,CAAC;IAChB,CAAC;AACH,CAAC","sourcesContent":["import type { ListBlockModel } from '@lumensuite/affine-model';\n\nimport {\n  BulletIcons,\n  checkboxChecked,\n  checkboxUnchecked,\n  toggleDown,\n  toggleRight,\n} from '@lumensuite/affine-components/icons';\nimport { html } from 'lit';\n\nimport { getNumberPrefix } from './get-number-prefix.js';\n\nconst getListDeep = (model: ListBlockModel): number => {\n  let deep = 0;\n  let parent = model.doc.getParent(model);\n  while (parent?.flavour === model.flavour) {\n    deep++;\n    parent = model.doc.getParent(parent);\n  }\n  return deep;\n};\n\nexport function getListIcon(\n  model: ListBlockModel,\n  showChildren: boolean,\n  onClick: (e: MouseEvent) => void\n) {\n  const deep = getListDeep(model);\n  switch (model.type) {\n    case 'bulleted':\n      return html`<div\n        contenteditable=\"false\"\n        class=\"affine-list-block__prefix\"\n        @click=${onClick}\n      >\n        ${BulletIcons[deep % BulletIcons.length]}\n      </div>`;\n    case 'numbered':\n      return html`<div\n        contenteditable=\"false\"\n        class=\"affine-list-block__prefix affine-list-block__numbered\"\n        @click=${onClick}\n      >\n        ${model.order ? getNumberPrefix(model.order, deep) : '1.'}\n      </div>`;\n    case 'todo':\n      return html`<div\n        contenteditable=\"false\"\n        class=${`affine-list-block__prefix affine-list-block__todo-prefix ${model.doc.readonly ? 'readonly' : ''}`}\n        @click=${onClick}\n      >\n        ${model.checked ? checkboxChecked() : checkboxUnchecked()}\n      </div>`;\n    case 'toggle':\n      return html`<div\n        contenteditable=\"false\"\n        class=\"affine-list-block__prefix\"\n        @click=${onClick}\n      >\n        ${showChildren ? toggleDown : toggleRight}\n      </div>`;\n    default:\n      console.error('Unknown list type', model.type, model);\n      return null;\n  }\n}\n"]}