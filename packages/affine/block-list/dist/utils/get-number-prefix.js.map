{"version":3,"file":"get-number-prefix.js","sourceRoot":"","sources":["../../src/utils/get-number-prefix.ts"],"names":[],"mappings":"AAAA,SAAS,aAAa,CAAC,CAAS;IAC9B,MAAM,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC/B,MAAM,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC/B,MAAM,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;IAC5B,IAAI,CAAC,GAAG,EAAE,CAAC;IACX,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;QACd,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;QAC9C,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;IACD,OAAO,CAAC,CAAC;AACX,CAAC;AAED,6EAA6E;AAC7E,MAAM,UAAU,YAAY,CAAC,GAAW;IACtC,MAAM,MAAM,GAA2B;QACrC,CAAC,EAAE,IAAI;QACP,EAAE,EAAE,GAAG;QACP,CAAC,EAAE,GAAG;QACN,EAAE,EAAE,GAAG;QACP,CAAC,EAAE,GAAG;QACN,EAAE,EAAE,EAAE;QACN,CAAC,EAAE,EAAE;QACL,EAAE,EAAE,EAAE;QACN,CAAC,EAAE,EAAE;QACL,EAAE,EAAE,CAAC;QACL,CAAC,EAAE,CAAC;QACJ,EAAE,EAAE,CAAC;QACL,CAAC,EAAE,CAAC;KACL,CAAC;IACF,IAAI,QAAQ,GAAG,EAAE,CAAC;IAClB,KAAK,MAAM,CAAC,IAAI,MAAM,EAAE,CAAC;QACvB,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;YACxB,QAAQ,IAAI,CAAC,CAAC;YACd,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC;IACH,CAAC;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,SAAS,SAAS,CAAC,KAAa,EAAE,KAAa;IAC7C,MAAM,GAAG,GAAG;QACV,GAAG,EAAE,CAAC,KAAK;QACX,GAAG,EAAE,CAAC,aAAa,CAAC,KAAK,GAAG,CAAC,CAAC;QAC9B,GAAG,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC;KAC1B,CAAC;IACF,OAAO,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;AACnC,CAAC;AAED,MAAM,UAAU,eAAe,CAAC,KAAa,EAAE,KAAa;IAC1D,MAAM,MAAM,GAAG,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACvC,OAAO,GAAG,MAAM,GAAG,CAAC;AACtB,CAAC","sourcesContent":["function number2letter(n: number) {\n  const ordA = 'a'.charCodeAt(0);\n  const ordZ = 'z'.charCodeAt(0);\n  const len = ordZ - ordA + 1;\n  let s = '';\n  while (n >= 0) {\n    s = String.fromCharCode((n % len) + ordA) + s;\n    n = Math.floor(n / len) - 1;\n  }\n  return s;\n}\n\n// Derive from https://gist.github.com/imilu/00f32c61e50b7ca296f91e9d96d8e976\nexport function number2roman(num: number) {\n  const lookup: Record<string, number> = {\n    M: 1000,\n    CM: 900,\n    D: 500,\n    CD: 400,\n    C: 100,\n    XC: 90,\n    L: 50,\n    XL: 40,\n    X: 10,\n    IX: 9,\n    V: 5,\n    IV: 4,\n    I: 1,\n  };\n  let romanStr = '';\n  for (const i in lookup) {\n    while (num >= lookup[i]) {\n      romanStr += i;\n      num -= lookup[i];\n    }\n  }\n  return romanStr;\n}\n\nfunction getPrefix(depth: number, index: number) {\n  const map = [\n    () => index,\n    () => number2letter(index - 1),\n    () => number2roman(index),\n  ];\n  return map[depth % map.length]();\n}\n\nexport function getNumberPrefix(index: number, depth: number) {\n  const prefix = getPrefix(depth, index);\n  return `${prefix}.`;\n}\n"]}