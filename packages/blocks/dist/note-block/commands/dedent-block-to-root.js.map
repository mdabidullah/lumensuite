{"version":3,"file":"dedent-block-to-root.js","sourceRoot":"","sources":["../../../src/note-block/commands/dedent-block-to-root.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,aAAa,EAAE,MAAM,iCAAiC,CAAC;AAEhE,MAAM,CAAC,MAAM,iBAAiB,GAO1B,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;IAChB,IAAI,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC;IACtB,MAAM,EAAE,GAAG,EAAE,WAAW,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC;IACxC,MAAM,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC;IACpB,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,MAAM,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACjD,OAAO,GAAG,GAAG,EAAE,OAAO,CAAC;IACzB,CAAC;IACD,IAAI,CAAC,OAAO;QAAE,OAAO;IACrB,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC;IAC/C,IAAI,CAAC,KAAK;QAAE,OAAO;IAEnB,IAAI,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAClC,IAAI,OAAO,GAAG,KAAK,CAAC;IACpB,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC;QACzD,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,IAAI,WAAW;gBAAE,GAAG,CAAC,WAAW,EAAE,CAAC;YACnC,OAAO,GAAG,IAAI,CAAC;QACjB,CAAC;QACD,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,OAAO,EAAE,KAAK,CAAC,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;QAC1E,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,OAAO;IACT,CAAC;IAED,OAAO,IAAI,EAAE,CAAC;AAChB,CAAC,CAAC","sourcesContent":["import type { Command } from '@lumensuite/block-std';\n\nimport { matchFlavours } from '@lumensuite/affine-shared/utils';\n\nexport const dedentBlockToRoot: Command<\n  never,\n  never,\n  {\n    blockId?: string;\n    stopCapture?: boolean;\n  }\n> = (ctx, next) => {\n  let { blockId } = ctx;\n  const { std, stopCapture = true } = ctx;\n  const { doc } = std;\n  if (!blockId) {\n    const sel = std.selection.getGroup('note').at(0);\n    blockId = sel?.blockId;\n  }\n  if (!blockId) return;\n  const model = std.doc.getBlock(blockId)?.model;\n  if (!model) return;\n\n  let parent = doc.getParent(model);\n  let changed = false;\n  while (parent && !matchFlavours(parent, ['affine:note'])) {\n    if (!changed) {\n      if (stopCapture) doc.captureSync();\n      changed = true;\n    }\n    std.command.exec('dedentBlock', { blockId: model.id, stopCapture: true });\n    parent = doc.getParent(model);\n  }\n\n  if (!changed) {\n    return;\n  }\n\n  return next();\n};\n\ndeclare global {\n  namespace LumenSuite {\n    interface Commands {\n      dedentBlockToRoot: typeof dedentBlockToRoot;\n    }\n  }\n}\n"]}