{"version":3,"file":"dedent-block.js","sourceRoot":"","sources":["../../../src/note-block/commands/dedent-block.ts"],"names":[],"mappings":"AAEA;;;;;;;;;;;;;;;GAeG;AACH,MAAM,CAAC,MAAM,WAAW,GAOpB,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;IAChB,IAAI,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC;IACtB,MAAM,EAAE,GAAG,EAAE,WAAW,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC;IACxC,MAAM,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC;IACpB,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,MAAM,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACjD,OAAO,GAAG,GAAG,EAAE,OAAO,CAAC;IACzB,CAAC;IACD,IAAI,CAAC,OAAO;QAAE,OAAO;IACrB,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC;IAC/C,IAAI,CAAC,KAAK;QAAE,OAAO;IAEnB,MAAM,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACpC,MAAM,WAAW,GAAG,MAAM,IAAI,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACpD,IAAI,GAAG,CAAC,QAAQ,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,SAAS,IAAI,CAAC,WAAW,EAAE,CAAC;QACzE,yCAAyC;QACzC,OAAO;IACT,CAAC;IAED,IAAI,WAAW;QAAE,GAAG,CAAC,WAAW,EAAE,CAAC;IAEnC,IAAI,CAAC;QACH,MAAM,YAAY,GAAG,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACzC,GAAG,CAAC,UAAU,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QACpC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,EAAE,WAAW,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;IACtD,CAAC;IAAC,MAAM,CAAC;QACP,OAAO;IACT,CAAC;IAED,OAAO,IAAI,EAAE,CAAC;AAChB,CAAC,CAAC","sourcesContent":["import type { Command } from '@lumensuite/block-std';\n\n/**\n * @example\n * before unindent:\n * - aaa\n *   - bbb\n *   - ccc|\n *     - ddd\n *   - eee\n *\n * after unindent:\n * - aaa\n *   - bbb\n * - ccc|\n *   - ddd\n *   - eee\n */\nexport const dedentBlock: Command<\n  never,\n  never,\n  {\n    blockId?: string;\n    stopCapture?: boolean;\n  }\n> = (ctx, next) => {\n  let { blockId } = ctx;\n  const { std, stopCapture = true } = ctx;\n  const { doc } = std;\n  if (!blockId) {\n    const sel = std.selection.getGroup('note').at(0);\n    blockId = sel?.blockId;\n  }\n  if (!blockId) return;\n  const model = std.doc.getBlock(blockId)?.model;\n  if (!model) return;\n\n  const parent = doc.getParent(model);\n  const grandParent = parent && doc.getParent(parent);\n  if (doc.readonly || !parent || parent.role !== 'content' || !grandParent) {\n    // Top most, can not unindent, do nothing\n    return;\n  }\n\n  if (stopCapture) doc.captureSync();\n\n  try {\n    const nextSiblings = doc.getNexts(model);\n    doc.moveBlocks(nextSiblings, model);\n    doc.moveBlocks([model], grandParent, parent, false);\n  } catch {\n    return;\n  }\n\n  return next();\n};\n\ndeclare global {\n  namespace LumenSuite {\n    interface Commands {\n      dedentBlock: typeof dedentBlock;\n    }\n  }\n}\n"]}