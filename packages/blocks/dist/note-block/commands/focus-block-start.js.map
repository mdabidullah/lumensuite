{"version":3,"file":"focus-block-start.js","sourceRoot":"","sources":["../../../src/note-block/commands/focus-block-start.ts"],"names":[],"mappings":"AAEA,MAAM,CAAC,MAAM,eAAe,GAA0B,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;IAClE,MAAM,EAAE,UAAU,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC;IAChC,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI;QAAE,OAAO;IAElD,MAAM,EAAE,SAAS,EAAE,GAAG,GAAG,CAAC;IAE1B,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE;QACzB,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE;YACvB,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;YAC1D,EAAE,EAAE,IAAI;SACT,CAAC;KACH,CAAC,CAAC;IAEH,OAAO,IAAI,EAAE,CAAC;AAChB,CAAC,CAAC","sourcesContent":["import type { Command } from '@blocksuite/block-std';\n\nexport const focusBlockStart: Command<'focusBlock'> = (ctx, next) => {\n  const { focusBlock, std } = ctx;\n  if (!focusBlock || !focusBlock.model.text) return;\n\n  const { selection } = std;\n\n  selection.setGroup('note', [\n    selection.create('text', {\n      from: { blockId: focusBlock.blockId, index: 0, length: 0 },\n      to: null,\n    }),\n  ]);\n\n  return next();\n};\n\ndeclare global {\n  namespace BlockSuite {\n    interface Commands {\n      focusBlockStart: typeof focusBlockStart;\n    }\n  }\n}\n"]}