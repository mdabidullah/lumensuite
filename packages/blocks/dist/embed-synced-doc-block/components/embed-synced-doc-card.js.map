{"version":3,"file":"embed-synced-doc-card.js","sourceRoot":"","sources":["../../../src/embed-synced-doc-block/components/embed-synced-doc-card.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  isGfxBlockComponent,\n  ShadowlessElement,\n  WithDisposable,\n} from '@blocksuite/block-std';\nimport { html, nothing } from 'lit';\nimport { customElement, property, queryAsync } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport type { SurfaceRefRenderer } from '../../surface-ref-block/surface-ref-renderer.js';\nimport type { SurfaceRefBlockService } from '../../surface-ref-block/surface-ref-service.js';\nimport type { EmbedSyncedDocBlockComponent } from '../embed-synced-doc-block.js';\n\nimport { renderLinkedDocInCard } from '../../_common/utils/render-linked-doc.js';\nimport { cardStyles } from '../styles.js';\nimport { getSyncedDocIcons } from '../utils.js';\n\n@customElement('affine-embed-synced-doc-card')\nexport class EmbedSyncedDocCard extends WithDisposable(ShadowlessElement) {\n  static override styles = cardStyles;\n\n  private _dragging = false;\n\n  cleanUpSurfaceRefRenderer = () => {\n    if (this.surfaceRefRenderer) {\n      this.surfaceRefService.removeRenderer(this.surfaceRefRenderer.id);\n    }\n  };\n\n  get blockState() {\n    return this.block.blockState;\n  }\n\n  get editorMode() {\n    return this.block.editorMode;\n  }\n\n  get host() {\n    return this.block.host;\n  }\n\n  get linkedDoc() {\n    return this.block.syncedDoc;\n  }\n\n  get model() {\n    return this.block.model;\n  }\n\n  get std() {\n    return this.block.std;\n  }\n\n  private _handleClick(event: MouseEvent) {\n    event.stopPropagation();\n    if (!isGfxBlockComponent(this.block)) {\n      this._selectBlock();\n    }\n  }\n\n  private _isDocEmpty() {\n    const syncedDoc = this.block.syncedDoc;\n    if (!syncedDoc) {\n      return false;\n    }\n    return (\n      !!syncedDoc &&\n      !syncedDoc.meta?.title.length &&\n      this.isNoteContentEmpty &&\n      this.isBannerEmpty\n    );\n  }\n\n  private _selectBlock() {\n    const selectionManager = this.host.selection;\n    const blockSelection = selectionManager.create('block', {\n      blockId: this.block.blockId,\n    });\n    selectionManager.setGroup('note', [blockSelection]);\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n\n    this.block.handleEvent(\n      'dragStart',\n      () => {\n        this._dragging = true;\n      },\n      { global: true }\n    );\n    this.block.handleEvent(\n      'dragEnd',\n      () => {\n        this._dragging = false;\n      },\n      { global: true }\n    );\n\n    const { isCycle } = this.block.blockState;\n    const syncedDoc = this.block.syncedDoc;\n    if (isCycle && syncedDoc) {\n      if (syncedDoc.root) {\n        renderLinkedDocInCard(this);\n      } else {\n        syncedDoc.slots.rootAdded.once(() => {\n          renderLinkedDocInCard(this);\n        });\n      }\n\n      this.disposables.add(\n        syncedDoc.collection.meta.docMetaUpdated.on(() => {\n          renderLinkedDocInCard(this);\n        })\n      );\n      this.disposables.add(\n        syncedDoc.slots.blockUpdated.on(payload => {\n          if (this._dragging) {\n            return;\n          }\n          if (\n            payload.type === 'update' &&\n            ['', 'caption', 'xywh'].includes(payload.props.key)\n          ) {\n            return;\n          }\n          renderLinkedDocInCard(this);\n        })\n      );\n    }\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.cleanUpSurfaceRefRenderer();\n  }\n\n  override render() {\n    const { isLoading, isDeleted, isError, isCycle } = this.blockState;\n    const error = this.isError || isError;\n\n    const isEmpty = this._isDocEmpty() && this.isBannerEmpty;\n\n    const cardClassMap = classMap({\n      loading: isLoading,\n      error,\n      deleted: isDeleted,\n      cycle: isCycle,\n      surface: isGfxBlockComponent(this.block),\n      empty: isEmpty,\n      'banner-empty': this.isBannerEmpty,\n      'note-empty': this.isNoteContentEmpty,\n    });\n\n    const {\n      LoadingIcon,\n      SyncedDocIcon,\n      SyncedDocErrorIcon,\n      SyncedDocDeletedIcon,\n      ReloadIcon,\n      SyncedDocEmptyBanner,\n      SyncedDocErrorBanner,\n      SyncedDocDeletedBanner,\n    } = getSyncedDocIcons(this.editorMode);\n\n    const titleIcon = error\n      ? SyncedDocErrorIcon\n      : isLoading\n        ? LoadingIcon\n        : isDeleted\n          ? SyncedDocDeletedIcon\n          : SyncedDocIcon;\n\n    const titleText = error\n      ? this.block.docTitle\n      : isLoading\n        ? 'Loading...'\n        : isDeleted\n          ? `Deleted doc`\n          : this.block.docTitle;\n\n    const showDefaultNoteContent = isLoading || error || isDeleted || isEmpty;\n    const defaultNoteContent = error\n      ? 'This linked doc failed to load.'\n      : isLoading\n        ? ''\n        : isDeleted\n          ? 'This linked doc is deleted.'\n          : isEmpty\n            ? 'Preview of the page will be displayed here.'\n            : '';\n\n    const dateText = this.block.docUpdatedAt.toLocaleString();\n\n    const showDefaultBanner = isLoading || error || isDeleted || isEmpty;\n\n    const defaultBanner = isLoading\n      ? SyncedDocEmptyBanner\n      : error\n        ? SyncedDocErrorBanner\n        : isDeleted\n          ? SyncedDocDeletedBanner\n          : SyncedDocEmptyBanner;\n\n    return html`\n      <div\n        class=\"affine-embed-synced-doc-card ${cardClassMap}\"\n        @click=${this._handleClick}\n      >\n        <div class=\"affine-embed-synced-doc-card-content\">\n          <div class=\"affine-embed-synced-doc-card-content-title\">\n            <div class=\"affine-embed-synced-doc-card-content-title-icon\">\n              ${titleIcon}\n            </div>\n\n            <div class=\"affine-embed-synced-doc-card-content-title-text\">\n              ${titleText}\n            </div>\n          </div>\n\n          ${showDefaultNoteContent\n            ? html`<div class=\"affine-embed-synced-doc-content-note default\">\n                ${defaultNoteContent}\n              </div>`\n            : nothing}\n          <div class=\"affine-embed-synced-doc-content-note render\"></div>\n\n          ${error\n            ? html`\n                <div class=\"affine-embed-synced-doc-card-content-reload\">\n                  <div\n                    class=\"affine-embed-synced-doc-card-content-reload-button\"\n                    @click=${() => this.block.refreshData()}\n                  >\n                    ${ReloadIcon} <span>Reload</span>\n                  </div>\n                </div>\n              `\n            : html`\n                <div class=\"affine-embed-synced-doc-card-content-date\">\n                  <span>Updated</span>\n\n                  <span>${dateText}</span>\n                </div>\n              `}\n        </div>\n\n        <div class=\"affine-embed-synced-doc-card-banner render\"></div>\n\n        ${showDefaultBanner\n          ? html`\n              <div class=\"affine-embed-synced-doc-card-banner default\">\n                ${defaultBanner}\n              </div>\n            `\n          : nothing}\n      </div>\n    `;\n  }\n\n  @queryAsync('.affine-embed-synced-doc-card-banner.render')\n  accessor bannerContainer!: Promise<HTMLDivElement>;\n\n  @property({ attribute: false })\n  accessor block!: EmbedSyncedDocBlockComponent;\n\n  @property({ attribute: false })\n  accessor isBannerEmpty = false;\n\n  @property({ attribute: false })\n  accessor isError = false;\n\n  @property({ attribute: false })\n  accessor isNoteContentEmpty = false;\n\n  @queryAsync('.affine-embed-synced-doc-content-note.render')\n  accessor noteContainer!: Promise<HTMLDivElement>;\n\n  @property({ attribute: false })\n  accessor surfaceRefRenderer: SurfaceRefRenderer | null = null;\n\n  @property({ attribute: false })\n  accessor surfaceRefService!: SurfaceRefBlockService;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'affine-embed-synced-doc-card': EmbedSyncedDocCard;\n  }\n}\n"]}