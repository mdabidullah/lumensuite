{"version":3,"file":"embed-html-block.js","sourceRoot":"","sources":["../../src/embed-html-block/embed-html-block.ts"],"names":[],"mappings":"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","sourcesContent":["import type { EmbedHtmlModel, EmbedHtmlStyles } from '@blocksuite/affine-model';\n\nimport { html } from 'lit';\nimport { customElement, query, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { type StyleInfo, styleMap } from 'lit/directives/style-map.js';\n\nimport type { EmbedHtmlBlockService } from './embed-html-service.js';\n\nimport { EMBED_CARD_HEIGHT, EMBED_CARD_WIDTH } from '../_common/consts.js';\nimport { EmbedBlockComponent } from '../_common/embed-block-helper/index.js';\nimport './components/fullscreen-toolbar.js';\nimport { HtmlIcon, styles } from './styles.js';\n\n@customElement('affine-embed-html-block')\nexport class EmbedHtmlBlockComponent extends EmbedBlockComponent<\n  EmbedHtmlModel,\n  EmbedHtmlBlockService\n> {\n  static override styles = styles;\n\n  override _cardStyle: (typeof EmbedHtmlStyles)[number] = 'html';\n\n  protected _isDragging = false;\n\n  protected _isResizing = false;\n\n  close = () => {\n    document.exitFullscreen().catch(console.error);\n  };\n\n  protected embedHtmlStyle: StyleInfo = {};\n\n  open = () => {\n    this.iframeWrapper?.requestFullscreen().catch(console.error);\n  };\n\n  refreshData = () => {};\n\n  private _handleDoubleClick(event: MouseEvent) {\n    event.stopPropagation();\n    this.open();\n  }\n\n  private _selectBlock() {\n    const selectionManager = this.host.selection;\n    const blockSelection = selectionManager.create('block', {\n      blockId: this.blockId,\n    });\n    selectionManager.setGroup('note', [blockSelection]);\n  }\n\n  protected _handleClick(event: MouseEvent) {\n    event.stopPropagation();\n    this._selectBlock();\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n\n    // this is required to prevent iframe from capturing pointer events\n    this.disposables.add(\n      this.std.selection.slots.changed.on(() => {\n        this._isSelected =\n          !!this.selected?.is('block') || !!this.selected?.is('surface');\n\n        this._showOverlay =\n          this._isResizing || this._isDragging || !this._isSelected;\n      })\n    );\n    // this is required to prevent iframe from capturing pointer events\n    this.handleEvent('dragStart', () => {\n      this._isDragging = true;\n      this._showOverlay =\n        this._isResizing || this._isDragging || !this._isSelected;\n    });\n\n    this.handleEvent('dragEnd', () => {\n      this._isDragging = false;\n      this._showOverlay =\n        this._isResizing || this._isDragging || !this._isSelected;\n    });\n  }\n\n  override renderBlock(): unknown {\n    const { style } = this.model;\n\n    this._cardStyle = style;\n    this._width = EMBED_CARD_WIDTH[style];\n    this._height = EMBED_CARD_HEIGHT[style];\n    this.embedHtmlStyle = {\n      width: '100%',\n      height: `${this._height}px`,\n    };\n\n    const titleText = 'Basic HTML Page Structure';\n\n    const htmlSrc = `\n      <style>\n        body {\n          margin: 0;\n        }\n      </style>\n      ${this.model.html}\n    `;\n\n    return this.renderEmbed(() => {\n      if (!this.model.html) {\n        return html` <div class=\"affine-html-empty\">Empty</div>`;\n      }\n      return html`\n        <div\n          class=${classMap({\n            'affine-embed-html-block': true,\n            selected: this._isSelected,\n          })}\n          style=${styleMap(this.embedHtmlStyle)}\n          @click=${this._handleClick}\n          @dblclick=${this._handleDoubleClick}\n        >\n          <div class=\"affine-embed-html\">\n            <div class=\"affine-embed-html-iframe-container\">\n              <div class=\"embed-html-block-iframe-wrapper\" allowfullscreen>\n                <iframe\n                  class=\"embed-html-block-iframe\"\n                  sandbox=\"allow-scripts\"\n                  scrolling=\"no\"\n                  .srcdoc=${htmlSrc}\n                ></iframe>\n                <embed-html-fullscreen-toolbar\n                  .embedHtml=${this}\n                ></embed-html-fullscreen-toolbar>\n              </div>\n\n              <div\n                class=${classMap({\n                  'affine-embed-html-iframe-overlay': true,\n                  hide: !this._showOverlay,\n                })}\n              ></div>\n            </div>\n          </div>\n\n          <div class=\"affine-embed-html-title\">\n            <div class=\"affine-embed-html-title-icon\">${HtmlIcon}</div>\n\n            <div class=\"affine-embed-html-title-text\">${titleText}</div>\n          </div>\n        </div>\n      `;\n    });\n  }\n\n  @state()\n  protected accessor _isSelected = false;\n\n  @state()\n  protected accessor _showOverlay = true;\n\n  @query('.embed-html-block-iframe-wrapper')\n  accessor iframeWrapper!: HTMLDivElement;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'affine-embed-html-block': EmbedHtmlBlockComponent;\n  }\n}\n"]}