{"version":3,"file":"embed-edgeless-html-block.js","sourceRoot":"","sources":["../../src/embed-html-block/embed-edgeless-html-block.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,0BAA0B,CAAC;AACjD,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAIlD,OAAO,EAAE,oBAAoB,EAAE,MAAM,sDAAsD,CAAC;AAC5F,OAAO,EAAE,uBAAuB,EAAE,MAAM,uBAAuB,CAAC;IAGnD,+BAA+B;4BAD3C,aAAa,CAAC,kCAAkC,CAAC;;;;sBACG,oBAAoB,CACvE,uBAAuB,CACxB;+CAF4C,SAAQ,WAEpD;;;;YAFD,6KAyBC;;;YAzBY,uDAA+B;;QAG1C,IAAI,WAAW;YACb,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,aAAa,CAAwB,CAAC;QACnE,CAAC;QAEQ,cAAc;YACrB,MAAM,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACjD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC;YAEvB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;YAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;YAC5B,MAAM,MAAM,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;YAC/B,MAAM,MAAM,GAAG,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;YAEhC,IAAI,CAAC,mBAAmB,CAAC,SAAS,GAAG,SAAS,MAAM,KAAK,MAAM,GAAG,CAAC;YACnE,IAAI,CAAC,cAAc,GAAG;gBACpB,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,IAAI;gBACzB,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,IAAI;aAC5B,CAAC;YAEF,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAClC,CAAC;;;;SAxBU,+BAA+B","sourcesContent":["import { Bound } from '@lumensuite/global/utils';\nimport { customElement } from 'lit/decorators.js';\n\nimport type { EdgelessRootService } from '../root-block/index.js';\n\nimport { toEdgelessEmbedBlock } from '../_common/embed-block-helper/embed-block-element.js';\nimport { EmbedHtmlBlockComponent } from './embed-html-block.js';\n\n@customElement('affine-embed-edgeless-html-block')\nexport class EmbedEdgelessHtmlBlockComponent extends toEdgelessEmbedBlock(\n  EmbedHtmlBlockComponent\n) {\n  get rootService() {\n    return this.std.getService('affine:page') as EdgelessRootService;\n  }\n\n  override renderGfxBlock() {\n    const bound = Bound.deserialize(this.model.xywh);\n    this._width = bound.w;\n    this._height = bound.h;\n\n    const width = this._width;\n    const height = this._height;\n    const scaleX = bound.w / width;\n    const scaleY = bound.h / height;\n\n    this.embedContainerStyle.transform = `scale(${scaleX}, ${scaleY})`;\n    this.embedHtmlStyle = {\n      width: `${this._width}px`,\n      height: `${this._height}px`,\n    };\n\n    return this.renderPageContent();\n  }\n}\n"]}