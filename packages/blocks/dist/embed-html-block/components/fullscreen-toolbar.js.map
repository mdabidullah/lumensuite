{"version":3,"file":"fullscreen-toolbar.js","sourceRoot":"","sources":["../../../src/embed-html-block/components/fullscreen-toolbar.ts"],"names":[],"mappings":"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","sourcesContent":["import { popMenu } from '@blocksuite/affine-components/context-menu';\nimport {\n  CopyIcon,\n  DoneIcon,\n  ExpandCloseIcon,\n  SettingsIcon,\n} from '@blocksuite/icons/lit';\nimport { flip, offset } from '@floating-ui/dom';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\n\nimport type { EmbedEdgelessHtmlBlockComponent } from '../embed-edgeless-html-block.js';\n\n@customElement('embed-html-fullscreen-toolbar')\nexport class EmbedHtmlFullscreenToolbar extends LitElement {\n  static override styles = css`\n    :host {\n      box-sizing: border-box;\n      position: absolute;\n      z-index: 1;\n      left: 50%;\n      transform: translateX(-50%);\n      bottom: 0;\n      -webkit-user-select: none;\n      user-select: none;\n    }\n\n    .toolbar-toggle-control {\n      padding-bottom: 20px;\n    }\n\n    .toolbar-toggle-control[data-auto-hide='true'] {\n      transition: 0.27s ease;\n      padding-top: 100px;\n      transform: translateY(100px);\n    }\n\n    .toolbar-toggle-control[data-auto-hide='true']:hover {\n      padding-top: 0;\n      transform: translateY(0);\n    }\n\n    .fullscreen-toolbar-container {\n      background: var(--affine-background-overlay-panel-color);\n      box-shadow: var(--affine-menu-shadow);\n      border: 1px solid var(--affine-border-color);\n      border-radius: 40px;\n\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      gap: 12px;\n\n      padding: 0 20px;\n\n      height: 64px;\n    }\n\n    .short-v-divider {\n      display: inline-block;\n      background-color: var(--affine-border-color);\n      width: 1px;\n      height: 36px;\n    }\n  `;\n\n  private _popSettings = () => {\n    this._popperVisible = true;\n    popMenu(this._fullScreenToolbarContainer, {\n      options: {\n        items: [\n          {\n            type: 'custom',\n            render: () =>\n              html`<div class=\"settings-header\">\n                <span>Settings</span>\n              </div>`,\n          },\n\n          {\n            type: 'group',\n            name: 'thing',\n            children: () => [\n              {\n                type: 'toggle-switch',\n                name: 'Hide toolbar',\n                on: this.autoHideToolbar,\n                onChange: on => {\n                  this.autoHideToolbar = on;\n                },\n              },\n            ],\n          },\n        ],\n        onClose: () => {\n          this._popperVisible = false;\n        },\n      },\n\n      placement: 'top-end',\n      middleware: [flip(), offset({ mainAxis: 4, crossAxis: -40 })],\n      container: this.embedHtml.iframeWrapper,\n    });\n  };\n\n  copyCode = () => {\n    if (this._copied) return;\n\n    this.embedHtml.std.clipboard\n      .writeToClipboard(items => {\n        items['text/plain'] = this.embedHtml.model.html ?? '';\n        return items;\n      })\n      .then(() => {\n        this._copied = true;\n        setTimeout(() => (this._copied = false), 1500);\n      })\n      .catch(console.error);\n  };\n\n  private get autoHideToolbar() {\n    return (\n      this.embedHtml.rootService.editPropsStore.getStorage(\n        'autoHideEmbedHTMLFullScreenToolbar'\n      ) ?? false\n    );\n  }\n\n  private set autoHideToolbar(val: boolean) {\n    this.embedHtml.rootService.editPropsStore.setStorage(\n      'autoHideEmbedHTMLFullScreenToolbar',\n      val\n    );\n  }\n\n  override render() {\n    const hideToolbar = !this._popperVisible && this.autoHideToolbar;\n\n    return html`<div\n      data-auto-hide=${hideToolbar}\n      class=\"toolbar-toggle-control\"\n    >\n      <div class=\"fullscreen-toolbar-container\">\n        <icon-button @click=${this.embedHtml.close}\n          >${ExpandCloseIcon()}</icon-button\n        >\n        <icon-button @click=${this._popSettings} hover=${this._popperVisible}\n          >${SettingsIcon()}</icon-button\n        >\n\n        <div class=\"short-v-divider\"></div>\n\n        <icon-button class=\"copy-button\" @click=${this.copyCode}\n          >${this._copied ? DoneIcon() : CopyIcon()}\n        </icon-button>\n      </div>\n    </div> `;\n  }\n\n  @state()\n  private accessor _copied = false;\n\n  @query('.fullscreen-toolbar-container')\n  private accessor _fullScreenToolbarContainer!: HTMLElement;\n\n  @state()\n  private accessor _popperVisible = false;\n\n  @property({ attribute: false })\n  accessor embedHtml!: EmbedEdgelessHtmlBlockComponent;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'embed-html-fullscreen-toolbar': EmbedHtmlFullscreenToolbar;\n  }\n}\n"]}