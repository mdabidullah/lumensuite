{"version":3,"file":"image-edgeless-block.js","sourceRoot":"","sources":["../../src/image-block/image-edgeless-block.ts"],"names":[],"mappings":"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","sourcesContent":["import type { BlockCaptionEditor } from '@lumensuite/affine-components/caption';\nimport type { ImageBlockModel } from '@lumensuite/affine-model';\n\nimport '@lumensuite/affine-components/caption';\nimport { Peekable } from '@lumensuite/affine-components/peek';\nimport { GfxBlockComponent } from '@lumensuite/block-std';\nimport { css, html } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { when } from 'lit/directives/when.js';\n\nimport type { ImageBlockFallbackCard } from './components/image-block-fallback.js';\nimport type { ImageBlockService } from './image-service.js';\n\nimport './components/image-block-fallback.js';\nimport {\n  copyImageBlob,\n  downloadImageBlob,\n  fetchImageBlob,\n  resetImageSize,\n  turnImageIntoCardView,\n} from './utils.js';\n\n@customElement('affine-edgeless-image')\n@Peekable()\nexport class ImageEdgelessBlockComponent extends GfxBlockComponent<\n  ImageBlockModel,\n  ImageBlockService\n> {\n  static override styles = css`\n    affine-edgeless-image .resizable-img,\n    affine-edgeless-image .resizable-img img {\n      width: 100%;\n      height: 100%;\n    }\n  `;\n\n  convertToCardView = () => {\n    turnImageIntoCardView(this).catch(console.error);\n  };\n\n  copy = () => {\n    copyImageBlob(this).catch(console.error);\n  };\n\n  download = () => {\n    downloadImageBlob(this).catch(console.error);\n  };\n\n  refreshData = () => {\n    this.retryCount = 0;\n    fetchImageBlob(this)\n      .then(() => {\n        const { width, height } = this.model;\n        if (!width || !height) {\n          return resetImageSize(this);\n        }\n\n        return;\n      })\n      .catch(console.error);\n  };\n\n  private _handleError(error: Error) {\n    this.dispatchEvent(new CustomEvent('error', { detail: error }));\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n\n    this.refreshData();\n    this.contentEditable = 'false';\n    this.model.propsUpdated.on(({ key }) => {\n      if (key === 'sourceId') {\n        this.refreshData();\n      }\n    });\n  }\n\n  override disconnectedCallback() {\n    if (this.blobUrl) {\n      URL.revokeObjectURL(this.blobUrl);\n    }\n    super.disconnectedCallback();\n  }\n\n  override renderGfxBlock() {\n    const containerStyleMap = styleMap({\n      position: 'relative',\n      width: '100%',\n    });\n\n    return html`\n      <div class=\"affine-image-container\" style=${containerStyleMap}>\n        ${when(\n          this.loading || this.error || !this.blobUrl,\n          () =>\n            html`<affine-image-fallback-card\n              .error=${this.error}\n              .loading=${this.loading}\n              .mode=${'page'}\n            ></affine-image-fallback-card>`,\n          () =>\n            html`<div class=\"resizable-img\">\n              <img\n                class=\"drag-target\"\n                src=${this.blobUrl ?? ''}\n                draggable=\"false\"\n                @error=${this._handleError}\n              />\n            </div>`\n        )}\n        <affine-block-selection .block=${this}></affine-block-selection>\n      </div>\n      <block-caption-editor></block-caption-editor>\n\n      ${Object.values(this.widgets)}\n    `;\n  }\n\n  override updated() {\n    this.fallbackCard?.requestUpdate();\n  }\n\n  @property({ attribute: false })\n  accessor blob: Blob | undefined = undefined;\n\n  @property({ attribute: false })\n  accessor blobUrl: string | undefined = undefined;\n\n  @query('block-caption-editor')\n  accessor captionEditor!: BlockCaptionEditor | null;\n\n  @property({ attribute: false })\n  accessor downloading = false;\n\n  @property({ attribute: false })\n  accessor error = false;\n\n  @query('affine-image-fallback-card')\n  accessor fallbackCard: ImageBlockFallbackCard | null = null;\n\n  @state()\n  accessor lastSourceId!: string;\n\n  @property({ attribute: false })\n  accessor loading = false;\n\n  @query('.resizable-img')\n  accessor resizableImg!: HTMLDivElement;\n\n  @property({ attribute: false })\n  accessor retryCount = 0;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'affine-edgeless-image': ImageEdgelessBlockComponent;\n  }\n}\n"]}