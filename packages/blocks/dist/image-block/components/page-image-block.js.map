{"version":3,"file":"page-image-block.js","sourceRoot":"","sources":["../../../src/image-block/components/page-image-block.ts"],"names":[],"mappings":"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","sourcesContent":["import type { BaseSelection, UIEventStateContext } from '@blocksuite/block-std';\n\nimport { ShadowlessElement, WithDisposable } from '@blocksuite/block-std';\nimport { css, html, type PropertyValues } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\n\nimport type { ImageBlockComponent } from '../image-block.js';\n\nimport { ImageResizeManager } from '../image-resize-manager.js';\nimport { shouldResizeImage } from '../utils.js';\nimport { ImageSelectedRect } from './image-selected-rect.js';\n\n@customElement('affine-page-image')\nexport class ImageBlockPageComponent extends WithDisposable(ShadowlessElement) {\n  static override styles = css`\n    affine-page-image {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      padding: 8px;\n      line-height: 0;\n      cursor: pointer;\n    }\n\n    affine-page-image .resizable-img {\n      position: relative;\n      max-width: 100%;\n    }\n\n    affine-page-image .resizable-img img {\n      width: 100%;\n      height: 100%;\n    }\n  `;\n\n  private _isDragging = false;\n\n  private get _doc() {\n    return this.block.doc;\n  }\n\n  private get _host() {\n    return this.block.host;\n  }\n\n  private get _model() {\n    return this.block.model;\n  }\n\n  private _bindKeyMap() {\n    const selection = this._host.selection;\n\n    const addParagraph = (ctx: UIEventStateContext) => {\n      const parent = this._doc.getParent(this._model);\n      if (!parent) return;\n\n      const index = parent.children.indexOf(this._model);\n      const blockId = this._doc.addBlock(\n        'affine:paragraph',\n        {},\n        parent,\n        index + 1\n      );\n\n      const event = ctx.get('defaultState').event;\n      event.preventDefault();\n\n      selection.update(selList =>\n        selList\n          .filter<BaseSelection>(sel => !sel.is('image'))\n          .concat(\n            selection.create('text', {\n              from: {\n                blockId,\n                index: 0,\n                length: 0,\n              },\n              to: null,\n            })\n          )\n      );\n    };\n\n    this.block.bindHotKey({\n      Escape: () => {\n        selection.update(selList => {\n          return selList.map(sel => {\n            const current =\n              sel.is('image') && sel.blockId === this.block.blockId;\n            if (current) {\n              return selection.create('block', { blockId: this.block.blockId });\n            }\n            return sel;\n          });\n        });\n        return true;\n      },\n      Delete: ctx => {\n        if (this._host.doc.readonly || !this._isSelected) return;\n\n        addParagraph(ctx);\n        this._doc.deleteBlock(this._model);\n        return true;\n      },\n      Backspace: ctx => {\n        if (this._host.doc.readonly || !this._isSelected) return;\n\n        addParagraph(ctx);\n        this._doc.deleteBlock(this._model);\n        return true;\n      },\n      Enter: ctx => {\n        if (this._host.doc.readonly || !this._isSelected) return;\n\n        addParagraph(ctx);\n        return true;\n      },\n      ArrowDown: ctx => {\n        const std = this._host.std;\n\n        // If the selection is not image selection, we should not handle it.\n        // eslint-disable-next-line unicorn/prefer-array-some\n        if (!std.selection.find('image')) {\n          return false;\n        }\n\n        const event = ctx.get('keyboardState');\n        event.raw.preventDefault();\n\n        std.command\n          .chain()\n          .getNextBlock({ path: this.block.blockId })\n          .inline((ctx, next) => {\n            const { nextBlock } = ctx;\n            if (!nextBlock) return;\n\n            return next({ focusBlock: nextBlock });\n          })\n          .focusBlockStart()\n          .run();\n        return true;\n      },\n      ArrowUp: ctx => {\n        const std = this._host.std;\n\n        // If the selection is not image selection, we should not handle it.\n        // eslint-disable-next-line unicorn/prefer-array-some\n        if (!std.selection.find('image')) {\n          return false;\n        }\n\n        const event = ctx.get('keyboardState');\n        event.raw.preventDefault();\n\n        std.command\n          .chain()\n          .getPrevBlock({ path: this.block.blockId })\n          .inline((ctx, next) => {\n            const { prevBlock } = ctx;\n            if (!prevBlock) return;\n\n            return next({ focusBlock: prevBlock });\n          })\n          .focusBlockEnd()\n          .run();\n        return true;\n      },\n    });\n  }\n\n  private _handleError() {\n    this.block.error = true;\n  }\n\n  private _handleSelection() {\n    const selection = this._host.selection;\n    this._disposables.add(\n      selection.slots.changed.on(selList => {\n        this._isSelected = selList.some(\n          sel => sel.blockId === this.block.blockId && sel.is('image')\n        );\n      })\n    );\n\n    this._disposables.add(\n      this._model.propsUpdated.on(() => {\n        this.requestUpdate();\n      })\n    );\n\n    this._disposables.addFromEvent(\n      this.resizeImg,\n      'click',\n      (event: MouseEvent) => {\n        // the peek view need handle shift + click\n        if (event.shiftKey) return;\n\n        event.stopPropagation();\n        selection.update(selList => {\n          return selList\n            .filter(sel => !['block', 'image', 'text'].includes(sel.type))\n            .concat(selection.create('image', { blockId: this.block.blockId }));\n        });\n        return true;\n      }\n    );\n\n    this.block.handleEvent(\n      'click',\n      () => {\n        if (!this._isSelected) return;\n\n        selection.update(selList =>\n          selList.filter(\n            sel => !(sel.is('image') && sel.blockId === this.block.blockId)\n          )\n        );\n      },\n      {\n        global: true,\n      }\n    );\n  }\n\n  private _normalizeImageSize() {\n    // If is dragging, we should use the real size of the image\n    if (this._isDragging && this.resizeImg) {\n      return {\n        width: this.resizeImg.style.width,\n      };\n    }\n\n    const { width, height } = this._model;\n    if (!width || !height) {\n      return {\n        width: 'unset',\n        height: 'unset',\n      };\n    }\n\n    return {\n      width: `${width}px`,\n    };\n  }\n\n  private _observeDrag() {\n    const imageResizeManager = new ImageResizeManager();\n\n    this._disposables.add(\n      this._host.event.add('dragStart', ctx => {\n        const pointerState = ctx.get('pointerState');\n        const target = pointerState.event.target;\n        if (shouldResizeImage(this, target)) {\n          this._isDragging = true;\n          imageResizeManager.onStart(pointerState);\n          return true;\n        }\n        return false;\n      })\n    );\n\n    this._disposables.add(\n      this._host.event.add('dragMove', ctx => {\n        const pointerState = ctx.get('pointerState');\n        if (this._isDragging) {\n          imageResizeManager.onMove(pointerState);\n          return true;\n        }\n        return false;\n      })\n    );\n\n    this._disposables.add(\n      this._host.event.add('dragEnd', () => {\n        if (this._isDragging) {\n          this._isDragging = false;\n          imageResizeManager.onEnd();\n          return true;\n        }\n        return false;\n      })\n    );\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n\n    this._bindKeyMap();\n\n    this._observeDrag();\n  }\n\n  override firstUpdated(changedProperties: PropertyValues) {\n    super.firstUpdated(changedProperties);\n\n    this._handleSelection();\n\n    // The embed block can not be focused,\n    // so the active element will be the last activated element.\n    // If the active element is the title textarea,\n    // any event will dispatch from it and be ignored. (Most events will ignore title)\n    // so we need to blur it.\n    // See also https://developer.mozilla.org/en-US/docs/Web/API/Document/activeElement\n    this.addEventListener('click', () => {\n      if (\n        document.activeElement &&\n        document.activeElement instanceof HTMLElement\n      ) {\n        document.activeElement.blur();\n      }\n    });\n  }\n\n  override render() {\n    const imageSize = this._normalizeImageSize();\n\n    const imageSelectedRect = this._isSelected\n      ? ImageSelectedRect(this._doc.readonly)\n      : null;\n\n    return html`\n      <div class=\"resizable-img\" style=${styleMap(imageSize)}>\n        <img\n          class=\"drag-target\"\n          src=${this.block.blobUrl ?? ''}\n          draggable=\"false\"\n          @error=${this._handleError}\n        />\n\n        ${imageSelectedRect}\n      </div>\n    `;\n  }\n\n  @state()\n  accessor _isSelected = false;\n\n  @property({ attribute: false })\n  accessor block!: ImageBlockComponent;\n\n  @query('.resizable-img')\n  accessor resizeImg!: HTMLElement;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'affine-page-image': ImageBlockPageComponent;\n  }\n}\n"]}