{"version":3,"file":"mindmap-preview.js","sourceRoot":"","sources":["../../../src/surface-block/mini-mindmap/mindmap-preview.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  MindmapElementModel,\n  SurfaceBlockModel,\n} from '@lumensuite/affine-block-surface';\n\nimport {\n  MindmapStyleFour,\n  MindmapStyleOne,\n  MindmapStyleThree,\n  MindmapStyleTwo,\n} from '@lumensuite/affine-components/icons';\nimport { MindmapStyle } from '@lumensuite/affine-model';\nimport {\n  BlockStdScope,\n  type EditorHost,\n  WithDisposable,\n} from '@lumensuite/block-std';\nimport { noop } from '@lumensuite/global/utils';\nimport {\n  type Doc,\n  DocCollection,\n  type DocCollectionOptions,\n  IdGeneratorType,\n  Job,\n  Schema,\n} from '@lumensuite/store';\nimport { css, html, LitElement, nothing } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { styleMap } from 'lit/directives/style-map.js';\n\nimport { MarkdownAdapter } from '../../_common/adapters/markdown.js';\nimport { MindmapRootBlock } from './mindmap-root-block.js';\nimport { MiniMindmapSchema, MiniMindmapSpecs } from './spec.js';\nimport { MindmapSurfaceBlock } from './surface-block.js';\n\nnoop(MindmapRootBlock);\nnoop(MindmapSurfaceBlock);\n\nconst mindmapStyles = [\n  [MindmapStyle.ONE, MindmapStyleOne],\n  [MindmapStyle.TWO, MindmapStyleTwo],\n  [MindmapStyle.THREE, MindmapStyleThree],\n  [MindmapStyle.FOUR, MindmapStyleFour],\n];\n\ntype Unpacked<T> = T extends (infer U)[] ? U : T;\n\n@customElement('mini-mindmap-preview')\nexport class MiniMindmapPreview extends WithDisposable(LitElement) {\n  static override styles = css`\n    mini-mindmap-root-block,\n    mini-mindmap-surface-block,\n    editor-host {\n      display: block;\n      width: 100%;\n      height: 100%;\n    }\n\n    .select-template-title {\n      align-self: stretch;\n\n      color: var(\n        --light-textColor-textSecondaryColor,\n        var(--textColor-textSecondaryColor, #8e8d91)\n      );\n\n      font-family: Inter;\n      font-size: 12px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 20px;\n\n      margin-bottom: 4px;\n    }\n\n    .template {\n      display: flex;\n      gap: 12px;\n    }\n\n    .template-item {\n      box-sizing: border-box;\n      border: 2px solid var(--affine-border-color);\n      border-radius: 4px;\n      padding: 4px 6px;\n    }\n\n    .template-item.active,\n    .template-item:hover {\n      border-color: var(--affine-brand-color);\n    }\n\n    .template-item > svg {\n      display: block;\n    }\n  `;\n\n  doc?: Doc;\n\n  mindmapId?: string;\n\n  surface?: SurfaceBlockModel;\n\n  get _mindmap(): MindmapElementModel | null {\n    return (\n      (this.surface?.getElementById(\n        this.mindmapId || ''\n      ) as MindmapElementModel) ?? null\n    );\n  }\n\n  private _createTemporaryDoc() {\n    const schema = new Schema();\n    schema.register(MiniMindmapSchema);\n    const options: DocCollectionOptions = {\n      id: 'MINI_MINDMAP_TEMPORARY',\n      schema,\n      idGenerator: IdGeneratorType.NanoID,\n      awarenessSources: [],\n    };\n\n    const collection = new DocCollection(options);\n    collection.meta.initialize();\n    collection.start();\n\n    const doc = collection.createDoc({ id: 'doc:home' }).load();\n    const rootId = doc.addBlock('affine:page', {});\n    const surfaceId = doc.addBlock('affine:surface', {}, rootId);\n    const surface = doc.getBlockById(surfaceId) as SurfaceBlockModel;\n    doc.resetHistory();\n\n    return {\n      doc,\n      surface,\n    };\n  }\n\n  private _switchStyle(style: MindmapStyle) {\n    if (!this._mindmap || !this.doc) {\n      return;\n    }\n\n    this.doc.transact(() => {\n      this._mindmap!.style = style;\n    });\n\n    this.ctx.set({\n      ...this.ctx.get(),\n      style,\n    });\n    this.requestUpdate();\n  }\n\n  private _toMindmapNode(answer: string, doc: Doc) {\n    return markdownToMindmap(answer, doc);\n  }\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n\n    const tempDoc = this._createTemporaryDoc();\n    const mindmapNode = this._toMindmapNode(this.answer, tempDoc.doc);\n\n    if (!mindmapNode) {\n      return;\n    }\n\n    this.doc = tempDoc.doc;\n    this.surface = tempDoc.surface;\n    this.mindmapId = this.surface.addElement({\n      type: 'mindmap',\n      children: mindmapNode,\n      style: this.mindmapStyle ?? MindmapStyle.FOUR,\n    });\n\n    const centerPosition = this._mindmap?.tree.element.xywh;\n\n    this.ctx.set({\n      node: mindmapNode,\n      style: MindmapStyle.FOUR,\n      centerPosition,\n    });\n  }\n\n  override render() {\n    if (!this.doc || !this.surface || !this._mindmap) return nothing;\n\n    const curStyle = this._mindmap.style;\n\n    return html` <div>\n      <div\n        style=${styleMap({\n          height: this.height + 'px',\n          border: '1px solid var(--affine-border-color)',\n          borderRadius: '4px',\n        })}\n      >\n        ${new BlockStdScope({\n          doc: this.doc,\n          extensions: MiniMindmapSpecs,\n        }).render()}\n      </div>\n\n      ${this.templateShow\n        ? html` <div class=\"select-template-title\">Select template</div>\n            <div class=\"template\">\n              ${repeat(\n                mindmapStyles,\n                ([style]) => style,\n                ([style, icon]) => {\n                  return html`<div\n                    class=${`template-item ${curStyle === style ? 'active' : ''}`}\n                    @click=${() => this._switchStyle(style as MindmapStyle)}\n                  >\n                    ${icon}\n                  </div>`;\n                }\n              )}\n            </div>`\n        : nothing}\n    </div>`;\n  }\n\n  @property({ attribute: false })\n  accessor answer!: string;\n\n  @property({ attribute: false })\n  accessor ctx!: {\n    get(): Record<string, unknown>;\n    set(data: Record<string, unknown>): void;\n  };\n\n  @property({ attribute: false })\n  accessor height = 400;\n\n  @property({ attribute: false })\n  accessor host!: EditorHost;\n\n  @property({ attribute: false })\n  accessor mindmapStyle: MindmapStyle | undefined = undefined;\n\n  @query('editor-host')\n  accessor portalHost!: EditorHost;\n\n  @property({ attribute: false })\n  accessor templateShow = true;\n}\n\ntype Node = {\n  text: string;\n  children: Node[];\n};\n\nexport const markdownToMindmap = (answer: string, doc: Doc) => {\n  let result: Node | null = null;\n  const job = new Job({ collection: doc.collection });\n  const markdown = new MarkdownAdapter(job);\n  const ast = markdown['_markdownToAst'](answer);\n  const traverse = (\n    markdownNode: Unpacked<(typeof ast)['children']>,\n    firstLevel = false\n  ): Node | null => {\n    switch (markdownNode.type) {\n      case 'list':\n        {\n          const listItems = markdownNode.children\n            .map(child => traverse(child))\n            .filter(val => val);\n\n          if (firstLevel) {\n            return listItems[0];\n          }\n        }\n        break;\n      case 'listItem': {\n        const paragraph = markdownNode.children[0];\n        const list = markdownNode.children[1];\n        const node: Node = {\n          text: '',\n          children: [],\n        };\n\n        if (paragraph?.type === 'paragraph') {\n          if (paragraph.children[0]?.type === 'text') {\n            node.text = paragraph.children[0].value;\n          }\n        }\n\n        if (list?.type === 'list') {\n          node.children = list.children\n            .map(child => traverse(child))\n            .filter(val => val) as Node[];\n        }\n\n        return node;\n      }\n    }\n\n    return null;\n  };\n\n  if (ast?.children?.[0]?.type === 'list') {\n    result = traverse(ast.children[0], true);\n  }\n\n  return result;\n};\n"]}