{"version":3,"file":"affine-code-unit.js","sourceRoot":"","sources":["../../../src/code-block/highlight/affine-code-unit.ts"],"names":[],"mappings":"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","sourcesContent":["import type { AffineTextAttributes } from '@lumensuite/affine-components/rich-text';\nimport type { ThemedToken } from 'shiki';\n\nimport { ShadowlessElement } from '@lumensuite/block-std';\nimport { type DeltaInsert, ZERO_WIDTH_SPACE } from '@lumensuite/inline';\nimport { html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\n\n@customElement('affine-code-unit')\nexport class AffineCodeUnit extends ShadowlessElement {\n  get codeBlock() {\n    return this.closest('affine-code');\n  }\n\n  get vElement() {\n    return this.closest('v-element');\n  }\n\n  override render() {\n    const plainContent = html`<span\n      ><v-text .str=${this.delta.insert}></v-text\n    ></span>`;\n\n    const codeBlock = this.codeBlock;\n    const vElement = this.vElement;\n    if (!codeBlock || !vElement) return plainContent;\n    const tokens = codeBlock.highlightTokens$.value;\n    if (tokens.length === 0) return plainContent;\n    // copy the tokens to avoid modifying the original tokens\n    const lineTokens = structuredClone(tokens[vElement.lineIndex]);\n    if (lineTokens.length === 0) return plainContent;\n\n    const startOffset = vElement.startOffset;\n    const endOffset = vElement.endOffset;\n    const includedTokens: ThemedToken[] = [];\n    lineTokens.forEach(token => {\n      if (\n        (token.offset <= startOffset &&\n          token.offset + token.content.length >= startOffset) ||\n        (token.offset >= startOffset &&\n          token.offset + token.content.length <= endOffset) ||\n        (token.offset <= endOffset &&\n          token.offset + token.content.length >= endOffset)\n      ) {\n        includedTokens.push(token);\n      }\n    });\n    if (includedTokens.length === 0) return plainContent;\n\n    if (includedTokens.length === 1) {\n      const token = includedTokens[0];\n      const content = token.content.slice(\n        startOffset - token.offset,\n        endOffset - token.offset\n      );\n\n      return html`<v-text\n        .str=${content}\n        style=${styleMap({\n          color: token.color,\n        })}\n      ></v-text>`;\n    } else {\n      const firstToken = includedTokens[0];\n      const lastToken = includedTokens[includedTokens.length - 1];\n\n      const firstContent = firstToken.content.slice(\n        startOffset - firstToken.offset,\n        firstToken.content.length\n      );\n      const lastContent = lastToken.content.slice(\n        0,\n        endOffset - lastToken.offset\n      );\n      firstToken.content = firstContent;\n      lastToken.content = lastContent;\n\n      const vTexts = includedTokens.map(token => {\n        return html`<v-text\n          .str=${token.content}\n          style=${styleMap({\n            color: token.color,\n          })}\n        ></v-text>`;\n      });\n\n      return html`<span>${vTexts}</span>`;\n    }\n  }\n\n  @property({ type: Object })\n  accessor delta: DeltaInsert<AffineTextAttributes> = {\n    insert: ZERO_WIDTH_SPACE,\n  };\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'affine-code-unit': AffineCodeUnit;\n  }\n}\n"]}