{"version":3,"file":"attachment-service.js","sourceRoot":"","sources":["../../src/attachment-block/attachment-service.ts"],"names":[],"mappings":"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","sourcesContent":["import { AttachmentBlockSchema } from '@lumensuite/affine-model';\nimport { TelemetryProvider } from '@lumensuite/affine-shared/services';\nimport {\n  isInsideEdgelessEditor,\n  matchFlavours,\n} from '@lumensuite/affine-shared/utils';\nimport { BlockService } from '@lumensuite/block-std';\nimport { Bound, Point } from '@lumensuite/global/utils';\nimport { Slot } from '@lumensuite/store';\nimport { render } from 'lit';\n\nimport type { EdgelessRootService } from '../root-block/edgeless/edgeless-root-service.js';\nimport type { RootBlockComponent } from '../root-block/types.js';\nimport type { DragHandleOption } from '../root-block/widgets/drag-handle/config.js';\nimport type { AttachmentBlockComponent } from './attachment-block.js';\n\nimport {\n  FileDropManager,\n  type FileDropOptions,\n} from '../_common/components/file-drop-manager.js';\nimport { EMBED_CARD_HEIGHT, EMBED_CARD_WIDTH } from '../_common/consts.js';\nimport { EdgelessRootBlockComponent } from '../root-block/edgeless/edgeless-root-block.js';\nimport {\n  AFFINE_DRAG_HANDLE_WIDGET,\n  AffineDragHandleWidget,\n} from '../root-block/widgets/drag-handle/drag-handle.js';\nimport {\n  captureEventTarget,\n  convertDragPreviewDocToEdgeless,\n  convertDragPreviewEdgelessToDoc,\n} from '../root-block/widgets/drag-handle/utils.js';\nimport { AttachmentEdgelessBlockComponent } from './attachment-edgeless-block.js';\nimport { addSiblingAttachmentBlocks } from './utils.js';\n\nexport class AttachmentBlockService extends BlockService {\n  static override readonly flavour = AttachmentBlockSchema.model.flavour;\n\n  private _dragHandleOption: DragHandleOption = {\n    flavour: AttachmentBlockSchema.model.flavour,\n    edgeless: true,\n    onDragStart: ({ state, startDragging, anchorBlockId, editorHost }) => {\n      if (!anchorBlockId) return false;\n      const anchorComponent = editorHost.std.view.getBlock(anchorBlockId);\n      if (\n        !anchorComponent ||\n        !matchFlavours(anchorComponent.model, [\n          AttachmentBlockSchema.model.flavour,\n        ])\n      )\n        return false;\n\n      const blockComponent = anchorComponent as\n        | AttachmentBlockComponent\n        | AttachmentEdgelessBlockComponent;\n      const element = captureEventTarget(state.raw.target);\n\n      const isDraggingByDragHandle = !!element?.closest(\n        AFFINE_DRAG_HANDLE_WIDGET\n      );\n      const isDraggingByComponent = blockComponent.contains(element);\n      const isInSurface =\n        blockComponent instanceof AttachmentEdgelessBlockComponent;\n\n      if (!isInSurface && (isDraggingByDragHandle || isDraggingByComponent)) {\n        editorHost.selection.setGroup('note', [\n          editorHost.selection.create('block', {\n            blockId: blockComponent.blockId,\n          }),\n        ]);\n        startDragging([blockComponent], state);\n        return true;\n      } else if (isInSurface && isDraggingByDragHandle) {\n        const edgelessService = editorHost.std.getService(\n          'affine:page'\n        ) as EdgelessRootService;\n        const zoom = edgelessService?.viewport.zoom ?? 1;\n        const dragPreviewEl = document.createElement('div');\n        const bound = Bound.deserialize(blockComponent.model.xywh);\n        const offset = new Point(bound.x * zoom, bound.y * zoom);\n        render(\n          blockComponent.host.dangerouslyRenderModel(blockComponent.model),\n          dragPreviewEl\n        );\n\n        startDragging([blockComponent], state, dragPreviewEl, offset);\n        return true;\n      }\n      return false;\n    },\n    onDragEnd: props => {\n      const { state, draggingElements, editorHost } = props;\n      if (\n        draggingElements.length !== 1 ||\n        !matchFlavours(draggingElements[0].model, [\n          AttachmentBlockSchema.model.flavour,\n        ])\n      )\n        return false;\n\n      const blockComponent = draggingElements[0] as\n        | AttachmentBlockComponent\n        | AttachmentEdgelessBlockComponent;\n      const isInSurface =\n        blockComponent instanceof AttachmentEdgelessBlockComponent;\n      const target = captureEventTarget(state.raw.target);\n      const isTargetEdgelessContainer =\n        target?.classList.contains('edgeless-container');\n\n      if (isInSurface) {\n        const style = blockComponent.model.style;\n        const targetStyle = style === 'cubeThick' ? 'horizontalThin' : style;\n        return convertDragPreviewEdgelessToDoc({\n          blockComponent,\n          style: targetStyle,\n          ...props,\n        });\n      } else if (isTargetEdgelessContainer) {\n        let style = blockComponent.model.style ?? 'cubeThick';\n        const embed = blockComponent.model.embed;\n        if (embed) {\n          style = 'cubeThick';\n          editorHost.doc.updateBlock(blockComponent.model, {\n            style,\n            embed: false,\n          });\n        }\n\n        return convertDragPreviewDocToEdgeless({\n          blockComponent,\n          cssSelector: '.affine-attachment-container',\n          width: EMBED_CARD_WIDTH[style],\n          height: EMBED_CARD_HEIGHT[style],\n          ...props,\n        });\n      }\n\n      return false;\n    },\n  };\n\n  private _fileDropOptions: FileDropOptions = {\n    flavour: this.flavour,\n    onDrop: async ({ files, targetModel, place, point }) => {\n      if (!files.length) return false;\n\n      // generic attachment block for all files except images\n      const attachmentFiles = files.filter(\n        file => !file.type.startsWith('image/')\n      );\n\n      if (targetModel && !matchFlavours(targetModel, ['affine:surface'])) {\n        await addSiblingAttachmentBlocks(\n          this.host,\n          attachmentFiles,\n          this.maxFileSize,\n          targetModel,\n          place\n        );\n      } else if (isInsideEdgelessEditor(this.host)) {\n        const edgelessRoot = this.rootComponent;\n        if (!(edgelessRoot instanceof EdgelessRootBlockComponent)) return false;\n        point = edgelessRoot.service.viewport.toViewCoordFromClientCoord(point);\n        await edgelessRoot.addAttachments(attachmentFiles, point);\n\n        this.std.getOptional(TelemetryProvider)?.track('CanvasElementAdded', {\n          control: 'canvas:drop',\n          page: 'whiteboard editor',\n          module: 'toolbar',\n          segment: 'toolbar',\n          type: 'attachment',\n        });\n      }\n\n      this.slots.onFilesDropped.emit(attachmentFiles);\n      return true;\n    },\n  };\n\n  fileDropManager!: FileDropManager;\n\n  maxFileSize = 10 * 1000 * 1000; // 10MB (default)\n\n  slots = {\n    onFilesDropped: new Slot<File[]>(),\n  };\n\n  get rootComponent(): RootBlockComponent | null {\n    const rootModel = this.doc.root;\n    if (!rootModel) return null;\n    const rootComponent = this.std.view.getBlock(\n      rootModel.id\n    ) as RootBlockComponent | null;\n    return rootComponent;\n  }\n\n  override mounted(): void {\n    super.mounted();\n\n    this.fileDropManager = new FileDropManager(this, this._fileDropOptions);\n\n    this.disposables.add(\n      AffineDragHandleWidget.registerOption(this._dragHandleOption)\n    );\n  }\n}\n"]}