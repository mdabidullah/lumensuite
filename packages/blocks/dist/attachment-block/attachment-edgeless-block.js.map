{"version":3,"file":"attachment-edgeless-block.js","sourceRoot":"","sources":["../../src/attachment-block/attachment-edgeless-block.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAO,EAAE,qBAAqB,EAAE,MAAM,0BAA0B,CAAC;AACjE,OAAO,EACL,iBAAiB,EACjB,gBAAgB,GACjB,MAAM,kCAAkC,CAAC;AAC1C,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAC5D,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAClD,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAIvD,OAAO,EAAE,wBAAwB,EAAE,MAAM,uBAAuB,CAAC;IAGpD,gCAAgC;4BAD5C,aAAa,CAAC,4BAA4B,CAAC;;;;sBACU,mBAAmB,CACvE,wBAAwB,CACzB;gDAF6C,SAAQ,WAErD;;;;YACoB,eAAU,GAA2B,IAAI,CAAC;QAqD/D,CAAC;;;YAxDD,6KAwDC;;;YAxDY,uDAAgC;;QAK3C,IAAuB,SAAS;YAC9B,OAAO,SAAS,CAAC;QACnB,CAAC;QAED,IAAI,WAAW;YACb,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,aAAa,CAAwB,CAAC;QACnE,CAAC;QAEQ,iBAAiB;YACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;YAE1B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;YAErC,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,WAAW,CAAC,KAAK,CAAC,kBAAkB,CAAC,EAAE,CAAC,GAAG,EAAE;gBAC3C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAC3B,CAAC,CAAC,CACH,CAAC;YAEF,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,WAAW,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAAE,CAAC,GAAG,EAAE;gBACzC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBACzB,IAAI,CAAC,YAAY;oBACf,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;YAC9D,CAAC,CAAC,CACH,CAAC;QACJ,CAAC;QAEQ,OAAO,CAAC,CAAa;YAC5B,OAAO;QACT,CAAC;QAEQ,cAAc;YACrB,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;YAC9B,MAAM,SAAS,GAAG,MAAM,CAAC,KAAK,IAAI,qBAAqB,CAAC,CAAC,CAAC,CAAC;YAC3D,MAAM,KAAK,GAAG,gBAAgB,CAAC,SAAS,CAAC,CAAC;YAC1C,MAAM,MAAM,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC5C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;YACtC,MAAM,MAAM,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;YAC/B,MAAM,MAAM,GAAG,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;YAEhC,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;gBAChC,KAAK,EAAE,GAAG,KAAK,IAAI;gBACnB,MAAM,EAAE,GAAG,MAAM,IAAI;gBACrB,SAAS,EAAE,SAAS,MAAM,KAAK,MAAM,GAAG;gBACxC,eAAe,EAAE,KAAK;aACvB,CAAC,CAAC;YAEH,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAClC,CAAC;;;;SAvDU,gCAAgC","sourcesContent":["import type { HoverController } from '@blocksuite/affine-components/hover';\n\nimport { AttachmentBlockStyles } from '@blocksuite/affine-model';\nimport {\n  EMBED_CARD_HEIGHT,\n  EMBED_CARD_WIDTH,\n} from '@blocksuite/affine-shared/consts';\nimport { toGfxBlockComponent } from '@blocksuite/block-std';\nimport { customElement } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\n\nimport type { EdgelessRootService } from '../root-block/index.js';\n\nimport { AttachmentBlockComponent } from './attachment-block.js';\n\n@customElement('affine-edgeless-attachment')\nexport class AttachmentEdgelessBlockComponent extends toGfxBlockComponent(\n  AttachmentBlockComponent\n) {\n  protected override _whenHover: HoverController | null = null;\n\n  protected override get embedView() {\n    return undefined;\n  }\n\n  get rootService() {\n    return this.std.getService('affine:page') as EdgelessRootService;\n  }\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n\n    const rootService = this.rootService;\n\n    this._disposables.add(\n      rootService.slots.elementResizeStart.on(() => {\n        this._isResizing = true;\n        this._showOverlay = true;\n      })\n    );\n\n    this._disposables.add(\n      rootService.slots.elementResizeEnd.on(() => {\n        this._isResizing = false;\n        this._showOverlay =\n          this._isResizing || this._isDragging || !this._isSelected;\n      })\n    );\n  }\n\n  override onClick(_: MouseEvent) {\n    return;\n  }\n\n  override renderGfxBlock() {\n    const { style$ } = this.model;\n    const cardStyle = style$.value ?? AttachmentBlockStyles[1];\n    const width = EMBED_CARD_WIDTH[cardStyle];\n    const height = EMBED_CARD_HEIGHT[cardStyle];\n    const bound = this.model.elementBound;\n    const scaleX = bound.w / width;\n    const scaleY = bound.h / height;\n\n    this.containerStyleMap = styleMap({\n      width: `${width}px`,\n      height: `${height}px`,\n      transform: `scale(${scaleX}, ${scaleY})`,\n      transformOrigin: '0 0',\n    });\n\n    return this.renderPageContent();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'affine-edgeless-attachment': AttachmentEdgelessBlockComponent;\n  }\n}\n"]}