{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/attachment-block/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  AttachmentBlockModel,\n  AttachmentBlockProps,\n} from '@lumensuite/affine-model';\nimport type { EditorHost } from '@lumensuite/block-std';\nimport type { BlockModel } from '@lumensuite/store';\n\nimport { toast } from '@lumensuite/affine-components/toast';\nimport { defaultAttachmentProps } from '@lumensuite/affine-model';\nimport { humanFileSize } from '@lumensuite/affine-shared/utils';\n\nimport type { AttachmentBlockComponent } from './attachment-block.js';\n\nimport { allowEmbed } from './embed.js';\n\nexport function cloneAttachmentProperties(model: AttachmentBlockModel) {\n  const clonedProps = {} as AttachmentBlockProps;\n  for (const cur in defaultAttachmentProps) {\n    const key = cur as keyof AttachmentBlockProps;\n    // @ts-expect-error it's safe because we just cloned the props simply\n    clonedProps[key] = model[\n      key\n    ] as AttachmentBlockProps[keyof AttachmentBlockProps];\n  }\n  return clonedProps;\n}\n\nconst attachmentUploads = new Set<string>();\nexport function setAttachmentUploading(blockId: string) {\n  attachmentUploads.add(blockId);\n}\nexport function setAttachmentUploaded(blockId: string) {\n  attachmentUploads.delete(blockId);\n}\nfunction isAttachmentUploading(blockId: string) {\n  return attachmentUploads.has(blockId);\n}\n\n/**\n * This function will not verify the size of the file.\n */\nasync function uploadAttachmentBlob(\n  editorHost: EditorHost,\n  blockId: string,\n  blob: Blob\n): Promise<void> {\n  if (isAttachmentUploading(blockId)) {\n    return;\n  }\n\n  const doc = editorHost.doc;\n  let sourceId: string | undefined;\n\n  try {\n    setAttachmentUploading(blockId);\n    sourceId = await doc.blobSync.set(blob);\n  } catch (error) {\n    console.error(error);\n    if (error instanceof Error) {\n      toast(\n        editorHost,\n        `Failed to upload attachment! ${error.message || error.toString()}`\n      );\n    }\n  } finally {\n    setAttachmentUploaded(blockId);\n\n    const attachmentModel = doc.getBlockById(\n      blockId\n    ) as AttachmentBlockModel | null;\n\n    doc.withoutTransact(() => {\n      if (!attachmentModel) {\n        return;\n      }\n      doc.updateBlock(attachmentModel, {\n        sourceId,\n      } satisfies Partial<AttachmentBlockProps>);\n    });\n  }\n}\n\nasync function getAttachmentBlob(model: AttachmentBlockModel) {\n  const sourceId = model.sourceId;\n  if (!sourceId) {\n    return null;\n  }\n\n  const doc = model.doc;\n  let blob = await doc.blobSync.get(sourceId);\n\n  if (blob) {\n    blob = new Blob([blob], { type: model.type });\n  }\n\n  return blob;\n}\n\nexport async function checkAttachmentBlob(block: AttachmentBlockComponent) {\n  const model = block.model;\n  const { id, sourceId } = model;\n\n  if (isAttachmentUploading(id)) {\n    block.loading = true;\n    block.error = false;\n    block.allowEmbed = false;\n    if (block.blobUrl) {\n      URL.revokeObjectURL(block.blobUrl);\n      block.blobUrl = undefined;\n    }\n    return;\n  }\n\n  try {\n    if (!sourceId) {\n      return;\n    }\n\n    const blob = await getAttachmentBlob(model);\n    if (!blob) {\n      return;\n    }\n\n    block.loading = false;\n    block.error = false;\n    block.allowEmbed = allowEmbed(model, block.service.maxFileSize);\n    if (block.blobUrl) {\n      URL.revokeObjectURL(block.blobUrl);\n    }\n    block.blobUrl = URL.createObjectURL(blob);\n  } catch (error) {\n    console.warn(error, model, sourceId);\n\n    block.loading = false;\n    block.error = true;\n    block.allowEmbed = false;\n    if (block.blobUrl) {\n      URL.revokeObjectURL(block.blobUrl);\n      block.blobUrl = undefined;\n    }\n  }\n}\n\n/**\n * Since the size of the attachment may be very large,\n * the download process may take a long time!\n */\nexport function downloadAttachmentBlob(block: AttachmentBlockComponent) {\n  const { host, model, loading, error, downloading, blobUrl } = block;\n  if (downloading) {\n    toast(host, 'Download in progress...');\n    return;\n  }\n\n  if (loading) {\n    toast(host, 'Please wait, file is loading...');\n    return;\n  }\n\n  const name = model.name;\n  const shortName = name.length < 20 ? name : name.slice(0, 20) + '...';\n\n  if (error || !blobUrl) {\n    toast(host, `Failed to download ${shortName}!`);\n    return;\n  }\n\n  block.downloading = true;\n\n  toast(host, `Downloading ${shortName}`);\n\n  const tmpLink = document.createElement('a');\n  const event = new MouseEvent('click');\n  tmpLink.download = name;\n  tmpLink.href = blobUrl;\n  tmpLink.dispatchEvent(event);\n  tmpLink.remove();\n\n  block.downloading = false;\n}\n\nexport async function getFileType(file: File) {\n  if (file.type) {\n    return file.type;\n  }\n  // If the file type is not available, try to get it from the buffer.\n  const buffer = await file.arrayBuffer();\n  const FileType = await import('file-type');\n  const fileType = await FileType.fileTypeFromBuffer(buffer);\n  return fileType ? fileType.mime : '';\n}\n\n/**\n * Add a new attachment block before / after the specified block.\n */\nexport async function addSiblingAttachmentBlocks(\n  editorHost: EditorHost,\n  files: File[],\n  maxFileSize: number,\n  targetModel: BlockModel,\n  place: 'before' | 'after' = 'after'\n) {\n  if (!files.length) {\n    return;\n  }\n\n  const isSizeExceeded = files.some(file => file.size > maxFileSize);\n  if (isSizeExceeded) {\n    toast(\n      editorHost,\n      `You can only upload files less than ${humanFileSize(\n        maxFileSize,\n        true,\n        0\n      )}`\n    );\n    return;\n  }\n\n  const doc = targetModel.doc;\n\n  // Get the types of all files\n  const types = await Promise.all(files.map(file => getFileType(file)));\n  const attachmentBlockProps: (Partial<AttachmentBlockProps> & {\n    flavour: 'affine:attachment';\n  })[] = files.map((file, index) => ({\n    flavour: 'affine:attachment',\n    name: file.name,\n    size: file.size,\n    type: types[index],\n  }));\n\n  const blockIds = doc.addSiblingBlocks(\n    targetModel,\n    attachmentBlockProps,\n    place\n  );\n\n  blockIds.map(\n    (blockId, index) =>\n      void uploadAttachmentBlob(editorHost, blockId, files[index])\n  );\n\n  return blockIds;\n}\n"]}