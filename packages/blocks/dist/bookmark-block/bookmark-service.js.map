{"version":3,"file":"bookmark-service.js","sourceRoot":"","sources":["../../src/bookmark-block/bookmark-service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,aAAa,EAAE,MAAM,iCAAiC,CAAC;AAChE,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AACrD,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,0BAA0B,CAAC;AACxD,OAAO,EAAE,MAAM,EAAE,MAAM,KAAK,CAAC;AAM7B,OAAO,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AAC3E,OAAO,EAAE,aAAa,EAAE,MAAM,wCAAwC,CAAC;AACvE,OAAO,EACL,yBAAyB,EACzB,sBAAsB,GACvB,MAAM,kDAAkD,CAAC;AAC1D,OAAO,EACL,kBAAkB,EAClB,+BAA+B,EAC/B,+BAA+B,GAChC,MAAM,4CAA4C,CAAC;AACpD,OAAO,EAAE,8BAA8B,EAAE,MAAM,8BAA8B,CAAC;AAE9E,MAAM,OAAO,oBAAqB,SAAQ,YAAY;IAAtD;;QAQU,sBAAiB,GAAqB;YAC5C,OAAO,EAAE,mBAAmB,CAAC,KAAK,CAAC,OAAO;YAC1C,QAAQ,EAAE,IAAI;YACd,WAAW,EAAE,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,aAAa,EAAE,UAAU,EAAE,EAAE,EAAE;gBACnE,IAAI,CAAC,aAAa;oBAAE,OAAO,KAAK,CAAC;gBACjC,MAAM,eAAe,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;gBACpE,IACE,CAAC,eAAe;oBAChB,CAAC,aAAa,CAAC,eAAe,CAAC,KAAK,EAAE;wBACpC,mBAAmB,CAAC,KAAK,CAAC,OAAO;qBAClC,CAAC;oBAEF,OAAO,KAAK,CAAC;gBAEf,MAAM,cAAc,GAAG,eAEW,CAAC;gBACnC,MAAM,OAAO,GAAG,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBAErD,MAAM,sBAAsB,GAAG,CAAC,CAAC,OAAO,EAAE,OAAO,CAC/C,yBAAyB,CAC1B,CAAC;gBACF,MAAM,qBAAqB,GAAG,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAC/D,MAAM,WAAW,GACf,cAAc,YAAY,8BAA8B,CAAC;gBAE3D,IAAI,CAAC,WAAW,IAAI,CAAC,sBAAsB,IAAI,qBAAqB,CAAC,EAAE,CAAC;oBACtE,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE;wBACpC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,EAAE;4BACnC,OAAO,EAAE,cAAc,CAAC,OAAO;yBAChC,CAAC;qBACH,CAAC,CAAC;oBACH,aAAa,CAAC,CAAC,cAAc,CAAC,EAAE,KAAK,CAAC,CAAC;oBACvC,OAAO,IAAI,CAAC;gBACd,CAAC;qBAAM,IAAI,WAAW,IAAI,sBAAsB,EAAE,CAAC;oBACjD,MAAM,eAAe,GAAG,UAAU,CAAC,GAAG,CAAC,UAAU,CAC/C,aAAa,CACS,CAAC;oBACzB,MAAM,IAAI,GAAG,eAAe,EAAE,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC;oBACjD,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;oBACpD,MAAM,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBAC3D,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,EAAE,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;oBACzD,MAAM,CACJ,cAAc,CAAC,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,KAAK,CAAC,EAChE,aAAa,CACd,CAAC;oBAEF,aAAa,CAAC,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC;oBAC9D,OAAO,IAAI,CAAC;gBACd,CAAC;gBACD,OAAO,KAAK,CAAC;YACf,CAAC;YACD,SAAS,EAAE,KAAK,CAAC,EAAE;gBACjB,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAE,GAAG,KAAK,CAAC;gBAC1C,IACE,gBAAgB,CAAC,MAAM,KAAK,CAAC;oBAC7B,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE;wBACxC,mBAAmB,CAAC,KAAK,CAAC,OAAO;qBAClC,CAAC;oBAEF,OAAO,KAAK,CAAC;gBAEf,MAAM,cAAc,GAAG,gBAAgB,CAAC,CAAC,CAEP,CAAC;gBACnC,MAAM,WAAW,GACf,cAAc,YAAY,8BAA8B,CAAC;gBAC3D,MAAM,MAAM,GAAG,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpD,MAAM,yBAAyB,GAC7B,MAAM,EAAE,SAAS,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC;gBAEnD,IAAI,WAAW,EAAE,CAAC;oBAChB,MAAM,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC;oBACzC,MAAM,WAAW,GACf,KAAK,KAAK,UAAU,IAAI,KAAK,KAAK,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC;oBAClE,OAAO,+BAA+B,CAAC;wBACrC,cAAc;wBACd,KAAK,EAAE,WAAW;wBAClB,GAAG,KAAK;qBACT,CAAC,CAAC;gBACL,CAAC;qBAAM,IAAI,yBAAyB,EAAE,CAAC;oBACrC,MAAM,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC;oBAEzC,OAAO,+BAA+B,CAAC;wBACrC,cAAc;wBACd,WAAW,EAAE,eAAe;wBAC5B,KAAK,EAAE,gBAAgB,CAAC,KAAK,CAAC;wBAC9B,MAAM,EAAE,iBAAiB,CAAC,KAAK,CAAC;wBAChC,GAAG,KAAK;qBACT,CAAC,CAAC;gBACL,CAAC;gBAED,OAAO,KAAK,CAAC;YACf,CAAC;SACF,CAAC;QAEF,iBAAY,GAAG,CAAC,GAAW,EAAE,MAAoB,EAAE,EAAE;YACnD,OAAO,oBAAoB,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAC/D,CAAC,CAAC;IASJ,CAAC;aAlH0B,YAAO,GAAG,mBAAmB,CAAC,KAAK,CAAC,OAAO,AAApC,CAAqC;aAE7C,kBAAa,GAAG,IAAI,aAAa,EAAE,AAAtB,CAAuB;aAErD,2BAAsB,GAC3B,oBAAoB,CAAC,aAAa,CAAC,WAAW,AADnB,CACoB;IAsGxC,OAAO;QACd,KAAK,CAAC,OAAO,EAAE,CAAC;QAEhB,IAAI,CAAC,WAAW,CAAC,GAAG,CAClB,sBAAsB,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAC9D,CAAC;IACJ,CAAC","sourcesContent":["import { BookmarkBlockSchema } from '@lumensuite/affine-model';\nimport { matchFlavours } from '@lumensuite/affine-shared/utils';\nimport { BlockService } from '@lumensuite/block-std';\nimport { Bound, Point } from '@lumensuite/global/utils';\nimport { render } from 'lit';\n\nimport type { EdgelessRootService } from '../root-block/edgeless/edgeless-root-service.js';\nimport type { DragHandleOption } from '../root-block/widgets/drag-handle/config.js';\nimport type { BookmarkBlockComponent } from './bookmark-block.js';\n\nimport { EMBED_CARD_HEIGHT, EMBED_CARD_WIDTH } from '../_common/consts.js';\nimport { LinkPreviewer } from '../_common/embed-block-helper/index.js';\nimport {\n  AFFINE_DRAG_HANDLE_WIDGET,\n  AffineDragHandleWidget,\n} from '../root-block/widgets/drag-handle/drag-handle.js';\nimport {\n  captureEventTarget,\n  convertDragPreviewDocToEdgeless,\n  convertDragPreviewEdgelessToDoc,\n} from '../root-block/widgets/drag-handle/utils.js';\nimport { BookmarkEdgelessBlockComponent } from './bookmark-edgeless-block.js';\n\nexport class BookmarkBlockService extends BlockService {\n  static override readonly flavour = BookmarkBlockSchema.model.flavour;\n\n  private static readonly linkPreviewer = new LinkPreviewer();\n\n  static setLinkPreviewEndpoint =\n    BookmarkBlockService.linkPreviewer.setEndpoint;\n\n  private _dragHandleOption: DragHandleOption = {\n    flavour: BookmarkBlockSchema.model.flavour,\n    edgeless: true,\n    onDragStart: ({ state, startDragging, anchorBlockId, editorHost }) => {\n      if (!anchorBlockId) return false;\n      const anchorComponent = editorHost.std.view.getBlock(anchorBlockId);\n      if (\n        !anchorComponent ||\n        !matchFlavours(anchorComponent.model, [\n          BookmarkBlockSchema.model.flavour,\n        ])\n      )\n        return false;\n\n      const blockComponent = anchorComponent as\n        | BookmarkBlockComponent\n        | BookmarkEdgelessBlockComponent;\n      const element = captureEventTarget(state.raw.target);\n\n      const isDraggingByDragHandle = !!element?.closest(\n        AFFINE_DRAG_HANDLE_WIDGET\n      );\n      const isDraggingByComponent = blockComponent.contains(element);\n      const isInSurface =\n        blockComponent instanceof BookmarkEdgelessBlockComponent;\n\n      if (!isInSurface && (isDraggingByDragHandle || isDraggingByComponent)) {\n        editorHost.selection.setGroup('note', [\n          editorHost.selection.create('block', {\n            blockId: blockComponent.blockId,\n          }),\n        ]);\n        startDragging([blockComponent], state);\n        return true;\n      } else if (isInSurface && isDraggingByDragHandle) {\n        const edgelessService = editorHost.std.getService(\n          'affine:page'\n        ) as EdgelessRootService;\n        const zoom = edgelessService?.viewport.zoom ?? 1;\n        const dragPreviewEl = document.createElement('div');\n        const bound = Bound.deserialize(blockComponent.model.xywh);\n        const offset = new Point(bound.x * zoom, bound.y * zoom);\n        render(\n          blockComponent.host.dangerouslyRenderModel(blockComponent.model),\n          dragPreviewEl\n        );\n\n        startDragging([blockComponent], state, dragPreviewEl, offset);\n        return true;\n      }\n      return false;\n    },\n    onDragEnd: props => {\n      const { state, draggingElements } = props;\n      if (\n        draggingElements.length !== 1 ||\n        !matchFlavours(draggingElements[0].model, [\n          BookmarkBlockSchema.model.flavour,\n        ])\n      )\n        return false;\n\n      const blockComponent = draggingElements[0] as\n        | BookmarkBlockComponent\n        | BookmarkEdgelessBlockComponent;\n      const isInSurface =\n        blockComponent instanceof BookmarkEdgelessBlockComponent;\n      const target = captureEventTarget(state.raw.target);\n      const isTargetEdgelessContainer =\n        target?.classList.contains('edgeless-container');\n\n      if (isInSurface) {\n        const style = blockComponent.model.style;\n        const targetStyle =\n          style === 'vertical' || style === 'cube' ? 'horizontal' : style;\n        return convertDragPreviewEdgelessToDoc({\n          blockComponent,\n          style: targetStyle,\n          ...props,\n        });\n      } else if (isTargetEdgelessContainer) {\n        const style = blockComponent.model.style;\n\n        return convertDragPreviewDocToEdgeless({\n          blockComponent,\n          cssSelector: 'bookmark-card',\n          width: EMBED_CARD_WIDTH[style],\n          height: EMBED_CARD_HEIGHT[style],\n          ...props,\n        });\n      }\n\n      return false;\n    },\n  };\n\n  queryUrlData = (url: string, signal?: AbortSignal) => {\n    return BookmarkBlockService.linkPreviewer.query(url, signal);\n  };\n\n  override mounted(): void {\n    super.mounted();\n\n    this.disposables.add(\n      AffineDragHandleWidget.registerOption(this._dragHandleOption)\n    );\n  }\n}\n"]}