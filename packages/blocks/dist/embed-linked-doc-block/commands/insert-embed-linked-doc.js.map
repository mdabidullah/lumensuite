{"version":3,"file":"insert-embed-linked-doc.js","sourceRoot":"","sources":["../../../src/embed-linked-doc-block/commands/insert-embed-linked-doc.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,eAAe,EAAE,MAAM,uDAAuD,CAAC;AAExF,MAAM,CAAC,MAAM,2BAA2B,GAIpC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;IAChB,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC;IAC3B,MAAM,OAAO,GAAG,yBAAyB,CAAC;IAC1C,MAAM,WAAW,GAAmB,UAAU,CAAC;IAC/C,MAAM,KAAK,GAA4B,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;IACzD,eAAe,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;IACtD,IAAI,EAAE,CAAC;AACT,CAAC,CAAC","sourcesContent":["import type { EmbedCardStyle } from '@lumensuite/affine-model';\nimport type { Command } from '@lumensuite/block-std';\n\nimport { insertEmbedCard } from '../../_common/embed-block-helper/insert-embed-card.js';\n\nexport const insertEmbedLinkedDocCommand: Command<\n  never,\n  'insertedLinkType',\n  { docId: string }\n> = (ctx, next) => {\n  const { docId, std } = ctx;\n  const flavour = 'affine:embed-linked-doc';\n  const targetStyle: EmbedCardStyle = 'vertical';\n  const props: Record<string, unknown> = { pageId: docId };\n  insertEmbedCard(std, { flavour, targetStyle, props });\n  next();\n};\n\ndeclare global {\n  namespace LumenSuite {\n    interface Commands {\n      insertEmbedLinkedDoc: typeof insertEmbedLinkedDocCommand;\n    }\n  }\n}\n"]}