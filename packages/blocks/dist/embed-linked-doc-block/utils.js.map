{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/embed-linked-doc-block/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  EmbedLinkedDocModel,\n  EmbedLinkedDocStyles,\n} from '@blocksuite/affine-model';\nimport type { TemplateResult } from 'lit';\n\nimport {\n  DarkLoadingIcon,\n  EmbedEdgelessIcon,\n  EmbedPageIcon,\n  LightLoadingIcon,\n  ReloadIcon,\n} from '@blocksuite/affine-components/icons';\nimport { ThemeObserver } from '@blocksuite/affine-shared/theme';\n\nimport {\n  DarkSyncedDocErrorBanner,\n  LightSyncedDocErrorBanner,\n} from '../embed-synced-doc-block/styles.js';\nimport {\n  DarkLinkedEdgelessDeletedLargeBanner,\n  DarkLinkedEdgelessDeletedSmallBanner,\n  DarkLinkedEdgelessEmptyLargeBanner,\n  DarkLinkedEdgelessEmptySmallBanner,\n  DarkLinkedPageDeletedLargeBanner,\n  DarkLinkedPageDeletedSmallBanner,\n  DarkLinkedPageEmptyLargeBanner,\n  DarkLinkedPageEmptySmallBanner,\n  LightLinkedEdgelessDeletedLargeBanner,\n  LightLinkedEdgelessDeletedSmallBanner,\n  LightLinkedEdgelessEmptyLargeBanner,\n  LightLinkedEdgelessEmptySmallBanner,\n  LightLinkedPageDeletedLargeBanner,\n  LightLinkedPageDeletedSmallBanner,\n  LightLinkedPageEmptyLargeBanner,\n  LightLinkedPageEmptySmallBanner,\n  LinkedDocDeletedIcon,\n} from './styles.js';\n\ntype EmbedCardImages = {\n  LoadingIcon: TemplateResult<1>;\n  ReloadIcon: TemplateResult<1>;\n  LinkedDocIcon: TemplateResult<1>;\n  LinkedDocDeletedIcon: TemplateResult<1>;\n  LinkedDocEmptyBanner: TemplateResult<1>;\n  LinkedDocDeletedBanner: TemplateResult<1>;\n  SyncedDocErrorBanner: TemplateResult<1>;\n};\n\nexport function getEmbedLinkedDocIcons(\n  editorMode: 'page' | 'edgeless',\n  style: (typeof EmbedLinkedDocStyles)[number]\n): EmbedCardImages {\n  const theme = ThemeObserver.mode;\n  const small = style !== 'vertical';\n  if (editorMode === 'page') {\n    if (theme === 'light') {\n      return {\n        LoadingIcon: LightLoadingIcon,\n        ReloadIcon,\n        LinkedDocIcon: EmbedPageIcon,\n        LinkedDocDeletedIcon,\n        LinkedDocEmptyBanner: small\n          ? LightLinkedPageEmptySmallBanner\n          : LightLinkedPageEmptyLargeBanner,\n        LinkedDocDeletedBanner: small\n          ? LightLinkedPageDeletedSmallBanner\n          : LightLinkedPageDeletedLargeBanner,\n        SyncedDocErrorBanner: LightSyncedDocErrorBanner,\n      };\n    } else {\n      return {\n        ReloadIcon,\n        LoadingIcon: DarkLoadingIcon,\n        LinkedDocIcon: EmbedPageIcon,\n        LinkedDocDeletedIcon,\n        LinkedDocEmptyBanner: small\n          ? DarkLinkedPageEmptySmallBanner\n          : DarkLinkedPageEmptyLargeBanner,\n        LinkedDocDeletedBanner: small\n          ? DarkLinkedPageDeletedSmallBanner\n          : DarkLinkedPageDeletedLargeBanner,\n        SyncedDocErrorBanner: DarkSyncedDocErrorBanner,\n      };\n    }\n  } else {\n    if (theme === 'light') {\n      return {\n        ReloadIcon,\n        LoadingIcon: LightLoadingIcon,\n        LinkedDocIcon: EmbedEdgelessIcon,\n        LinkedDocDeletedIcon,\n        LinkedDocEmptyBanner: small\n          ? LightLinkedEdgelessEmptySmallBanner\n          : LightLinkedEdgelessEmptyLargeBanner,\n        LinkedDocDeletedBanner: small\n          ? LightLinkedEdgelessDeletedSmallBanner\n          : LightLinkedEdgelessDeletedLargeBanner,\n        SyncedDocErrorBanner: LightSyncedDocErrorBanner,\n      };\n    } else {\n      return {\n        ReloadIcon,\n        LoadingIcon: DarkLoadingIcon,\n        LinkedDocIcon: EmbedEdgelessIcon,\n        LinkedDocDeletedIcon,\n        LinkedDocEmptyBanner: small\n          ? DarkLinkedEdgelessEmptySmallBanner\n          : DarkLinkedEdgelessEmptyLargeBanner,\n        LinkedDocDeletedBanner: small\n          ? DarkLinkedEdgelessDeletedSmallBanner\n          : DarkLinkedEdgelessDeletedLargeBanner,\n        SyncedDocErrorBanner: DarkSyncedDocErrorBanner,\n      };\n    }\n  }\n}\n\n/*\n * Returns true if it is a link to block or element.\n */\nexport function isLinkToNode({ params }: EmbedLinkedDocModel) {\n  if (!params) return false;\n  const { mode, blockIds, elementIds } = params;\n  if (!mode) return false;\n  if (blockIds && blockIds.length > 0) return true;\n  if (elementIds && elementIds.length > 0) return true;\n  return false;\n}\n"]}