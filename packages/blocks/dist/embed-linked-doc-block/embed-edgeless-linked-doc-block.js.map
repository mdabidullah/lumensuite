{"version":3,"file":"embed-edgeless-linked-doc-block.js","sourceRoot":"","sources":["../../src/embed-linked-doc-block/embed-edgeless-linked-doc-block.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EACL,iBAAiB,EACjB,gBAAgB,GACjB,MAAM,kCAAkC,CAAC;AAC1C,OAAO,EAAE,KAAK,EAAE,MAAM,0BAA0B,CAAC;AACjD,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAIlD,OAAO,EAAE,oBAAoB,EAAE,MAAM,sDAAsD,CAAC;AAC5F,OAAO,EAAE,4BAA4B,EAAE,MAAM,6BAA6B,CAAC;IAG9D,oCAAoC;4BADhD,aAAa,CAAC,wCAAwC,CAAC;;;;sBACE,oBAAoB,CAC5E,4BAA4B,CAC7B;oDAFiD,SAAQ,WAEzD;;;;YACU,mBAAc,GAAG,GAAG,EAAE;gBAC7B,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;gBAEtD,gDAAgD;gBAChD,MAAM,kBAAkB,GAAG,GAAG,CAAC,cAAc,CAAC,OAAO,CACnD,yBAAyB,CAC1B,CAAC;gBACF,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBACxB,OAAO;gBACT,CAAC;gBAED,MAAM,KAAK,GAAG,WAAW,CAAC;gBAC1B,MAAM,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBACtC,KAAK,CAAC,CAAC,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;gBAClC,KAAK,CAAC,CAAC,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;gBAEnC,MAAM,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC;gBAEzC,IAAI,CAAC,eAAe,EAAE,CAAC;oBACrB,OAAO;gBACT,CAAC;gBAED,MAAM,KAAK,GAAG,eAAe,CAAC,QAAQ,CACpC,yBAAyB,EACzB,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,SAAS,EAAE,EAAE,OAAO,EAAE,EAC5C,eAAe,CAAC,OAAO,CACxB,CAAC;gBAEF,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,uBAAuB,EAAE;oBAC7C,KAAK,EAAE,EAAE;oBACT,KAAK;iBACN,CAAC,CAAC;gBAEH,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;oBAC5B,OAAO,EAAE,KAAK;oBACd,QAAQ,EAAE,CAAC,KAAK,CAAC;iBAClB,CAAC,CAAC;gBAEH,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9B,CAAC,CAAC;QAYJ,CAAC;;;YAtDD,6KAsDC;;;YAtDY,uDAAoC;;QA4C/C,IAAI,WAAW;YACb,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,aAAa,CAAwB,CAAC;QACnE,CAAC;QAEkB,YAAY,CAAC,GAAe;YAC7C,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;gBAC5B,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBACxC,OAAO;YACT,CAAC;QACH,CAAC;;;;SArDU,oCAAoC","sourcesContent":["import {\n  EMBED_CARD_HEIGHT,\n  EMBED_CARD_WIDTH,\n} from '@blocksuite/affine-shared/consts';\nimport { Bound } from '@blocksuite/global/utils';\nimport { customElement } from 'lit/decorators.js';\n\nimport type { EdgelessRootService } from '../root-block/index.js';\n\nimport { toEdgelessEmbedBlock } from '../_common/embed-block-helper/embed-block-element.js';\nimport { EmbedLinkedDocBlockComponent } from './embed-linked-doc-block.js';\n\n@customElement('affine-embed-edgeless-linked-doc-block')\nexport class EmbedEdgelessLinkedDocBlockComponent extends toEdgelessEmbedBlock(\n  EmbedLinkedDocBlockComponent\n) {\n  override convertToEmbed = () => {\n    const { id, doc, pageId, caption, xywh } = this.model;\n\n    // synced doc entry controlled by awareness flag\n    const isSyncedDocEnabled = doc.awarenessStore.getFlag(\n      'enable_synced_doc_block'\n    );\n    if (!isSyncedDocEnabled) {\n      return;\n    }\n\n    const style = 'syncedDoc';\n    const bound = Bound.deserialize(xywh);\n    bound.w = EMBED_CARD_WIDTH[style];\n    bound.h = EMBED_CARD_HEIGHT[style];\n\n    const edgelessService = this.rootService;\n\n    if (!edgelessService) {\n      return;\n    }\n\n    const newId = edgelessService.addBlock(\n      'affine:embed-synced-doc',\n      { pageId, xywh: bound.serialize(), caption },\n      edgelessService.surface\n    );\n\n    this.std.command.exec('reassociateConnectors', {\n      oldId: id,\n      newId,\n    });\n\n    edgelessService.selection.set({\n      editing: false,\n      elements: [newId],\n    });\n\n    doc.deleteBlock(this.model);\n  };\n\n  get rootService() {\n    return this.std.getService('affine:page') as EdgelessRootService;\n  }\n\n  protected override _handleClick(evt: MouseEvent): void {\n    if (this.config.handleClick) {\n      this.config.handleClick(evt, this.host);\n      return;\n    }\n  }\n}\n"]}