{"version":3,"file":"embed-loom-service.js","sourceRoot":"","sources":["../../src/embed-loom-block/embed-loom-service.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,oBAAoB,GAErB,MAAM,0BAA0B,CAAC;AAClC,OAAO,EAAE,eAAe,EAAE,MAAM,0BAA0B,CAAC;AAC3D,OAAO,EAAE,mBAAmB,EAAE,MAAM,oCAAoC,CAAC;AACzE,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AAErD,OAAO,EAAE,aAAa,EAAE,MAAM,wCAAwC,CAAC;AACvE,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AACrD,OAAO,EAAE,kBAAkB,EAAE,MAAM,YAAY,CAAC;AAEhD,MAAM,OAAO,qBAAsB,SAAQ,YAAY;IAAvD;;QAQE,iBAAY,GAAG,CAAC,cAA8B,EAAE,MAAoB,EAAE,EAAE;YACtE,OAAO,kBAAkB,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;QACpD,CAAC,CAAC;IAYJ,CAAC;aArB0B,YAAO,GAAG,oBAAoB,CAAC,KAAK,CAAC,OAAO,AAArC,CAAsC;aAE9C,kBAAa,GAAG,IAAI,aAAa,EAAE,AAAtB,CAAuB;aAErD,2BAAsB,GAC3B,qBAAqB,CAAC,aAAa,CAAC,WAAW,AADpB,CACqB;IAMzC,OAAO;QACd,KAAK,CAAC,OAAO,EAAE,CAAC;QAEhB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,yBAAyB,CAAC;YAC1D,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,YAAY;YACtB,MAAM,EAAE,eAAe;YACvB,QAAQ,EAAE,OAAO;SAClB,CAAC,CAAC;IACL,CAAC","sourcesContent":["import {\n  EmbedLoomBlockSchema,\n  type EmbedLoomModel,\n} from '@blocksuite/affine-model';\nimport { EmbedLoomStyles } from '@blocksuite/affine-model';\nimport { EmbedOptionProvider } from '@blocksuite/affine-shared/services';\nimport { BlockService } from '@blocksuite/block-std';\n\nimport { LinkPreviewer } from '../_common/embed-block-helper/index.js';\nimport { loomUrlRegex } from './embed-loom-model.js';\nimport { queryEmbedLoomData } from './utils.js';\n\nexport class EmbedLoomBlockService extends BlockService {\n  static override readonly flavour = EmbedLoomBlockSchema.model.flavour;\n\n  private static readonly linkPreviewer = new LinkPreviewer();\n\n  static setLinkPreviewEndpoint =\n    EmbedLoomBlockService.linkPreviewer.setEndpoint;\n\n  queryUrlData = (embedLoomModel: EmbedLoomModel, signal?: AbortSignal) => {\n    return queryEmbedLoomData(embedLoomModel, signal);\n  };\n\n  override mounted() {\n    super.mounted();\n\n    this.std.get(EmbedOptionProvider).registerEmbedBlockOptions({\n      flavour: this.flavour,\n      urlRegex: loomUrlRegex,\n      styles: EmbedLoomStyles,\n      viewType: 'embed',\n    });\n  }\n}\n"]}