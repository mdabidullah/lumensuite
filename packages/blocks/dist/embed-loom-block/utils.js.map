{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/embed-loom-block/utils.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,YAAY,EAAE,MAAM,iCAAiC,CAAC;AAI/D,MAAM,kBAAkB,GAAG,gCAAgC,CAAC;AAE5D,MAAM,CAAC,KAAK,UAAU,kBAAkB,CACtC,cAA8B,EAC9B,MAAoB;IAEpB,MAAM,GAAG,GAAG,cAAc,CAAC,GAAG,CAAC;IAE/B,MAAM,aAAa,GACjB,MAAM,mBAAmB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IAEzC,OAAO,aAAa,CAAC;AACvB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,mBAAmB,CACvC,GAAW,EACX,MAAoB;IAEpB,IAAI,cAAc,GAAmC,EAAE,CAAC;IAExD,MAAM,SAAS,GAAG,GAAG,kBAAkB,QAAQ,GAAG,EAAE,CAAC;IAErD,MAAM,cAAc,GAAG,MAAM,KAAK,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;IAC5E,IAAI,cAAc,IAAI,cAAc,CAAC,EAAE,EAAE,CAAC;QACxC,MAAM,UAAU,GAAG,MAAM,cAAc,CAAC,IAAI,EAAE,CAAC;QAC/C,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,aAAa,EAAE,KAAK,EAAE,GAAG,UAAU,CAAC;QAEhE,cAAc,GAAG;YACf,KAAK;YACL,WAAW;YACX,KAAK;SACN,CAAC;IACJ,CAAC;IAED,OAAO,cAAc,CAAC;AACxB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,uBAAuB,CAC3C,gBAAyC,EACzC,MAAoB;IAEpB,IAAI,KAAK,GAAG,IAAI,EACd,WAAW,GAAG,IAAI,EAClB,KAAK,GAAG,IAAI,CAAC;IAEf,IAAI,CAAC;QACH,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC;QAEhC,MAAM,YAAY,GAAG,gBAAgB,CAAC,OAAO,EAAE,YAAY,CAAC;QAC5D,IAAI,CAAC,YAAY;YAAE,OAAO;QAE1B,MAAM,WAAW,GAAG,MAAM,YAAY,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC/D,CAAC,EAAE,KAAK,GAAG,IAAI,EAAE,WAAW,GAAG,IAAI,EAAE,KAAK,GAAG,IAAI,EAAE,GAAG,WAAW,CAAC,CAAC;QAEnE,IAAI,MAAM,EAAE,OAAO;YAAE,OAAO;QAE5B,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAK,EAAE;YACvD,KAAK;YACL,WAAW;YACX,KAAK;SACN,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,IAAI,MAAM,EAAE,OAAO,IAAI,YAAY,CAAC,KAAK,CAAC;YAAE,OAAO;IACrD,CAAC;YAAS,CAAC;QACT,gBAAgB,CAAC,OAAO,GAAG,KAAK,CAAC;IACnC,CAAC;AACH,CAAC","sourcesContent":["import type {\n  EmbedLoomBlockUrlData,\n  EmbedLoomModel,\n} from '@blocksuite/affine-model';\n\nimport { isAbortError } from '@blocksuite/affine-shared/utils';\n\nimport type { EmbedLoomBlockComponent } from './embed-loom-block.js';\n\nconst LoomOEmbedEndpoint = 'https://www.loom.com/v1/oembed';\n\nexport async function queryEmbedLoomData(\n  embedLoomModel: EmbedLoomModel,\n  signal?: AbortSignal\n): Promise<Partial<EmbedLoomBlockUrlData>> {\n  const url = embedLoomModel.url;\n\n  const loomEmbedData: Partial<EmbedLoomBlockUrlData> =\n    await queryLoomOEmbedData(url, signal);\n\n  return loomEmbedData;\n}\n\nexport async function queryLoomOEmbedData(\n  url: string,\n  signal?: AbortSignal\n): Promise<Partial<EmbedLoomBlockUrlData>> {\n  let loomOEmbedData: Partial<EmbedLoomBlockUrlData> = {};\n\n  const oEmbedUrl = `${LoomOEmbedEndpoint}?url=${url}`;\n\n  const oEmbedResponse = await fetch(oEmbedUrl, { signal }).catch(() => null);\n  if (oEmbedResponse && oEmbedResponse.ok) {\n    const oEmbedJson = await oEmbedResponse.json();\n    const { title, description, thumbnail_url: image } = oEmbedJson;\n\n    loomOEmbedData = {\n      title,\n      description,\n      image,\n    };\n  }\n\n  return loomOEmbedData;\n}\n\nexport async function refreshEmbedLoomUrlData(\n  embedLoomElement: EmbedLoomBlockComponent,\n  signal?: AbortSignal\n): Promise<void> {\n  let title = null,\n    description = null,\n    image = null;\n\n  try {\n    embedLoomElement.loading = true;\n\n    const queryUrlData = embedLoomElement.service?.queryUrlData;\n    if (!queryUrlData) return;\n\n    const loomUrlData = await queryUrlData(embedLoomElement.model);\n    ({ title = null, description = null, image = null } = loomUrlData);\n\n    if (signal?.aborted) return;\n\n    embedLoomElement.doc.updateBlock(embedLoomElement.model, {\n      title,\n      description,\n      image,\n    });\n  } catch (error) {\n    if (signal?.aborted || isAbortError(error)) return;\n  } finally {\n    embedLoomElement.loading = false;\n  }\n}\n"]}