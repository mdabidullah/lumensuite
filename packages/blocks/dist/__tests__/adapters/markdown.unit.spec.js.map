{"version":3,"file":"markdown.unit.spec.js","sourceRoot":"","sources":["../../../src/__tests__/adapters/markdown.unit.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  BlockSnapshot,\n  DocSnapshot,\n  JobMiddleware,\n  SliceSnapshot,\n} from '@blocksuite/store';\n\nimport {\n  DEFAULT_NOTE_BACKGROUND_COLOR,\n  NoteDisplayMode,\n} from '@blocksuite/affine-model';\nimport { AssetsManager, MemoryBlobCRUD } from '@blocksuite/store';\nimport { describe, expect, test } from 'vitest';\n\nimport { MarkdownAdapter } from '../../_common/adapters/markdown.js';\nimport { nanoidReplacement } from '../../_common/test-utils/test-utils.js';\nimport { embedSyncedDocMiddleware } from '../../_common/transformers/middlewares.js';\nimport { createJob } from '../utils/create-job.js';\n\ndescribe('snapshot to markdown', () => {\n  test('code', async () => {\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'block:vu6SK6WJpW',\n      flavour: 'affine:page',\n      props: {\n        title: {\n          '$blocksuite:internal:text$': true,\n          delta: [],\n        },\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'block:Tk4gSPocAt',\n          flavour: 'affine:surface',\n          props: {\n            elements: {},\n          },\n          children: [],\n        },\n        {\n          type: 'block',\n          id: 'block:WfnS5ZDCJT',\n          flavour: 'affine:note',\n          props: {\n            xywh: '[0,0,800,95]',\n            background: DEFAULT_NOTE_BACKGROUND_COLOR,\n            index: 'a0',\n            hidden: false,\n            displayMode: NoteDisplayMode.DocAndEdgeless,\n          },\n          children: [\n            {\n              type: 'block',\n              id: 'block:8hOLxad5Fv',\n              flavour: 'affine:code',\n              props: {\n                language: 'python',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: 'import this',\n                    },\n                  ],\n                },\n              },\n              children: [],\n            },\n          ],\n        },\n      ],\n    };\n\n    const markdown = '```python\\nimport this\\n```\\n';\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const target = await mdAdapter.fromBlockSnapshot({\n      snapshot: blockSnapshot,\n    });\n    expect(target.file).toBe(markdown);\n  });\n\n  test('paragraph', async () => {\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'block:vu6SK6WJpW',\n      flavour: 'affine:page',\n      props: {\n        title: {\n          '$blocksuite:internal:text$': true,\n          delta: [],\n        },\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'block:Tk4gSPocAt',\n          flavour: 'affine:surface',\n          props: {\n            elements: {},\n          },\n          children: [],\n        },\n        {\n          type: 'block',\n          id: 'block:WfnS5ZDCJT',\n          flavour: 'affine:note',\n          props: {\n            xywh: '[0,0,800,95]',\n            background: DEFAULT_NOTE_BACKGROUND_COLOR,\n            index: 'a0',\n            hidden: false,\n            displayMode: NoteDisplayMode.DocAndEdgeless,\n          },\n          children: [\n            {\n              type: 'block',\n              id: 'block:Bdn8Yvqcny',\n              flavour: 'affine:paragraph',\n              props: {\n                type: 'text',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: 'aaa',\n                    },\n                  ],\n                },\n              },\n              children: [\n                {\n                  type: 'block',\n                  id: 'block:72SMa5mdLy',\n                  flavour: 'affine:paragraph',\n                  props: {\n                    type: 'text',\n                    text: {\n                      '$blocksuite:internal:text$': true,\n                      delta: [\n                        {\n                          insert: 'bbb',\n                        },\n                      ],\n                    },\n                  },\n                  children: [],\n                },\n                {\n                  type: 'block',\n                  id: 'block:f-Z6nRrGK_',\n                  flavour: 'affine:paragraph',\n                  props: {\n                    type: 'text',\n                    text: {\n                      '$blocksuite:internal:text$': true,\n                      delta: [\n                        {\n                          insert: 'ccc',\n                        },\n                      ],\n                    },\n                  },\n                  children: [\n                    {\n                      type: 'block',\n                      id: 'block:sP3bU52el7',\n                      flavour: 'affine:paragraph',\n                      props: {\n                        type: 'text',\n                        text: {\n                          '$blocksuite:internal:text$': true,\n                          delta: [\n                            {\n                              insert: 'ddd',\n                            },\n                          ],\n                        },\n                      },\n                      children: [],\n                    },\n                    {\n                      type: 'block',\n                      id: 'block:X_HMxP4wxC',\n                      flavour: 'affine:paragraph',\n                      props: {\n                        type: 'text',\n                        text: {\n                          '$blocksuite:internal:text$': true,\n                          delta: [\n                            {\n                              insert: 'eee',\n                            },\n                          ],\n                        },\n                      },\n                      children: [],\n                    },\n                    {\n                      type: 'block',\n                      id: 'block:iA34Rb-RvV',\n                      flavour: 'affine:paragraph',\n                      props: {\n                        text: {\n                          '$blocksuite:internal:text$': true,\n                          delta: [\n                            {\n                              insert: 'fff',\n                            },\n                          ],\n                        },\n                        type: 'text',\n                      },\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  type: 'block',\n                  id: 'block:I0Fmz5Nv02',\n                  flavour: 'affine:paragraph',\n                  props: {\n                    type: 'text',\n                    text: {\n                      '$blocksuite:internal:text$': true,\n                      delta: [\n                        {\n                          insert: 'ggg',\n                        },\n                      ],\n                    },\n                  },\n                  children: [],\n                },\n              ],\n            },\n            {\n              type: 'block',\n              id: 'block:12lDwMD7ec',\n              flavour: 'affine:paragraph',\n              props: {\n                type: 'text',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: 'hhh',\n                    },\n                  ],\n                },\n              },\n              children: [],\n            },\n          ],\n        },\n      ],\n    };\n    const markdown = `aaa\n\n&#x20;   bbb\n\n&#x20;   ccc\n\n&#x20;       ddd\n\n&#x20;       eee\n\n&#x20;       fff\n\n&#x20;   ggg\n\nhhh\n`;\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const target = await mdAdapter.fromBlockSnapshot({\n      snapshot: blockSnapshot,\n    });\n    expect(target.file).toBe(markdown);\n  });\n\n  test('bulleted list', async () => {\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'block:vu6SK6WJpW',\n      flavour: 'affine:page',\n      props: {\n        title: {\n          '$blocksuite:internal:text$': true,\n          delta: [],\n        },\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'block:Tk4gSPocAt',\n          flavour: 'affine:surface',\n          props: {\n            elements: {},\n          },\n          children: [],\n        },\n        {\n          type: 'block',\n          id: 'block:WfnS5ZDCJT',\n          flavour: 'affine:note',\n          props: {\n            xywh: '[0,0,800,95]',\n            background: DEFAULT_NOTE_BACKGROUND_COLOR,\n            index: 'a0',\n            hidden: false,\n            displayMode: NoteDisplayMode.DocAndEdgeless,\n          },\n          children: [\n            {\n              type: 'block',\n              id: 'block:imiLDMKSkx',\n              flavour: 'affine:list',\n              props: {\n                type: 'bulleted',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: 'aaa',\n                    },\n                  ],\n                },\n                checked: false,\n                collapsed: false,\n              },\n              children: [\n                {\n                  type: 'block',\n                  id: 'block:kYliRIovvL',\n                  flavour: 'affine:list',\n                  props: {\n                    type: 'bulleted',\n                    text: {\n                      '$blocksuite:internal:text$': true,\n                      delta: [\n                        {\n                          insert: 'bbb',\n                        },\n                      ],\n                    },\n                    checked: false,\n                    collapsed: false,\n                  },\n                  children: [\n                    {\n                      type: 'block',\n                      id: 'block:UyvxA_gqCJ',\n                      flavour: 'affine:list',\n                      props: {\n                        type: 'bulleted',\n                        text: {\n                          '$blocksuite:internal:text$': true,\n                          delta: [\n                            {\n                              insert: 'ccc',\n                            },\n                          ],\n                        },\n                        checked: false,\n                        collapsed: false,\n                      },\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  type: 'block',\n                  id: 'block:-guNZRm5u1',\n                  flavour: 'affine:list',\n                  props: {\n                    type: 'bulleted',\n                    text: {\n                      '$blocksuite:internal:text$': true,\n                      delta: [\n                        {\n                          insert: 'ddd',\n                        },\n                      ],\n                    },\n                    checked: false,\n                    collapsed: false,\n                  },\n                  children: [],\n                },\n              ],\n            },\n            {\n              type: 'block',\n              id: 'block:B9CaZzQ2CO',\n              flavour: 'affine:list',\n              props: {\n                type: 'bulleted',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: 'eee',\n                    },\n                  ],\n                },\n                checked: false,\n                collapsed: false,\n              },\n              children: [],\n            },\n          ],\n        },\n      ],\n    };\n    const markdown = `* aaa\n  * bbb\n    * ccc\n  * ddd\n* eee\n`;\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const target = await mdAdapter.fromBlockSnapshot({\n      snapshot: blockSnapshot,\n    });\n    expect(target.file).toBe(markdown);\n  });\n\n  test('todo list', async () => {\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'block:vu6SK6WJpW',\n      flavour: 'affine:page',\n      props: {\n        title: {\n          '$blocksuite:internal:text$': true,\n          delta: [],\n        },\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'block:Tk4gSPocAt',\n          flavour: 'affine:surface',\n          props: {\n            elements: {},\n          },\n          children: [],\n        },\n        {\n          type: 'block',\n          id: 'block:WfnS5ZDCJT',\n          flavour: 'affine:note',\n          props: {\n            xywh: '[0,0,800,95]',\n            background: DEFAULT_NOTE_BACKGROUND_COLOR,\n            index: 'a0',\n            hidden: false,\n            displayMode: NoteDisplayMode.DocAndEdgeless,\n          },\n          children: [\n            {\n              type: 'block',\n              id: 'block:imiLDMKSkx',\n              flavour: 'affine:list',\n              props: {\n                type: 'todo',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: 'aaa',\n                    },\n                  ],\n                },\n                checked: false,\n                collapsed: false,\n              },\n              children: [\n                {\n                  type: 'block',\n                  id: 'block:kYliRIovvL',\n                  flavour: 'affine:list',\n                  props: {\n                    type: 'todo',\n                    text: {\n                      '$blocksuite:internal:text$': true,\n                      delta: [\n                        {\n                          insert: 'bbb',\n                        },\n                      ],\n                    },\n                    checked: true,\n                    collapsed: false,\n                  },\n                  children: [\n                    {\n                      type: 'block',\n                      id: 'block:UyvxA_gqCJ',\n                      flavour: 'affine:list',\n                      props: {\n                        type: 'todo',\n                        text: {\n                          '$blocksuite:internal:text$': true,\n                          delta: [\n                            {\n                              insert: 'ccc',\n                            },\n                          ],\n                        },\n                        checked: false,\n                        collapsed: false,\n                      },\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  type: 'block',\n                  id: 'block:-guNZRm5u1',\n                  flavour: 'affine:list',\n                  props: {\n                    type: 'todo',\n                    text: {\n                      '$blocksuite:internal:text$': true,\n                      delta: [\n                        {\n                          insert: 'ddd',\n                        },\n                      ],\n                    },\n                    checked: true,\n                    collapsed: false,\n                  },\n                  children: [],\n                },\n              ],\n            },\n            {\n              type: 'block',\n              id: 'block:B9CaZzQ2CO',\n              flavour: 'affine:list',\n              props: {\n                type: 'todo',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: 'eee',\n                    },\n                  ],\n                },\n                checked: false,\n                collapsed: false,\n              },\n              children: [],\n            },\n          ],\n        },\n      ],\n    };\n    const markdown = `\\\n* [ ] aaa\n  * [x] bbb\n    * [ ] ccc\n  * [x] ddd\n* [ ] eee\n`;\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const target = await mdAdapter.fromBlockSnapshot({\n      snapshot: blockSnapshot,\n    });\n    expect(target.file).toBe(markdown);\n  });\n\n  test('numbered list', async () => {\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'block:m5hvdXHXS2',\n      flavour: 'affine:page',\n      version: 2,\n      props: {\n        title: {\n          '$blocksuite:internal:text$': true,\n          delta: [],\n        },\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'block:Y4J-oO9h9d',\n          flavour: 'affine:surface',\n          version: 5,\n          props: {\n            elements: {},\n          },\n          children: [],\n        },\n        {\n          type: 'block',\n          id: 'block:1Ll22zT992',\n          flavour: 'affine:note',\n          version: 1,\n          props: {\n            xywh: '[0,0,800,95]',\n            background: DEFAULT_NOTE_BACKGROUND_COLOR,\n            index: 'a0',\n            hidden: false,\n            displayMode: 'both',\n            edgeless: {\n              style: {\n                borderRadius: 8,\n                borderSize: 4,\n                borderStyle: 'solid',\n                shadowType: '--affine-note-shadow-box',\n              },\n            },\n          },\n          children: [\n            {\n              type: 'block',\n              id: 'block:Fd0ZCYB7a4',\n              flavour: 'affine:list',\n              version: 1,\n              props: {\n                type: 'numbered',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: 'aaa',\n                    },\n                  ],\n                },\n                checked: false,\n                collapsed: false,\n              },\n              children: [\n                {\n                  type: 'block',\n                  id: 'block:8-GeKDc06x',\n                  flavour: 'affine:list',\n                  version: 1,\n                  props: {\n                    type: 'numbered',\n                    text: {\n                      '$blocksuite:internal:text$': true,\n                      delta: [\n                        {\n                          insert: 'bbb',\n                        },\n                      ],\n                    },\n                    checked: false,\n                    collapsed: false,\n                  },\n                  children: [],\n                },\n                {\n                  type: 'block',\n                  id: 'block:f0c-9xKaEL',\n                  flavour: 'affine:list',\n                  version: 1,\n                  props: {\n                    type: 'numbered',\n                    text: {\n                      '$blocksuite:internal:text$': true,\n                      delta: [\n                        {\n                          insert: 'ccc',\n                        },\n                      ],\n                    },\n                    checked: false,\n                    collapsed: false,\n                  },\n                  children: [],\n                },\n              ],\n            },\n            {\n              type: 'block',\n              id: 'block:Fd0ZCYB7a5',\n              flavour: 'affine:list',\n              version: 1,\n              props: {\n                type: 'numbered',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: 'ddd',\n                    },\n                  ],\n                },\n                checked: false,\n                collapsed: false,\n              },\n              children: [],\n            },\n          ],\n        },\n      ],\n    };\n\n    const markdown = `1. aaa\n   1. bbb\n   2. ccc\n2. ddd\n`;\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const target = await mdAdapter.fromBlockSnapshot({\n      snapshot: blockSnapshot,\n    });\n    expect(target.file).toEqual(markdown);\n  });\n\n  test('code inline', async () => {\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'block:vu6SK6WJpW',\n      flavour: 'affine:page',\n      props: {\n        title: {\n          '$blocksuite:internal:text$': true,\n          delta: [],\n        },\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'block:Tk4gSPocAt',\n          flavour: 'affine:surface',\n          props: {\n            elements: {},\n          },\n          children: [],\n        },\n        {\n          type: 'block',\n          id: 'block:WfnS5ZDCJT',\n          flavour: 'affine:note',\n          props: {\n            xywh: '[0,0,800,95]',\n            background: DEFAULT_NOTE_BACKGROUND_COLOR,\n            index: 'a0',\n            hidden: false,\n            displayMode: NoteDisplayMode.DocAndEdgeless,\n          },\n          children: [\n            {\n              type: 'block',\n              id: 'block:qhpbuss-KN',\n              flavour: 'affine:paragraph',\n              props: {\n                type: 'text',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: 'aaa ',\n                    },\n                    {\n                      insert: 'bbb',\n                      attributes: {\n                        code: true,\n                      },\n                    },\n                    {\n                      insert: ' ccc',\n                    },\n                  ],\n                },\n              },\n              children: [],\n            },\n          ],\n        },\n      ],\n    };\n    const markdown = 'aaa `bbb` ccc\\n';\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const target = await mdAdapter.fromBlockSnapshot({\n      snapshot: blockSnapshot,\n    });\n    expect(target.file).toBe(markdown);\n  });\n\n  test('link', async () => {\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'block:vu6SK6WJpW',\n      flavour: 'affine:page',\n      props: {\n        title: {\n          '$blocksuite:internal:text$': true,\n          delta: [],\n        },\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'block:Tk4gSPocAt',\n          flavour: 'affine:surface',\n          props: {\n            elements: {},\n          },\n          children: [],\n        },\n        {\n          type: 'block',\n          id: 'block:WfnS5ZDCJT',\n          flavour: 'affine:note',\n          props: {\n            xywh: '[0,0,800,95]',\n            background: DEFAULT_NOTE_BACKGROUND_COLOR,\n            index: 'a0',\n            hidden: false,\n            displayMode: NoteDisplayMode.DocAndEdgeless,\n          },\n          children: [\n            {\n              type: 'block',\n              id: 'block:Bdn8Yvqcny',\n              flavour: 'affine:paragraph',\n              props: {\n                type: 'text',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: 'aaa ',\n                    },\n                    {\n                      insert: 'bbb',\n                      attributes: {\n                        link: 'https://affine.pro/',\n                      },\n                    },\n                    {\n                      insert: ' ccc',\n                    },\n                  ],\n                },\n              },\n              children: [],\n            },\n          ],\n        },\n      ],\n    };\n    const markdown = 'aaa [bbb](https://affine.pro/) ccc\\n';\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const target = await mdAdapter.fromBlockSnapshot({\n      snapshot: blockSnapshot,\n    });\n    expect(target.file).toBe(markdown);\n  });\n\n  test('inline link', async () => {\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'block:vu6SK6WJpW',\n      flavour: 'affine:page',\n      props: {\n        title: {\n          '$blocksuite:internal:text$': true,\n          delta: [],\n        },\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'block:Tk4gSPocAt',\n          flavour: 'affine:surface',\n          props: {\n            elements: {},\n          },\n          children: [],\n        },\n        {\n          type: 'block',\n          id: 'block:WfnS5ZDCJT',\n          flavour: 'affine:note',\n          props: {\n            xywh: '[0,0,800,95]',\n            background: DEFAULT_NOTE_BACKGROUND_COLOR,\n            index: 'a0',\n            hidden: false,\n            displayMode: NoteDisplayMode.DocAndEdgeless,\n          },\n          children: [\n            {\n              type: 'block',\n              id: 'block:Bdn8Yvqcny',\n              flavour: 'affine:paragraph',\n              props: {\n                type: 'text',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: 'aaa ',\n                    },\n                    {\n                      insert: 'https://affine.pro/  ',\n                      attributes: {\n                        link: 'https://affine.pro/  ',\n                      },\n                    },\n                  ],\n                },\n              },\n              children: [],\n            },\n          ],\n        },\n      ],\n    };\n    const markdown = 'aaa https://affine.pro/  \\n';\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const target = await mdAdapter.fromBlockSnapshot({\n      snapshot: blockSnapshot,\n    });\n    expect(target.file).toBe(markdown);\n  });\n\n  test('bold', async () => {\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'block:vu6SK6WJpW',\n      flavour: 'affine:page',\n      props: {\n        title: {\n          '$blocksuite:internal:text$': true,\n          delta: [],\n        },\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'block:Tk4gSPocAt',\n          flavour: 'affine:surface',\n          props: {\n            elements: {},\n          },\n          children: [],\n        },\n        {\n          type: 'block',\n          id: 'block:WfnS5ZDCJT',\n          flavour: 'affine:note',\n          props: {\n            xywh: '[0,0,800,95]',\n            background: DEFAULT_NOTE_BACKGROUND_COLOR,\n            index: 'a0',\n            hidden: false,\n            displayMode: NoteDisplayMode.DocAndEdgeless,\n          },\n          children: [\n            {\n              type: 'block',\n              id: 'block:zxDyvrg1Mh',\n              flavour: 'affine:paragraph',\n              props: {\n                type: 'text',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: 'aaa',\n                    },\n                    {\n                      insert: 'bbb',\n                      attributes: {\n                        bold: true,\n                      },\n                    },\n                    {\n                      insert: 'ccc',\n                    },\n                  ],\n                },\n              },\n              children: [],\n            },\n          ],\n        },\n      ],\n    };\n\n    const markdown = 'aaa**bbb**ccc\\n';\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const target = await mdAdapter.fromBlockSnapshot({\n      snapshot: blockSnapshot,\n    });\n    expect(target.file).toBe(markdown);\n  });\n\n  test('italic', async () => {\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'block:vu6SK6WJpW',\n      flavour: 'affine:page',\n      props: {\n        title: {\n          '$blocksuite:internal:text$': true,\n          delta: [],\n        },\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'block:Tk4gSPocAt',\n          flavour: 'affine:surface',\n          props: {\n            elements: {},\n          },\n          children: [],\n        },\n        {\n          type: 'block',\n          id: 'block:WfnS5ZDCJT',\n          flavour: 'affine:note',\n          props: {\n            xywh: '[0,0,800,95]',\n            background: DEFAULT_NOTE_BACKGROUND_COLOR,\n            index: 'a0',\n            hidden: false,\n            displayMode: NoteDisplayMode.DocAndEdgeless,\n          },\n          children: [\n            {\n              type: 'block',\n              id: 'block:zxDyvrg1Mh',\n              flavour: 'affine:paragraph',\n              props: {\n                type: 'text',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: 'aaa',\n                    },\n                    {\n                      insert: 'bbb',\n                      attributes: {\n                        italic: true,\n                      },\n                    },\n                    {\n                      insert: 'ccc',\n                    },\n                  ],\n                },\n              },\n              children: [],\n            },\n          ],\n        },\n      ],\n    };\n\n    const markdown = 'aaa*bbb*ccc\\n';\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const target = await mdAdapter.fromBlockSnapshot({\n      snapshot: blockSnapshot,\n    });\n    expect(target.file).toBe(markdown);\n  });\n\n  test('image', async () => {\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'block:WcYcyv-oZY',\n      flavour: 'affine:page',\n      props: {\n        title: {\n          '$blocksuite:internal:text$': true,\n          delta: [],\n        },\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'block:zqtuv999Ww',\n          flavour: 'affine:surface',\n          props: {\n            elements: {},\n          },\n          children: [],\n        },\n        {\n          type: 'block',\n          id: 'block:UTUZojv22c',\n          flavour: 'affine:note',\n          props: {\n            xywh: '[0,0,800,95]',\n            background: DEFAULT_NOTE_BACKGROUND_COLOR,\n            index: 'a0',\n            hidden: false,\n            displayMode: NoteDisplayMode.DocAndEdgeless,\n          },\n          children: [\n            {\n              type: 'block',\n              id: 'block:Gan31s-dYK',\n              flavour: 'affine:image',\n              props: {\n                sourceId: 'YXXTjRmLlNyiOUnHb8nAIvUP6V7PAXhwW9F5_tc2LGs=',\n                caption: 'aaa',\n                width: 0,\n                height: 0,\n                index: 'a0',\n                xywh: '[0,0,0,0]',\n                rotate: 0,\n              },\n              children: [],\n            },\n            {\n              type: 'block',\n              id: 'block:If92CIQiOl',\n              flavour: 'affine:paragraph',\n              props: {\n                type: 'text',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [],\n                },\n              },\n              children: [],\n            },\n          ],\n        },\n      ],\n    };\n\n    const markdown =\n      '![](assets/YXXTjRmLlNyiOUnHb8nAIvUP6V7PAXhwW9F5_tc2LGs=.blob \"aaa\")\\n\\n';\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const blobCRUD = new MemoryBlobCRUD();\n    await blobCRUD.set(\n      'YXXTjRmLlNyiOUnHb8nAIvUP6V7PAXhwW9F5_tc2LGs=',\n      new Blob()\n    );\n    const assets = new AssetsManager({ blob: blobCRUD });\n\n    const target = await mdAdapter.fromBlockSnapshot({\n      snapshot: blockSnapshot,\n      assets,\n    });\n    expect(target.file).toBe(markdown);\n  });\n\n  test('table', async () => {\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'block:8Wb7CSJ9Qe',\n      flavour: 'affine:database',\n      props: {\n        cells: {\n          'block:P_-Wg7Rg9O': {\n            'block:qyo8q9VPWU': {\n              columnId: 'block:qyo8q9VPWU',\n              value: 'TKip9uc7Yx',\n            },\n            'block:5cglrBmAr3': {\n              columnId: 'block:5cglrBmAr3',\n              value: 1702598400000,\n            },\n            'block:8Fa0JQe7WY': {\n              columnId: 'block:8Fa0JQe7WY',\n              value: 1,\n            },\n            'block:5ej6StPuF_': {\n              columnId: 'block:5ej6StPuF_',\n              value: 65,\n            },\n            'block:DPhZ6JBziD': {\n              columnId: 'block:DPhZ6JBziD',\n              value: ['-2_QD3GZT1', '73UrEZWaKk'],\n            },\n            'block:O8dpIDiP7-': {\n              columnId: 'block:O8dpIDiP7-',\n              value: {\n                '$blocksuite:internal:text$': true,\n                delta: [\n                  {\n                    insert: 'test2',\n                    attributes: {\n                      link: 'https://google.com',\n                    },\n                  },\n                ],\n              },\n            },\n            'block:U8lPD59MkF': {\n              columnId: 'block:U8lPD59MkF',\n              value: 'https://google.com',\n            },\n            'block:-DT7B0TafG': {\n              columnId: 'block:-DT7B0TafG',\n              value: true,\n            },\n          },\n          'block:0vhfgcHtPF': {\n            'block:qyo8q9VPWU': {\n              columnId: 'block:qyo8q9VPWU',\n              value: 'F2bgsaE3X2',\n            },\n            'block:O8dpIDiP7-': {\n              columnId: 'block:O8dpIDiP7-',\n              value: {\n                '$blocksuite:internal:text$': true,\n                delta: [\n                  {\n                    insert: 'test1',\n                  },\n                ],\n              },\n            },\n            'block:5cglrBmAr3': {\n              columnId: 'block:5cglrBmAr3',\n              value: 1703030400000,\n            },\n          },\n          'block:b4_02QXMAM': {\n            'block:qyo8q9VPWU': {\n              columnId: 'block:qyo8q9VPWU',\n              value: 'y3O1A2IHHu',\n            },\n          },\n          'block:W_eirvg7EJ': {\n            'block:qyo8q9VPWU': {\n              columnId: 'block:qyo8q9VPWU',\n            },\n          },\n        },\n        columns: [\n          {\n            type: 'title',\n            name: 'Title',\n            data: {},\n            id: 'block:2VfUaitjf9',\n          },\n          {\n            type: 'select',\n            name: 'Status',\n            data: {\n              options: [\n                {\n                  id: 'TKip9uc7Yx',\n                  color: 'var(--affine-tag-white)',\n                  value: 'TODO',\n                },\n                {\n                  id: 'F2bgsaE3X2',\n                  color: 'var(--affine-tag-green)',\n                  value: 'In Progress',\n                },\n                {\n                  id: 'y3O1A2IHHu',\n                  color: 'var(--affine-tag-gray)',\n                  value: 'Done',\n                },\n              ],\n            },\n            id: 'block:qyo8q9VPWU',\n          },\n          {\n            type: 'date',\n            name: 'Date',\n            data: {},\n            id: 'block:5cglrBmAr3',\n          },\n          {\n            type: 'number',\n            name: 'Number',\n            data: {\n              decimal: 0,\n            },\n            id: 'block:8Fa0JQe7WY',\n          },\n          {\n            type: 'progress',\n            name: 'Progress',\n            data: {},\n            id: 'block:5ej6StPuF_',\n          },\n          {\n            type: 'multi-select',\n            name: 'MultiSelect',\n            data: {\n              options: [\n                {\n                  id: '73UrEZWaKk',\n                  value: 'test2',\n                  color: 'var(--affine-tag-purple)',\n                },\n                {\n                  id: '-2_QD3GZT1',\n                  value: 'test1',\n                  color: 'var(--affine-tag-teal)',\n                },\n              ],\n            },\n            id: 'block:DPhZ6JBziD',\n          },\n          {\n            type: 'rich-text',\n            name: 'RichText',\n            data: {},\n            id: 'block:O8dpIDiP7-',\n          },\n          {\n            type: 'link',\n            name: 'Link',\n            data: {},\n            id: 'block:U8lPD59MkF',\n          },\n          {\n            type: 'checkbox',\n            name: 'Checkbox',\n            data: {},\n            id: 'block:-DT7B0TafG',\n          },\n        ],\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'block:P_-Wg7Rg9O',\n          flavour: 'affine:paragraph',\n          props: {\n            type: 'text',\n            text: {\n              '$blocksuite:internal:text$': true,\n              delta: [\n                {\n                  insert: 'Task 1',\n                },\n              ],\n            },\n          },\n          children: [],\n        },\n        {\n          type: 'block',\n          id: 'block:0vhfgcHtPF',\n          flavour: 'affine:paragraph',\n          props: {\n            type: 'text',\n            text: {\n              '$blocksuite:internal:text$': true,\n              delta: [\n                {\n                  insert: 'Task 2',\n                },\n              ],\n            },\n          },\n          children: [],\n        },\n      ],\n    };\n\n    const md = `\\\n| Title  | Status      | Date       | Number | Progress | MultiSelect | RichText                    | Link               | Checkbox |\n| ------ | ----------- | ---------- | ------ | -------- | ----------- | --------------------------- | ------------------ | -------- |\n| Task 1 | TODO        | 2023-12-15 | 1      | 65       | test1,test2 | [test2](https://google.com) | https://google.com | true     |\n| Task 2 | In Progress | 2023-12-20 |        |          |             | test1                       |                    |          |\n`;\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const target = await mdAdapter.fromBlockSnapshot({\n      snapshot: blockSnapshot,\n    });\n    expect(target.file).toBe(md);\n  });\n\n  test('reference', async () => {\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'block:vu6SK6WJpW',\n      flavour: 'affine:page',\n      props: {\n        title: {\n          '$blocksuite:internal:text$': true,\n          delta: [],\n        },\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'block:Tk4gSPocAt',\n          flavour: 'affine:surface',\n          props: {\n            elements: {},\n          },\n          children: [],\n        },\n        {\n          type: 'block',\n          id: 'block:WfnS5ZDCJT',\n          flavour: 'affine:note',\n          props: {\n            xywh: '[0,0,800,95]',\n            background: DEFAULT_NOTE_BACKGROUND_COLOR,\n            index: 'a0',\n            hidden: false,\n            displayMode: NoteDisplayMode.DocAndEdgeless,\n          },\n          children: [\n            {\n              type: 'block',\n              id: 'block:Bdn8Yvqcny',\n              flavour: 'affine:paragraph',\n              props: {\n                type: 'text',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: 'aaa',\n                    },\n                  ],\n                },\n              },\n              children: [\n                {\n                  type: 'block',\n                  id: 'block:72SMa5mdLy',\n                  flavour: 'affine:paragraph',\n                  props: {\n                    type: 'text',\n                    text: {\n                      '$blocksuite:internal:text$': true,\n                      delta: [\n                        {\n                          insert: 'bbb',\n                        },\n                      ],\n                    },\n                  },\n                  children: [],\n                },\n                {\n                  type: 'block',\n                  id: 'block:f-Z6nRrGK_',\n                  flavour: 'affine:paragraph',\n                  props: {\n                    type: 'text',\n                    text: {\n                      '$blocksuite:internal:text$': true,\n                      delta: [\n                        {\n                          insert: 'ccc',\n                        },\n                      ],\n                    },\n                  },\n                  children: [\n                    {\n                      type: 'block',\n                      id: 'block:sP3bU52el7',\n                      flavour: 'affine:paragraph',\n                      props: {\n                        type: 'text',\n                        text: {\n                          '$blocksuite:internal:text$': true,\n                          delta: [\n                            {\n                              insert: 'ddd',\n                            },\n                          ],\n                        },\n                      },\n                      children: [],\n                    },\n                    {\n                      type: 'block',\n                      id: 'block:X_HMxP4wxC',\n                      flavour: 'affine:paragraph',\n                      props: {\n                        type: 'text',\n                        text: {\n                          '$blocksuite:internal:text$': true,\n                          delta: [\n                            {\n                              insert: 'eee',\n                            },\n                            {\n                              insert: '',\n                              attributes: {\n                                reference: {\n                                  type: 'LinkedPage',\n                                  pageId: 'deadbeef',\n                                },\n                              },\n                            },\n                          ],\n                        },\n                      },\n                      children: [],\n                    },\n                    {\n                      type: 'block',\n                      id: 'block:iA34Rb-RvV',\n                      flavour: 'affine:paragraph',\n                      props: {\n                        text: {\n                          '$blocksuite:internal:text$': true,\n                          delta: [\n                            {\n                              insert: 'fff',\n                            },\n                          ],\n                        },\n                        type: 'text',\n                      },\n                      children: [],\n                    },\n                  ],\n                },\n                {\n                  type: 'block',\n                  id: 'block:I0Fmz5Nv02',\n                  flavour: 'affine:paragraph',\n                  props: {\n                    type: 'text',\n                    text: {\n                      '$blocksuite:internal:text$': true,\n                      delta: [\n                        {\n                          insert: 'ggg',\n                        },\n                      ],\n                    },\n                  },\n                  children: [],\n                },\n              ],\n            },\n            {\n              type: 'block',\n              id: 'block:12lDwMD7ec',\n              flavour: 'affine:paragraph',\n              props: {\n                type: 'text',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: 'hhh',\n                    },\n                  ],\n                },\n              },\n              children: [],\n            },\n          ],\n        },\n      ],\n    };\n    const markdown = `aaa\n\n&#x20;   bbb\n\n&#x20;   ccc\n\n&#x20;       ddd\n\n&#x20;       eeetest\n\n&#x20;       fff\n\n&#x20;   ggg\n\nhhh\n`;\n    const middleware: JobMiddleware = ({ adapterConfigs }) => {\n      adapterConfigs.set('title:deadbeef', 'test');\n    };\n    const mdAdapter = new MarkdownAdapter(createJob([middleware]));\n    const target = await mdAdapter.fromBlockSnapshot({\n      snapshot: blockSnapshot,\n    });\n    expect(target.file).toBe(markdown);\n  });\n\n  test('synced-doc', async () => {\n    // doc -> synced doc block -> deepest synced doc block\n    // The deepest synced doc block only export it's title\n\n    const deepestSyncedDocSnapshot: DocSnapshot = {\n      type: 'page',\n      meta: {\n        id: 'deepestSyncedDoc',\n        title: 'Deepest Doc',\n        createDate: 1715762171116,\n        tags: [],\n      },\n      blocks: {\n        type: 'block',\n        id: '8WdJmN5FTT',\n        flavour: 'affine:page',\n        version: 2,\n        props: {\n          title: {\n            '$blocksuite:internal:text$': true,\n            delta: [\n              {\n                insert: 'Deepest Doc',\n              },\n            ],\n          },\n        },\n        children: [\n          {\n            type: 'block',\n            id: 'zVN1EZFuZe',\n            flavour: 'affine:surface',\n            version: 5,\n            props: {\n              elements: {},\n            },\n            children: [],\n          },\n          {\n            type: 'block',\n            id: '2s9sJlphLH',\n            flavour: 'affine:note',\n            version: 1,\n            props: {\n              xywh: '[0,0,800,95]',\n              background: DEFAULT_NOTE_BACKGROUND_COLOR,\n              index: 'a0',\n              hidden: false,\n              displayMode: 'both',\n              edgeless: {\n                style: {\n                  borderRadius: 8,\n                  borderSize: 4,\n                  borderStyle: 'solid',\n                  shadowType: '--affine-note-shadow-box',\n                },\n              },\n            },\n            children: [\n              {\n                type: 'block',\n                id: 'vNp5XrR5yw',\n                flavour: 'affine:paragraph',\n                version: 1,\n                props: {\n                  type: 'text',\n                  text: {\n                    '$blocksuite:internal:text$': true,\n                    delta: [],\n                  },\n                },\n                children: [],\n              },\n              {\n                type: 'block',\n                id: 'JTdfSl1ygZ',\n                flavour: 'affine:paragraph',\n                version: 1,\n                props: {\n                  type: 'text',\n                  text: {\n                    '$blocksuite:internal:text$': true,\n                    delta: [\n                      {\n                        insert: 'Hello, This is deepest doc.',\n                      },\n                    ],\n                  },\n                },\n                children: [],\n              },\n            ],\n          },\n        ],\n      },\n    };\n\n    const syncedDocSnapshot: DocSnapshot = {\n      type: 'page',\n      meta: {\n        id: 'syncedDoc',\n        title: 'Synced Doc',\n        createDate: 1719212435051,\n        tags: [],\n      },\n      blocks: {\n        type: 'block',\n        id: 'AGOahFisBN',\n        flavour: 'affine:page',\n        version: 2,\n        props: {\n          title: {\n            '$blocksuite:internal:text$': true,\n            delta: [\n              {\n                insert: 'Synced Doc',\n              },\n            ],\n          },\n        },\n        children: [\n          {\n            type: 'block',\n            id: 'gfVzx5tGpB',\n            flavour: 'affine:surface',\n            version: 5,\n            props: {\n              elements: {},\n            },\n            children: [],\n          },\n          {\n            type: 'block',\n            id: 'CzEfaUret4',\n            flavour: 'affine:note',\n            version: 1,\n            props: {\n              xywh: '[0,0,800,95]',\n              background: '--affine-note-background-blue',\n              index: 'a0',\n              hidden: false,\n              displayMode: 'both',\n              edgeless: {\n                style: {\n                  borderRadius: 0,\n                  borderSize: 4,\n                  borderStyle: 'none',\n                  shadowType: '--affine-note-shadow-sticker',\n                },\n              },\n            },\n            children: [\n              {\n                type: 'block',\n                id: 'yFlNufsgke',\n                flavour: 'affine:paragraph',\n                version: 1,\n                props: {\n                  type: 'h1',\n                  text: {\n                    '$blocksuite:internal:text$': true,\n                    delta: [\n                      {\n                        insert: 'Heading 1',\n                      },\n                    ],\n                  },\n                },\n                children: [],\n              },\n              {\n                type: 'block',\n                id: 'oMuLcD6XS3',\n                flavour: 'affine:paragraph',\n                version: 1,\n                props: {\n                  type: 'h2',\n                  text: {\n                    '$blocksuite:internal:text$': true,\n                    delta: [\n                      {\n                        insert: 'heading 2',\n                      },\n                    ],\n                  },\n                },\n                children: [],\n              },\n              {\n                type: 'block',\n                id: 'PQ8FhGV6VM',\n                flavour: 'affine:paragraph',\n                version: 1,\n                props: {\n                  type: 'text',\n                  text: {\n                    '$blocksuite:internal:text$': true,\n                    delta: [\n                      {\n                        insert: 'paragraph',\n                      },\n                    ],\n                  },\n                },\n                children: [],\n              },\n              {\n                type: 'block',\n                id: 'sA9paSrdEN',\n                flavour: 'affine:paragraph',\n                version: 1,\n                props: {\n                  type: 'text',\n                  text: {\n                    '$blocksuite:internal:text$': true,\n                    delta: [\n                      {\n                        insert: 'strike',\n                        attributes: {\n                          strike: true,\n                        },\n                      },\n                    ],\n                  },\n                },\n                children: [],\n              },\n              {\n                type: 'block',\n                id: 'DF26giFpKX',\n                flavour: 'affine:code',\n                version: 1,\n                props: {\n                  text: {\n                    '$blocksuite:internal:text$': true,\n                    delta: [\n                      {\n                        insert: 'Hello world!',\n                      },\n                    ],\n                  },\n                  language: 'cpp',\n                  wrap: false,\n                  caption: '',\n                },\n                children: [],\n              },\n              {\n                type: 'block',\n                id: '-3bbVQTvI2',\n                flavour: 'affine:embed-synced-doc',\n                version: 1,\n                props: {\n                  index: 'a0',\n                  xywh: '[0,0,0,0]',\n                  rotate: 0,\n                  pageId: 'deepestSyncedDoc',\n                  style: 'syncedDoc',\n                },\n                children: [],\n              },\n            ],\n          },\n        ],\n      },\n    };\n\n    const syncedDocMd =\n      '# Synced Doc\\n\\n# Heading 1\\n\\n## heading 2\\n\\nparagraph\\n\\n~~strike~~\\n\\n```cpp\\nHello world!\\n```';\n\n    const docSnapShot: DocSnapshot = {\n      type: 'page',\n      meta: {\n        id: 'y5nsrywQtr',\n        title: 'Test Doc',\n        createDate: 1719222172042,\n        tags: [],\n      },\n      blocks: {\n        type: 'block',\n        id: 'VChAZIX7DM',\n        flavour: 'affine:page',\n        version: 2,\n        props: {\n          title: {\n            '$blocksuite:internal:text$': true,\n            delta: [\n              {\n                insert: 'Test Doc',\n              },\n            ],\n          },\n        },\n        children: [\n          {\n            type: 'block',\n            id: 'uRj8gejH4d',\n            flavour: 'affine:surface',\n            version: 5,\n            props: {\n              elements: {},\n            },\n            children: [],\n          },\n          {\n            type: 'block',\n            id: 'AqFoVDUoW9',\n            flavour: 'affine:note',\n            version: 1,\n            props: {\n              xywh: '[0,0,800,95]',\n              background: '--affine-note-background-blue',\n              index: 'a0',\n              hidden: false,\n              displayMode: 'both',\n              edgeless: {\n                style: {\n                  borderRadius: 0,\n                  borderSize: 4,\n                  borderStyle: 'none',\n                  shadowType: '--affine-note-shadow-sticker',\n                },\n              },\n            },\n            children: [\n              {\n                type: 'block',\n                id: 'cWBI4UGTqh',\n                flavour: 'affine:paragraph',\n                version: 1,\n                props: {\n                  type: 'text',\n                  text: {\n                    '$blocksuite:internal:text$': true,\n                    delta: [\n                      {\n                        insert: 'Hello',\n                      },\n                    ],\n                  },\n                },\n                children: [],\n              },\n              {\n                type: 'block',\n                id: 'AqFoVxas19',\n                flavour: 'affine:embed-synced-doc',\n                version: 1,\n                props: {\n                  index: 'a0',\n                  xywh: '[0,0,0,0]',\n                  rotate: 0,\n                  pageId: 'syncedDoc',\n                  style: 'syncedDoc',\n                },\n                children: [],\n              },\n              {\n                type: 'block',\n                id: 'Db976U9v18',\n                flavour: 'affine:paragraph',\n                version: 1,\n                props: {\n                  type: 'text',\n                  text: {\n                    '$blocksuite:internal:text$': true,\n                    delta: [\n                      {\n                        insert: 'World!',\n                      },\n                    ],\n                  },\n                },\n                children: [],\n              },\n            ],\n          },\n        ],\n      },\n    };\n\n    const docMd = `\\\n# Test Doc\n\nHello\n\n${syncedDocMd}\n\nDeepest Doc\n\nWorld!\n`;\n\n    const job = createJob([embedSyncedDocMiddleware('content')]);\n\n    // workaround for adding docs to collection\n    await job.snapshotToDoc(deepestSyncedDocSnapshot);\n    await job.snapshotToDoc(syncedDocSnapshot);\n    await job.snapshotToDoc(docSnapShot);\n\n    const mdAdapter = new MarkdownAdapter(job);\n    const target = await mdAdapter.fromDocSnapshot({\n      snapshot: docSnapShot,\n    });\n    expect(target.file).toBe(docMd);\n  });\n});\n\ndescribe('markdown to snapshot', () => {\n  test('code', async () => {\n    const markdown = '```python\\nimport this\\n```\\n';\n\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'matchesReplaceMap[0]',\n      flavour: 'affine:note',\n      props: {\n        xywh: '[0,0,800,95]',\n        background: DEFAULT_NOTE_BACKGROUND_COLOR,\n        index: 'a0',\n        hidden: false,\n        displayMode: NoteDisplayMode.DocAndEdgeless,\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[1]',\n          flavour: 'affine:code',\n          props: {\n            language: 'python',\n            text: {\n              '$blocksuite:internal:text$': true,\n              delta: [\n                {\n                  insert: 'import this',\n                },\n              ],\n            },\n          },\n          children: [],\n        },\n      ],\n    };\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const rawBlockSnapshot = await mdAdapter.toBlockSnapshot({\n      file: markdown,\n    });\n    expect(nanoidReplacement(rawBlockSnapshot)).toEqual(blockSnapshot);\n  });\n\n  test('code with indentation 1 - slice', async () => {\n    const markdown = '```python\\n    import this\\n```';\n\n    const sliceSnapshot: SliceSnapshot = {\n      type: 'slice',\n      content: [\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[0]',\n          flavour: 'affine:note',\n          props: {\n            xywh: '[0,0,800,95]',\n            background: DEFAULT_NOTE_BACKGROUND_COLOR,\n            index: 'a0',\n            hidden: false,\n            displayMode: 'both',\n          },\n          children: [\n            {\n              type: 'block',\n              id: 'matchesReplaceMap[1]',\n              flavour: 'affine:code',\n              props: {\n                language: 'python',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: '    import this',\n                    },\n                  ],\n                },\n              },\n              children: [],\n            },\n          ],\n        },\n      ],\n      pageVersion: 0,\n      workspaceVersion: 0,\n      workspaceId: '',\n      pageId: '',\n    };\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const rawSliceSnapshot = await mdAdapter.toSliceSnapshot({\n      file: markdown,\n      pageVersion: 0,\n      workspaceVersion: 0,\n      workspaceId: '',\n      pageId: '',\n    });\n    expect(nanoidReplacement(rawSliceSnapshot!)).toEqual(sliceSnapshot);\n  });\n\n  test('code with indentation 2 - slice', async () => {\n    const markdown = '````python\\n```python\\n    import this\\n```\\n````';\n\n    const sliceSnapshot: SliceSnapshot = {\n      type: 'slice',\n      content: [\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[0]',\n          flavour: 'affine:note',\n          props: {\n            xywh: '[0,0,800,95]',\n            background: DEFAULT_NOTE_BACKGROUND_COLOR,\n            index: 'a0',\n            hidden: false,\n            displayMode: 'both',\n          },\n          children: [\n            {\n              type: 'block',\n              id: 'matchesReplaceMap[1]',\n              flavour: 'affine:code',\n              props: {\n                language: 'python',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: '```python\\n    import this\\n```',\n                    },\n                  ],\n                },\n              },\n              children: [],\n            },\n          ],\n        },\n      ],\n      pageVersion: 0,\n      workspaceVersion: 0,\n      workspaceId: '',\n      pageId: '',\n    };\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const rawSliceSnapshot = await mdAdapter.toSliceSnapshot({\n      file: markdown,\n      pageVersion: 0,\n      workspaceVersion: 0,\n      workspaceId: '',\n      pageId: '',\n    });\n    expect(nanoidReplacement(rawSliceSnapshot!)).toEqual(sliceSnapshot);\n  });\n\n  test('code with indentation 3 - slice', async () => {\n    const markdown = '~~~~python\\n````python\\n    import this\\n````\\n~~~~';\n\n    const sliceSnapshot: SliceSnapshot = {\n      type: 'slice',\n      content: [\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[0]',\n          flavour: 'affine:note',\n          props: {\n            xywh: '[0,0,800,95]',\n            background: DEFAULT_NOTE_BACKGROUND_COLOR,\n            index: 'a0',\n            hidden: false,\n            displayMode: 'both',\n          },\n          children: [\n            {\n              type: 'block',\n              id: 'matchesReplaceMap[1]',\n              flavour: 'affine:code',\n              props: {\n                language: 'python',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: '````python\\n    import this\\n````',\n                    },\n                  ],\n                },\n              },\n              children: [],\n            },\n          ],\n        },\n      ],\n      pageVersion: 0,\n      workspaceVersion: 0,\n      workspaceId: '',\n      pageId: '',\n    };\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const rawSliceSnapshot = await mdAdapter.toSliceSnapshot({\n      file: markdown,\n      pageVersion: 0,\n      workspaceVersion: 0,\n      workspaceId: '',\n      pageId: '',\n    });\n    expect(nanoidReplacement(rawSliceSnapshot!)).toEqual(sliceSnapshot);\n  });\n\n  test('paragraph', async () => {\n    const markdown = `aaa\n\n&#x20;   bbb\n\n&#x20;   ccc\n\n&#x20;       ddd\n\n&#x20;       eee\n\n&#x20;       fff\n\n&#x20;   ggg\n\nhhh\n`;\n\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'matchesReplaceMap[0]',\n      flavour: 'affine:note',\n      props: {\n        xywh: '[0,0,800,95]',\n        background: DEFAULT_NOTE_BACKGROUND_COLOR,\n        index: 'a0',\n        hidden: false,\n        displayMode: NoteDisplayMode.DocAndEdgeless,\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[1]',\n          flavour: 'affine:paragraph',\n          props: {\n            type: 'text',\n            text: {\n              '$blocksuite:internal:text$': true,\n              delta: [\n                {\n                  insert: 'aaa',\n                },\n              ],\n            },\n          },\n          children: [],\n        },\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[2]',\n          flavour: 'affine:paragraph',\n          props: {\n            type: 'text',\n            text: {\n              '$blocksuite:internal:text$': true,\n              delta: [\n                {\n                  insert: '    bbb',\n                },\n              ],\n            },\n          },\n          children: [],\n        },\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[3]',\n          flavour: 'affine:paragraph',\n          props: {\n            type: 'text',\n            text: {\n              '$blocksuite:internal:text$': true,\n              delta: [\n                {\n                  insert: '    ccc',\n                },\n              ],\n            },\n          },\n          children: [],\n        },\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[4]',\n          flavour: 'affine:paragraph',\n          props: {\n            type: 'text',\n            text: {\n              '$blocksuite:internal:text$': true,\n              delta: [\n                {\n                  insert: '        ddd',\n                },\n              ],\n            },\n          },\n          children: [],\n        },\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[5]',\n          flavour: 'affine:paragraph',\n          props: {\n            type: 'text',\n            text: {\n              '$blocksuite:internal:text$': true,\n              delta: [\n                {\n                  insert: '        eee',\n                },\n              ],\n            },\n          },\n          children: [],\n        },\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[6]',\n          flavour: 'affine:paragraph',\n          props: {\n            text: {\n              '$blocksuite:internal:text$': true,\n              delta: [\n                {\n                  insert: '        fff',\n                },\n              ],\n            },\n            type: 'text',\n          },\n          children: [],\n        },\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[7]',\n          flavour: 'affine:paragraph',\n          props: {\n            type: 'text',\n            text: {\n              '$blocksuite:internal:text$': true,\n              delta: [\n                {\n                  insert: '    ggg',\n                },\n              ],\n            },\n          },\n          children: [],\n        },\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[8]',\n          flavour: 'affine:paragraph',\n          props: {\n            type: 'text',\n            text: {\n              '$blocksuite:internal:text$': true,\n              delta: [\n                {\n                  insert: 'hhh',\n                },\n              ],\n            },\n          },\n          children: [],\n        },\n      ],\n    };\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const rawBlockSnapshot = await mdAdapter.toBlockSnapshot({\n      file: markdown,\n    });\n    expect(nanoidReplacement(rawBlockSnapshot)).toEqual(blockSnapshot);\n  });\n\n  test('bulleted list', async () => {\n    const markdown = `* aaa\n\n  * bbb\n\n    * ccc\n\n  - ddd\n\n- eee\n`;\n\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'matchesReplaceMap[0]',\n      flavour: 'affine:note',\n      props: {\n        xywh: '[0,0,800,95]',\n        background: DEFAULT_NOTE_BACKGROUND_COLOR,\n        index: 'a0',\n        hidden: false,\n        displayMode: NoteDisplayMode.DocAndEdgeless,\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[1]',\n          flavour: 'affine:list',\n          props: {\n            type: 'bulleted',\n            text: {\n              '$blocksuite:internal:text$': true,\n              delta: [\n                {\n                  insert: 'aaa',\n                },\n              ],\n            },\n            checked: false,\n            collapsed: false,\n          },\n          children: [\n            {\n              type: 'block',\n              id: 'matchesReplaceMap[2]',\n              flavour: 'affine:list',\n              props: {\n                type: 'bulleted',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: 'bbb',\n                    },\n                  ],\n                },\n                checked: false,\n                collapsed: false,\n              },\n              children: [\n                {\n                  type: 'block',\n                  id: 'matchesReplaceMap[3]',\n                  flavour: 'affine:list',\n                  props: {\n                    type: 'bulleted',\n                    text: {\n                      '$blocksuite:internal:text$': true,\n                      delta: [\n                        {\n                          insert: 'ccc',\n                        },\n                      ],\n                    },\n                    checked: false,\n                    collapsed: false,\n                  },\n                  children: [],\n                },\n              ],\n            },\n            {\n              type: 'block',\n              id: 'matchesReplaceMap[4]',\n              flavour: 'affine:list',\n              props: {\n                type: 'bulleted',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: 'ddd',\n                    },\n                  ],\n                },\n                checked: false,\n                collapsed: false,\n              },\n              children: [],\n            },\n          ],\n        },\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[5]',\n          flavour: 'affine:list',\n          props: {\n            type: 'bulleted',\n            text: {\n              '$blocksuite:internal:text$': true,\n              delta: [\n                {\n                  insert: 'eee',\n                },\n              ],\n            },\n            checked: false,\n            collapsed: false,\n          },\n          children: [],\n        },\n      ],\n    };\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const rawBlockSnapshot = await mdAdapter.toBlockSnapshot({\n      file: markdown,\n    });\n    expect(nanoidReplacement(rawBlockSnapshot)).toEqual(blockSnapshot);\n  });\n\n  test('todo list', async () => {\n    const markdown = `- [ ] aaa\n\n  - [x] bbb\n\n    - [ ] ccc\n\n  - [x] ddd\n\n- [ ] eee\n`;\n\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'matchesReplaceMap[0]',\n      flavour: 'affine:note',\n      props: {\n        xywh: '[0,0,800,95]',\n        background: DEFAULT_NOTE_BACKGROUND_COLOR,\n        index: 'a0',\n        hidden: false,\n        displayMode: NoteDisplayMode.DocAndEdgeless,\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[1]',\n          flavour: 'affine:list',\n          props: {\n            type: 'todo',\n            text: {\n              '$blocksuite:internal:text$': true,\n              delta: [\n                {\n                  insert: 'aaa',\n                },\n              ],\n            },\n            checked: false,\n            collapsed: false,\n          },\n          children: [\n            {\n              type: 'block',\n              id: 'matchesReplaceMap[2]',\n              flavour: 'affine:list',\n              props: {\n                type: 'todo',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: 'bbb',\n                    },\n                  ],\n                },\n                checked: true,\n                collapsed: false,\n              },\n              children: [\n                {\n                  type: 'block',\n                  id: 'matchesReplaceMap[3]',\n                  flavour: 'affine:list',\n                  props: {\n                    type: 'todo',\n                    text: {\n                      '$blocksuite:internal:text$': true,\n                      delta: [\n                        {\n                          insert: 'ccc',\n                        },\n                      ],\n                    },\n                    checked: false,\n                    collapsed: false,\n                  },\n                  children: [],\n                },\n              ],\n            },\n            {\n              type: 'block',\n              id: 'matchesReplaceMap[4]',\n              flavour: 'affine:list',\n              props: {\n                type: 'todo',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: 'ddd',\n                    },\n                  ],\n                },\n                checked: true,\n                collapsed: false,\n              },\n              children: [],\n            },\n          ],\n        },\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[5]',\n          flavour: 'affine:list',\n          props: {\n            type: 'todo',\n            text: {\n              '$blocksuite:internal:text$': true,\n              delta: [\n                {\n                  insert: 'eee',\n                },\n              ],\n            },\n            checked: false,\n            collapsed: false,\n          },\n          children: [],\n        },\n      ],\n    };\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const rawBlockSnapshot = await mdAdapter.toBlockSnapshot({\n      file: markdown,\n    });\n    expect(nanoidReplacement(rawBlockSnapshot)).toEqual(blockSnapshot);\n  });\n\n  test('code inline', async () => {\n    const markdown = 'aaa `bbb` ccc\\n';\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'matchesReplaceMap[0]',\n      flavour: 'affine:note',\n      props: {\n        xywh: '[0,0,800,95]',\n        background: DEFAULT_NOTE_BACKGROUND_COLOR,\n        index: 'a0',\n        hidden: false,\n        displayMode: NoteDisplayMode.DocAndEdgeless,\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[1]',\n          flavour: 'affine:paragraph',\n          props: {\n            type: 'text',\n            text: {\n              '$blocksuite:internal:text$': true,\n              delta: [\n                {\n                  insert: 'aaa ',\n                },\n                {\n                  insert: 'bbb',\n                  attributes: {\n                    code: true,\n                  },\n                },\n                {\n                  insert: ' ccc',\n                },\n              ],\n            },\n          },\n          children: [],\n        },\n      ],\n    };\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const rawBlockSnapshot = await mdAdapter.toBlockSnapshot({\n      file: markdown,\n    });\n    expect(nanoidReplacement(rawBlockSnapshot)).toEqual(blockSnapshot);\n  });\n\n  test('code inline - slice', async () => {\n    const markdown = '``` ```\\n    aaa';\n\n    const sliceSnapshot: SliceSnapshot = {\n      type: 'slice',\n      content: [\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[0]',\n          flavour: 'affine:note',\n          props: {\n            xywh: '[0,0,800,95]',\n            background: DEFAULT_NOTE_BACKGROUND_COLOR,\n            index: 'a0',\n            hidden: false,\n            displayMode: 'both',\n          },\n          children: [\n            {\n              type: 'block',\n              id: 'matchesReplaceMap[1]',\n              flavour: 'affine:paragraph',\n              props: {\n                type: 'text',\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: ' ',\n                      attributes: {\n                        code: true,\n                      },\n                    },\n                    {\n                      insert: '\\n    aaa',\n                    },\n                  ],\n                },\n              },\n              children: [],\n            },\n          ],\n        },\n      ],\n      pageVersion: 0,\n      workspaceVersion: 0,\n      workspaceId: '',\n      pageId: '',\n    };\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const rawSliceSnapshot = await mdAdapter.toSliceSnapshot({\n      file: markdown,\n      pageVersion: 0,\n      workspaceVersion: 0,\n      workspaceId: '',\n      pageId: '',\n    });\n    expect(nanoidReplacement(rawSliceSnapshot!)).toEqual(sliceSnapshot);\n  });\n\n  test('link', async () => {\n    const markdown = 'aaa [bbb](https://affine.pro/) ccc\\n';\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'matchesReplaceMap[0]',\n      flavour: 'affine:note',\n      props: {\n        xywh: '[0,0,800,95]',\n        background: DEFAULT_NOTE_BACKGROUND_COLOR,\n        index: 'a0',\n        hidden: false,\n        displayMode: NoteDisplayMode.DocAndEdgeless,\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[1]',\n          flavour: 'affine:paragraph',\n          props: {\n            type: 'text',\n            text: {\n              '$blocksuite:internal:text$': true,\n              delta: [\n                {\n                  insert: 'aaa ',\n                },\n                {\n                  insert: 'bbb',\n                  attributes: {\n                    link: 'https://affine.pro/',\n                  },\n                },\n                {\n                  insert: ' ccc',\n                },\n              ],\n            },\n          },\n          children: [],\n        },\n      ],\n    };\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const rawBlockSnapshot = await mdAdapter.toBlockSnapshot({\n      file: markdown,\n    });\n    expect(nanoidReplacement(rawBlockSnapshot)).toEqual(blockSnapshot);\n  });\n\n  test('inline link', async () => {\n    const markdown = 'aaa https://affine.pro/ ccc\\n';\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'matchesReplaceMap[0]',\n      flavour: 'affine:note',\n      props: {\n        xywh: '[0,0,800,95]',\n        background: DEFAULT_NOTE_BACKGROUND_COLOR,\n        index: 'a0',\n        hidden: false,\n        displayMode: NoteDisplayMode.DocAndEdgeless,\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[1]',\n          flavour: 'affine:paragraph',\n          props: {\n            type: 'text',\n            text: {\n              '$blocksuite:internal:text$': true,\n              delta: [\n                {\n                  insert: 'aaa ',\n                },\n                {\n                  insert: 'https://affine.pro/',\n                  attributes: {\n                    link: 'https://affine.pro/',\n                  },\n                },\n                {\n                  insert: ' ccc',\n                },\n              ],\n            },\n          },\n          children: [],\n        },\n      ],\n    };\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const rawBlockSnapshot = await mdAdapter.toBlockSnapshot({\n      file: markdown,\n    });\n    expect(nanoidReplacement(rawBlockSnapshot)).toEqual(blockSnapshot);\n  });\n\n  test('bold', async () => {\n    const markdown = 'aaa**bbb**ccc\\n';\n\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'matchesReplaceMap[0]',\n      flavour: 'affine:note',\n      props: {\n        xywh: '[0,0,800,95]',\n        background: DEFAULT_NOTE_BACKGROUND_COLOR,\n        index: 'a0',\n        hidden: false,\n        displayMode: NoteDisplayMode.DocAndEdgeless,\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[1]',\n          flavour: 'affine:paragraph',\n          props: {\n            type: 'text',\n            text: {\n              '$blocksuite:internal:text$': true,\n              delta: [\n                {\n                  insert: 'aaa',\n                },\n                {\n                  insert: 'bbb',\n                  attributes: {\n                    bold: true,\n                  },\n                },\n                {\n                  insert: 'ccc',\n                },\n              ],\n            },\n          },\n          children: [],\n        },\n      ],\n    };\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const rawBlockSnapshot = await mdAdapter.toBlockSnapshot({\n      file: markdown,\n    });\n    expect(nanoidReplacement(rawBlockSnapshot)).toEqual(blockSnapshot);\n  });\n\n  test('italic', async () => {\n    const markdown = 'aaa*bbb*ccc\\n';\n\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'matchesReplaceMap[0]',\n      flavour: 'affine:note',\n      props: {\n        xywh: '[0,0,800,95]',\n        background: DEFAULT_NOTE_BACKGROUND_COLOR,\n        index: 'a0',\n        hidden: false,\n        displayMode: NoteDisplayMode.DocAndEdgeless,\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[1]',\n          flavour: 'affine:paragraph',\n          props: {\n            type: 'text',\n            text: {\n              '$blocksuite:internal:text$': true,\n              delta: [\n                {\n                  insert: 'aaa',\n                },\n                {\n                  insert: 'bbb',\n                  attributes: {\n                    italic: true,\n                  },\n                },\n                {\n                  insert: 'ccc',\n                },\n              ],\n            },\n          },\n          children: [],\n        },\n      ],\n    };\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const rawBlockSnapshot = await mdAdapter.toBlockSnapshot({\n      file: markdown,\n    });\n    expect(nanoidReplacement(rawBlockSnapshot)).toEqual(blockSnapshot);\n  });\n\n  test('table', async () => {\n    const markdown = `| aaa | bbb | ccc |\n| --- | --- | --- |\n| ddd | eee | fff |\n`;\n\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'matchesReplaceMap[0]',\n      flavour: 'affine:note',\n      props: {\n        xywh: '[0,0,800,95]',\n        background: DEFAULT_NOTE_BACKGROUND_COLOR,\n        index: 'a0',\n        hidden: false,\n        displayMode: NoteDisplayMode.DocAndEdgeless,\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[1]',\n          flavour: 'affine:database',\n          props: {\n            views: [\n              {\n                id: 'matchesReplaceMap[2]',\n                name: 'Table View',\n                mode: 'table',\n                columns: [],\n                filter: {\n                  type: 'group',\n                  op: 'and',\n                  conditions: [],\n                },\n                header: {\n                  titleColumn: 'matchesReplaceMap[9]',\n                  iconColumn: 'type',\n                },\n              },\n            ],\n            title: {\n              '$blocksuite:internal:text$': true,\n              delta: [],\n            },\n            cells: {\n              'matchesReplaceMap[12]': {\n                'matchesReplaceMap[10]': {\n                  columnId: 'matchesReplaceMap[10]',\n                  value: {\n                    '$blocksuite:internal:text$': true,\n                    delta: [\n                      {\n                        insert: 'eee',\n                      },\n                    ],\n                  },\n                },\n                'matchesReplaceMap[11]': {\n                  columnId: 'matchesReplaceMap[11]',\n                  value: {\n                    '$blocksuite:internal:text$': true,\n                    delta: [\n                      {\n                        insert: 'fff',\n                      },\n                    ],\n                  },\n                },\n              },\n            },\n            columns: [\n              {\n                type: 'title',\n                name: 'aaa',\n                data: {},\n                id: 'matchesReplaceMap[9]',\n              },\n              {\n                type: 'rich-text',\n                name: 'bbb',\n                data: {},\n                id: 'matchesReplaceMap[10]',\n              },\n              {\n                type: 'rich-text',\n                name: 'ccc',\n                data: {},\n                id: 'matchesReplaceMap[11]',\n              },\n            ],\n          },\n          children: [\n            {\n              type: 'block',\n              id: 'matchesReplaceMap[12]',\n              flavour: 'affine:paragraph',\n              props: {\n                text: {\n                  '$blocksuite:internal:text$': true,\n                  delta: [\n                    {\n                      insert: 'ddd',\n                    },\n                  ],\n                },\n                type: 'text',\n              },\n              children: [],\n            },\n          ],\n        },\n      ],\n    };\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const rawBlockSnapshot = await mdAdapter.toBlockSnapshot({\n      file: markdown,\n    });\n    expect(nanoidReplacement(rawBlockSnapshot)).toEqual(blockSnapshot);\n  });\n\n  test('html tag', async () => {\n    const markdown = `<aaa>\\n`;\n\n    const blockSnapshot: BlockSnapshot = {\n      type: 'block',\n      id: 'matchesReplaceMap[0]',\n      flavour: 'affine:note',\n      props: {\n        xywh: '[0,0,800,95]',\n        background: DEFAULT_NOTE_BACKGROUND_COLOR,\n        index: 'a0',\n        hidden: false,\n        displayMode: NoteDisplayMode.DocAndEdgeless,\n      },\n      children: [\n        {\n          type: 'block',\n          id: 'matchesReplaceMap[1]',\n          flavour: 'affine:paragraph',\n          props: {\n            text: {\n              '$blocksuite:internal:text$': true,\n              delta: [\n                {\n                  insert: '<aaa>',\n                },\n              ],\n            },\n            type: 'text',\n          },\n          children: [],\n        },\n      ],\n    };\n\n    const mdAdapter = new MarkdownAdapter(createJob());\n    const rawBlockSnapshot = await mdAdapter.toBlockSnapshot({\n      file: markdown,\n    });\n    expect(nanoidReplacement(rawBlockSnapshot)).toEqual(blockSnapshot);\n  });\n});\n"]}