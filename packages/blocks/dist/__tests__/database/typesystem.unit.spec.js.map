{"version":3,"file":"typesystem.unit.spec.js","sourceRoot":"","sources":["../../../src/__tests__/database/typesystem.unit.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,MAAM,EACN,SAAS,EACT,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,QAAQ,EACR,UAAU,GACX,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAEhD,MAAM,CAAC,MAAM,OAAO,GAAG,UAAU,CAAC,UAAU,CAAoB;IAC9D,IAAI,EAAE,QAAQ;IACd,MAAM,EAAE,EAAE;CACX,CAAC,CAAC;AACH,MAAM,CAAC,MAAM,QAAQ,GAAG,UAAU,CAAC,UAAU,CAAqB;IAChE,IAAI,EAAE,SAAS;IACf,MAAM,EAAE,EAAE;CACX,CAAC,CAAC;AACH,MAAM,CAAC,MAAM,KAAK,GAAG,UAAU,CAAC,UAAU,CAAoB;IAC5D,IAAI,EAAE,MAAM;IACZ,MAAM,EAAE,EAAE;CACX,CAAC,CAAC;AACH,MAAM,CAAC,MAAM,IAAI,GAAG,UAAU,CAAC,UAAU,CAAC;IACxC,IAAI,EAAE,KAAK;IACX,MAAM,EAAE,CAAC,OAAO,CAAC;CAClB,CAAC,CAAC;AACH,MAAM,CAAC,MAAM,MAAM,GAAG,UAAU,CAAC,UAAU,CAAC;IAC1C,IAAI,EAAE,OAAO;IACb,MAAM,EAAE,CAAC,OAAO,CAAC;CAClB,CAAC,CAAC;AACH,MAAM,CAAC,MAAM,MAAM,GAAG,UAAU,CAAC,UAAU,CAAC;IAC1C,IAAI,EAAE,OAAO;IACb,MAAM,EAAE,CAAC,OAAO,CAAC;CAClB,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,IAAI,GAAG,UAAU,CAAC,UAAU,CAAkB;IACzD,IAAI,EAAE,KAAK;IACX,MAAM,EAAE,EAAE;CACX,CAAC,CAAC;AAEH,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;IACzB,IAAI,CAAC,gCAAgC,EAAE,GAAG,EAAE;QAC1C,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CACrE,IAAI,CACL,CAAC;QACF,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CACpE,IAAI,CACL,CAAC;QACF,MAAM,CACJ,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAClE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACb,MAAM,CACJ,UAAU,CAAC,SAAS,CAClB,QAAQ,CAAC,MAAM,EAAE,EACjB,MAAM,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAC9C,CACF,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACb,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5E,CAAC,CAAC,CAAC;IACH,IAAI,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAC9B,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3E,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3E,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3E,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AACH,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC9B,IAAI,CAAC,uBAAuB,EAAE,GAAG,EAAE;QACjC,MAAM,EAAE,GAAG,SAAS,CAAC;YACnB,QAAQ,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;YAC5C,IAAI,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC;YACpC,EAAE,EAAE,QAAQ,CAAC,MAAM,EAAE;SACtB,CAAC,CAAC;QACH,MAAM,WAAW,GAAG,UAAU,CAAC,QAAQ,CACrC,EAAE,EACF,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EACnB,QAAQ,CAAC,MAAM,EAAE,EACjB,EAAE,CACH,CAAC;QACF,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC;IACH,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;QACtB,MAAM,EAAE,GAAG,SAAS,CAAC;YACnB,QAAQ,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YACxC,IAAI,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5C,EAAE,EAAE,QAAQ,CAAC,MAAM,EAAE;SACtB,CAAC,CAAC;QACH,MAAM,OAAO,GAAG,SAAS,CAAC;YACxB,QAAQ,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YACxC,IAAI,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;YACpD,EAAE,EAAE,QAAQ,CAAC,MAAM,EAAE;SACtB,CAAC,CAAC;QACH,MAAM,IAAI,GAAU,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;QAC1D,MAAM,WAAW,GAAG,UAAU,CAAC,QAAQ,CACrC,EAAE,EACF,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EACvB,QAAQ,CAAC,MAAM,EAAE,EACjB,EAAE,CACH,CAAC;QACF,MAAM,gBAAgB,GAAG,UAAU,CAAC,QAAQ,CAC1C,EAAE,EACF,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAC/B,QAAQ,CAAC,MAAM,EAAE,EACjB,OAAO,CACR,CAAC;QACF,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;QACzE,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAC5C,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAC9B,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {\n  tArray,\n  tFunction,\n  tTypeRef,\n  tTypeVar,\n  tUnion,\n  tUnknown,\n  typesystem,\n} from '@lumensuite/data-view';\nimport { describe, expect, test } from 'vitest';\n\nexport const tString = typesystem.defineData<{ value: string }>({\n  name: 'String',\n  supers: [],\n});\nexport const tBoolean = typesystem.defineData<{ value: boolean }>({\n  name: 'Boolean',\n  supers: [],\n});\nexport const tDate = typesystem.defineData<{ value: number }>({\n  name: 'Date',\n  supers: [],\n});\nexport const tURL = typesystem.defineData({\n  name: 'URL',\n  supers: [tString],\n});\nexport const tEmail = typesystem.defineData({\n  name: 'Email',\n  supers: [tString],\n});\nexport const tPhone = typesystem.defineData({\n  name: 'Phone',\n  supers: [tString],\n});\ntype Tag = { id: string; value: string; color: string };\nexport const tTag = typesystem.defineData<{ tags: Tag[] }>({\n  name: 'Tag',\n  supers: [],\n});\n\ndescribe('subtyping', () => {\n  test('all type is subtype of unknown', () => {\n    expect(typesystem.isSubtype(tUnknown.create(), tBoolean.create())).toBe(\n      true\n    );\n    expect(typesystem.isSubtype(tUnknown.create(), tString.create())).toBe(\n      true\n    );\n    expect(\n      typesystem.isSubtype(tUnknown.create(), tArray(tString.create()))\n    ).toBe(true);\n    expect(\n      typesystem.isSubtype(\n        tUnknown.create(),\n        tUnion([tString.create(), tBoolean.create()])\n      )\n    ).toBe(true);\n    expect(typesystem.isSubtype(tUnknown.create(), tTag.create())).toBe(true);\n  });\n  test('allow extends type', () => {\n    expect(typesystem.isSubtype(tString.create(), tPhone.create())).toBe(true);\n    expect(typesystem.isSubtype(tString.create(), tEmail.create())).toBe(true);\n    expect(typesystem.isSubtype(tString.create(), tURL.create())).toBe(true);\n  });\n});\ndescribe('function apply', () => {\n  test('generic type function', () => {\n    const fn = tFunction({\n      typeVars: [tTypeVar('A', tUnknown.create())],\n      args: [tTypeRef('A'), tTypeRef('A')],\n      rt: tBoolean.create(),\n    });\n    const instancedFn = typesystem.instance(\n      {},\n      [tBoolean.create()],\n      tBoolean.create(),\n      fn\n    );\n    expect(instancedFn.args[1]).toStrictEqual(tBoolean.create());\n  });\n  test('tags infer', () => {\n    const fn = tFunction({\n      typeVars: [tTypeVar('A', tTag.create())],\n      args: [tTypeRef('A'), tArray(tTypeRef('A'))],\n      rt: tBoolean.create(),\n    });\n    const fnArray = tFunction({\n      typeVars: [tTypeVar('A', tTag.create())],\n      args: [tArray(tTypeRef('A')), tArray(tTypeRef('A'))],\n      rt: tBoolean.create(),\n    });\n    const tags: Tag[] = [{ id: 'a', value: 'b', color: 'c' }];\n    const instancedFn = typesystem.instance(\n      {},\n      [tTag.create({ tags })],\n      tBoolean.create(),\n      fn\n    );\n    const instancedFnArray = typesystem.instance(\n      {},\n      [tArray(tTag.create({ tags }))],\n      tBoolean.create(),\n      fnArray\n    );\n    expect(instancedFn.args[1]).toStrictEqual(tArray(tTag.create({ tags })));\n    expect(instancedFnArray.args[1]).toStrictEqual(\n      tArray(tTag.create({ tags }))\n    );\n  });\n});\n"]}