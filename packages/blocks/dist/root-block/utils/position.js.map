{"version":3,"file":"position.js","sourceRoot":"","sources":["../../../src/root-block/utils/position.ts"],"names":[],"mappings":"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","sourcesContent":["import { clamp } from '@lumensuite/affine-shared/utils';\n\ntype CollisionBox = {\n  /**\n   * The point that the objRect is positioned to.\n   */\n  positioningPoint: { x: number; y: number };\n  /**\n   * The boundary rect of the obj that is being positioned.\n   */\n  objRect?: { height: number; width: number };\n  /**\n   * The boundary rect of the container that the obj is in.\n   */\n  boundaryRect?: DOMRect;\n  offsetX?: number;\n  offsetY?: number;\n  edgeGap?: number;\n};\n\nexport function calcSafeCoordinate({\n  positioningPoint,\n  objRect = { width: 0, height: 0 },\n  boundaryRect = document.body.getBoundingClientRect(),\n  offsetX = 0,\n  offsetY = 0,\n  edgeGap = 20,\n}: CollisionBox) {\n  const safeX = clamp(\n    positioningPoint.x + offsetX,\n    edgeGap,\n    boundaryRect.width - objRect.width - edgeGap\n  );\n  const y = positioningPoint.y + offsetY;\n  // Not use clamp for y coordinate to avoid the quick bar always showing after scrolling\n  // const safeY = clamp(\n  //   positioningPoint.y + offsetY,\n  //   edgeGap,\n  //   boundaryRect.height - objRect.height - edgeGap\n  // );\n  return {\n    x: safeX,\n    y,\n  };\n}\n\n/**\n * Used to compare the space available\n * at the top and bottom of an element within a container.\n *\n * Please give preference to {@link getPopperPosition}\n */\nexport function compareTopAndBottomSpace(\n  obj: { getBoundingClientRect: () => DOMRect },\n  container = document.body,\n  gap = 20\n) {\n  const objRect = obj.getBoundingClientRect();\n  const spaceRect = container.getBoundingClientRect();\n  const topSpace = objRect.top - spaceRect.top;\n  const bottomSpace = spaceRect.bottom - objRect.bottom;\n  const topOrBottom: 'top' | 'bottom' =\n    topSpace > bottomSpace ? 'top' : 'bottom';\n  return {\n    placement: topOrBottom,\n    // the height is the available space.\n    height: (topOrBottom === 'top' ? topSpace : bottomSpace) - gap,\n  };\n}\n\n/**\n * Get the position of the popper element with flip.\n */\nexport function getPopperPosition(\n  popper: {\n    getBoundingClientRect: () => DOMRect;\n  },\n  reference: {\n    getBoundingClientRect: () => DOMRect;\n  },\n  { gap = 12, offsetY = 5 }: { gap?: number; offsetY?: number } = {}\n) {\n  if (!popper) {\n    // foolproof, someone may use element with non-null assertion\n    console.warn(\n      'The popper element is not exist. Popper position maybe incorrect'\n    );\n  }\n  const { placement, height } = compareTopAndBottomSpace(\n    reference,\n    document.body,\n    gap + offsetY\n  );\n\n  const referenceRect = reference.getBoundingClientRect();\n  const positioningPoint = {\n    x: referenceRect.x,\n    y: referenceRect.y + (placement === 'bottom' ? referenceRect.height : 0),\n  };\n\n  // TODO maybe use the editor container as the boundary rect to avoid the format bar being covered by other elements\n  const boundaryRect = document.body.getBoundingClientRect();\n  // Note: the popperRect.height maybe incorrect\n  // because we are calculated its correct height\n  const popperRect = popper?.getBoundingClientRect();\n\n  const safeCoordinate = calcSafeCoordinate({\n    positioningPoint,\n    objRect: popperRect,\n    boundaryRect,\n    offsetY: placement === 'bottom' ? offsetY : -offsetY,\n  });\n\n  return {\n    placement,\n    /**\n     * The height is the available space height.\n     *\n     * Note: it's a max height, not the real height,\n     * because sometimes the popper's height is smaller than the available space.\n     */\n    height,\n    x: `${safeCoordinate.x}px`,\n    y:\n      placement === 'bottom'\n        ? `${safeCoordinate.y}px`\n        : // We need to use `calc(-100%)` since the height of popper maybe incorrect\n          `calc(${safeCoordinate.y}px - 100%)`,\n  };\n}\n"]}