{"version":3,"file":"edgeless-keyboard.js","sourceRoot":"","sources":["../../../src/root-block/edgeless/edgeless-keyboard.ts"],"names":[],"mappings":"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","sourcesContent":["import { MindmapElementModel } from '@blocksuite/affine-block-surface';\nimport { LayoutType, type ShapeElementModel } from '@blocksuite/affine-model';\nimport {\n  ConnectorElementModel,\n  ConnectorMode,\n  EdgelessTextBlockModel,\n  GroupElementModel,\n  NoteDisplayMode,\n} from '@blocksuite/affine-model';\nimport { TelemetryProvider } from '@blocksuite/affine-shared/services';\nimport { matchFlavours } from '@blocksuite/affine-shared/utils';\nimport { IS_MAC } from '@blocksuite/global/env';\nimport { Bound } from '@blocksuite/global/utils';\n\nimport type { EdgelessRootBlockComponent } from './edgeless-root-block.js';\nimport type { EdgelessTool } from './types.js';\n\nimport {\n  getNearestTranslation,\n  isElementOutsideViewport,\n  isSelectSingleMindMap,\n} from '../../_common/edgeless/mindmap/index.js';\nimport { LassoMode } from '../../_common/types.js';\nimport { EdgelessTextBlockComponent } from '../../edgeless-text-block/edgeless-text-block.js';\nimport { PageKeyboardManager } from '../keyboard/keyboard-manager.js';\nimport { GfxBlockModel } from './block-model.js';\nimport { CopilotSelectionController } from './tools/copilot-tool.js';\nimport { LassoToolController } from './tools/lasso-tool.js';\nimport { ShapeToolController } from './tools/shape-tool.js';\nimport {\n  DEFAULT_NOTE_CHILD_FLAVOUR,\n  DEFAULT_NOTE_CHILD_TYPE,\n  DEFAULT_NOTE_TIP,\n} from './utils/consts.js';\nimport { deleteElements } from './utils/crud.js';\nimport { getNextShapeType } from './utils/hotkey-utils.js';\nimport { isCanvasElement, isNoteBlock } from './utils/query.js';\nimport {\n  mountConnectorLabelEditor,\n  mountShapeTextEditor,\n} from './utils/text.js';\n\nexport class EdgelessPageKeyboardManager extends PageKeyboardManager {\n  constructor(override rootComponent: EdgelessRootBlockComponent) {\n    super(rootComponent);\n    this.rootComponent.bindHotKey(\n      {\n        v: () => {\n          this._setEdgelessTool(rootComponent, {\n            type: 'default',\n          });\n        },\n        t: () => {\n          this._setEdgelessTool(rootComponent, {\n            type: 'text',\n          });\n        },\n        c: () => {\n          const mode = ConnectorMode.Curve;\n          rootComponent.service.editPropsStore.recordLastProps('connector', {\n            mode,\n          });\n          this._setEdgelessTool(rootComponent, { type: 'connector', mode });\n        },\n        l: () => {\n          if (!rootComponent.doc.awarenessStore.getFlag('enable_lasso_tool')) {\n            return;\n          }\n          // select the current lasso mode\n          const edgeless = rootComponent;\n          const lassoController = edgeless.tools.controllers['lasso'];\n          const tool: EdgelessTool = {\n            type: 'lasso',\n            mode: LassoMode.Polygonal,\n          };\n\n          if (lassoController instanceof LassoToolController)\n            tool.mode = lassoController.tool.mode;\n\n          this._setEdgelessTool(edgeless, tool);\n        },\n        'Shift-l': () => {\n          if (!rootComponent.doc.awarenessStore.getFlag('enable_lasso_tool')) {\n            return;\n          }\n          // toggle between lasso modes\n          const edgeless = rootComponent;\n          const cur = edgeless.edgelessTool;\n          const tool: EdgelessTool = {\n            type: 'lasso',\n            mode:\n              cur.type === 'lasso'\n                ? cur.mode === LassoMode.FreeHand\n                  ? LassoMode.Polygonal\n                  : LassoMode.FreeHand\n                : LassoMode.FreeHand,\n          };\n          this._setEdgelessTool(edgeless, tool);\n        },\n        h: () => {\n          this._setEdgelessTool(rootComponent, {\n            type: 'pan',\n            panning: false,\n          });\n        },\n        n: () => {\n          this._setEdgelessTool(rootComponent, {\n            type: 'affine:note',\n            childFlavour: DEFAULT_NOTE_CHILD_FLAVOUR,\n            childType: DEFAULT_NOTE_CHILD_TYPE,\n            tip: DEFAULT_NOTE_TIP,\n          });\n        },\n        p: () => {\n          this._setEdgelessTool(rootComponent, {\n            type: 'brush',\n          });\n        },\n        e: () => {\n          this._setEdgelessTool(rootComponent, {\n            type: 'eraser',\n          });\n        },\n        k: () => {\n          if (this.rootComponent.service.locked) return;\n          const { selection } = rootComponent.service;\n\n          if (\n            selection.selectedElements.length === 1 &&\n            selection.firstElement instanceof GfxBlockModel &&\n            matchFlavours(selection.firstElement as GfxBlockModel, [\n              'affine:note',\n            ])\n          ) {\n            rootComponent.slots.toggleNoteSlicer.emit();\n          }\n        },\n        f: () => {\n          if (this.rootComponent.service.locked) return;\n          if (\n            this.rootComponent.service.selection.selectedElements.length !==\n              0 &&\n            !this.rootComponent.service.selection.editing\n          ) {\n            const frame = rootComponent.service.frame.createFrameOnSelected();\n            if (!frame) return;\n            this.rootComponent.std\n              .getOptional(TelemetryProvider)\n              ?.track('CanvasElementAdded', {\n                control: 'shortcut',\n                page: 'whiteboard editor',\n                module: 'toolbar',\n                segment: 'toolbar',\n                type: 'frame',\n              });\n            rootComponent.surface.fitToViewport(Bound.deserialize(frame.xywh));\n          } else if (!this.rootComponent.service.selection.editing) {\n            this._setEdgelessTool(rootComponent, { type: 'frame' });\n          }\n        },\n        '-': () => {\n          if (this.rootComponent.service.locked) return;\n          const { selectedElements: elements } =\n            rootComponent.service.selection;\n          if (\n            !rootComponent.service.selection.editing &&\n            elements.length === 1 &&\n            isNoteBlock(elements[0])\n          ) {\n            rootComponent.slots.toggleNoteSlicer.emit();\n          }\n        },\n        '@': () => {\n          const std = this.rootComponent.std;\n          if (\n            std.selection.getGroup('note').length > 0 ||\n            // eslint-disable-next-line unicorn/prefer-array-some\n            std.selection.find('text') ||\n            Boolean(std.selection.find('surface')?.editing)\n          ) {\n            return;\n          }\n          const { insertedLinkType } = std.command.exec(\n            'insertLinkByQuickSearch'\n          );\n\n          insertedLinkType\n            ?.then(type => {\n              if (!type) return;\n\n              rootComponent.std\n                .getOptional(TelemetryProvider)\n                ?.track('CanvasElementAdded', {\n                  control: 'shortcut',\n                  page: 'whiteboard editor',\n                  module: 'toolbar',\n                  segment: 'toolbar',\n                  type: type.flavour?.split(':')[1],\n                });\n              if (type.isNewDoc) {\n                rootComponent.std\n                  .getOptional(TelemetryProvider)\n                  ?.track('DocCreated', {\n                    control: 'shortcut',\n                    page: 'whiteboard editor',\n                    segment: 'whiteboard',\n                    type: type.flavour?.split(':')[1],\n                  });\n              }\n            })\n            .catch(console.error);\n        },\n        'Shift-s': () => {\n          if (this.rootComponent.service.locked) return;\n          const controller = rootComponent.tools.currentController;\n          if (\n            this.rootComponent.service.selection.editing ||\n            !(controller instanceof ShapeToolController)\n          ) {\n            return;\n          }\n          const { shapeName } = controller.tool;\n          const nextShapeName = getNextShapeType(shapeName);\n          this._setEdgelessTool(rootComponent, {\n            type: 'shape',\n            shapeName: nextShapeName,\n          });\n\n          controller.createOverlay();\n        },\n        'Mod-g': ctx => {\n          if (this.rootComponent.service.locked) return;\n          if (\n            this.rootComponent.service.selection.selectedElements.length > 1 &&\n            !this.rootComponent.service.selection.editing\n          ) {\n            ctx.get('keyboardState').event.preventDefault();\n            rootComponent.service.createGroupFromSelected();\n          }\n        },\n        'Shift-Mod-g': ctx => {\n          if (this.rootComponent.service.locked) return;\n          const { selection } = this.rootComponent.service;\n          if (\n            selection.selectedElements.length === 1 &&\n            selection.firstElement instanceof GroupElementModel\n          ) {\n            ctx.get('keyboardState').event.preventDefault();\n            rootComponent.service.ungroup(selection.firstElement);\n          }\n        },\n        'Mod-a': ctx => {\n          if (this.rootComponent.service.locked) return;\n          if (this.rootComponent.service.selection.editing) {\n            return;\n          }\n\n          ctx.get('defaultState').event.preventDefault();\n          const { service } = this.rootComponent;\n          this.rootComponent.service.selection.set({\n            elements: [\n              ...service.blocks\n                .filter(\n                  block =>\n                    block.group === null &&\n                    !(\n                      matchFlavours(block, ['affine:note']) &&\n                      block.displayMode === NoteDisplayMode.DocOnly\n                    )\n                )\n                .map(block => block.id),\n              ...service.elements\n                .filter(el => el.group === null)\n                .map(el => el.id),\n            ],\n            editing: false,\n          });\n        },\n        'Mod-1': ctx => {\n          ctx.get('defaultState').event.preventDefault();\n          this.rootComponent.service.setZoomByAction('fit');\n        },\n        'Mod--': ctx => {\n          ctx.get('defaultState').event.preventDefault();\n          this.rootComponent.service.setZoomByAction('out');\n        },\n        'Mod-0': ctx => {\n          ctx.get('defaultState').event.preventDefault();\n          this.rootComponent.service.setZoomByAction('reset');\n        },\n        'Mod-=': ctx => {\n          ctx.get('defaultState').event.preventDefault();\n          this.rootComponent.service.setZoomByAction('in');\n        },\n        Backspace: () => {\n          this._delete();\n        },\n        Delete: () => {\n          this._delete();\n        },\n        'Control-d': () => {\n          if (!IS_MAC) return;\n          this._delete();\n        },\n        Escape: () => {\n          const { currentController } = this.rootComponent.tools;\n          if (\n            currentController instanceof LassoToolController &&\n            currentController.isSelecting\n          ) {\n            currentController.abort();\n          }\n          if (currentController instanceof CopilotSelectionController) {\n            currentController.abort();\n          }\n\n          if (!this.rootComponent.service.selection.empty) {\n            rootComponent.selection.clear();\n          }\n        },\n\n        ArrowUp: () => {\n          this._move('ArrowUp');\n        },\n\n        ArrowDown: () => {\n          this._move('ArrowDown');\n        },\n\n        ArrowLeft: () => {\n          this._move('ArrowLeft');\n        },\n\n        ArrowRight: () => {\n          this._move('ArrowRight');\n        },\n\n        'Shift-ArrowUp': () => {\n          this._move('ArrowUp', true);\n        },\n\n        'Shift-ArrowDown': () => {\n          this._move('ArrowDown', true);\n        },\n\n        'Shift-ArrowLeft': () => {\n          this._move('ArrowLeft', true);\n        },\n\n        'Shift-ArrowRight': () => {\n          this._move('ArrowRight', true);\n        },\n\n        Enter: () => {\n          const { service } = rootComponent;\n          const selection = service.selection;\n          const elements = selection.selectedElements;\n          const onlyOne = elements.length === 1;\n\n          if (onlyOne) {\n            const element = elements[0];\n            const id = element.id;\n\n            if (element instanceof ConnectorElementModel) {\n              selection.set({\n                elements: [id],\n                editing: true,\n              });\n              requestAnimationFrame(() => {\n                mountConnectorLabelEditor(element, rootComponent);\n              });\n              return;\n            }\n\n            if (element instanceof EdgelessTextBlockModel) {\n              selection.set({\n                elements: [id],\n                editing: true,\n              });\n              const textBlock = rootComponent.host.view.getBlock(id);\n              if (textBlock instanceof EdgelessTextBlockComponent) {\n                textBlock.tryFocusEnd();\n              }\n\n              return;\n            }\n          }\n\n          if (!isSelectSingleMindMap(elements)) {\n            return;\n          }\n\n          const mindmap = elements[0].group as MindmapElementModel;\n          const currentNode = mindmap.getNode(elements[0].id)!;\n          const node = mindmap.getNode(elements[0].id)!;\n          const parent = mindmap.getParentNode(node.id) ?? node;\n          const id = mindmap.addNode(parent.id, currentNode.id, 'after');\n          const target = service.getElementById(id) as ShapeElementModel;\n\n          requestAnimationFrame(() => {\n            mountShapeTextEditor(target, rootComponent);\n\n            if (isElementOutsideViewport(service.viewport, target, [20, 20])) {\n              const { elementBound } = target;\n\n              service.viewport.smoothTranslate(\n                elementBound.x + elementBound.w / 2,\n                elementBound.y + elementBound.h / 2\n              );\n            }\n          });\n        },\n        Tab: () => {\n          const { service } = rootComponent;\n          const selection = service.selection;\n          const elements = selection.selectedElements;\n\n          if (!isSelectSingleMindMap(elements)) {\n            return;\n          }\n\n          const mindmap = elements[0].group as MindmapElementModel;\n          const node = mindmap.getNode(elements[0].id)!;\n          const id = mindmap.addNode(node.id);\n          const target = service.getElementById(id) as ShapeElementModel;\n\n          requestAnimationFrame(() => {\n            mountShapeTextEditor(target, rootComponent);\n\n            if (isElementOutsideViewport(service.viewport, target, [20, 20])) {\n              const { elementBound } = target;\n\n              service.viewport.smoothTranslate(\n                elementBound.x + elementBound.w / 2,\n                elementBound.y + elementBound.h / 2\n              );\n            }\n          });\n        },\n      },\n      {\n        global: true,\n      }\n    );\n\n    this._bindShiftKey();\n    this._bindToggleHand();\n  }\n\n  private _bindShiftKey() {\n    this.rootComponent.handleEvent(\n      'keyDown',\n      ctx => {\n        const event = ctx.get('defaultState').event;\n        if (event instanceof KeyboardEvent) {\n          this._shift(event);\n        }\n      },\n      { global: true }\n    );\n    this.rootComponent.handleEvent(\n      'keyUp',\n      ctx => {\n        const event = ctx.get('defaultState').event;\n        if (event instanceof KeyboardEvent) {\n          this._shift(event);\n        }\n      },\n      {\n        global: true,\n      }\n    );\n  }\n\n  private _bindToggleHand() {\n    this.rootComponent.handleEvent(\n      'keyDown',\n      ctx => {\n        const event = ctx.get('keyboardState').raw;\n        const service = this.rootComponent.service;\n        const selection = service.selection;\n        if (event.code === 'Space' && !event.repeat) {\n          this._space(event);\n        } else if (!selection.editing && event.key.length === 1) {\n          const elements = selection.selectedElements;\n          const doc = this.rootComponent.doc;\n\n          if (isSelectSingleMindMap(elements)) {\n            const target = service.getElementById(\n              elements[0].id\n            ) as ShapeElementModel;\n            if (target.text) {\n              doc.transact(() => {\n                target.text!.delete(0, target.text!.length);\n                target.text!.insert(0, event.key);\n              });\n            }\n            mountShapeTextEditor(target, this.rootComponent);\n            return true;\n          }\n        }\n\n        return false;\n      },\n      { global: true }\n    );\n    this.rootComponent.handleEvent(\n      'keyUp',\n      ctx => {\n        const event = ctx.get('keyboardState').raw;\n        if (event.code === 'Space' && !event.repeat) {\n          this._space(event);\n        }\n      },\n      { global: true }\n    );\n  }\n\n  private _delete() {\n    const edgeless = this.rootComponent;\n\n    if (edgeless.service.locked) return;\n    if (edgeless.service.selection.editing) {\n      return;\n    }\n\n    const selectedElements = edgeless.service.selection.selectedElements;\n\n    if (isSelectSingleMindMap(selectedElements)) {\n      const node = selectedElements[0];\n      const mindmap = node.group as MindmapElementModel;\n      const focusNode =\n        mindmap.getSiblingNode(node.id, 'prev') ??\n        mindmap.getSiblingNode(node.id, 'next') ??\n        mindmap.getParentNode(node.id);\n\n      if (focusNode) {\n        edgeless.service.selection.set({\n          elements: [focusNode.element.id],\n          editing: false,\n        });\n      }\n\n      deleteElements(edgeless, selectedElements);\n    } else {\n      deleteElements(edgeless, selectedElements);\n      edgeless.service.selection.clear();\n    }\n  }\n\n  private _move(key: string, shift = false) {\n    const edgeless = this.rootComponent;\n\n    if (edgeless.service.locked) return;\n    if (edgeless.service.selection.editing) return;\n\n    const { selectedElements } = edgeless.service.selection;\n    const inc = shift ? 10 : 1;\n    const mindmapNodes = selectedElements.filter(\n      el => el.group instanceof MindmapElementModel\n    );\n\n    if (mindmapNodes.length > 0) {\n      const node = mindmapNodes[0];\n      const mindmap = node.group as MindmapElementModel;\n      const nodeDirection = mindmap.getLayoutDir(node.id);\n      let targetNode: BlockSuite.SurfaceElementModel | null = null;\n\n      switch (key) {\n        case 'ArrowUp':\n        case 'ArrowDown':\n          targetNode =\n            mindmap.getSiblingNode(\n              node.id,\n              key === 'ArrowDown' ? 'next' : 'prev',\n              nodeDirection === LayoutType.RIGHT\n                ? 'right'\n                : nodeDirection === LayoutType.LEFT\n                  ? 'left'\n                  : undefined\n            )?.element ?? null;\n          break;\n        case 'ArrowLeft':\n          targetNode =\n            nodeDirection === LayoutType.RIGHT\n              ? (mindmap.getParentNode(node.id)?.element ?? null)\n              : (mindmap.getChildNodes(node.id, 'left')[0]?.element ?? null);\n\n          break;\n        case 'ArrowRight':\n          targetNode =\n            nodeDirection === LayoutType.RIGHT ||\n            nodeDirection === LayoutType.BALANCE\n              ? (mindmap.getChildNodes(node.id, 'right')[0]?.element ?? null)\n              : (mindmap.getParentNode(node.id)?.element ?? null);\n          break;\n      }\n\n      if (targetNode) {\n        edgeless.service.selection.set({\n          elements: [targetNode.id],\n          editing: false,\n        });\n\n        if (\n          isElementOutsideViewport(\n            edgeless.service.viewport,\n            targetNode,\n            [90, 20]\n          )\n        ) {\n          const [dx, dy] = getNearestTranslation(\n            edgeless.service.viewport,\n            targetNode,\n            [100, 20]\n          );\n\n          edgeless.service.viewport.smoothTranslate(\n            edgeless.service.viewport.centerX - dx,\n            edgeless.service.viewport.centerY + dy\n          );\n        }\n      }\n\n      return;\n    }\n\n    selectedElements.forEach(element => {\n      const bound = Bound.deserialize(element.xywh).clone();\n\n      switch (key) {\n        case 'ArrowUp':\n          bound.y -= inc;\n          break;\n        case 'ArrowLeft':\n          bound.x -= inc;\n          break;\n        case 'ArrowRight':\n          bound.x += inc;\n          break;\n        case 'ArrowDown':\n          bound.y += inc;\n          break;\n      }\n\n      if (isCanvasElement(element)) {\n        if (element instanceof ConnectorElementModel) {\n          element.moveTo(bound);\n        }\n        element['xywh'] = bound.serialize();\n      } else {\n        element['xywh'] = bound.serialize();\n      }\n    });\n  }\n\n  private _setEdgelessTool(\n    edgeless: EdgelessRootBlockComponent,\n    edgelessTool: EdgelessTool,\n    ignoreActiveState = false\n  ) {\n    // when editing, should not update mouse mode by shortcut\n    if (!ignoreActiveState && edgeless.service.selection.editing) {\n      return;\n    }\n    edgeless.tools.setEdgelessTool(edgelessTool);\n  }\n\n  private _shift(event: KeyboardEvent) {\n    const edgeless = this.rootComponent;\n\n    if (event.repeat) return;\n\n    const shiftKeyPressed =\n      event.key.toLowerCase() === 'shift' && event.shiftKey;\n\n    if (shiftKeyPressed) {\n      edgeless.slots.pressShiftKeyUpdated.emit(true);\n    } else {\n      edgeless.slots.pressShiftKeyUpdated.emit(false);\n    }\n  }\n\n  private _space(event: KeyboardEvent) {\n    /*\n    Call this function with a check for !event.repeat to consider only the first keydown (not repeat). This way, you can use onPressSpaceBar in a tool to determine if the space bar is pressed or not.\n  */\n\n    const edgeless = this.rootComponent;\n    const selection = edgeless.service.selection;\n    const currentTool = edgeless.edgelessTool;\n    const type = currentTool.type;\n\n    const isKeyDown = event.type === 'keydown';\n\n    if (isKeyDown) {\n      edgeless.tools.spaceBar = true;\n    } else {\n      edgeless.tools.spaceBar = false;\n    }\n\n    if (edgeless.service.tool.dragging) {\n      return; // Don't do anything if currently dragging\n    }\n\n    const revertToPrevTool = (ev: KeyboardEvent) => {\n      if (ev.code === 'Space') {\n        this._setEdgelessTool(edgeless, currentTool);\n        document.removeEventListener('keyup', revertToPrevTool, false);\n      }\n    };\n\n    if (isKeyDown) {\n      if (type === 'pan' || (type === 'default' && selection.editing)) {\n        return;\n      }\n      this._setEdgelessTool(edgeless, { type: 'pan', panning: false });\n\n      edgeless.dispatcher.disposables.addFromEvent(\n        document,\n        'keyup',\n        revertToPrevTool\n      );\n    }\n  }\n}\n"]}