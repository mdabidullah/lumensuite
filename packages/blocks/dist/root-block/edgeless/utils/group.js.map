{"version":3,"file":"group.js","sourceRoot":"","sources":["../../../../src/root-block/edgeless/utils/group.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,0BAA0B,CAAC;AAC7D,MAAM,UAAU,uBAAuB,CAAC,QAAoC;IAC1E,MAAM,GAAG,GAAG,IAAI,GAAG,EAA4B,CAAC;IAEhD,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QACzB,sDAAsD;QACtD,IAAI,OAAO,YAAY,iBAAiB,EAAE,CAAC;YACzC,OAAO,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;QACzD,CAAC;aAAM,CAAC;YACN,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACnB,CAAC;IACH,CAAC,CAAC,CAAC;IACH,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACzB,CAAC","sourcesContent":["import { GroupElementModel } from '@blocksuite/affine-model';\nexport function getElementsWithoutGroup(elements: BlockSuite.EdgelessModel[]) {\n  const set = new Set<BlockSuite.EdgelessModel>();\n\n  elements.forEach(element => {\n    // TODO(@L-Sun) Use `getAllDescendantElements` instead\n    if (element instanceof GroupElementModel) {\n      element.descendants().forEach(child => set.add(child));\n    } else {\n      set.add(element);\n    }\n  });\n  return Array.from(set);\n}\n"]}