{"version":3,"file":"query.js","sourceRoot":"","sources":["../../../../src/root-block/edgeless/utils/query.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Viewport } from '@blocksuite/block-std/gfx';\nimport type { PointLocation } from '@blocksuite/global/utils';\nimport type { BlockModel } from '@blocksuite/store';\n\nimport {\n  type CanvasElementWithText,\n  CommonUtils,\n  GRID_GAP_MAX,\n  GRID_GAP_MIN,\n  MindmapElementModel,\n} from '@blocksuite/affine-block-surface';\nimport {\n  type AttachmentBlockModel,\n  type BookmarkBlockModel,\n  ConnectorElementModel,\n  type EdgelessTextBlockModel,\n  type EmbedBlockModel,\n  type EmbedFigmaModel,\n  type EmbedGithubModel,\n  type EmbedHtmlModel,\n  type EmbedLinkedDocModel,\n  type EmbedLoomModel,\n  type EmbedSyncedDocModel,\n  type EmbedYoutubeModel,\n  type FrameBlockModel,\n  type ImageBlockModel,\n  type NoteBlockModel,\n  ShapeElementModel,\n  TextElementModel,\n} from '@blocksuite/affine-model';\nimport { Bound, deserializeXYWH } from '@blocksuite/global/utils';\n\nimport type { Connectable } from '../../../_common/utils/index.js';\nimport type { GfxBlockModel } from '../block-model.js';\nimport type { EdgelessTool } from '../types.js';\n\nimport { getElementsWithoutGroup } from './group.js';\n\nconst { clamp, getQuadBoundsWithRotation } = CommonUtils;\n\nexport function isMindmapNode(\n  element: GfxBlockModel | BlockSuite.EdgelessModel | null\n) {\n  return element?.group instanceof MindmapElementModel;\n}\n\nexport function isTopLevelBlock(\n  selectable: BlockModel | BlockSuite.EdgelessModel | BlockModel | null\n): selectable is GfxBlockModel {\n  return !!selectable && 'flavour' in selectable;\n}\n\nexport function isNoteBlock(\n  element: BlockModel | BlockSuite.EdgelessModel | null\n): element is NoteBlockModel {\n  return !!element && 'flavour' in element && element.flavour === 'affine:note';\n}\n\nexport function isEdgelessTextBlock(\n  element: BlockModel | BlockSuite.EdgelessModel | null\n): element is EdgelessTextBlockModel {\n  return (\n    !!element &&\n    'flavour' in element &&\n    element.flavour === 'affine:edgeless-text'\n  );\n}\n\nexport function isFrameBlock(\n  element: BlockModel | BlockSuite.EdgelessModel | null\n): element is FrameBlockModel {\n  return (\n    !!element && 'flavour' in element && element.flavour === 'affine:frame'\n  );\n}\n\nexport function isImageBlock(\n  element: BlockModel | BlockSuite.EdgelessModel | null\n): element is ImageBlockModel {\n  return (\n    !!element && 'flavour' in element && element.flavour === 'affine:image'\n  );\n}\n\nexport function isAttachmentBlock(\n  element: BlockModel | BlockSuite.EdgelessModel | null\n): element is AttachmentBlockModel {\n  return (\n    !!element && 'flavour' in element && element.flavour === 'affine:attachment'\n  );\n}\n\nexport function isBookmarkBlock(\n  element: BlockModel | BlockSuite.EdgelessModel | null\n): element is BookmarkBlockModel {\n  return (\n    !!element && 'flavour' in element && element.flavour === 'affine:bookmark'\n  );\n}\n\nexport function isEmbeddedBlock(\n  element: BlockModel | BlockSuite.EdgelessModel | null\n): element is EmbedBlockModel {\n  return (\n    !!element && 'flavour' in element && /affine:embed-*/.test(element.flavour)\n  );\n}\n\n/**\n * TODO: Remove this function after the edgeless refactor completed\n * This function is used to check if the block is an AI chat block for edgeless selected rect\n * Should not be used in the future\n * Related issue: https://linear.app/affine-design/issue/BS-1009/\n * @deprecated\n */\nexport function isAIChatBlock(\n  element: BlockModel | BlockSuite.EdgelessModel | null\n) {\n  return (\n    !!element &&\n    'flavour' in element &&\n    element.flavour === 'affine:embed-ai-chat'\n  );\n}\n\nexport function isEmbeddedLinkBlock(\n  element: BlockModel | BlockSuite.EdgelessModel | null\n) {\n  return (\n    isEmbeddedBlock(element) &&\n    !isEmbedSyncedDocBlock(element) &&\n    !isEmbedLinkedDocBlock(element)\n  );\n}\n\nexport function isEmbedGithubBlock(\n  element: BlockModel | BlockSuite.EdgelessModel | null\n): element is EmbedGithubModel {\n  return (\n    !!element &&\n    'flavour' in element &&\n    element.flavour === 'affine:embed-github'\n  );\n}\n\nexport function isEmbedYoutubeBlock(\n  element: BlockModel | BlockSuite.EdgelessModel | null\n): element is EmbedYoutubeModel {\n  return (\n    !!element &&\n    'flavour' in element &&\n    element.flavour === 'affine:embed-youtube'\n  );\n}\n\nexport function isEmbedLoomBlock(\n  element: BlockModel | BlockSuite.EdgelessModel | null\n): element is EmbedLoomModel {\n  return (\n    !!element && 'flavour' in element && element.flavour === 'affine:embed-loom'\n  );\n}\n\nexport function isEmbedFigmaBlock(\n  element: BlockModel | BlockSuite.EdgelessModel | null\n): element is EmbedFigmaModel {\n  return (\n    !!element &&\n    'flavour' in element &&\n    element.flavour === 'affine:embed-figma'\n  );\n}\n\nexport function isEmbedLinkedDocBlock(\n  element: BlockModel | BlockSuite.EdgelessModel | null\n): element is EmbedLinkedDocModel {\n  return (\n    !!element &&\n    'flavour' in element &&\n    element.flavour === 'affine:embed-linked-doc'\n  );\n}\n\nexport function isEmbedSyncedDocBlock(\n  element: BlockModel | BlockSuite.EdgelessModel | null\n): element is EmbedSyncedDocModel {\n  return (\n    !!element &&\n    'flavour' in element &&\n    element.flavour === 'affine:embed-synced-doc'\n  );\n}\n\nexport function isEmbedHtmlBlock(\n  element: BlockModel | BlockSuite.EdgelessModel | null\n): element is EmbedHtmlModel {\n  return (\n    !!element && 'flavour' in element && element.flavour === 'affine:embed-html'\n  );\n}\n\nexport function isCanvasElement(\n  selectable: BlockSuite.EdgelessModel | null\n): selectable is BlockSuite.SurfaceModel {\n  return !isTopLevelBlock(selectable);\n}\n\nexport function isCanvasElementWithText(\n  element: BlockSuite.EdgelessModel\n): element is CanvasElementWithText {\n  return (\n    element instanceof TextElementModel || element instanceof ShapeElementModel\n  );\n}\n\nexport function isConnectable(\n  element: BlockSuite.EdgelessModel | null\n): element is Connectable {\n  return !!element && element.connectable;\n}\n\nexport function getSelectionBoxBound(viewport: Viewport, bound: Bound) {\n  const { w, h } = bound;\n  const [x, y] = viewport.toViewCoord(bound.x, bound.y);\n  return new DOMRect(x, y, w * viewport.zoom, h * viewport.zoom);\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/cursor\nexport function getCursorMode(edgelessTool: EdgelessTool) {\n  switch (edgelessTool.type) {\n    case 'default':\n      return 'default';\n    case 'pan':\n      return edgelessTool.panning ? 'grabbing' : 'grab';\n    case 'brush':\n    case 'eraser':\n    case 'shape':\n    case 'connector':\n    case 'frame':\n    case 'lasso':\n      return 'crosshair';\n    case 'text':\n      return 'text';\n    default:\n      return 'default';\n  }\n}\n\nexport function getBackgroundGrid(zoom: number, showGrid: boolean) {\n  const step = zoom < 0.5 ? 2 : 1 / (Math.floor(zoom) || 1);\n  const gap = clamp(20 * step * zoom, GRID_GAP_MIN, GRID_GAP_MAX);\n\n  return {\n    gap,\n    grid: showGrid\n      ? 'radial-gradient(var(--affine-edgeless-grid-color) 1px, var(--affine-background-primary-color) 1px)'\n      : 'unset',\n  };\n}\n\nexport function getSelectedRect(selected: BlockSuite.EdgelessModel[]): DOMRect {\n  if (selected.length === 0) {\n    return new DOMRect();\n  }\n\n  if (selected.length === 1) {\n    const [x, y, w, h] = deserializeXYWH(selected[0].xywh);\n    return new DOMRect(x, y, w, h);\n  }\n\n  return getElementsWithoutGroup(selected).reduce(\n    (bounds, selectable, index) => {\n      const rotate = isTopLevelBlock(selectable) ? 0 : selectable.rotate;\n      const [x, y, w, h] = deserializeXYWH(selectable.xywh);\n      let { left, top, right, bottom } = getQuadBoundsWithRotation({\n        x,\n        y,\n        w,\n        h,\n        rotate,\n      });\n\n      if (index !== 0) {\n        left = Math.min(left, bounds.left);\n        top = Math.min(top, bounds.top);\n        right = Math.max(right, bounds.right);\n        bottom = Math.max(bottom, bounds.bottom);\n      }\n\n      bounds.x = left;\n      bounds.y = top;\n      bounds.width = right - left;\n      bounds.height = bottom - top;\n\n      return bounds;\n    },\n    new DOMRect()\n  );\n}\n\nexport type SelectableProps = {\n  bound: Bound;\n  rotate: number;\n  path?: PointLocation[];\n};\n\nexport function getSelectableBounds(\n  selected: BlockSuite.EdgelessModel[]\n): Map<string, SelectableProps> {\n  const bounds = new Map();\n  getElementsWithoutGroup(selected).forEach(ele => {\n    const bound = Bound.deserialize(ele.xywh);\n    const props: SelectableProps = {\n      bound,\n      rotate: ele.rotate,\n    };\n\n    if (isCanvasElement(ele) && ele instanceof ConnectorElementModel) {\n      props.path = ele.absolutePath.map(p => p.clone());\n    }\n\n    bounds.set(ele.id, props);\n  });\n\n  return bounds;\n}\n"]}