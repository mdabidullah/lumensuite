{"version":3,"file":"tool-overlay.js","sourceRoot":"","sources":["../../../../src/root-block/edgeless/utils/tool-overlay.ts"],"names":[],"mappings":"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","sourcesContent":["import type { XYWH } from '@lumensuite/global/utils';\n\nimport {\n  type Options,\n  Overlay,\n  type RoughCanvas,\n} from '@lumensuite/affine-block-surface';\nimport {\n  type Color,\n  DEFAULT_NOTE_BACKGROUND_COLOR,\n  DEFAULT_SHAPE_FILL_COLOR,\n  DEFAULT_SHAPE_STROKE_COLOR,\n  shapeMethods,\n  type ShapeStyle,\n} from '@lumensuite/affine-model';\nimport { ThemeObserver } from '@lumensuite/affine-shared/theme';\nimport { Bound, DisposableGroup, noop, Slot } from '@lumensuite/global/utils';\n\nimport type { EdgelessRootBlockComponent } from '../edgeless-root-block.js';\n\nimport {\n  NOTE_OVERLAY_CORNER_RADIUS,\n  NOTE_OVERLAY_HEIGHT,\n  NOTE_OVERLAY_OFFSET_X,\n  NOTE_OVERLAY_OFFSET_Y,\n  NOTE_OVERLAY_STOKE_COLOR,\n  NOTE_OVERLAY_TEXT_COLOR,\n  NOTE_OVERLAY_WIDTH,\n  SHAPE_OVERLAY_HEIGHT,\n  SHAPE_OVERLAY_OFFSET_X,\n  SHAPE_OVERLAY_OFFSET_Y,\n  SHAPE_OVERLAY_WIDTH,\n} from '../utils/consts.js';\n\nconst drawRoundedRect = (ctx: CanvasRenderingContext2D, xywh: XYWH) => {\n  const [x, y, w, h] = xywh;\n  const width = w;\n  const height = h;\n  const radius = 0.1;\n  const cornerRadius = Math.min(width * radius, height * radius);\n  ctx.moveTo(x + cornerRadius, y);\n  ctx.arcTo(x + width, y, x + width, y + height, cornerRadius);\n  ctx.arcTo(x + width, y + height, x, y + height, cornerRadius);\n  ctx.arcTo(x, y + height, x, y, cornerRadius);\n  ctx.arcTo(x, y, x + width, y, cornerRadius);\n};\n\nconst drawGeneralShape = (\n  ctx: CanvasRenderingContext2D,\n  type: string,\n  xywh: XYWH,\n  options: Options\n) => {\n  ctx.setLineDash(options.strokeLineDash ?? []);\n  ctx.strokeStyle = options.stroke ?? 'transparent';\n  ctx.lineWidth = options.strokeWidth ?? 2;\n  ctx.fillStyle = options.fill ?? 'transparent';\n\n  ctx.beginPath();\n\n  const bound = Bound.fromXYWH(xywh);\n  switch (type) {\n    case 'rect':\n      shapeMethods.rect.draw(ctx, bound);\n      break;\n    case 'triangle':\n      shapeMethods.triangle.draw(ctx, bound);\n      break;\n    case 'diamond':\n      shapeMethods.diamond.draw(ctx, bound);\n      break;\n    case 'ellipse':\n      shapeMethods.ellipse.draw(ctx, bound);\n      break;\n    case 'roundedRect':\n      drawRoundedRect(ctx, xywh);\n      break;\n    default:\n      throw new Error(`Unknown shape type: ${type}`);\n  }\n\n  ctx.closePath();\n\n  ctx.fill();\n  ctx.stroke();\n};\n\nexport abstract class Shape {\n  options: Options;\n\n  shapeStyle: ShapeStyle;\n\n  type: string;\n\n  xywh: XYWH;\n\n  constructor(\n    xywh: XYWH,\n    type: string,\n    options: Options,\n    shapeStyle: ShapeStyle\n  ) {\n    this.xywh = xywh;\n    this.type = type;\n    this.options = options;\n    this.shapeStyle = shapeStyle;\n  }\n\n  abstract draw(ctx: CanvasRenderingContext2D, rc: RoughCanvas): void;\n}\n\nexport class RectShape extends Shape {\n  draw(ctx: CanvasRenderingContext2D, rc: RoughCanvas): void {\n    if (this.shapeStyle === 'Scribbled') {\n      const [x, y, w, h] = this.xywh;\n      rc.rectangle(x, y, w, h, this.options);\n    } else {\n      drawGeneralShape(ctx, 'rect', this.xywh, this.options);\n    }\n  }\n}\n\nexport class TriangleShape extends Shape {\n  draw(ctx: CanvasRenderingContext2D, rc: RoughCanvas): void {\n    if (this.shapeStyle === 'Scribbled') {\n      const [x, y, w, h] = this.xywh;\n      rc.polygon(\n        [\n          [x + w / 2, y],\n          [x, y + h],\n          [x + w, y + h],\n        ],\n        this.options\n      );\n    } else {\n      drawGeneralShape(ctx, 'triangle', this.xywh, this.options);\n    }\n  }\n}\n\nexport class DiamondShape extends Shape {\n  draw(ctx: CanvasRenderingContext2D, rc: RoughCanvas): void {\n    if (this.shapeStyle === 'Scribbled') {\n      const [x, y, w, h] = this.xywh;\n      rc.polygon(\n        [\n          [x + w / 2, y],\n          [x + w, y + h / 2],\n          [x + w / 2, y + h],\n          [x, y + h / 2],\n        ],\n        this.options\n      );\n    } else {\n      drawGeneralShape(ctx, 'diamond', this.xywh, this.options);\n    }\n  }\n}\n\nexport class EllipseShape extends Shape {\n  draw(ctx: CanvasRenderingContext2D, rc: RoughCanvas): void {\n    if (this.shapeStyle === 'Scribbled') {\n      const [x, y, w, h] = this.xywh;\n      rc.ellipse(x + w / 2, y + h / 2, w, h, this.options);\n    } else {\n      drawGeneralShape(ctx, 'ellipse', this.xywh, this.options);\n    }\n  }\n}\n\nexport class RoundedRectShape extends Shape {\n  draw(ctx: CanvasRenderingContext2D, rc: RoughCanvas): void {\n    if (this.shapeStyle === 'Scribbled') {\n      const [x, y, w, h] = this.xywh;\n      const radius = 0.1;\n      const r = Math.min(w * radius, h * radius);\n      const x0 = x + r;\n      const x1 = x + w - r;\n      const y0 = y + r;\n      const y1 = y + h - r;\n      const path = `\n          M${x0},${y} L${x1},${y}\n          A${r},${r} 0 0 1 ${x1},${y0}\n          L${x1},${y1}\n          A${r},${r} 0 0 1 ${x1 - r},${y1}\n          L${x0 + r},${y1}\n          A${r},${r} 0 0 1 ${x0},${y1 - r}\n          L${x0},${y0}\n          A${r},${r} 0 0 1 ${x0 + r},${y}\n        `;\n\n      rc.path(path, this.options);\n    } else {\n      drawGeneralShape(ctx, 'roundedRect', this.xywh, this.options);\n    }\n  }\n}\n\nexport class ShapeFactory {\n  static createShape(\n    xywh: XYWH,\n    type: string,\n    options: Options,\n    shapeStyle: ShapeStyle\n  ): Shape {\n    switch (type) {\n      case 'rect':\n        return new RectShape(xywh, type, options, shapeStyle);\n      case 'triangle':\n        return new TriangleShape(xywh, type, options, shapeStyle);\n      case 'diamond':\n        return new DiamondShape(xywh, type, options, shapeStyle);\n      case 'ellipse':\n        return new EllipseShape(xywh, type, options, shapeStyle);\n      case 'roundedRect':\n        return new RoundedRectShape(xywh, type, options, shapeStyle);\n      default:\n        throw new Error(`Unknown shape type: ${type}`);\n    }\n  }\n}\n\nclass ToolOverlay extends Overlay {\n  protected disposables!: DisposableGroup;\n\n  protected edgeless: EdgelessRootBlockComponent;\n\n  globalAlpha: number;\n\n  x: number;\n\n  y: number;\n\n  constructor(edgeless: EdgelessRootBlockComponent) {\n    super();\n    this.x = 0;\n    this.y = 0;\n    this.globalAlpha = 0;\n    this.edgeless = edgeless;\n    this.disposables = new DisposableGroup();\n    this.disposables.add(\n      this.edgeless.service.viewport.viewportUpdated.on(() => {\n        // when viewport is updated, we should keep the overlay in the same position\n        // to get last mouse position and convert it to model coordinates\n        const lastX = this.edgeless.tools.lastMousePos.x;\n        const lastY = this.edgeless.tools.lastMousePos.y;\n        const [x, y] = this.edgeless.service.viewport.toModelCoord(\n          lastX,\n          lastY\n        );\n        this.x = x;\n        this.y = y;\n      })\n    );\n  }\n\n  dispose(): void {\n    this.disposables.dispose();\n  }\n\n  render(_ctx: CanvasRenderingContext2D, _rc: RoughCanvas): void {\n    noop();\n  }\n}\n\nexport class ShapeOverlay extends ToolOverlay {\n  shape: Shape;\n\n  constructor(\n    edgeless: EdgelessRootBlockComponent,\n    type: string,\n    options: Options,\n    style: {\n      shapeStyle: ShapeStyle;\n      fillColor: Color;\n      strokeColor: Color;\n    }\n  ) {\n    super(edgeless);\n    const xywh = [\n      this.x,\n      this.y,\n      SHAPE_OVERLAY_WIDTH,\n      SHAPE_OVERLAY_HEIGHT,\n    ] as XYWH;\n    const { shapeStyle, fillColor, strokeColor } = style;\n    const fill = ThemeObserver.getColorValue(\n      fillColor,\n      DEFAULT_SHAPE_FILL_COLOR,\n      true\n    );\n    const stroke = ThemeObserver.getColorValue(\n      strokeColor,\n      DEFAULT_SHAPE_STROKE_COLOR,\n      true\n    );\n\n    options.fill = fill;\n    options.stroke = stroke;\n\n    this.shape = ShapeFactory.createShape(xywh, type, options, shapeStyle);\n    this.disposables.add(\n      this.edgeless.slots.edgelessToolUpdated.on(edgelessTool => {\n        if (edgelessTool.type !== 'shape') return;\n        const { shapeName } = edgelessTool;\n        const newOptions = {\n          ...options,\n        };\n\n        let { x, y } = this;\n        if (shapeName === 'roundedRect' || shapeName === 'rect') {\n          x += SHAPE_OVERLAY_OFFSET_X;\n          y += SHAPE_OVERLAY_OFFSET_Y;\n        }\n        const w =\n          shapeName === 'roundedRect'\n            ? SHAPE_OVERLAY_WIDTH + 40\n            : SHAPE_OVERLAY_WIDTH;\n        const xywh = [x, y, w, SHAPE_OVERLAY_HEIGHT] as XYWH;\n        this.shape = ShapeFactory.createShape(\n          xywh,\n          shapeName,\n          newOptions,\n          shapeStyle\n        );\n        this.edgeless.surface.refresh();\n      })\n    );\n  }\n\n  override render(ctx: CanvasRenderingContext2D, rc: RoughCanvas): void {\n    ctx.globalAlpha = this.globalAlpha;\n    let { x, y } = this;\n    const { type } = this.shape;\n    if (type === 'roundedRect' || type === 'rect') {\n      x += SHAPE_OVERLAY_OFFSET_X;\n      y += SHAPE_OVERLAY_OFFSET_Y;\n    }\n    const w =\n      type === 'roundedRect' ? SHAPE_OVERLAY_WIDTH + 40 : SHAPE_OVERLAY_WIDTH;\n    const xywh = [x, y, w, SHAPE_OVERLAY_HEIGHT] as XYWH;\n    this.shape.xywh = xywh;\n    this.shape.draw(ctx, rc);\n  }\n}\n\nexport class NoteOverlay extends ToolOverlay {\n  backgroundColor = 'transparent';\n\n  text = '';\n\n  constructor(edgeless: EdgelessRootBlockComponent, background: Color) {\n    super(edgeless);\n    this.globalAlpha = 0;\n    this.backgroundColor = ThemeObserver.getColorValue(\n      background,\n      DEFAULT_NOTE_BACKGROUND_COLOR,\n      true\n    );\n    this.disposables.add(\n      this.edgeless.slots.edgelessToolUpdated.on(edgelessTool => {\n        // when change note child type, update overlay text\n        if (edgelessTool.type !== 'affine:note') return;\n        this.text = this._getOverlayText(edgelessTool.tip);\n        this.edgeless.surface.refresh();\n      })\n    );\n  }\n\n  private _getOverlayText(text: string): string {\n    return text[0].toUpperCase() + text.slice(1);\n  }\n\n  override render(ctx: CanvasRenderingContext2D): void {\n    ctx.globalAlpha = this.globalAlpha;\n    const overlayX = this.x + NOTE_OVERLAY_OFFSET_X;\n    const overlayY = this.y + NOTE_OVERLAY_OFFSET_Y;\n    ctx.strokeStyle = ThemeObserver.getPropertyValue(NOTE_OVERLAY_STOKE_COLOR);\n    // Draw the overlay rectangle\n    ctx.fillStyle = this.backgroundColor;\n    ctx.lineWidth = 4;\n    ctx.beginPath();\n    ctx.moveTo(overlayX + NOTE_OVERLAY_CORNER_RADIUS, overlayY);\n    ctx.lineTo(\n      overlayX + NOTE_OVERLAY_WIDTH - NOTE_OVERLAY_CORNER_RADIUS,\n      overlayY\n    );\n    ctx.quadraticCurveTo(\n      overlayX + NOTE_OVERLAY_WIDTH,\n      overlayY,\n      overlayX + NOTE_OVERLAY_WIDTH,\n      overlayY + NOTE_OVERLAY_CORNER_RADIUS\n    );\n    ctx.lineTo(\n      overlayX + NOTE_OVERLAY_WIDTH,\n      overlayY + NOTE_OVERLAY_HEIGHT - NOTE_OVERLAY_CORNER_RADIUS\n    );\n    ctx.quadraticCurveTo(\n      overlayX + NOTE_OVERLAY_WIDTH,\n      overlayY + NOTE_OVERLAY_HEIGHT,\n      overlayX + NOTE_OVERLAY_WIDTH - NOTE_OVERLAY_CORNER_RADIUS,\n      overlayY + NOTE_OVERLAY_HEIGHT\n    );\n    ctx.lineTo(\n      overlayX + NOTE_OVERLAY_CORNER_RADIUS,\n      overlayY + NOTE_OVERLAY_HEIGHT\n    );\n    ctx.quadraticCurveTo(\n      overlayX,\n      overlayY + NOTE_OVERLAY_HEIGHT,\n      overlayX,\n      overlayY + NOTE_OVERLAY_HEIGHT - NOTE_OVERLAY_CORNER_RADIUS\n    );\n    ctx.lineTo(overlayX, overlayY + NOTE_OVERLAY_CORNER_RADIUS);\n    ctx.quadraticCurveTo(\n      overlayX,\n      overlayY,\n      overlayX + NOTE_OVERLAY_CORNER_RADIUS,\n      overlayY\n    );\n    ctx.closePath();\n    ctx.stroke();\n    ctx.fill();\n\n    // Draw the overlay text\n    ctx.fillStyle = ThemeObserver.getPropertyValue(NOTE_OVERLAY_TEXT_COLOR);\n    let fontSize = 16;\n    ctx.font = `${fontSize}px Arial`;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    // measure the width of the text\n    // if the text is wider than the rectangle, reduce the maximum width of the text\n    while (ctx.measureText(this.text).width > NOTE_OVERLAY_WIDTH - 20) {\n      fontSize -= 1;\n      ctx.font = `${fontSize}px Arial`;\n    }\n\n    ctx.fillText(this.text, overlayX + 10, overlayY + NOTE_OVERLAY_HEIGHT / 2);\n  }\n}\n\nexport class DraggingNoteOverlay extends NoteOverlay {\n  height: number;\n\n  slots: {\n    draggingNoteUpdated: Slot<{ xywh: XYWH }>;\n  };\n\n  width: number;\n\n  constructor(edgeless: EdgelessRootBlockComponent, background: Color) {\n    super(edgeless, background);\n    this.slots = {\n      draggingNoteUpdated: new Slot<{\n        xywh: XYWH;\n      }>(),\n    };\n    this.width = 0;\n    this.height = 0;\n    this.disposables.add(\n      this.slots.draggingNoteUpdated.on(({ xywh }) => {\n        [this.x, this.y, this.width, this.height] = xywh;\n        this.edgeless.surface.refresh();\n      })\n    );\n  }\n\n  override render(ctx: CanvasRenderingContext2D): void {\n    // draw a rounded rectangle with provided background color and xywh\n    ctx.globalAlpha = 0.8;\n    ctx.fillStyle = this.backgroundColor;\n    ctx.strokeStyle = 'rgba(0, 0, 0, 0.10)';\n    ctx.lineWidth = 2;\n    ctx.beginPath();\n    ctx.roundRect(this.x, this.y, this.width, this.height, 4);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n  }\n}\n"]}