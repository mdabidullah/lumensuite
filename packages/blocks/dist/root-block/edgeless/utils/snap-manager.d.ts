import { Overlay } from '@lumensuite/affine-block-surface';
import { Bound } from '@lumensuite/global/utils';
import type { EdgelessRootService } from '../edgeless-root-service.js';
export declare class EdgelessSnapManager extends Overlay {
    private _rootService;
    private _alignableBounds;
    /**
     * This variable contains reference lines that are
     * generated by the 'Distribute Alignment' function. This alignment is achieved
     * by evenly distributing elements based on specified alignment rules.
     * These lines serve as a guide for achieving equal spacing or distribution
     * among multiple graphics or design elements.
     */
    private _distributedAlignLines;
    /**
     * This variable holds reference lines that are calculated
     * based on the self-alignment of the graphics. This alignment is determined
     * according to various aspects of the graphic itself, such as the center, edges,
     * corners, etc. It essentially represents the guidelines for the positioning
     * and alignment within the individual graphic elements.
     */
    private _intraGraphicAlignLines;
    cleanupAlignables: () => void;
    private get _surface();
    constructor(_rootService: EdgelessRootService);
    private _alignDistributeHorizontally;
    private _alignDistributeVertically;
    private _calculateClosestDistances;
    private _draw;
    private _getBoundsWithRotationByAlignable;
    private _updateXAlignPoint;
    private _updateYAlignPoint;
    align(bound: Bound): {
        dx: number;
        dy: number;
    };
    render(ctx: CanvasRenderingContext2D): void;
    setupAlignables(alignables: LumenSuite.EdgelessModel[]): Bound;
}
//# sourceMappingURL=snap-manager.d.ts.map