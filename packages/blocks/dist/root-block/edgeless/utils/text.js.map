{"version":3,"file":"text.js","sourceRoot":"","sources":["../../../../src/root-block/edgeless/utils/text.ts"],"names":[],"mappings":"AAQA,OAAO,EACL,iBAAiB,EAEjB,SAAS,GACV,MAAM,kCAAkC,CAAC;AAC1C,OAAO,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,MAAM,0BAA0B,CAAC;AAC/E,OAAO,EAAE,eAAe,EAAE,SAAS,EAAE,MAAM,+BAA+B,CAAC;AAC3E,OAAO,EACL,YAAY,EACZ,gBAAgB,EAChB,KAAK,GACN,MAAM,0BAA0B,CAAC;AAClC,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAIlD,OAAO,EAAE,sBAAsB,EAAE,MAAM,oCAAoC,CAAC;AAC5E,OAAO,EAAE,4BAA4B,EAAE,MAAM,uDAAuD,CAAC;AACrG,OAAO,EAAE,wBAAwB,EAAE,MAAM,mDAAmD,CAAC;AAC7F,OAAO,EAAE,wBAAwB,EAAE,MAAM,mDAAmD,CAAC;AAC7F,OAAO,EAAE,uBAAuB,EAAE,MAAM,kDAAkD,CAAC;AAC3F,OAAO,EAAE,kBAAkB,EAAE,MAAM,4CAA4C,CAAC;AAEhF,MAAM,UAAU,sBAAsB,CACpC,WAA6B,EAC7B,QAAoC,EACpC,UAAwB;IAExB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACvB,MAAM,IAAI,eAAe,CACvB,SAAS,CAAC,cAAc,EACxB,6CAA6C,CAC9C,CAAC;IACJ,CAAC;IAED,IAAI,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;IAC1C,IAAI,UAAU,EAAE,CAAC;QACf,WAAW,GAAG,IAAI,CAAC,GAAG,CACpB,SAAS,CAAC,gBAAgB,CAAC,WAAW,EAAE,UAAU,CAAC,EACnD,WAAW,CACZ,CAAC;IACJ,CAAC;IAED,MAAM,UAAU,GAAG,IAAI,kBAAkB,EAAE,CAAC;IAC5C,UAAU,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC/B,UAAU,CAAC,OAAO,GAAG,WAAW,CAAC;IAEjC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC5B,UAAU,CAAC,cAAc;SACtB,IAAI,CAAC,GAAG,EAAE;QACT,UAAU,CAAC,YAAY,EAAE,UAAU,CAAC,WAAW,CAAC,CAAC;IACnD,CAAC,CAAC;SACD,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAExB,QAAQ,CAAC,KAAK,CAAC,mBAAmB,CAAC;QACjC,QAAQ,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC;QAC1B,OAAO,EAAE,IAAI;KACd,CAAC,CAAC;AACL,CAAC;AAED,MAAM,UAAU,oBAAoB,CAClC,YAA+B,EAC/B,QAAoC;IAEpC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACvB,MAAM,IAAI,eAAe,CACvB,SAAS,CAAC,cAAc,EACxB,6CAA6C,CAC9C,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QACvB,MAAM,IAAI,GAAG,IAAI,aAAa,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QACxC,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,MAAM,cAAc,GAAG,QAAQ,CAAC,OAAO,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;IAExE,gBAAgB,CACd,cAAc,EACd,iBAAiB,EACjB,iDAAiD,CAClD,CAAC;IAEF,MAAM,WAAW,GAAG,IAAI,uBAAuB,EAAE,CAAC;IAClD,WAAW,CAAC,OAAO,GAAG,cAAc,CAAC;IACrC,WAAW,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAChC,WAAW,CAAC,WAAW,GAAG,oBAAoB,CAAC;IAE/C,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACtC,QAAQ,CAAC,KAAK,CAAC,mBAAmB,CAAC;QACjC,QAAQ,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC;QAC3B,OAAO,EAAE,IAAI;KACd,CAAC,CAAC;AACL,CAAC;AAED,MAAM,UAAU,qBAAqB,CACnC,KAAsB,EACtB,QAAoC;IAEpC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACvB,MAAM,IAAI,eAAe,CACvB,SAAS,CAAC,cAAc,EACxB,6CAA6C,CAC9C,CAAC;IACJ,CAAC;IAED,MAAM,WAAW,GAAG,IAAI,wBAAwB,EAAE,CAAC;IACnD,WAAW,CAAC,UAAU,GAAG,KAAK,CAAC;IAC/B,WAAW,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAEhC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACtC,QAAQ,CAAC,KAAK,CAAC,mBAAmB,CAAC;QACjC,QAAQ,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;QACpB,OAAO,EAAE,IAAI;KACd,CAAC,CAAC;AACL,CAAC;AAED,MAAM,UAAU,qBAAqB,CACnC,KAAwB,EACxB,QAAoC;IAEpC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACvB,MAAM,IAAI,eAAe,CACvB,SAAS,CAAC,cAAc,EACxB,6CAA6C,CAC9C,CAAC;IACJ,CAAC;IAED,MAAM,WAAW,GAAG,IAAI,wBAAwB,EAAE,CAAC;IACnD,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;IAC1B,WAAW,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAEhC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACtC,QAAQ,CAAC,KAAK,CAAC,mBAAmB,CAAC;QACjC,QAAQ,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;QACpB,OAAO,EAAE,IAAI;KACd,CAAC,CAAC;AACL,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,OAAO,CACrB,QAAoC,EACpC,KAAwB;IAExB,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IACxE,MAAM,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAE9D,IAAI,CAAC,QAAQ,EAAE,CAAC;QACd,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAC7D,KAAK,CAAC,CAAC,EACP,KAAK,CAAC,CAAC,CACR,CAAC;QACF,MAAM,EAAE,GAAG,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,iBAAiB,CAAC,IAAI,EAAE;YAC7D,IAAI,EAAE,IAAI,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE;YACnD,IAAI,EAAE,IAAI,aAAa,CAAC,CAAC,CAAC,IAAI,EAAE;SACjC,CAAC,CAAC;QACH,QAAQ,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAC3B,MAAM,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QACxD,YAAY,CAAC,WAAW,CAAC,CAAC;QAC1B,IAAI,WAAW,YAAY,gBAAgB,EAAE,CAAC;YAC5C,sBAAsB,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QAChD,CAAC;IACH,CAAC;AACH,CAAC;AAED,MAAM,UAAU,yBAAyB,CACvC,SAAgC,EAChC,QAAoC,EACpC,KAAY;IAEZ,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACvB,MAAM,IAAI,eAAe,CACvB,SAAS,CAAC,cAAc,EACxB,6CAA6C,CAC9C,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QACpB,MAAM,IAAI,GAAG,IAAI,aAAa,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QACxC,MAAM,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC;QACxC,MAAM,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;QAC1C,IAAI,SAAS,GAAG,SAAS,CAAC,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAEtD,UAAU,CAAC,KAAK,GAAG,sBAAsB,EAAE,CAAC;QAE5C,IAAI,KAAK,EAAE,CAAC;YACV,MAAM,MAAM,GAAG,SAAS,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAChD,MAAM,QAAQ,GAAG,SAAS,CAAC,wBAAwB,CAAC,MAAc,CAAC,CAAC;YACpE,MAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YACzC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;YACvB,WAAW,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAChC,SAAS,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC9B,CAAC;QAED,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,EAAE;YAC3C,IAAI;YACJ,SAAS;YACT,UAAU,EAAE,EAAE,GAAG,UAAU,EAAE;YAC7B,WAAW,EAAE,EAAE,GAAG,WAAW,EAAE;SAChC,CAAC,CAAC;IACL,CAAC;IAED,MAAM,MAAM,GAAG,IAAI,4BAA4B,EAAE,CAAC;IAClD,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAE3B,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACjC,MAAM,CAAC,cAAc;SAClB,IAAI,CAAC,GAAG,EAAE;QACT,MAAM,CAAC,YAAY,EAAE,QAAQ,EAAE,CAAC;IAClC,CAAC,CAAC;SACD,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxB,QAAQ,CAAC,KAAK,CAAC,mBAAmB,CAAC;QACjC,QAAQ,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC;QACxB,OAAO,EAAE,IAAI;KACd,CAAC,CAAC;AACL,CAAC","sourcesContent":["import type {\n  ConnectorElementModel,\n  FrameBlockModel,\n  GroupElementModel,\n} from '@blocksuite/affine-model';\nimport type { PointerEventState } from '@blocksuite/block-std';\nimport type { IVec } from '@blocksuite/global/utils';\n\nimport {\n  CanvasElementType,\n  type IModelCoord,\n  TextUtils,\n} from '@blocksuite/affine-block-surface';\nimport { ShapeElementModel, TextElementModel } from '@blocksuite/affine-model';\nimport { BlockSuiteError, ErrorCode } from '@blocksuite/global/exceptions';\nimport {\n  assertExists,\n  assertInstanceOf,\n  Bound,\n} from '@blocksuite/global/utils';\nimport { DocCollection } from '@blocksuite/store';\n\nimport type { EdgelessRootBlockComponent } from '../edgeless-root-block.js';\n\nimport { GET_DEFAULT_LINE_COLOR } from '../components/panel/color-panel.js';\nimport { EdgelessConnectorLabelEditor } from '../components/text/edgeless-connector-label-editor.js';\nimport { EdgelessFrameTitleEditor } from '../components/text/edgeless-frame-title-editor.js';\nimport { EdgelessGroupTitleEditor } from '../components/text/edgeless-group-title-editor.js';\nimport { EdgelessShapeTextEditor } from '../components/text/edgeless-shape-text-editor.js';\nimport { EdgelessTextEditor } from '../components/text/edgeless-text-editor.js';\n\nexport function mountTextElementEditor(\n  textElement: TextElementModel,\n  edgeless: EdgelessRootBlockComponent,\n  focusCoord?: IModelCoord\n) {\n  if (!edgeless.mountElm) {\n    throw new BlockSuiteError(\n      ErrorCode.ValueNotExists,\n      \"edgeless block's mount point does not exist\"\n    );\n  }\n\n  let cursorIndex = textElement.text.length;\n  if (focusCoord) {\n    cursorIndex = Math.min(\n      TextUtils.getCursorByCoord(textElement, focusCoord),\n      cursorIndex\n    );\n  }\n\n  const textEditor = new EdgelessTextEditor();\n  textEditor.edgeless = edgeless;\n  textEditor.element = textElement;\n\n  edgeless.append(textEditor);\n  textEditor.updateComplete\n    .then(() => {\n      textEditor.inlineEditor?.focusIndex(cursorIndex);\n    })\n    .catch(console.error);\n\n  edgeless.tools.switchToDefaultMode({\n    elements: [textElement.id],\n    editing: true,\n  });\n}\n\nexport function mountShapeTextEditor(\n  shapeElement: ShapeElementModel,\n  edgeless: EdgelessRootBlockComponent\n) {\n  if (!edgeless.mountElm) {\n    throw new BlockSuiteError(\n      ErrorCode.ValueNotExists,\n      \"edgeless block's mount point does not exist\"\n    );\n  }\n\n  if (!shapeElement.text) {\n    const text = new DocCollection.Y.Text();\n    edgeless.service.updateElement(shapeElement.id, { text });\n  }\n\n  const updatedElement = edgeless.service.getElementById(shapeElement.id);\n\n  assertInstanceOf(\n    updatedElement,\n    ShapeElementModel,\n    'Cannot mount text editor on a non-shape element'\n  );\n\n  const shapeEditor = new EdgelessShapeTextEditor();\n  shapeEditor.element = updatedElement;\n  shapeEditor.edgeless = edgeless;\n  shapeEditor.mountEditor = mountShapeTextEditor;\n\n  edgeless.mountElm.append(shapeEditor);\n  edgeless.tools.switchToDefaultMode({\n    elements: [shapeElement.id],\n    editing: true,\n  });\n}\n\nexport function mountFrameTitleEditor(\n  frame: FrameBlockModel,\n  edgeless: EdgelessRootBlockComponent\n) {\n  if (!edgeless.mountElm) {\n    throw new BlockSuiteError(\n      ErrorCode.ValueNotExists,\n      \"edgeless block's mount point does not exist\"\n    );\n  }\n\n  const frameEditor = new EdgelessFrameTitleEditor();\n  frameEditor.frameModel = frame;\n  frameEditor.edgeless = edgeless;\n\n  edgeless.mountElm.append(frameEditor);\n  edgeless.tools.switchToDefaultMode({\n    elements: [frame.id],\n    editing: true,\n  });\n}\n\nexport function mountGroupTitleEditor(\n  group: GroupElementModel,\n  edgeless: EdgelessRootBlockComponent\n) {\n  if (!edgeless.mountElm) {\n    throw new BlockSuiteError(\n      ErrorCode.ValueNotExists,\n      \"edgeless block's mount point does not exist\"\n    );\n  }\n\n  const groupEditor = new EdgelessGroupTitleEditor();\n  groupEditor.group = group;\n  groupEditor.edgeless = edgeless;\n\n  edgeless.mountElm.append(groupEditor);\n  edgeless.tools.switchToDefaultMode({\n    elements: [group.id],\n    editing: true,\n  });\n}\n\n/**\n * @deprecated\n *\n * Canvas Text has been deprecated\n */\nexport function addText(\n  edgeless: EdgelessRootBlockComponent,\n  event: PointerEventState\n) {\n  const [x, y] = edgeless.service.viewport.toModelCoord(event.x, event.y);\n  const selected = edgeless.service.gfx.getElementByPoint(x, y);\n\n  if (!selected) {\n    const [modelX, modelY] = edgeless.service.viewport.toModelCoord(\n      event.x,\n      event.y\n    );\n    const id = edgeless.service.addElement(CanvasElementType.TEXT, {\n      xywh: new Bound(modelX, modelY, 32, 32).serialize(),\n      text: new DocCollection.Y.Text(),\n    });\n    edgeless.doc.captureSync();\n    const textElement = edgeless.service.getElementById(id);\n    assertExists(textElement);\n    if (textElement instanceof TextElementModel) {\n      mountTextElementEditor(textElement, edgeless);\n    }\n  }\n}\n\nexport function mountConnectorLabelEditor(\n  connector: ConnectorElementModel,\n  edgeless: EdgelessRootBlockComponent,\n  point?: IVec\n) {\n  if (!edgeless.mountElm) {\n    throw new BlockSuiteError(\n      ErrorCode.ValueNotExists,\n      \"edgeless block's mount point does not exist\"\n    );\n  }\n\n  if (!connector.text) {\n    const text = new DocCollection.Y.Text();\n    const labelStyle = connector.labelStyle;\n    const labelOffset = connector.labelOffset;\n    let labelXYWH = connector.labelXYWH ?? [0, 0, 16, 16];\n\n    labelStyle.color = GET_DEFAULT_LINE_COLOR();\n\n    if (point) {\n      const center = connector.getNearestPoint(point);\n      const distance = connector.getOffsetDistanceByPoint(center as IVec);\n      const bounds = Bound.fromXYWH(labelXYWH);\n      bounds.center = center;\n      labelOffset.distance = distance;\n      labelXYWH = bounds.toXYWH();\n    }\n\n    edgeless.service.updateElement(connector.id, {\n      text,\n      labelXYWH,\n      labelStyle: { ...labelStyle },\n      labelOffset: { ...labelOffset },\n    });\n  }\n\n  const editor = new EdgelessConnectorLabelEditor();\n  editor.connector = connector;\n  editor.edgeless = edgeless;\n\n  edgeless.mountElm.append(editor);\n  editor.updateComplete\n    .then(() => {\n      editor.inlineEditor?.focusEnd();\n    })\n    .catch(console.error);\n  edgeless.tools.switchToDefaultMode({\n    elements: [connector.id],\n    editing: true,\n  });\n}\n"]}