{"version":3,"file":"connector.js","sourceRoot":"","sources":["../../../../src/root-block/edgeless/utils/connector.ts"],"names":[],"mappings":"AAEA;;;;;GAKG;AACH,MAAM,UAAU,cAAc,CAC5B,QAAgB,EAChB,QAAgB,EAChB,OAA4B;IAE5B,MAAM,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAC3D,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;QAC7B,IAAI,SAAS,CAAC,MAAM,CAAC,EAAE,KAAK,QAAQ,EAAE,CAAC;YACrC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,EAAE;gBAClC,MAAM,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE;aAC9C,CAAC,CAAC;QACL,CAAC;QACD,IAAI,SAAS,CAAC,MAAM,CAAC,EAAE,KAAK,QAAQ,EAAE,CAAC;YACrC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,EAAE;gBAClC,MAAM,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE;aAC9C,CAAC,CAAC;QACL,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import type { EdgelessRootService } from '../edgeless-root-service.js';\n\n/**\n * move connectors from origin to target\n * @param originId origin element id\n * @param targetId target element id\n * @param service edgeless root service\n */\nexport function moveConnectors(\n  originId: string,\n  targetId: string,\n  service: EdgelessRootService\n) {\n  const connectors = service.surface.getConnectors(originId);\n  connectors.forEach(connector => {\n    if (connector.source.id === originId) {\n      service.updateElement(connector.id, {\n        source: { ...connector.source, id: targetId },\n      });\n    }\n    if (connector.target.id === originId) {\n      service.updateElement(connector.id, {\n        target: { ...connector.target, id: targetId },\n      });\n    }\n  });\n}\n"]}