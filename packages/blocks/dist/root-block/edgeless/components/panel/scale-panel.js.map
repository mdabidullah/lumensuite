{"version":3,"file":"scale-panel.js","sourceRoot":"","sources":["../../../../../src/root-block/edgeless/components/panel/scale-panel.ts"],"names":[],"mappings":"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","sourcesContent":["import { clamp, stopPropagation } from '@blocksuite/affine-shared/utils';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\n\nimport '../buttons/tool-icon-button.js';\n\nconst MIN_SCALE = 0;\nconst MAX_SCALE = 400;\n\nconst SCALE_LIST = [50, 100, 200] as const;\n\nfunction format(scale: number) {\n  return `${scale}%`;\n}\n\n@customElement('edgeless-scale-panel')\nexport class EdgelessScalePanel extends LitElement {\n  static override styles = css`\n    :host {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-start;\n      gap: 4px;\n      width: 68px;\n    }\n\n    edgeless-tool-icon-button {\n      align-self: stretch;\n    }\n\n    .scale-input {\n      display: flx;\n      align-self: stretch;\n      border: 0.5px solid var(--affine-border-color);\n      border-radius: 8px;\n      padding: 4px 8px;\n      box-sizing: border-box;\n    }\n\n    .scale-input::placeholder {\n      color: var(--affine-placeholder-color);\n    }\n\n    .scale-input:focus {\n      outline-color: var(--affine-primary-color);\n      outline-width: 0.5px;\n    }\n  `;\n\n  private _onKeydown = (e: KeyboardEvent) => {\n    e.stopPropagation();\n\n    if (e.key === 'Enter' && !e.isComposing) {\n      e.preventDefault();\n      const input = e.target as HTMLInputElement;\n      const scale = parseInt(input.value.trim());\n      // Handle edge case where user enters a non-number\n      if (isNaN(scale)) {\n        input.value = '';\n        return;\n      }\n\n      // Handle edge case when user enters a number that is out of range\n      this._onSelect(clamp(scale, this.minScale, this.maxScale));\n      input.value = '';\n      this._onPopperClose();\n    }\n  };\n\n  private _onPopperClose() {\n    this.onPopperCose?.();\n  }\n\n  private _onSelect(scale: number) {\n    this.onSelect?.(scale / 100);\n  }\n\n  override render() {\n    return html`\n      ${repeat(\n        this.scaleList,\n        scale => scale,\n        scale => {\n          const classes = `scale-${scale}`;\n          return html`<edgeless-tool-icon-button\n            class=${classes}\n            .iconContainerPadding=${[4, 8]}\n            .activeMode=${'background'}\n            .active=${this.scale === scale}\n            @click=${() => this._onSelect(scale)}\n          >\n            ${format(scale)}\n          </edgeless-tool-icon-button>`;\n        }\n      )}\n\n      <input\n        class=\"scale-input\"\n        type=\"text\"\n        inputmode=\"numeric\"\n        pattern=\"[0-9]*\"\n        min=\"0\"\n        placeholder=${format(Math.trunc(this.scale))}\n        @keydown=${this._onKeydown}\n        @input=${stopPropagation}\n        @click=${stopPropagation}\n        @pointerdown=${stopPropagation}\n        @cut=${stopPropagation}\n        @copy=${stopPropagation}\n        @paste=${stopPropagation}\n      />\n    `;\n  }\n\n  @property({ attribute: false })\n  accessor maxScale: number = MAX_SCALE;\n\n  @property({ attribute: false })\n  accessor minScale: number = MIN_SCALE;\n\n  @property({ attribute: false })\n  accessor onPopperCose: (() => void) | undefined = undefined;\n\n  @property({ attribute: false })\n  accessor onSelect: ((size: number) => void) | undefined = undefined;\n\n  @property({ attribute: false })\n  accessor scale!: number;\n\n  @property({ attribute: false })\n  accessor scaleList: readonly number[] = SCALE_LIST;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'edgeless-scale-panel': EdgelessScalePanel;\n  }\n}\n"]}