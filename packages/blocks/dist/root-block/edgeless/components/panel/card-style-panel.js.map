{"version":3,"file":"card-style-panel.js","sourceRoot":"","sources":["../../../../../src/root-block/edgeless/components/panel/card-style-panel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACvD,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAuB,MAAM,KAAK,CAAC;AAC1E,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AACvD,OAAO,EAAE,MAAM,EAAE,MAAM,0BAA0B,CAAC;AAIlD,OAAO,0CAA0C,CAAC;IAGrC,cAAc;4BAD1B,aAAa,CAAC,kBAAkB,CAAC;;;;sBACE,cAAc,CAAC,UAAU,CAAC;;;;;;;;;;8BAAlC,SAAQ,WAA0B;;;;oCA6C3D,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;mCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;iCAO9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;YAT/B,6KAAS,QAAQ,6BAAR,QAAQ,2FAAmC;YAGpD,0KAAS,OAAO,6BAAP,OAAO,yFAIZ;YAGJ,oKAAS,KAAK,6BAAL,KAAK,qFAAyC;YAxDzD,6KAyDC;;;;iBAxDiB,WAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;GAgB3B,AAhBqB,CAgBpB;QAEO,MAAM;YACb,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC7B,IAAI,CAAC,OAAO,EAAE,MAAM;gBAAE,OAAO,OAAO,CAAC;YAErC,OAAO,MAAM,CACX,OAAO,EACP,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,EACxB,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,IAAI,CAAA;;;;kBAItB,QAAQ,CAAC;gBACf,QAAQ,EAAE,IAAI,CAAC,KAAK,KAAK,KAAK;aAC/B,CAAC;mBACO,GAAG,EAAE;gBACZ,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACrB,CAAC;;YAEC,IAAI;oCACoB,CAAC,IAAI,OAAO;;OAEzC,CACF,CAAC;QACJ,CAAC;QAGD,qFAAoD;QAApD,IAAS,QAAQ,8CAAmC;QAApD,IAAS,QAAQ,oDAAmC;QAGpD,2IAII;QAJJ,IAAS,OAAO,6CAIZ;QAJJ,IAAS,OAAO,mDAIZ;QAGJ,6HAA6C,SAAS,GAAC;QAAvD,IAAS,KAAK,2CAAyC;QAAvD,IAAS,KAAK,iDAAyC;;;;;;YAxD5C,uDAAc;;;;;SAAd,cAAc","sourcesContent":["import { WithDisposable } from '@lumensuite/block-std';\nimport { css, html, LitElement, nothing, type TemplateResult } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { repeat } from 'lit/directives/repeat.js';\n\nimport type { EmbedCardStyle } from '../../../../_common/types.js';\n\nimport '../../../../_common/components/button.js';\n\n@customElement('card-style-panel')\nexport class CardStylePanel extends WithDisposable(LitElement) {\n  static override styles = css`\n    :host {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      gap: 8px;\n    }\n\n    icon-button {\n      padding: var(--1, 0px);\n      justify-content: center;\n    }\n\n    icon-button.selected {\n      border: 1px solid var(--affine-brand-color);\n    }\n  `;\n\n  override render() {\n    const options = this.options;\n    if (!options?.length) return nothing;\n\n    return repeat(\n      options,\n      options => options.style,\n      ({ style, Icon, tooltip }) => html`\n        <icon-button\n          width=\"76px\"\n          height=\"76px\"\n          class=${classMap({\n            selected: this.value === style,\n          })}\n          @click=${() => {\n            this.onSelect(style);\n            this.value = style;\n          }}\n        >\n          ${Icon}\n          <affine-tooltip .offset=${4}>${tooltip}</affine-tooltip>\n        </icon-button>\n      `\n    );\n  }\n\n  @property({ attribute: false })\n  accessor onSelect!: (value: EmbedCardStyle) => void;\n\n  @property({ attribute: false })\n  accessor options!: {\n    style: EmbedCardStyle;\n    Icon: TemplateResult<1>;\n    tooltip: string;\n  }[];\n\n  @property({ attribute: false })\n  accessor value: EmbedCardStyle | undefined = undefined;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'card-style-panel': CardStylePanel;\n  }\n}\n"]}