{"version":3,"file":"align-panel.js","sourceRoot":"","sources":["../../../../../src/root-block/edgeless/components/panel/align-panel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EACL,mBAAmB,EACnB,iBAAiB,EACjB,kBAAkB,GACnB,MAAM,qCAAqC,CAAC;AAC7C,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AACrD,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,MAAM,EAAE,MAAM,0BAA0B,CAAC;AAElD,MAAM,eAAe,GAAG;IACtB;QACE,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,SAAS,CAAC,IAAI;QACrB,IAAI,EAAE,iBAAiB;KACxB;IACD;QACE,IAAI,EAAE,QAAQ;QACd,KAAK,EAAE,SAAS,CAAC,MAAM;QACvB,IAAI,EAAE,mBAAmB;KAC1B;IACD;QACE,IAAI,EAAE,OAAO;QACb,KAAK,EAAE,SAAS,CAAC,KAAK;QACtB,IAAI,EAAE,kBAAkB;KACzB;CACF,CAAC;IAGW,kBAAkB;4BAD9B,aAAa,CAAC,sBAAsB,CAAC;;;;sBACE,UAAU;;;;;;;kCAAlB,SAAQ,WAAU;;;;oCAmC/C,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;iCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;YAF/B,6KAAS,QAAQ,6BAAR,QAAQ,2FAAuD;YAGxE,oKAAS,KAAK,6BAAL,KAAK,qFAA6B;YAvC7C,6KAwCC;;;;iBAvCiB,WAAM,GAAG,GAAG,CAAA;;;;;;;GAO3B,AAPqB,CAOpB;QAEM,SAAS,CAAC,KAAgB;YAChC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAClB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACvB,CAAC;QACH,CAAC;QAEQ,MAAM;YACb,OAAO,MAAM,CACX,eAAe,EACf,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EACjB,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,CAAA;;wBAEb,YAAY;uBACb,IAAI;qBACN,IAAI;oBACL,IAAI,CAAC,KAAK,KAAK,KAAK;mBACrB,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;;YAElC,IAAI;;OAET,CACF,CAAC;QACJ,CAAC;QAGD,6EAA8D,SAAS,EAAC;QAAxE,IAAS,QAAQ,8CAAuD;QAAxE,IAAS,QAAQ,oDAAuD;QAGxE,8HAA4B,SAAS,CAAC,IAAI,GAAC;QAA3C,IAAS,KAAK,2CAA6B;QAA3C,IAAS,KAAK,iDAA6B;;;;;;YAvChC,uDAAkB;;;;;SAAlB,kBAAkB","sourcesContent":["import {\n  TextAlignCenterIcon,\n  TextAlignLeftIcon,\n  TextAlignRightIcon,\n} from '@lumensuite/affine-components/icons';\nimport { TextAlign } from '@lumensuite/affine-model';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\n\nconst TEXT_ALIGN_LIST = [\n  {\n    name: 'Left',\n    value: TextAlign.Left,\n    icon: TextAlignLeftIcon,\n  },\n  {\n    name: 'Center',\n    value: TextAlign.Center,\n    icon: TextAlignCenterIcon,\n  },\n  {\n    name: 'Right',\n    value: TextAlign.Right,\n    icon: TextAlignRightIcon,\n  },\n];\n\n@customElement('edgeless-align-panel')\nexport class EdgelessAlignPanel extends LitElement {\n  static override styles = css`\n    :host {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      gap: 8px;\n    }\n  `;\n\n  private _onSelect(value: TextAlign) {\n    this.value = value;\n    if (this.onSelect) {\n      this.onSelect(value);\n    }\n  }\n\n  override render() {\n    return repeat(\n      TEXT_ALIGN_LIST,\n      item => item.name,\n      ({ name, value, icon }) => html`\n        <edgeless-tool-icon-button\n          .activeMode=${'background'}\n          aria-label=${name}\n          .tooltip=${name}\n          .active=${this.value === value}\n          @click=${() => this._onSelect(value)}\n        >\n          ${icon}\n        </edgeless-tool-icon-button>\n      `\n    );\n  }\n\n  @property({ attribute: false })\n  accessor onSelect: undefined | ((value: TextAlign) => void) = undefined;\n\n  @property({ attribute: false })\n  accessor value: TextAlign = TextAlign.Left;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'edgeless-align-panel': EdgelessAlignPanel;\n  }\n}\n"]}