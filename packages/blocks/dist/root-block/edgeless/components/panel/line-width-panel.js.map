{"version":3,"file":"line-width-panel.js","sourceRoot":"","sources":["../../../../../src/root-block/edgeless/components/panel/line-width-panel.ts"],"names":[],"mappings":"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","sourcesContent":["import { LineWidth } from '@blocksuite/affine-model';\nimport { requestConnectedFrame } from '@blocksuite/affine-shared/utils';\nimport { WithDisposable } from '@blocksuite/block-std';\nimport { css, html, LitElement, nothing, type PropertyValues } from 'lit';\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\n\ntype DragConfig = {\n  stepWidth: number;\n  boundLeft: number;\n  containerWidth: number;\n  bottomLineWidth: number;\n};\n\nexport class LineWidthEvent extends Event {\n  detail: LineWidth;\n\n  constructor(\n    type: string,\n    {\n      detail,\n      composed,\n      bubbles,\n    }: { detail: LineWidth; composed: boolean; bubbles: boolean }\n  ) {\n    super(type, { bubbles, composed });\n    this.detail = detail;\n  }\n}\n\n@customElement('edgeless-line-width-panel')\nexport class EdgelessLineWidthPanel extends WithDisposable(LitElement) {\n  static override styles = css`\n    :host {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      align-self: stretch;\n    }\n\n    .line-width-panel {\n      width: 108px;\n      height: 24px;\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: space-between;\n      position: relative;\n      cursor: default;\n    }\n\n    .line-width-button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 16px;\n      height: 16px;\n      z-index: 2;\n    }\n\n    .line-width-icon {\n      width: 4px;\n      height: 4px;\n      border-radius: 50%;\n      background-color: var(--affine-border-color);\n    }\n\n    .line-width-button:nth-child(1) {\n      margin-right: 0;\n    }\n\n    .line-width-button:nth-child(6) {\n      margin-left: 0;\n    }\n\n    .drag-handle {\n      position: absolute;\n      left: 0;\n      top: 50%;\n      width: 8px;\n      height: 8px;\n      transform: translateY(-50%) translateX(4px);\n      border-radius: 50%;\n      background-color: var(--affine-icon-color);\n      z-index: 3;\n    }\n\n    .bottom-line,\n    .line-width-overlay {\n      left: 8px;\n      top: 50%;\n      transform: translateY(-50%);\n      height: 1px;\n      background-color: var(--affine-border-color);\n      position: absolute;\n    }\n\n    .bottom-line {\n      width: calc(100% - 16px);\n      background-color: var(--affine-border-color);\n    }\n\n    .line-width-overlay {\n      width: 0;\n      background-color: var(--affine-icon-color);\n      z-index: 1;\n    }\n  `;\n\n  private _dragConfig: DragConfig | null = null;\n\n  private _getDragHandlePosition = (e: PointerEvent, config: DragConfig) => {\n    const x = e.clientX;\n    const { boundLeft, bottomLineWidth, stepWidth, containerWidth } = config;\n\n    let steps: number;\n    if (x <= boundLeft) {\n      steps = 0;\n    } else if (x - boundLeft >= containerWidth) {\n      steps = 100;\n    } else {\n      steps = Math.floor((x - boundLeft) / stepWidth);\n    }\n\n    // The drag handle should not be dragged to the left of the first icon or right of the last icon.\n    // Calculate the drag handle position based on the steps.\n    const bottomLineOffsetX = 4;\n    const bottomLineStepWidth = (bottomLineWidth - bottomLineOffsetX) / 100;\n    const dragHandlerPosition = steps * bottomLineStepWidth;\n    return dragHandlerPosition;\n  };\n\n  private _onPointerDown = (e: PointerEvent) => {\n    e.preventDefault();\n    if (this.disable) return;\n    const { left, width } = this._lineWidthPanel.getBoundingClientRect();\n    const bottomLineWidth = this._bottomLine.getBoundingClientRect().width;\n    this._dragConfig = {\n      stepWidth: width / 100,\n      boundLeft: left,\n      containerWidth: width,\n      bottomLineWidth,\n    };\n    this._onPointerMove(e);\n  };\n\n  private _onPointerMove = (e: PointerEvent) => {\n    e.preventDefault();\n    if (!this._dragConfig) return;\n    const dragHandlerPosition = this._getDragHandlePosition(\n      e,\n      this._dragConfig\n    );\n    this._dragHandle.style.left = `${dragHandlerPosition}%`;\n    this._lineWidthOverlay.style.width = `${dragHandlerPosition}%`;\n    this._updateIconsColor();\n  };\n\n  private _onPointerOut = (e: PointerEvent) => {\n    // If the pointer is out of the line width panel\n    // Stop dragging and update the selected size by nearest size.\n    e.preventDefault();\n    if (!this._dragConfig) return;\n    const dragHandlerPosition = this._getDragHandlePosition(\n      e,\n      this._dragConfig\n    );\n    this._updateLineWidthPanelByDragHandlePosition(dragHandlerPosition);\n    this._dragConfig = null;\n  };\n\n  private _onPointerUp = (e: PointerEvent) => {\n    e.preventDefault();\n    if (!this._dragConfig) return;\n    const dragHandlerPosition = this._getDragHandlePosition(\n      e,\n      this._dragConfig\n    );\n    this._updateLineWidthPanelByDragHandlePosition(dragHandlerPosition);\n    this._dragConfig = null;\n  };\n\n  private _updateIconsColor = () => {\n    if (!this._dragHandle.offsetParent) {\n      requestConnectedFrame(() => this._updateIconsColor(), this);\n      return;\n    }\n\n    const dragHandleRect = this._dragHandle.getBoundingClientRect();\n    const dragHandleCenterX = dragHandleRect.left + dragHandleRect.width / 2;\n    // All the icons located at the left of the drag handle should be filled with the icon color.\n    const leftIcons = [];\n    // All the icons located at the right of the drag handle should be filled with the border color.\n    const rightIcons = [];\n\n    for (const icon of this._lineWidthIcons) {\n      const { left, width } = icon.getBoundingClientRect();\n      const centerX = left + width / 2;\n      if (centerX < dragHandleCenterX) {\n        leftIcons.push(icon);\n      } else {\n        rightIcons.push(icon);\n      }\n    }\n\n    leftIcons.forEach(\n      icon => (icon.style.backgroundColor = 'var(--affine-icon-color)')\n    );\n    rightIcons.forEach(\n      icon => (icon.style.backgroundColor = 'var(--affine-border-color)')\n    );\n  };\n\n  private _onSelect(lineWidth: LineWidth) {\n    // If the selected size is the same as the previous one, do nothing.\n    if (lineWidth === this.selectedSize) return;\n    this.dispatchEvent(\n      new LineWidthEvent('select', {\n        detail: lineWidth,\n        composed: true,\n        bubbles: true,\n      })\n    );\n    this.selectedSize = lineWidth;\n  }\n\n  private _updateLineWidthPanel(selectedSize: LineWidth) {\n    if (!this._lineWidthOverlay) return;\n    let width = 0;\n    let dragHandleOffsetX = 0;\n    switch (selectedSize) {\n      case LineWidth.Two:\n        width = 0;\n        break;\n      case LineWidth.Four:\n        width = 16;\n        dragHandleOffsetX = 1;\n        break;\n      case LineWidth.Six:\n        width = 32;\n        dragHandleOffsetX = 2;\n        break;\n      case LineWidth.Eight:\n        width = 48;\n        dragHandleOffsetX = 3;\n        break;\n      case LineWidth.Ten:\n        width = 64;\n        dragHandleOffsetX = 4;\n        break;\n      default:\n        width = 80;\n        dragHandleOffsetX = 4;\n    }\n\n    dragHandleOffsetX += 4;\n    this._lineWidthOverlay.style.width = `${width}%`;\n    this._dragHandle.style.left = `${width}%`;\n    this._dragHandle.style.transform = `translateY(-50%) translateX(${dragHandleOffsetX}px)`;\n    this._updateIconsColor();\n  }\n\n  private _updateLineWidthPanelByDragHandlePosition(\n    dragHandlerPosition: number\n  ) {\n    // Calculate the selected size based on the drag handle position.\n    // Need to select the nearest size.\n    let selectedSize = this.selectedSize;\n    if (dragHandlerPosition <= 12) {\n      selectedSize = LineWidth.Two;\n    } else if (dragHandlerPosition > 12 && dragHandlerPosition <= 26) {\n      selectedSize = LineWidth.Four;\n    } else if (dragHandlerPosition > 26 && dragHandlerPosition <= 40) {\n      selectedSize = LineWidth.Six;\n    } else if (dragHandlerPosition > 40 && dragHandlerPosition <= 54) {\n      selectedSize = LineWidth.Eight;\n    } else if (dragHandlerPosition > 54 && dragHandlerPosition <= 68) {\n      selectedSize = LineWidth.Ten;\n    } else {\n      selectedSize = LineWidth.Twelve;\n    }\n    this._updateLineWidthPanel(selectedSize);\n    this._onSelect(selectedSize);\n  }\n\n  override disconnectedCallback(): void {\n    this._disposables.dispose();\n  }\n\n  override firstUpdated(): void {\n    this._updateLineWidthPanel(this.selectedSize);\n    this._disposables.addFromEvent(this, 'pointerdown', this._onPointerDown);\n    this._disposables.addFromEvent(this, 'pointermove', this._onPointerMove);\n    this._disposables.addFromEvent(this, 'pointerup', this._onPointerUp);\n    this._disposables.addFromEvent(this, 'pointerout', this._onPointerOut);\n  }\n\n  override render() {\n    return html`<style>\n        .line-width-panel {\n          opacity: ${this.disable ? '0.5' : '1'};\n        }\n      </style>\n      <div\n        class=\"line-width-panel\"\n        @mousedown=\"${(e: Event) => e.preventDefault()}\"\n      >\n        <div class=\"line-width-button\">\n          <div class=\"line-width-icon\"></div>\n        </div>\n        <div class=\"line-width-button\">\n          <div class=\"line-width-icon\"></div>\n        </div>\n        <div class=\"line-width-button\">\n          <div class=\"line-width-icon\"></div>\n        </div>\n        <div class=\"line-width-button\">\n          <div class=\"line-width-icon\"></div>\n        </div>\n        <div class=\"line-width-button\">\n          <div class=\"line-width-icon\"></div>\n        </div>\n        <div class=\"line-width-button\">\n          <div class=\"line-width-icon\"></div>\n        </div>\n        <div class=\"drag-handle\"></div>\n        <div class=\"bottom-line\"></div>\n        <div class=\"line-width-overlay\"></div>\n        ${this.hasTooltip\n          ? html`<affine-tooltip .offset=${8}>Thickness</affine-tooltip>`\n          : nothing}\n      </div>`;\n  }\n\n  override willUpdate(changedProperties: PropertyValues<this>) {\n    if (changedProperties.has('selectedSize')) {\n      this._updateLineWidthPanel(this.selectedSize);\n    }\n  }\n\n  @query('.bottom-line')\n  private accessor _bottomLine!: HTMLElement;\n\n  @query('.drag-handle')\n  private accessor _dragHandle!: HTMLElement;\n\n  @queryAll('.line-width-icon')\n  private accessor _lineWidthIcons!: NodeListOf<HTMLElement>;\n\n  @query('.line-width-overlay')\n  private accessor _lineWidthOverlay!: HTMLElement;\n\n  @query('.line-width-panel')\n  private accessor _lineWidthPanel!: HTMLElement;\n\n  @property({ attribute: false })\n  accessor disable = false;\n\n  @property({ attribute: false })\n  accessor hasTooltip = true;\n\n  @property({ attribute: false })\n  accessor selectedSize: LineWidth = LineWidth.Two;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'edgeless-line-width-panel': EdgelessLineWidthPanel;\n  }\n}\n"]}