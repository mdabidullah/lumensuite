{"version":3,"file":"font-family-panel.js","sourceRoot":"","sources":["../../../../../src/root-block/edgeless/components/panel/font-family-panel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,kCAAkC,CAAC;AAC7D,OAAO,EAAE,SAAS,EAAE,MAAM,qCAAqC,CAAC;AAChE,OAAO,EAAE,UAAU,EAAE,cAAc,EAAE,MAAM,0BAA0B,CAAC;AACtE,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AACrD,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,MAAM,EAAE,MAAM,0BAA0B,CAAC;IAGrC,uBAAuB;4BADnC,aAAa,CAAC,4BAA4B,CAAC;;;;sBACC,UAAU;;;;;;;uCAAlB,SAAQ,WAAU;;;;oCA2CpD,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;iCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;YAF/B,6KAAS,QAAQ,6BAAR,QAAQ,2FAAwD;YAGzE,oKAAS,KAAK,6BAAL,KAAK,qFAAgC;YA/ChD,6KAgDC;;;;iBA/CiB,WAAM,GAAG,GAAG,CAAA;;;;;;;;;;;GAW3B,AAXqB,CAWpB;QAEM,SAAS,CAAC,KAAiB;YACjC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAClB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACvB,CAAC;QACH,CAAC;QAEQ,MAAM;YACb,OAAO,MAAM,CACX,cAAc,EACd,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EACf,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE;gBACf,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC;gBACnC,OAAO,IAAI,CAAA;;yBAEM,IAAI;kCACK,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC;oCAC5B,CAAC,CAAC,EAAE,CAAC,CAAC;uBACnB,eAAe;sBAChB,MAAM;qBACP,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;;cAEjC,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO;;SAEzC,CAAC;YACJ,CAAC,CACF,CAAC;QACJ,CAAC;QAGD,6EAA+D,SAAS,EAAC;QAAzE,IAAS,QAAQ,8CAAwD;QAAzE,IAAS,QAAQ,oDAAwD;QAGzE,8HAA6B,UAAU,CAAC,KAAK,GAAC;QAA9C,IAAS,KAAK,2CAAgC;QAA9C,IAAS,KAAK,iDAAgC;;;;;;YA/CnC,uDAAuB;;;;;SAAvB,uBAAuB","sourcesContent":["import { TextUtils } from '@blocksuite/affine-block-surface';\nimport { CheckIcon } from '@blocksuite/affine-components/icons';\nimport { FontFamily, FontFamilyList } from '@blocksuite/affine-model';\nimport { css, html, LitElement, nothing } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\n\n@customElement('edgeless-font-family-panel')\nexport class EdgelessFontFamilyPanel extends LitElement {\n  static override styles = css`\n    :host {\n      display: flex;\n      align-items: start;\n      flex-direction: column;\n      min-width: 136px;\n    }\n\n    edgeless-tool-icon-button {\n      width: 100%;\n    }\n  `;\n\n  private _onSelect(value: FontFamily) {\n    this.value = value;\n    if (this.onSelect) {\n      this.onSelect(value);\n    }\n  }\n\n  override render() {\n    return repeat(\n      FontFamilyList,\n      item => item[0],\n      ([font, name]) => {\n        const active = this.value === font;\n        return html`\n          <edgeless-tool-icon-button\n            data-font=\"${name}\"\n            style=\"font-family: ${TextUtils.wrapFontFamily(font)}\"\n            .iconContainerPadding=${[4, 8]}\n            .justify=${'space-between'}\n            .active=${active}\n            @click=${() => this._onSelect(font)}\n          >\n            ${name} ${active ? CheckIcon : nothing}\n          </edgeless-tool-icon-button>\n        `;\n      }\n    );\n  }\n\n  @property({ attribute: false })\n  accessor onSelect: ((value: FontFamily) => void) | undefined = undefined;\n\n  @property({ attribute: false })\n  accessor value: FontFamily = FontFamily.Inter;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'edgeless-font-family-panel': EdgelessFontFamilyPanel;\n  }\n}\n"]}