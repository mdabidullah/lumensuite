{"version":3,"file":"line-styles-panel.js","sourceRoot":"","sources":["../../../../../src/root-block/edgeless/components/panel/line-styles-panel.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,OAAO,EACP,YAAY,EACZ,gBAAgB,GACjB,MAAM,qCAAqC,CAAC;AAC7C,OAAO,EAAkB,WAAW,EAAE,MAAM,0BAA0B,CAAC;AACvE,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AACvD,OAAO,EAAE,MAAM,EAAE,MAAM,0BAA0B,CAAC;AAqBlD,MAAM,eAAe,GAAG;IACtB;QACE,IAAI,EAAE,OAAO;QACb,KAAK,EAAE,WAAW,CAAC,KAAK;QACxB,IAAI,EAAE,gBAAgB;KACvB;IACD;QACE,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,WAAW,CAAC,IAAI;QACvB,IAAI,EAAE,YAAY;KACnB;IACD;QACE,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,WAAW,CAAC,IAAI;QACvB,IAAI,EAAE,OAAO;KACd;CACF,CAAC;AAEF,MAAM,UAAU,eAAe,CAAC,EAC9B,OAAO,EACP,gBAAgB,EAChB,iBAAiB,EACjB,UAAU,GAAG,CAAC,WAAW,CAAC,KAAK,EAAE,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,MAC5C,EAAE;IAC1B,MAAM,aAAa,GAAG,IAAI,CAAA;;sBAEN,gBAA6B;iBAClC,iBAAiB,KAAK,WAAW,CAAC,IAAI;gBACvC,CAAC,CAAiB,EAAE,EAAE;QAC9B,OAAO,EAAE,CAAC;YACR,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,CAAC,CAAC,MAAM;SAChB,CAAC,CAAC;IACL,CAAC;;GAEJ,CAAC;IAEF,MAAM,gBAAgB,GAAG,MAAM,CAC7B,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAC/D,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,EAClB,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;QACxB,MAAM,MAAM,GAAG,iBAAiB,KAAK,KAAK,CAAC;QAC3C,MAAM,OAAO,GAA4B;YACvC,mBAAmB,EAAE,IAAI;YACzB,CAAC,QAAQ,KAAK,EAAE,CAAC,EAAE,IAAI;SACxB,CAAC;QACF,IAAI,MAAM;YAAE,OAAO,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;QAErC,OAAO,IAAI,CAAA;;kBAEC,QAAQ,CAAC,OAAO,CAAC;oBACf,MAAM;wBACF,YAAY;qBACf,IAAI;mBACN,GAAG,EAAE,CACZ,OAAO,EAAE,CAAC;YACR,IAAI,EAAE,WAAW;YACjB,KAAK;SACN,CAAC;;YAEF,IAAI;;OAET,CAAC;IACJ,CAAC,CACF,CAAC;IAEF,OAAO,IAAI,CAAA;MACP,aAAa;;MAEb,gBAAgB;GACnB,CAAC;AACJ,CAAC","sourcesContent":["import {\n  BanIcon,\n  DashLineIcon,\n  StraightLineIcon,\n} from '@lumensuite/affine-components/icons';\nimport { type LineWidth, StrokeStyle } from '@lumensuite/affine-model';\nimport { html } from 'lit';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { repeat } from 'lit/directives/repeat.js';\n\nimport type { LineWidthEvent } from './line-width-panel.js';\n\nexport type LineStyleEvent =\n  | {\n      type: 'size';\n      value: LineWidth;\n    }\n  | {\n      type: 'lineStyle';\n      value: StrokeStyle;\n    };\n\ninterface LineStylesPanelProps {\n  onClick?: (e: LineStyleEvent) => void;\n  selectedLineSize?: LineWidth;\n  selectedLineStyle?: StrokeStyle;\n  lineStyles?: StrokeStyle[];\n}\n\nconst LINE_STYLE_LIST = [\n  {\n    name: 'Solid',\n    value: StrokeStyle.Solid,\n    icon: StraightLineIcon,\n  },\n  {\n    name: 'Dash',\n    value: StrokeStyle.Dash,\n    icon: DashLineIcon,\n  },\n  {\n    name: 'None',\n    value: StrokeStyle.None,\n    icon: BanIcon,\n  },\n];\n\nexport function LineStylesPanel({\n  onClick,\n  selectedLineSize,\n  selectedLineStyle,\n  lineStyles = [StrokeStyle.Solid, StrokeStyle.Dash, StrokeStyle.None],\n}: LineStylesPanelProps = {}) {\n  const lineSizePanel = html`\n    <edgeless-line-width-panel\n      .selectedSize=${selectedLineSize as LineWidth}\n      .disable=${selectedLineStyle === StrokeStyle.None}\n      @select=${(e: LineWidthEvent) => {\n        onClick?.({\n          type: 'size',\n          value: e.detail,\n        });\n      }}\n    ></edgeless-line-width-panel>\n  `;\n\n  const lineStyleButtons = repeat(\n    LINE_STYLE_LIST.filter(item => lineStyles.includes(item.value)),\n    item => item.value,\n    ({ name, icon, value }) => {\n      const active = selectedLineStyle === value;\n      const classes: Record<string, boolean> = {\n        'line-style-button': true,\n        [`mode-${value}`]: true,\n      };\n      if (active) classes['active'] = true;\n\n      return html`\n        <edgeless-tool-icon-button\n          class=${classMap(classes)}\n          .active=${active}\n          .activeMode=${'background'}\n          .tooltip=${name}\n          @click=${() =>\n            onClick?.({\n              type: 'lineStyle',\n              value,\n            })}\n        >\n          ${icon}\n        </edgeless-tool-icon-button>\n      `;\n    }\n  );\n\n  return html`\n    ${lineSizePanel}\n    <editor-toolbar-separator></editor-toolbar-separator>\n    ${lineStyleButtons}\n  `;\n}\n"]}