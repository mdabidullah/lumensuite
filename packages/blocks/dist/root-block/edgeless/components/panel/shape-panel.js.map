{"version":3,"file":"shape-panel.js","sourceRoot":"","sources":["../../../../../src/root-block/edgeless/components/panel/shape-panel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,0BAA0B,CAAC;AACtD,OAAO,EAAE,IAAI,EAAE,MAAM,0BAA0B,CAAC;AAChD,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,MAAM,EAAE,MAAM,0BAA0B,CAAC;AAIlD,OAAO,gCAAgC,CAAC;AACxC,OAAO,EAAE,oBAAoB,EAAE,MAAM,uCAAuC,CAAC;IAGhE,kBAAkB;4BAD9B,aAAa,CAAC,sBAAsB,CAAC;;;;sBACE,UAAU;;;;;;;kCAAlB,SAAQ,WAAU;;;;yCA8C/C,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;sCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;YAF/B,4LAAS,aAAa,6BAAb,aAAa,qGAAwD;YAG9E,mLAAS,UAAU,6BAAV,UAAU,+FAAoC;YAlDzD,6KAmDC;;;;iBAlDiB,WAAM,GAAG,GAAG,CAAA;;;;;;;GAO3B,AAPqB,CAOpB;QAMM,SAAS,CAAC,KAA6B;YAC7C,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChC,CAAC;QAEQ,oBAAoB;YAC3B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;YAC5B,KAAK,CAAC,oBAAoB,EAAE,CAAC;QAC/B,CAAC;QAEQ,MAAM;YACb,OAAO,MAAM,CACX,oBAAoB,EACpB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EACjB,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,aAAa,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAE,CAC1D,IAAI,CAAA;sBACU,QAAQ;qBACT,OAAO;oBACR,IAAI,CAAC,aAAa,KAAK,IAAI;wBACvB,YAAY;mBACjB,GAAG,EAAE;gBACZ,IAAI,QAAQ;oBAAE,OAAO;gBACrB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACvB,CAAC;;YAEC,IAAI,CAAC,UAAU,KAAK,UAAU,CAAC,OAAO;gBACtC,CAAC,CAAC,WAAW;gBACb,CAAC,CAAC,aAAa;qCACU,CAChC,CAAC;QACJ,CAAC;QAGD,gCAA8E;QAA9E,IAAS,aAAa,mDAAwD;QAA9E,IAAS,aAAa,yDAAwD;QAG9E,6BAAuD;QAAvD,IAAS,UAAU,gDAAoC;QAAvD,IAAS,UAAU,sDAAoC;;;YAxCvD,UAAK,GAAG;gBACN,MAAM,EAAE,IAAI,IAAI,EAA0B;aAC3C,CAAC;YAmCO,4FAA2D,SAAS,EAAC;YAGrE,kJAAyB,UAAU,CAAC,SAAS,GAAC;;;;YAlD5C,uDAAkB;;;;;SAAlB,kBAAkB","sourcesContent":["import { ShapeStyle } from '@lumensuite/affine-model';\nimport { Slot } from '@lumensuite/global/utils';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\n\nimport type { ShapeTool } from '../../tools/shape-tool.js';\n\nimport '../buttons/tool-icon-button.js';\nimport { ShapeComponentConfig } from '../toolbar/shape/shape-menu-config.js';\n\n@customElement('edgeless-shape-panel')\nexport class EdgelessShapePanel extends LitElement {\n  static override styles = css`\n    :host {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      gap: 8px;\n    }\n  `;\n\n  slots = {\n    select: new Slot<ShapeTool['shapeName']>(),\n  };\n\n  private _onSelect(value: ShapeTool['shapeName']) {\n    this.selectedShape = value;\n    this.slots.select.emit(value);\n  }\n\n  override disconnectedCallback(): void {\n    this.slots.select.dispose();\n    super.disconnectedCallback();\n  }\n\n  override render() {\n    return repeat(\n      ShapeComponentConfig,\n      item => item.name,\n      ({ name, generalIcon, scribbledIcon, tooltip, disabled }) =>\n        html`<edgeless-tool-icon-button\n          .disabled=${disabled}\n          .tooltip=${tooltip}\n          .active=${this.selectedShape === name}\n          .activeMode=${'background'}\n          @click=${() => {\n            if (disabled) return;\n            this._onSelect(name);\n          }}\n        >\n          ${this.shapeStyle === ShapeStyle.General\n            ? generalIcon\n            : scribbledIcon}\n        </edgeless-tool-icon-button>`\n    );\n  }\n\n  @property({ attribute: false })\n  accessor selectedShape: ShapeTool['shapeName'] | null | undefined = undefined;\n\n  @property({ attribute: false })\n  accessor shapeStyle: ShapeStyle = ShapeStyle.Scribbled;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'edgeless-shape-panel': EdgelessShapePanel;\n  }\n}\n"]}