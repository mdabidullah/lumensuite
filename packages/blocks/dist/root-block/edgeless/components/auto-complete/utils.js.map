{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../../src/root-block/edgeless/components/auto-complete/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import type { XYWH } from '@lumensuite/global/utils';\n\nimport {\n  CommonUtils,\n  type Options,\n  Overlay,\n  type RoughCanvas,\n} from '@lumensuite/affine-block-surface';\nimport {\n  type Connection,\n  getShapeRadius,\n  getShapeType,\n  GroupElementModel,\n  type NoteBlockModel,\n  ShapeElementModel,\n  type ShapeName,\n  type ShapeStyle,\n} from '@lumensuite/affine-model';\nimport { assertExists, Bound } from '@lumensuite/global/utils';\nimport { DocCollection } from '@lumensuite/store';\n\nimport type { EdgelessRootBlockComponent } from '../../edgeless-root-block.js';\n\nimport { type Shape, ShapeFactory } from '../../utils/tool-overlay.js';\n\nexport enum Direction {\n  Right,\n  Bottom,\n  Left,\n  Top,\n}\n\nexport const PANEL_WIDTH = 136;\nexport const PANEL_HEIGHT = 108;\n\nexport const MAIN_GAP = 100;\nexport const SECOND_GAP = 20;\nexport const DEFAULT_NOTE_OVERLAY_HEIGHT = 110;\nexport const DEFAULT_TEXT_WIDTH = 116;\nexport const DEFAULT_TEXT_HEIGHT = 24;\n\nexport type TARGET_SHAPE_TYPE = ShapeName;\nexport type AUTO_COMPLETE_TARGET_TYPE =\n  | TARGET_SHAPE_TYPE\n  | 'text'\n  | 'note'\n  | 'frame';\n\nclass AutoCompleteTargetOverlay extends Overlay {\n  xywh: XYWH;\n\n  constructor(xywh: XYWH) {\n    super();\n    this.xywh = xywh;\n  }\n\n  override render(_ctx: CanvasRenderingContext2D, _rc: RoughCanvas) {}\n}\n\nexport class AutoCompleteTextOverlay extends AutoCompleteTargetOverlay {\n  constructor(xywh: XYWH) {\n    super(xywh);\n  }\n\n  override render(ctx: CanvasRenderingContext2D, _rc: RoughCanvas) {\n    const [x, y, w, h] = this.xywh;\n\n    ctx.globalAlpha = 0.4;\n    ctx.strokeStyle = '#1e96eb';\n    ctx.lineWidth = 1;\n    ctx.strokeRect(x, y, w, h);\n\n    // fill text placeholder\n    ctx.font = '15px sans-serif';\n    ctx.fillStyle = '#C0BFC1';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillText(\"Type '/' to insert\", x + w / 2, y + h / 2);\n  }\n}\n\nexport class AutoCompleteNoteOverlay extends AutoCompleteTargetOverlay {\n  private _background: string;\n\n  constructor(xywh: XYWH, background: string) {\n    super(xywh);\n    this._background = background;\n  }\n\n  override render(ctx: CanvasRenderingContext2D, _rc: RoughCanvas) {\n    const [x, y, w, h] = this.xywh;\n\n    ctx.globalAlpha = 0.4;\n    ctx.fillStyle = this._background;\n    ctx.strokeStyle = 'rgba(0, 0, 0, 0.10)';\n    ctx.lineWidth = 2;\n    ctx.beginPath();\n    ctx.roundRect(x, y, w, h, 8);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n\n    // fill text placeholder\n    ctx.font = '15px sans-serif';\n    ctx.fillStyle = 'black';\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    ctx.fillText(\"Type '/' for command\", x + 24, y + h / 2);\n  }\n}\n\nexport class AutoCompleteFrameOverlay extends AutoCompleteTargetOverlay {\n  private _strokeColor;\n\n  constructor(xywh: XYWH, strokeColor: string) {\n    super(xywh);\n    this._strokeColor = strokeColor;\n  }\n\n  override render(ctx: CanvasRenderingContext2D, _rc: RoughCanvas) {\n    const [x, y, w, h] = this.xywh;\n    // frame title background\n    const titleWidth = 72;\n    const titleHeight = 30;\n    const titleY = y - titleHeight - 10;\n\n    ctx.globalAlpha = 0.4;\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n    ctx.beginPath();\n    ctx.roundRect(x, titleY, titleWidth, titleHeight, 4);\n    ctx.closePath();\n    ctx.fill();\n\n    // fill title text\n    ctx.globalAlpha = 1;\n    ctx.font = '14px sans-serif';\n    ctx.fillStyle = 'white';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillText('Frame', x + titleWidth / 2, titleY + titleHeight / 2);\n\n    // frame stroke\n    ctx.globalAlpha = 0.4;\n    ctx.strokeStyle = this._strokeColor;\n    ctx.lineWidth = 2;\n    ctx.beginPath();\n    ctx.roundRect(x, y, w, h, 8);\n    ctx.closePath();\n    ctx.stroke();\n  }\n}\n\nexport class AutoCompleteShapeOverlay extends Overlay {\n  private _shape: Shape;\n\n  constructor(\n    xywh: XYWH,\n    type: TARGET_SHAPE_TYPE,\n    options: Options,\n    shapeStyle: ShapeStyle\n  ) {\n    super();\n    this._shape = ShapeFactory.createShape(xywh, type, options, shapeStyle);\n  }\n\n  override render(ctx: CanvasRenderingContext2D, rc: RoughCanvas) {\n    ctx.globalAlpha = 0.4;\n    this._shape.draw(ctx, rc);\n  }\n}\n\nexport function nextBound(\n  type: Direction,\n  curShape: ShapeElementModel,\n  elements: ShapeElementModel[]\n) {\n  const bound = Bound.deserialize(curShape.xywh);\n  const { x, y, w, h } = bound;\n  let nextBound: Bound;\n  let angle = 0;\n  switch (type) {\n    case Direction.Right:\n      angle = 0;\n      break;\n    case Direction.Bottom:\n      angle = 90;\n      break;\n    case Direction.Left:\n      angle = 180;\n      break;\n    case Direction.Top:\n      angle = 270;\n      break;\n  }\n  angle = CommonUtils.normalizeDegAngle(angle + curShape.rotate);\n\n  if (angle >= 45 && angle <= 135) {\n    nextBound = new Bound(x, y + h + MAIN_GAP, w, h);\n  } else if (angle >= 135 && angle <= 225) {\n    nextBound = new Bound(x - w - MAIN_GAP, y, w, h);\n  } else if (angle >= 225 && angle <= 315) {\n    nextBound = new Bound(x, y - h - MAIN_GAP, w, h);\n  } else {\n    nextBound = new Bound(x + w + MAIN_GAP, y, w, h);\n  }\n\n  function isValidBound(bound: Bound) {\n    return !elements.some(a => bound.isOverlapWithBound(a.elementBound));\n  }\n\n  let count = 0;\n  function findValidBound() {\n    count++;\n    const number = Math.ceil(count / 2);\n    const next = nextBound.clone();\n    switch (type) {\n      case Direction.Right:\n      case Direction.Left:\n        next.y =\n          count % 2 === 1\n            ? nextBound.y - (h + SECOND_GAP) * number\n            : nextBound.y + (h + SECOND_GAP) * number;\n        break;\n      case Direction.Bottom:\n      case Direction.Top:\n        next.x =\n          count % 2 === 1\n            ? nextBound.x - (w + SECOND_GAP) * number\n            : nextBound.x + (w + SECOND_GAP) * number;\n        break;\n    }\n    if (isValidBound(next)) return next;\n    return findValidBound();\n  }\n\n  return isValidBound(nextBound) ? nextBound : findValidBound();\n}\n\nexport function getPosition(type: Direction) {\n  let startPosition: Connection['position'];\n  let endPosition: Connection['position'];\n\n  switch (type) {\n    case Direction.Right:\n      startPosition = [1, 0.5];\n      endPosition = [0, 0.5];\n      break;\n    case Direction.Bottom:\n      startPosition = [0.5, 1];\n      endPosition = [0.5, 0];\n      break;\n    case Direction.Left:\n      startPosition = [0, 0.5];\n      endPosition = [1, 0.5];\n      break;\n    case Direction.Top:\n      startPosition = [0.5, 0];\n      endPosition = [0.5, 1];\n      break;\n  }\n  return { startPosition, endPosition };\n}\n\nexport function isShape(element: unknown): element is ShapeElementModel {\n  return element instanceof ShapeElementModel;\n}\n\nexport function capitalizeFirstLetter(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function createEdgelessElement(\n  edgeless: EdgelessRootBlockComponent,\n  current: ShapeElementModel | NoteBlockModel,\n  bound: Bound\n) {\n  let id;\n  const { service } = edgeless;\n\n  if (isShape(current)) {\n    id = service.addElement(current.type, {\n      ...current.serialize(),\n      text: new DocCollection.Y.Text(),\n      xywh: bound.serialize(),\n    });\n  } else {\n    const { doc } = edgeless;\n    id = doc.addBlock(\n      'affine:note',\n      {\n        background: current.background,\n        displayMode: current.displayMode,\n        edgeless: current.edgeless,\n        xywh: bound.serialize(),\n      },\n      edgeless.model.id\n    );\n    const note = doc.getBlockById(id) as NoteBlockModel;\n    assertExists(note);\n    doc.updateBlock(note, () => {\n      note.edgeless.collapse = true;\n    });\n    doc.addBlock('affine:paragraph', {}, note.id);\n  }\n  const group = current.group;\n  if (group instanceof GroupElementModel) {\n    group.addChild(id);\n  }\n  return id;\n}\n\nexport function createShapeElement(\n  edgeless: EdgelessRootBlockComponent,\n  current: ShapeElementModel | NoteBlockModel,\n  targetType: TARGET_SHAPE_TYPE\n) {\n  const service = edgeless.service;\n  const id = service.addElement('shape', {\n    shapeType: getShapeType(targetType),\n    radius: getShapeRadius(targetType),\n    text: new DocCollection.Y.Text(),\n  });\n  const group = current.group;\n  if (group instanceof GroupElementModel) {\n    group.addChild(id);\n  }\n  return id;\n}\n"]}