{"version":3,"file":"auto-complete-panel.js","sourceRoot":"","sources":["../../../../../src/root-block/edgeless/components/auto-complete/auto-complete-panel.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  Connection,\n  ConnectorElementModel,\n  NoteBlockModel,\n  ShapeElementModel,\n} from '@lumensuite/affine-model';\nimport type { XYWH } from '@lumensuite/global/utils';\n\nimport {\n  CanvasElementType,\n  CommonUtils,\n} from '@lumensuite/affine-block-surface';\nimport {\n  FontFamilyIcon,\n  FrameIcon,\n  SmallNoteIcon,\n} from '@lumensuite/affine-components/icons';\nimport {\n  DEFAULT_NOTE_BACKGROUND_COLOR,\n  DEFAULT_SHAPE_FILL_COLOR,\n  DEFAULT_SHAPE_STROKE_COLOR,\n  DEFAULT_TEXT_COLOR,\n  FontFamily,\n  FontStyle,\n  FontWeight,\n  getShapeName,\n  GroupElementModel,\n  ShapeStyle,\n  TextElementModel,\n} from '@lumensuite/affine-model';\nimport { ThemeObserver } from '@lumensuite/affine-shared/theme';\nimport { WithDisposable } from '@lumensuite/block-std';\nimport {\n  assertInstanceOf,\n  Bound,\n  serializeXYWH,\n  Vec,\n} from '@lumensuite/global/utils';\nimport { DocCollection } from '@lumensuite/store';\nimport { baseTheme } from '@toeverything/theme';\nimport { css, html, LitElement, nothing, unsafeCSS } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { styleMap } from 'lit/directives/style-map.js';\n\nimport type { EdgelessRootBlockComponent } from '../../edgeless-root-block.js';\n\nimport { captureEventTarget } from '../../../widgets/drag-handle/utils.js';\nimport {\n  DEFAULT_NOTE_WIDTH,\n  SHAPE_OVERLAY_HEIGHT,\n  SHAPE_OVERLAY_WIDTH,\n} from '../../utils/consts.js';\nimport {\n  mountShapeTextEditor,\n  mountTextElementEditor,\n} from '../../utils/text.js';\nimport '../buttons/tool-icon-button.js';\nimport { ShapeComponentConfig } from '../toolbar/shape/shape-menu-config.js';\nimport {\n  type AUTO_COMPLETE_TARGET_TYPE,\n  AutoCompleteFrameOverlay,\n  AutoCompleteNoteOverlay,\n  AutoCompleteShapeOverlay,\n  AutoCompleteTextOverlay,\n  capitalizeFirstLetter,\n  createShapeElement,\n  DEFAULT_NOTE_OVERLAY_HEIGHT,\n  DEFAULT_TEXT_HEIGHT,\n  DEFAULT_TEXT_WIDTH,\n  Direction,\n  isShape,\n  PANEL_HEIGHT,\n  PANEL_WIDTH,\n  type TARGET_SHAPE_TYPE,\n} from './utils.js';\n\n@customElement('edgeless-auto-complete-panel')\nexport class EdgelessAutoCompletePanel extends WithDisposable(LitElement) {\n  static override styles = css`\n    .auto-complete-panel-container {\n      position: absolute;\n      display: flex;\n      width: 136px;\n      flex-wrap: wrap;\n      align-items: center;\n      justify-content: center;\n      padding: 8px 0;\n      gap: 8px;\n      border-radius: 8px;\n      background: var(--affine-background-overlay-panel-color);\n      box-shadow: var(--affine-shadow-2);\n      z-index: 1;\n    }\n\n    .row-button {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 120px;\n      height: 28px;\n      padding: 4px 0;\n      text-align: center;\n      border-radius: 8px;\n      font-family: ${unsafeCSS(baseTheme.fontSansFamily)};\n      font-size: 12px;\n      font-style: normal;\n      font-weight: 500;\n      border: 1px solid var(--affine-border-color, #e3e2e4);\n      box-sizing: border-box;\n    }\n  `;\n\n  private _overlay:\n    | AutoCompleteShapeOverlay\n    | AutoCompleteNoteOverlay\n    | AutoCompleteFrameOverlay\n    | AutoCompleteTextOverlay\n    | null = null;\n\n  constructor(\n    position: [number, number],\n    edgeless: EdgelessRootBlockComponent,\n    currentSource: ShapeElementModel | NoteBlockModel,\n    connector: ConnectorElementModel\n  ) {\n    super();\n    this.position = position;\n    this.edgeless = edgeless;\n    this.currentSource = currentSource;\n    this.connector = connector;\n  }\n\n  private _addFrame() {\n    const bound = this._generateTarget(this.connector)?.nextBound;\n    if (!bound) return;\n\n    const { h } = bound;\n    const w = h / 0.75;\n    const target = this._getTargetXYWH(w, h);\n    if (!target) return;\n\n    const { xywh, position } = target;\n\n    const edgeless = this.edgeless;\n    const { service, surfaceBlockModel } = edgeless;\n    const frameIndex = service.frames.length + 1;\n    const id = service.addBlock(\n      'affine:frame',\n      {\n        title: new DocCollection.Y.Text(`Frame ${frameIndex}`),\n        xywh: serializeXYWH(...xywh),\n      },\n      surfaceBlockModel\n    );\n    edgeless.doc.captureSync();\n    const frame = service.getElementById(id);\n    if (!frame) return;\n\n    this.connector.target = {\n      id,\n      position,\n    };\n\n    edgeless.service.selection.set({\n      elements: [frame.id],\n      editing: false,\n    });\n  }\n\n  private _addNote() {\n    const { doc } = this.edgeless;\n    const service = this.edgeless.service;\n    const target = this._getTargetXYWH(\n      DEFAULT_NOTE_WIDTH,\n      DEFAULT_NOTE_OVERLAY_HEIGHT\n    );\n    if (!target) return;\n\n    const { xywh, position } = target;\n    const id = service.addBlock(\n      'affine:note',\n      {\n        xywh: serializeXYWH(...xywh),\n      },\n      doc.root?.id\n    );\n    doc.addBlock('affine:paragraph', { type: 'text' }, id);\n    const group = this.currentSource.group;\n\n    if (group instanceof GroupElementModel) {\n      group.addChild(id);\n    }\n    this.connector.target = {\n      id,\n      position: position as [number, number],\n    };\n    service.updateElement(this.connector.id, {\n      target: { id, position },\n    });\n    this.edgeless.service.selection.set({\n      elements: [id],\n      editing: false,\n    });\n  }\n\n  private _addShape(targetType: TARGET_SHAPE_TYPE) {\n    const edgeless = this.edgeless;\n    const result = this._generateTarget(this.connector);\n    if (!result) return;\n\n    const currentSource = this.currentSource;\n    const { nextBound, position } = result;\n    const { service } = edgeless;\n    const id = createShapeElement(edgeless, currentSource, targetType);\n\n    service.updateElement(id, { xywh: nextBound.serialize() });\n    service.updateElement(this.connector.id, {\n      target: { id, position },\n    });\n\n    mountShapeTextEditor(\n      service.getElementById(id) as ShapeElementModel,\n      this.edgeless\n    );\n    edgeless.service.selection.set({\n      elements: [id],\n      editing: true,\n    });\n    edgeless.doc.captureSync();\n  }\n\n  private _addText() {\n    const target = this._getTargetXYWH(DEFAULT_TEXT_WIDTH, DEFAULT_TEXT_HEIGHT);\n    if (!target) return;\n    const { xywh, position } = target;\n    const bound = Bound.fromXYWH(xywh);\n    const edgelessService = this.edgeless.service;\n\n    const textFlag = this.edgeless.doc.awarenessStore.getFlag(\n      'enable_edgeless_text'\n    );\n    if (textFlag) {\n      const { textId } = this.edgeless.std.command.exec('insertEdgelessText', {\n        x: bound.x,\n        y: bound.y,\n      });\n      if (!textId) return;\n      edgelessService.updateElement(this.connector.id, {\n        target: { id: textId, position },\n      });\n      if (this.currentSource.group instanceof GroupElementModel) {\n        this.currentSource.group.addChild(textId);\n      }\n\n      this.edgeless.service.selection.set({\n        elements: [textId],\n        editing: false,\n      });\n      this.edgeless.doc.captureSync();\n    } else {\n      const textId = edgelessService.addElement(CanvasElementType.TEXT, {\n        xywh: bound.serialize(),\n        text: new DocCollection.Y.Text(),\n        textAlign: 'left',\n        fontSize: 24,\n        fontFamily: FontFamily.Inter,\n        color: DEFAULT_TEXT_COLOR,\n        fontWeight: FontWeight.Regular,\n        fontStyle: FontStyle.Normal,\n      });\n      const textElement = edgelessService.getElementById(textId);\n      assertInstanceOf(textElement, TextElementModel);\n\n      edgelessService.updateElement(this.connector.id, {\n        target: { id: textId, position },\n      });\n      if (this.currentSource.group instanceof GroupElementModel) {\n        this.currentSource.group.addChild(textId);\n      }\n\n      this.edgeless.service.selection.set({\n        elements: [textId],\n        editing: false,\n      });\n      this.edgeless.doc.captureSync();\n\n      mountTextElementEditor(textElement, this.edgeless);\n    }\n  }\n\n  private _autoComplete(targetType: AUTO_COMPLETE_TARGET_TYPE) {\n    this._removeOverlay();\n    if (!this._connectorExist()) return;\n\n    switch (targetType) {\n      case 'text':\n        this._addText();\n        break;\n      case 'note':\n        this._addNote();\n        break;\n      case 'frame':\n        this._addFrame();\n        break;\n      default:\n        this._addShape(targetType);\n    }\n\n    this.remove();\n  }\n\n  private _connectorExist() {\n    return !!this.edgeless.service.getElementById(this.connector.id);\n  }\n\n  private _generateTarget(connector: ConnectorElementModel) {\n    const { currentSource } = this;\n    let w = SHAPE_OVERLAY_WIDTH;\n    let h = SHAPE_OVERLAY_HEIGHT;\n    if (isShape(currentSource)) {\n      const bound = Bound.deserialize(currentSource.xywh);\n      w = bound.w;\n      h = bound.h;\n    }\n    const point = connector.target.position;\n    if (!point) return;\n\n    const len = connector.path.length;\n    const angle = CommonUtils.normalizeDegAngle(\n      CommonUtils.toDegree(\n        Vec.angle(connector.path[len - 2], connector.path[len - 1])\n      )\n    );\n    let nextBound: Bound;\n    let position: Connection['position'];\n    // direction of the connector target arrow\n    let direction: Direction;\n\n    if (angle >= 45 && angle <= 135) {\n      nextBound = new Bound(point[0] - w / 2, point[1], w, h);\n      position = [0.5, 0];\n      direction = Direction.Bottom;\n    } else if (angle >= 135 && angle <= 225) {\n      nextBound = new Bound(point[0] - w, point[1] - h / 2, w, h);\n      position = [1, 0.5];\n      direction = Direction.Left;\n    } else if (angle >= 225 && angle <= 315) {\n      nextBound = new Bound(point[0] - w / 2, point[1] - h, w, h);\n      position = [0.5, 1];\n      direction = Direction.Top;\n    } else {\n      nextBound = new Bound(point[0], point[1] - h / 2, w, h);\n      position = [0, 0.5];\n      direction = Direction.Right;\n    }\n\n    return { nextBound, position, direction };\n  }\n\n  private _getCurrentSourceInfo(): {\n    style: ShapeStyle;\n    type: AUTO_COMPLETE_TARGET_TYPE;\n  } {\n    const { currentSource } = this;\n    if (isShape(currentSource)) {\n      const { shapeType, shapeStyle, radius } = currentSource;\n      return {\n        style: shapeStyle,\n        type: getShapeName(shapeType, radius),\n      };\n    }\n    return {\n      style: ShapeStyle.General,\n      type: 'note',\n    };\n  }\n\n  private _getPanelPosition() {\n    const { viewport } = this.edgeless.service;\n    const { boundingClientRect: viewportRect, zoom } = viewport;\n    const result = this._getTargetXYWH(PANEL_WIDTH / zoom, PANEL_HEIGHT / zoom);\n    const pos = result ? result.xywh.slice(0, 2) : this.position;\n    const coord = viewport.toViewCoord(pos[0], pos[1]);\n    const { width, height } = viewportRect;\n\n    coord[0] = CommonUtils.clamp(coord[0], 20, width - 20 - PANEL_WIDTH);\n    coord[1] = CommonUtils.clamp(coord[1], 20, height - 20 - PANEL_HEIGHT);\n\n    return coord;\n  }\n\n  private _getTargetXYWH(width: number, height: number) {\n    const result = this._generateTarget(this.connector);\n    if (!result) return null;\n\n    const { nextBound: bound, direction, position } = result;\n    if (!bound) return null;\n\n    const { w, h } = bound;\n    let x = bound.x;\n    let y = bound.y;\n\n    switch (direction) {\n      case Direction.Right:\n        y += h / 2 - height / 2;\n        break;\n      case Direction.Bottom:\n        x -= width / 2 - w / 2;\n        break;\n      case Direction.Left:\n        y += h / 2 - height / 2;\n        x -= width - w;\n        break;\n      case Direction.Top:\n        x -= width / 2 - w / 2;\n        y += h - height;\n        break;\n    }\n\n    const xywh = [x, y, width, height] as XYWH;\n\n    return { xywh, position };\n  }\n\n  private _removeOverlay() {\n    if (this._overlay)\n      this.edgeless.surface.renderer.removeOverlay(this._overlay);\n  }\n\n  private _showFrameOverlay() {\n    const bound = this._generateTarget(this.connector)?.nextBound;\n    if (!bound) return;\n\n    const { h } = bound;\n    const w = h / 0.75;\n    const xywh = this._getTargetXYWH(w, h)?.xywh;\n    if (!xywh) return;\n\n    const strokeColor = ThemeObserver.getPropertyValue('--affine-black-30');\n    this._overlay = new AutoCompleteFrameOverlay(xywh, strokeColor);\n    this.edgeless.surface.renderer.addOverlay(this._overlay);\n  }\n\n  private _showNoteOverlay() {\n    const xywh = this._getTargetXYWH(\n      DEFAULT_NOTE_WIDTH,\n      DEFAULT_NOTE_OVERLAY_HEIGHT\n    )?.xywh;\n    if (!xywh) return;\n\n    const background = ThemeObserver.getColorValue(\n      this.edgeless.service.editPropsStore.lastProps$.value['affine:note']\n        .background,\n      DEFAULT_NOTE_BACKGROUND_COLOR,\n      true\n    );\n    this._overlay = new AutoCompleteNoteOverlay(xywh, background);\n    this.edgeless.surface.renderer.addOverlay(this._overlay);\n  }\n\n  private _showOverlay(targetType: AUTO_COMPLETE_TARGET_TYPE) {\n    this._removeOverlay();\n    if (!this._connectorExist()) return;\n\n    switch (targetType) {\n      case 'text':\n        this._showTextOverlay();\n        break;\n      case 'note':\n        this._showNoteOverlay();\n        break;\n      case 'frame':\n        this._showFrameOverlay();\n        break;\n      default:\n        this._showShapeOverlay(targetType);\n    }\n\n    this.edgeless.surface.refresh();\n  }\n\n  private _showShapeOverlay(targetType: TARGET_SHAPE_TYPE) {\n    const bound = this._generateTarget(this.connector)?.nextBound;\n    if (!bound) return;\n\n    const { x, y, w, h } = bound;\n    const xywh = [x, y, w, h] as XYWH;\n    const { shapeStyle, strokeColor, fillColor, strokeWidth, roughness } =\n      this.edgeless.service.editPropsStore.lastProps$.value[\n        `shape:${targetType}`\n      ];\n\n    const stroke = ThemeObserver.getColorValue(\n      strokeColor,\n      DEFAULT_SHAPE_STROKE_COLOR,\n      true\n    );\n    const fill = ThemeObserver.getColorValue(\n      fillColor,\n      DEFAULT_SHAPE_FILL_COLOR,\n      true\n    );\n\n    const options = {\n      seed: 666,\n      roughness: roughness,\n      strokeLineDash: [0, 0],\n      stroke,\n      strokeWidth,\n      fill,\n    };\n\n    this._overlay = new AutoCompleteShapeOverlay(\n      xywh,\n      targetType,\n      options,\n      shapeStyle\n    );\n\n    this.edgeless.surface.renderer.addOverlay(this._overlay);\n  }\n\n  private _showTextOverlay() {\n    const xywh = this._getTargetXYWH(\n      DEFAULT_TEXT_WIDTH,\n      DEFAULT_TEXT_HEIGHT\n    )?.xywh;\n    if (!xywh) return;\n\n    this._overlay = new AutoCompleteTextOverlay(xywh);\n    this.edgeless.surface.renderer.addOverlay(this._overlay);\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this.edgeless.handleEvent('click', ctx => {\n      const { target } = ctx.get('pointerState').raw;\n      const element = captureEventTarget(target);\n      const clickAway = !element?.closest('edgeless-auto-complete-panel');\n      if (clickAway) this.remove();\n    });\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this._removeOverlay();\n  }\n\n  override firstUpdated() {\n    this.disposables.add(\n      this.edgeless.service.viewport.viewportUpdated.on(() =>\n        this.requestUpdate()\n      )\n    );\n  }\n\n  override render() {\n    const position = this._getPanelPosition();\n    if (!position) return nothing;\n\n    const style = styleMap({\n      left: `${position[0]}px`,\n      top: `${position[1]}px`,\n    });\n    const { style: currentSourceStyle, type: currentSourceType } =\n      this._getCurrentSourceInfo();\n\n    const shapeButtons = repeat(\n      ShapeComponentConfig,\n      ({ name, generalIcon, scribbledIcon, tooltip }) => html`\n        <edgeless-tool-icon-button\n          .tooltip=${tooltip}\n          @pointerenter=${() => this._showOverlay(name)}\n          @pointerleave=${() => this._removeOverlay()}\n          @click=${() => this._autoComplete(name)}\n        >\n          ${currentSourceStyle === 'General' ? generalIcon : scribbledIcon}\n        </edgeless-tool-icon-button>\n      `\n    );\n\n    return html`<div class=\"auto-complete-panel-container\" style=${style}>\n      ${shapeButtons}\n\n      <edgeless-tool-icon-button\n        .tooltip=${'Text'}\n        @pointerenter=${() => this._showOverlay('text')}\n        @pointerleave=${() => this._removeOverlay()}\n        @click=${() => this._autoComplete('text')}\n      >\n        ${FontFamilyIcon}\n      </edgeless-tool-icon-button>\n      <edgeless-tool-icon-button\n        .tooltip=${'Note'}\n        @pointerenter=${() => this._showOverlay('note')}\n        @pointerleave=${() => this._removeOverlay()}\n        @click=${() => this._autoComplete('note')}\n      >\n        ${SmallNoteIcon}\n      </edgeless-tool-icon-button>\n      <edgeless-tool-icon-button\n        .tooltip=${'Frame'}\n        @pointerenter=${() => this._showOverlay('frame')}\n        @pointerleave=${() => this._removeOverlay()}\n        @click=${() => this._autoComplete('frame')}\n      >\n        ${FrameIcon}\n      </edgeless-tool-icon-button>\n\n      <edgeless-tool-icon-button\n        .iconContainerPadding=${0}\n        .tooltip=${capitalizeFirstLetter(currentSourceType)}\n        @pointerenter=${() => this._showOverlay(currentSourceType)}\n        @pointerleave=${() => this._removeOverlay()}\n        @click=${() => this._autoComplete(currentSourceType)}\n      >\n        <div class=\"row-button\">Add a same object</div>\n      </edgeless-tool-icon-button>\n    </div>`;\n  }\n\n  @property({ attribute: false })\n  accessor connector: ConnectorElementModel;\n\n  @property({ attribute: false })\n  accessor currentSource: ShapeElementModel | NoteBlockModel;\n\n  @property({ attribute: false })\n  accessor edgeless: EdgelessRootBlockComponent;\n\n  @property({ attribute: false })\n  accessor position: [number, number];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'edgeless-auto-complete-panel': EdgelessAutoCompletePanel;\n  }\n}\n"]}