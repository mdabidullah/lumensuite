{"version":3,"file":"edgeless-auto-complete.js","sourceRoot":"","sources":["../../../../../src/root-block/edgeless/components/auto-complete/edgeless-auto-complete.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  Connection,\n  ConnectorElementModel,\n  NoteBlockModel,\n  ShapeType,\n} from '@blocksuite/affine-model';\nimport type { Bound, IVec } from '@blocksuite/global/utils';\n\nimport {\n  CanvasElementType,\n  Overlay,\n  type RoughCanvas,\n} from '@blocksuite/affine-block-surface';\nimport {\n  ConnectorPathGenerator,\n  MindmapElementModel,\n} from '@blocksuite/affine-block-surface';\nimport {\n  AutoCompleteArrowIcon,\n  MindMapChildIcon,\n  MindMapSiblingIcon,\n  NoteAutoCompleteIcon,\n} from '@blocksuite/affine-components/icons';\nimport {\n  DEFAULT_SHAPE_STROKE_COLOR,\n  LayoutType,\n  ShapeElementModel,\n  shapeMethods,\n} from '@blocksuite/affine-model';\nimport { handleNativeRangeAtPoint } from '@blocksuite/affine-shared/utils';\nimport { WithDisposable } from '@blocksuite/block-std';\nimport { assertExists, DisposableGroup, Vec } from '@blocksuite/global/utils';\nimport { css, html, LitElement, nothing } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { styleMap } from 'lit/directives/style-map.js';\n\nimport type { EdgelessRootBlockComponent } from '../../edgeless-root-block.js';\nimport type { SelectedRect } from '../rects/edgeless-selected-rect.js';\n\nimport { NOTE_INIT_HEIGHT } from '../../utils/consts.js';\nimport { isNoteBlock } from '../../utils/query.js';\nimport { mountShapeTextEditor } from '../../utils/text.js';\nimport { EdgelessAutoCompletePanel } from './auto-complete-panel.js';\nimport {\n  createEdgelessElement,\n  Direction,\n  getPosition,\n  isShape,\n  MAIN_GAP,\n  nextBound,\n} from './utils.js';\n\nclass AutoCompleteOverlay extends Overlay {\n  linePoints: IVec[] = [];\n\n  renderShape: ((ctx: CanvasRenderingContext2D) => void) | null = null;\n\n  stroke = '';\n\n  override render(ctx: CanvasRenderingContext2D, _rc: RoughCanvas) {\n    if (this.linePoints.length && this.renderShape) {\n      ctx.setLineDash([2, 2]);\n      ctx.strokeStyle = this.stroke;\n      ctx.beginPath();\n      this.linePoints.forEach((p, index) => {\n        if (index === 0) ctx.moveTo(p[0], p[1]);\n        else ctx.lineTo(p[0], p[1]);\n      });\n      ctx.stroke();\n\n      this.renderShape(ctx);\n      ctx.stroke();\n    }\n  }\n}\n\n@customElement('edgeless-auto-complete')\nexport class EdgelessAutoComplete extends WithDisposable(LitElement) {\n  static override styles = css`\n    .edgeless-auto-complete-container {\n      position: absolute;\n      z-index: 1;\n      pointer-events: none;\n    }\n    .edgeless-auto-complete-arrow-wrapper {\n      width: 72px;\n      height: 44px;\n      position: absolute;\n      z-index: 1;\n      pointer-events: auto;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n    .edgeless-auto-complete-arrow-wrapper.hidden {\n      display: none;\n    }\n    .edgeless-auto-complete-arrow {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 24px;\n      height: 24px;\n      border-radius: 19px;\n      cursor: pointer;\n      pointer-events: auto;\n      transition:\n        background 0.3s linear,\n        box-shadow 0.2s linear;\n    }\n\n    .edgeless-auto-complete-arrow-wrapper:hover\n      > .edgeless-auto-complete-arrow {\n      border: 1px solid var(--affine-border-color);\n      box-shadow: var(--affine-shadow-1);\n      background: var(--affine-white);\n    }\n\n    .edgeless-auto-complete-arrow-wrapper\n      > .edgeless-auto-complete-arrow:hover {\n      border: 1px solid var(--affine-white-10);\n      box-shadow: var(--affine-shadow-1);\n      background: var(--affine-primary-color);\n    }\n\n    .edgeless-auto-complete-arrow-wrapper.mindmap\n      > .edgeless-auto-complete-arrow {\n      border: 1px solid var(--affine-border-color);\n      box-shadow: var(--affine-shadow-1);\n      background: var(--affine-white);\n\n      transition:\n        background 0.3s linear,\n        color 0.2s linear;\n    }\n\n    .edgeless-auto-complete-arrow-wrapper.mindmap\n      > .edgeless-auto-complete-arrow:hover {\n      border: 1px solid var(--affine-white-10);\n      box-shadow: var(--affine-shadow-1);\n      background: var(--affine-primary-color);\n    }\n\n    .edgeless-auto-complete-arrow svg {\n      fill: #77757d;\n      color: #77757d;\n    }\n    .edgeless-auto-complete-arrow:hover svg {\n      fill: #ffffff;\n      color: #ffffff;\n    }\n  `;\n\n  private _autoCompleteOverlay: AutoCompleteOverlay = new AutoCompleteOverlay();\n\n  private _onPointerDown = (e: PointerEvent, type: Direction) => {\n    const { service } = this.edgeless;\n    const viewportRect = service.viewport.boundingClientRect;\n    const start = service.viewport.toModelCoord(\n      e.clientX - viewportRect.left,\n      e.clientY - viewportRect.top\n    );\n\n    if (!this.edgeless.dispatcher) return;\n\n    let connector: ConnectorElementModel | null;\n\n    this._disposables.addFromEvent(document, 'pointermove', e => {\n      const point = service.viewport.toModelCoord(\n        e.clientX - viewportRect.left,\n        e.clientY - viewportRect.top\n      );\n      if (Vec.dist(start, point) > 8 && !this._isMoving) {\n        if (!this.canShowAutoComplete) return;\n        this._isMoving = true;\n        const { startPosition } = getPosition(type);\n        connector = this._addConnector(\n          {\n            id: this.current.id,\n            position: startPosition,\n          },\n          {\n            position: point,\n          }\n        );\n      }\n      if (this._isMoving) {\n        assertExists(connector);\n        const otherSideId = connector.source.id;\n\n        connector.target =\n          this.edgeless.service.connectorOverlay.renderConnector(\n            point,\n            otherSideId ? [otherSideId] : []\n          );\n      }\n    });\n\n    this._disposables.addFromEvent(document, 'pointerup', e => {\n      if (!this._isMoving) {\n        this._generateElementOnClick(type);\n      } else if (connector && !connector.target.id) {\n        this.edgeless.service.selection.clear();\n        this._createAutoCompletePanel(e, connector);\n      }\n\n      this._isMoving = false;\n      this.edgeless.service.connectorOverlay.clear();\n      this._disposables.dispose();\n      this._disposables = new DisposableGroup();\n    });\n  };\n\n  private _pathGenerator!: ConnectorPathGenerator;\n\n  private _timer: ReturnType<typeof setTimeout> | null = null;\n\n  get canShowAutoComplete() {\n    const { current } = this;\n    return isShape(current) || isNoteBlock(current);\n  }\n\n  private _addConnector(source: Connection, target: Connection) {\n    const { edgeless } = this;\n    const id = edgeless.service.addElement(CanvasElementType.CONNECTOR, {\n      source,\n      target,\n    });\n    return edgeless.service.getElementById(id) as ConnectorElementModel;\n  }\n\n  private _addMindmapNode(\n    direction: LayoutType.LEFT | LayoutType.RIGHT,\n    target: 'sibling' | 'child'\n  ) {\n    const mindmap = this.current.group;\n\n    if (!(mindmap instanceof MindmapElementModel)) return;\n\n    const parentNode =\n      target === 'sibling'\n        ? (mindmap.getParentNode(this.current.id) ?? this.current)\n        : this.current;\n\n    const newNode = mindmap.addNode(\n      parentNode.id,\n      target === 'sibling' ? this.current.id : undefined,\n      undefined,\n      undefined,\n      direction\n    );\n\n    requestAnimationFrame(() => {\n      mountShapeTextEditor(\n        this.edgeless.service.getElementById(newNode) as ShapeElementModel,\n        this.edgeless\n      );\n    });\n  }\n\n  private _computeLine(\n    type: Direction,\n    curShape: ShapeElementModel,\n    nextBound: Bound\n  ) {\n    const startBound = this.current.elementBound;\n    const { startPosition, endPosition } = getPosition(type);\n    const nextShape = {\n      xywh: nextBound.serialize(),\n      rotate: curShape.rotate,\n      shapeType: curShape.shapeType,\n    };\n    const startPoint = curShape.getRelativePointLocation(startPosition);\n    const endPoint = curShape.getRelativePointLocation.call(\n      nextShape,\n      endPosition\n    );\n\n    return this._pathGenerator.generateOrthogonalConnectorPath({\n      startBound,\n      endBound: nextBound,\n      startPoint,\n      endPoint,\n    });\n  }\n\n  private _computeNextBound(type: Direction) {\n    if (isShape(this.current)) {\n      const connectedShapes = this._getConnectedElements(this.current).filter(\n        e => e instanceof ShapeElementModel\n      ) as ShapeElementModel[];\n      return nextBound(type, this.current, connectedShapes);\n    } else {\n      const bound = this.current.elementBound;\n      switch (type) {\n        case Direction.Right: {\n          bound.x += bound.w + MAIN_GAP;\n          break;\n        }\n        case Direction.Bottom: {\n          bound.y += bound.h + MAIN_GAP;\n          break;\n        }\n        case Direction.Left: {\n          bound.x -= bound.w + MAIN_GAP;\n          break;\n        }\n        case Direction.Top: {\n          bound.y -= bound.h + MAIN_GAP;\n          break;\n        }\n      }\n      return bound;\n    }\n  }\n\n  private _createAutoCompletePanel(\n    e: PointerEvent,\n    connector: ConnectorElementModel\n  ) {\n    if (!this.canShowAutoComplete) return;\n\n    const position = this.edgeless.service.viewport.toModelCoord(\n      e.clientX,\n      e.clientY\n    );\n    const autoCompletePanel = new EdgelessAutoCompletePanel(\n      position,\n      this.edgeless,\n      this.current,\n      connector\n    );\n\n    this.edgeless.append(autoCompletePanel);\n  }\n\n  private _generateElementOnClick(type: Direction) {\n    const { doc, service } = this.edgeless;\n    const bound = this._computeNextBound(type);\n    const id = createEdgelessElement(this.edgeless, this.current, bound);\n    if (isShape(this.current)) {\n      const { startPosition, endPosition } = getPosition(type);\n      this._addConnector(\n        {\n          id: this.current.id,\n          position: startPosition,\n        },\n        {\n          id,\n          position: endPosition,\n        }\n      );\n\n      mountShapeTextEditor(\n        service.getElementById(id) as ShapeElementModel,\n        this.edgeless\n      );\n    } else {\n      const model = doc.getBlockById(id);\n      assertExists(model);\n      const [x, y] = service.viewport.toViewCoord(\n        bound.center[0],\n        bound.y + NOTE_INIT_HEIGHT / 2\n      );\n      requestAnimationFrame(() => {\n        handleNativeRangeAtPoint(x, y);\n      });\n    }\n\n    this.edgeless.service.selection.set({\n      elements: [id],\n      editing: true,\n    });\n    this.removeOverlay();\n  }\n\n  private _getConnectedElements(element: ShapeElementModel) {\n    const service = this.edgeless.service;\n\n    return service.getConnectors(element.id).reduce((prev, current) => {\n      if (current.target.id === element.id && current.source.id) {\n        prev.push(\n          service.getElementById(current.source.id) as ShapeElementModel\n        );\n      }\n      if (current.source.id === element.id && current.target.id) {\n        prev.push(\n          service.getElementById(current.target.id) as ShapeElementModel\n        );\n      }\n\n      return prev;\n    }, [] as ShapeElementModel[]);\n  }\n\n  private _getMindmapButtons():\n    | [Direction, 'child' | 'sibling', LayoutType.LEFT | LayoutType.RIGHT][]\n    | null {\n    const mindmap = this.current.group as MindmapElementModel;\n    const mindmapDirection =\n      this.current instanceof ShapeElementModel &&\n      mindmap instanceof MindmapElementModel\n        ? mindmap.getLayoutDir(this.current.id)\n        : null;\n    const isRoot = mindmap?.tree.id === this.current.id;\n\n    let result: ReturnType<typeof this._getMindmapButtons> = null;\n\n    switch (mindmapDirection) {\n      case LayoutType.LEFT:\n        result = [[Direction.Left, 'child', LayoutType.LEFT]];\n\n        if (!isRoot) {\n          result.push([Direction.Bottom, 'sibling', mindmapDirection]);\n        }\n        return result;\n      case LayoutType.RIGHT:\n        result = [[Direction.Right, 'child', LayoutType.RIGHT]];\n\n        if (!isRoot) {\n          result.push([Direction.Bottom, 'sibling', mindmapDirection]);\n        }\n        return result;\n      case LayoutType.BALANCE:\n        result = [\n          [Direction.Right, 'child', LayoutType.RIGHT],\n          [Direction.Left, 'child', LayoutType.LEFT],\n        ];\n        return result;\n      default:\n        result = null;\n    }\n\n    return result;\n  }\n\n  private _renderArrow() {\n    const isShape = this.current instanceof ShapeElementModel;\n    const { selectedRect } = this;\n    const { zoom } = this.edgeless.service.viewport;\n    const width = 72;\n    const height = 44;\n\n    // Auto-complete arrows for shape and note are different\n    // Shape: right, bottom, left, top\n    // Note: right, left\n    const arrowDirections = isShape\n      ? [Direction.Right, Direction.Bottom, Direction.Left, Direction.Top]\n      : [Direction.Right, Direction.Left];\n    const arrowMargin = isShape ? height / 2 : height * (2 / 3);\n    const Arrows = arrowDirections.map(type => {\n      let transform = '';\n\n      const icon = isShape ? AutoCompleteArrowIcon : NoteAutoCompleteIcon;\n\n      switch (type) {\n        case Direction.Top:\n          transform += `translate(${\n            selectedRect.width / 2\n          }px, ${-arrowMargin}px)`;\n          break;\n        case Direction.Right:\n          transform += `translate(${selectedRect.width + arrowMargin}px, ${\n            selectedRect.height / 2\n          }px)`;\n\n          isShape && (transform += `rotate(90deg)`);\n          break;\n        case Direction.Bottom:\n          transform += `translate(${selectedRect.width / 2}px, ${\n            selectedRect.height + arrowMargin\n          }px)`;\n          isShape && (transform += `rotate(180deg)`);\n          break;\n        case Direction.Left:\n          transform += `translate(${-arrowMargin}px, ${\n            selectedRect.height / 2\n          }px)`;\n          isShape && (transform += `rotate(-90deg)`);\n          break;\n      }\n      transform += `translate(${-width / 2}px, ${-height / 2}px)`;\n      const arrowWrapperClasses = classMap({\n        'edgeless-auto-complete-arrow-wrapper': true,\n        hidden: !isShape && type === Direction.Left && zoom >= 1.5,\n      });\n\n      return html`<div\n        class=${arrowWrapperClasses}\n        style=${styleMap({\n          transform,\n          transformOrigin: 'left top',\n        })}\n      >\n        <div\n          class=\"edgeless-auto-complete-arrow\"\n          @mouseenter=${() => {\n            this._timer = setTimeout(() => {\n              if (this.current instanceof ShapeElementModel) {\n                const bound = this._computeNextBound(type);\n                const path = this._computeLine(type, this.current, bound);\n                this._showNextShape(\n                  this.current,\n                  bound,\n                  path,\n                  this.current.shapeType\n                );\n              }\n            }, 300);\n          }}\n          @mouseleave=${() => {\n            this.removeOverlay();\n          }}\n          @pointerdown=${(e: PointerEvent) => {\n            this._onPointerDown(e, type);\n          }}\n        >\n          ${icon}\n        </div>\n      </div>`;\n    });\n\n    return Arrows;\n  }\n\n  private _renderMindMapButtons() {\n    const mindmapButtons = this._getMindmapButtons();\n\n    if (!mindmapButtons) {\n      return;\n    }\n\n    const { selectedRect } = this;\n    const { zoom } = this.edgeless.service.viewport;\n    const width = 72;\n    const height = 44;\n    const buttonMargin = height / 2;\n\n    return mindmapButtons.map(type => {\n      let transform = '';\n\n      const [position, target, layout] = type;\n      const isLeftLayout = layout === LayoutType.LEFT;\n      const icon = target === 'child' ? MindMapChildIcon : MindMapSiblingIcon;\n\n      switch (position) {\n        case Direction.Bottom:\n          transform += `translate(${selectedRect.width / 2}px, ${\n            selectedRect.height + buttonMargin\n          }px)`;\n          isLeftLayout && (transform += `scale(-1)`);\n          break;\n        case Direction.Right:\n          transform += `translate(${selectedRect.width + buttonMargin}px, ${\n            selectedRect.height / 2\n          }px)`;\n          break;\n        case Direction.Left:\n          transform += `translate(${-buttonMargin}px, ${\n            selectedRect.height / 2\n          }px)`;\n\n          transform += `scale(-1)`;\n          break;\n      }\n\n      transform += `translate(${-width / 2}px, ${-height / 2}px)`;\n\n      const arrowWrapperClasses = classMap({\n        'edgeless-auto-complete-arrow-wrapper': true,\n        hidden: position === Direction.Left && zoom >= 1.5,\n        mindmap: true,\n      });\n\n      return html`<div\n        class=${arrowWrapperClasses}\n        style=${styleMap({\n          transform,\n          transformOrigin: 'left top',\n        })}\n      >\n        <div\n          class=\"edgeless-auto-complete-arrow\"\n          @pointerdown=${() => {\n            this._addMindmapNode(layout, target);\n          }}\n        >\n          ${icon}\n        </div>\n      </div>`;\n    });\n  }\n\n  private _showNextShape(\n    current: ShapeElementModel,\n    bound: Bound,\n    path: IVec[],\n    targetType: ShapeType\n  ) {\n    const { surface } = this.edgeless;\n    surface.renderer.addOverlay(this._autoCompleteOverlay);\n\n    this._autoCompleteOverlay.stroke = surface.renderer.getColorValue(\n      current.strokeColor,\n      DEFAULT_SHAPE_STROKE_COLOR,\n      true\n    );\n    this._autoCompleteOverlay.linePoints = path;\n    this._autoCompleteOverlay.renderShape = ctx => {\n      shapeMethods[targetType].draw(ctx, { ...bound, rotate: current.rotate });\n    };\n    surface.refresh();\n  }\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n    this._pathGenerator = new ConnectorPathGenerator({\n      getElementById: id => this.edgeless.service.getElementById(id),\n    });\n  }\n\n  override firstUpdated() {\n    const { _disposables, edgeless } = this;\n\n    _disposables.add(\n      this.edgeless.service.selection.slots.updated.on(() => {\n        this._autoCompleteOverlay.linePoints = [];\n        this._autoCompleteOverlay.renderShape = null;\n      })\n    );\n\n    _disposables.add(() => this.removeOverlay());\n\n    _disposables.add(\n      edgeless.host.event.add('pointerMove', () => {\n        const state = edgeless.tools.getHoverState();\n\n        if (!state) {\n          this._isHover = false;\n          return;\n        }\n\n        this._isHover = state.content === this.current ? true : false;\n      })\n    );\n\n    this.edgeless.handleEvent('dragStart', () => {\n      this._isMoving = true;\n    });\n    this.edgeless.handleEvent('dragEnd', () => {\n      this._isMoving = false;\n    });\n  }\n\n  removeOverlay() {\n    this._timer && clearTimeout(this._timer);\n    this.edgeless.surface.renderer.removeOverlay(this._autoCompleteOverlay);\n  }\n\n  override render() {\n    const isShape = this.current instanceof ShapeElementModel;\n    const isMindMap = this.current.group instanceof MindmapElementModel;\n\n    if (this._isMoving || (this._isHover && !isShape)) {\n      this.removeOverlay();\n      return nothing;\n    }\n    const { selectedRect } = this;\n\n    return html`<div\n      class=\"edgeless-auto-complete-container\"\n      style=${styleMap({\n        top: selectedRect.top + 'px',\n        left: selectedRect.left + 'px',\n        width: selectedRect.width + 'px',\n        height: selectedRect.height + 'px',\n        transform: `rotate(${selectedRect.rotate}deg)`,\n      })}\n    >\n      ${isMindMap ? this._renderMindMapButtons() : this._renderArrow()}\n    </div>`;\n  }\n\n  @state()\n  private accessor _isHover = true;\n\n  @state()\n  private accessor _isMoving = false;\n\n  @property({ attribute: false })\n  accessor current!: ShapeElementModel | NoteBlockModel;\n\n  @property({ attribute: false })\n  accessor edgeless!: EdgelessRootBlockComponent;\n\n  @property({ attribute: false })\n  accessor selectedRect!: SelectedRect;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'edgeless-auto-complete': EdgelessAutoComplete;\n  }\n}\n"]}