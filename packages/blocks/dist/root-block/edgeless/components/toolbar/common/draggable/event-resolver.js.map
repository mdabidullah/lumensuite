{"version":3,"file":"event-resolver.js","sourceRoot":"","sources":["../../../../../../../src/root-block/edgeless/components/toolbar/common/draggable/event-resolver.ts"],"names":[],"mappings":"AAQA,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,KAAiB,EAAE,EAAE,CACjD,CAAC;IACC,SAAS,EAAE,OAAO;IAClB,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;IAC3B,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;IAC3B,EAAE,EAAE,KAAK,CAAC,aAA4B;IACtC,aAAa,EAAE,KAAK;CACrB,CAA4B,CAAC;AAEhC,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,KAAiB,EAAE,EAAE,CACjD,CAAC;IACC,SAAS,EAAE,OAAO;IAClB,CAAC,EAAE,KAAK,CAAC,OAAO;IAChB,CAAC,EAAE,KAAK,CAAC,OAAO;IAChB,EAAE,EAAE,KAAK,CAAC,aAA4B;IACtC,aAAa,EAAE,KAAK;CACrB,CAA4B,CAAC","sourcesContent":["export type ElementDragEvent = {\n  inputType: 'mouse' | 'touch';\n  x: number;\n  y: number;\n  el: HTMLElement;\n  originalEvent: MouseEvent | TouchEvent;\n};\n\nexport const touchResolver = (event: TouchEvent) =>\n  ({\n    inputType: 'touch',\n    x: event.touches[0].clientX,\n    y: event.touches[0].clientY,\n    el: event.currentTarget as HTMLElement,\n    originalEvent: event,\n  }) satisfies ElementDragEvent;\n\nexport const mouseResolver = (event: MouseEvent) =>\n  ({\n    inputType: 'mouse',\n    x: event.clientX,\n    y: event.clientY,\n    el: event.currentTarget as HTMLElement,\n    originalEvent: event,\n  }) satisfies ElementDragEvent;\n"]}