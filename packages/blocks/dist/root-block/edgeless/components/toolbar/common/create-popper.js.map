{"version":3,"file":"create-popper.js","sourceRoot":"","sources":["../../../../../../src/root-block/edgeless/components/toolbar/common/create-popper.ts"],"names":[],"mappings":"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","sourcesContent":["import { assertExists } from '@lumensuite/global/utils';\n\n// more than 100% due to the shadow\nconst leaveToPercent = `calc(100% + 10px)`;\n\nexport interface MenuPopper<T extends HTMLElement> {\n  element: T;\n  dispose: () => void;\n  cancel?: () => void;\n}\n\n// store active poppers\nconst popMap = new WeakMap<HTMLElement, Map<string, MenuPopper<HTMLElement>>>();\n\nfunction animateEnter(el: HTMLElement) {\n  el.style.transform = 'translateY(0)';\n}\nfunction animateLeave(el: HTMLElement) {\n  el.style.transform = `translateY(${leaveToPercent})`;\n}\n\nexport function createPopper<T extends keyof HTMLElementTagNameMap>(\n  tagName: T,\n  reference: HTMLElement,\n  options?: {\n    /** transition duration in ms */\n    duration?: number;\n    onDispose?: () => void;\n    setProps?: (ele: HTMLElementTagNameMap[T]) => void;\n  }\n) {\n  const duration = options?.duration ?? 230;\n\n  if (!popMap.has(reference)) popMap.set(reference, new Map());\n  const elMap = popMap.get(reference);\n  assertExists(elMap);\n  // if there is already a popper, cancel leave transition and apply enter transition\n  if (elMap.has(tagName)) {\n    const popper = elMap.get(tagName);\n    assertExists(popper);\n    popper.cancel?.();\n    requestAnimationFrame(() => animateEnter(popper.element));\n    return popper as MenuPopper<HTMLElementTagNameMap[T]>;\n  }\n\n  const clipWrapper = document.createElement('div');\n  const menu = document.createElement(tagName);\n  options?.setProps?.(menu);\n  assertExists(reference.shadowRoot);\n  clipWrapper.append(menu);\n  reference.shadowRoot.append(clipWrapper);\n\n  // apply enter transition\n  menu.style.transition = `all ${duration}ms ease`;\n  animateLeave(menu);\n  requestAnimationFrame(() => animateEnter(menu));\n\n  Object.assign(clipWrapper.style, {\n    height: '100px',\n    pointerEvents: 'none',\n    position: 'absolute',\n    overflow: 'hidden',\n    width: '100%',\n    maxWidth: '100%',\n    boxSizing: 'border-box',\n    left: '0px',\n    bottom: '100%',\n    display: 'flex',\n    alignItems: 'end',\n  });\n\n  Object.assign(menu.style, {\n    width: '100%',\n    marginLeft: '30px',\n    maxWidth: 'calc(100% - 60px)',\n    bottom: '0%',\n    pointerEvents: 'auto',\n  });\n  const remove = () => {\n    clipWrapper.remove();\n    menu.remove();\n    popMap.get(reference)?.delete(tagName);\n    options?.onDispose?.();\n  };\n\n  const popper: MenuPopper<HTMLElementTagNameMap[T]> = {\n    element: menu,\n    dispose: () => {\n      // apply leave transition\n      animateLeave(menu);\n      menu.addEventListener('transitionend', remove, { once: true });\n      popper.cancel = () => menu.removeEventListener('transitionend', remove);\n    },\n  };\n\n  popMap.get(reference)?.set(tagName, popper);\n  return popper;\n}\n"]}