{"version":3,"file":"shape-tool-button.js","sourceRoot":"","sources":["../../../../../../src/root-block/edgeless/components/toolbar/shape/shape-tool-button.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAkB,SAAS,EAAE,MAAM,0BAA0B,CAAC;AACrE,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAC;AACtD,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAIlD,OAAO,EAAE,mBAAmB,EAAE,MAAM,8BAA8B,CAAC;AACnE,OAAO,iCAAiC,CAAC;AACzC,OAAO,EAAE,sBAAsB,EAAE,MAAM,gBAAgB,CAAC;AACxD,OAAO,EAAE,wBAAwB,EAAE,MAAM,yBAAyB,CAAC;AACnE,OAAO,sBAAsB,CAAC;AAC9B,OAAO,iBAAiB,CAAC;IAGZ,uBAAuB;4BADnC,aAAa,CAAC,4BAA4B,CAAC;;;;sBACC,wBAAwB,CACnE,aAAa,CAAC,UAAU,CAAC,CAC1B;uCAFoC,SAAQ,WAE5C;;;;YAcS,sBAAiB,GAAG,CAAC,KAAqB,EAAE,EAAE;gBACpD,IAAI,CAAC,eAAe,CAAC;oBACnB,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,SAAS,EAAE,KAAK,CAAC,IAAI;iBACtB,CAAC,CAAC;gBACH,IAAI,CAAC,IAAI,CAAC,MAAM;oBAAE,IAAI,CAAC,WAAW,EAAE,CAAC;YACvC,CAAC,CAAC;YAEM,wBAAmB,GAAG,GAAG,EAAE;gBACjC,IAAI,IAAI,CAAC,gBAAgB,EAAE;oBAAE,OAAO;gBAEpC,IAAI,CAAC,eAAe,CAAC;oBACnB,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,SAAS,EAAE,SAAS,CAAC,IAAI;iBAC1B,CAAC,CAAC;gBACH,IAAI,CAAC,IAAI,CAAC,MAAM;oBAAE,IAAI,CAAC,WAAW,EAAE,CAAC;YACvC,CAAC,CAAC;YAEO,SAAI,GAAG,OAAgB,CAAC;QA6CnC,CAAC;;;YA/ED,6KA+EC;;;;iBA5EiB,WAAM,GAAG,GAAG,CAAA;;;;;;;;;;;GAW3B,AAXqB,CAWpB;QAsBM,WAAW;YACjB,IAAI,CAAC,YAAY,CAAC,qBAAqB,EAAE,IAAI,EAAE;gBAC7C,QAAQ,EAAE,GAAG,CAAC,EAAE;oBACd,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;oBAC7B,GAAG,CAAC,QAAQ,GAAG,CAAC,SAAoB,EAAE,EAAE;wBACtC,IAAI,CAAC,eAAe,CAAC;4BACnB,IAAI,EAAE,IAAI,CAAC,IAAI;4BACf,SAAS;yBACV,CAAC,CAAC;wBACH,IAAI,CAAC,cAAc,EAAE,CAAC;oBACxB,CAAC,CAAC;gBACJ,CAAC;aACF,CAAC,CAAC;QACL,CAAC;QAEO,cAAc;YACpB,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,iBAAiB,CAAC;YACzD,IAAI,UAAU,YAAY,mBAAmB,EAAE,CAAC;gBAC9C,UAAU,CAAC,aAAa,EAAE,CAAC;YAC7B,CAAC;QACH,CAAC;QAEQ,MAAM;YACb,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;YAExB,OAAO,IAAI,CAAA;;;mBAGI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,sBAAsB,CAAC,OAAO,EAAE,GAAG,CAAC;yBACjD,CAAC;kBACR,MAAM;;;sBAGF,IAAI,CAAC,QAAQ;8BACL,IAAI,CAAC,gBAAgB;;mBAEhC,IAAI,CAAC,mBAAmB;0BACjB,IAAI,CAAC,iBAAiB;;;;KAI3C,CAAC;QACJ,CAAC;;YA9EU,uDAAuB;;;;;SAAvB,uBAAuB","sourcesContent":["import { type ShapeName, ShapeType } from '@lumensuite/affine-model';\nimport { SignalWatcher } from '@lumensuite/block-std';\nimport { css, html, LitElement } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\nimport type { DraggableShape } from './utils.js';\n\nimport { ShapeToolController } from '../../../tools/shape-tool.js';\nimport '../../buttons/toolbar-button.js';\nimport { getTooltipWithShortcut } from '../../utils.js';\nimport { EdgelessToolbarToolMixin } from '../mixins/tool.mixin.js';\nimport './shape-draggable.js';\nimport './shape-menu.js';\n\n@customElement('edgeless-shape-tool-button')\nexport class EdgelessShapeToolButton extends EdgelessToolbarToolMixin(\n  SignalWatcher(LitElement)\n) {\n  static override styles = css`\n    :host {\n      display: block;\n      width: 100%;\n      height: 100%;\n    }\n    edgeless-toolbar-button,\n    .shapes {\n      width: 100%;\n      height: 64px;\n    }\n  `;\n\n  private _handleShapeClick = (shape: DraggableShape) => {\n    this.setEdgelessTool({\n      type: this.type,\n      shapeName: shape.name,\n    });\n    if (!this.popper) this._toggleMenu();\n  };\n\n  private _handleWrapperClick = () => {\n    if (this.tryDisposePopper()) return;\n\n    this.setEdgelessTool({\n      type: this.type,\n      shapeName: ShapeType.Rect,\n    });\n    if (!this.popper) this._toggleMenu();\n  };\n\n  override type = 'shape' as const;\n\n  private _toggleMenu() {\n    this.createPopper('edgeless-shape-menu', this, {\n      setProps: ele => {\n        ele.edgeless = this.edgeless;\n        ele.onChange = (shapeName: ShapeName) => {\n          this.setEdgelessTool({\n            type: this.type,\n            shapeName,\n          });\n          this._updateOverlay();\n        };\n      },\n    });\n  }\n\n  private _updateOverlay() {\n    const controller = this.edgeless.tools.currentController;\n    if (controller instanceof ShapeToolController) {\n      controller.createOverlay();\n    }\n  }\n\n  override render() {\n    const { active } = this;\n\n    return html`\n      <edgeless-toolbar-button\n        class=\"edgeless-shape-button\"\n        .tooltip=${this.popper ? '' : getTooltipWithShortcut('Shape', 'S')}\n        .tooltipOffset=${5}\n        .active=${active}\n      >\n        <edgeless-toolbar-shape-draggable\n          .edgeless=${this.edgeless}\n          .toolbarContainer=${this.toolbarContainer}\n          class=\"shapes\"\n          @click=${this._handleWrapperClick}\n          .onShapeClick=${this._handleShapeClick}\n        >\n        </edgeless-toolbar-shape-draggable>\n      </edgeless-toolbar-button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'edgeless-shape-tool-button': EdgelessShapeToolButton;\n  }\n}\n"]}