{"version":3,"file":"lasso-tool-button.js","sourceRoot":"","sources":["../../../../../../src/root-block/edgeless/components/toolbar/lasso/lasso-tool-button.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ArrowUpIcon,\n  LassoFreeHandIcon,\n  LassoPolygonalIcon,\n} from '@blocksuite/affine-components/icons';\nimport { WithDisposable } from '@blocksuite/block-std';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, query, state } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\n\nimport { LassoMode } from '../../../../../_common/types.js';\nimport { getTooltipWithShortcut } from '../../utils.js';\nimport { QuickToolMixin } from '../mixins/quick-tool.mixin.js';\n\n@customElement('edgeless-lasso-tool-button')\nexport class EdgelessDefaultToolButton extends QuickToolMixin(\n  WithDisposable(LitElement)\n) {\n  static override styles = css`\n    .current-icon {\n      transition: 100ms;\n      width: 24px;\n      height: 24px;\n    }\n    .current-icon > svg {\n      display: block;\n    }\n    .arrow-up-icon {\n      position: absolute;\n      top: 4px;\n      right: 2px;\n      font-size: 0;\n    }\n  `;\n\n  private _changeTool = () => {\n    const tool = this.edgelessTool;\n    if (tool.type !== 'lasso') {\n      this.setEdgelessTool({ type: 'lasso', mode: this.curMode });\n      return;\n    }\n\n    this._fadeOut();\n    setTimeout(() => {\n      this.curMode === LassoMode.FreeHand\n        ? this.setEdgelessTool({ type: 'lasso', mode: LassoMode.Polygonal })\n        : this.setEdgelessTool({ type: 'lasso', mode: LassoMode.FreeHand });\n      this._fadeIn();\n    }, 100);\n  };\n\n  override type = 'lasso' as const;\n\n  private _fadeIn() {\n    this.currentIcon.style.opacity = '1';\n    this.currentIcon.style.transform = `translateY(0px)`;\n  }\n\n  private _fadeOut() {\n    this.currentIcon.style.opacity = '0';\n    this.currentIcon.style.transform = `translateY(-5px)`;\n  }\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n\n    this.disposables.add(\n      this.edgeless.slots.edgelessToolUpdated.on(tool => {\n        if (tool.type === 'lasso') {\n          const { mode } = tool;\n          this.curMode = mode;\n          // this.edgeless.service.editPropsStore.record(this.type, { mode });\n        }\n      })\n    );\n  }\n\n  override render() {\n    const type = this.edgelessTool?.type;\n    const mode = this.curMode === LassoMode.FreeHand ? 'freehand' : 'polygonal';\n\n    const arrowColor =\n      type === 'lasso' ? 'currentColor' : 'var(--affine-icon-secondary)';\n    return html`\n      <edgeless-tool-icon-button\n        class=\"edgeless-lasso-button ${mode}\"\n        .tooltip=${getTooltipWithShortcut('Lasso', 'L')}\n        .tooltipOffset=${17}\n        .active=${type === 'lasso'}\n        .iconContainerPadding=${6}\n        @click=${this._changeTool}\n      >\n        <span class=\"current-icon\">\n          ${this.curMode === LassoMode.FreeHand\n            ? LassoFreeHandIcon\n            : LassoPolygonalIcon}\n        </span>\n        <span class=\"arrow-up-icon\" style=${styleMap({ color: arrowColor })}>\n          ${ArrowUpIcon}\n        </span>\n      </edgeless-tool-icon-button>\n    `;\n  }\n\n  @state()\n  accessor curMode: LassoMode = LassoMode.FreeHand;\n\n  @query('.current-icon')\n  accessor currentIcon!: HTMLInputElement;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'edgeless-lasso-tool-button': EdgelessDefaultToolButton;\n  }\n}\n"]}