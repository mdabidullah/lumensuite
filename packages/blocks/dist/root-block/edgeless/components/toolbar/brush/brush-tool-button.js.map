{"version":3,"file":"brush-tool-button.js","sourceRoot":"","sources":["../../../../../../src/root-block/edgeless/components/toolbar/brush/brush-tool-button.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EACL,mBAAmB,EACnB,oBAAoB,GACrB,MAAM,qCAAqC,CAAC;AAC7C,OAAO,EAAE,aAAa,EAAE,MAAM,iCAAiC,CAAC;AAChE,OAAO,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAC;AACtD,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAClD,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAEvD,OAAO,iCAAiC,CAAC;AACzC,OAAO,EAAE,sBAAsB,EAAE,MAAM,gBAAgB,CAAC;AACxD,OAAO,EAAE,wBAAwB,EAAE,MAAM,yBAAyB,CAAC;AACnE,OAAO,iBAAiB,CAAC;IAGZ,uBAAuB;4BADnC,aAAa,CAAC,4BAA4B,CAAC;;;;sBACC,wBAAwB,CACnE,aAAa,CAAC,UAAU,CAAC,CAC1B;uCAFoC,SAAQ,WAE5C;;;;YA2BS,YAAO,GAAG,QAAQ,CAAC,GAAG,EAAE;gBAC9B,OAAO,aAAa,CAAC,qBAAqB,CACxC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAc,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAClE,CAAC;YACJ,CAAC,CAAC,CAAC;YAEM,2BAAsB,GAAG,IAAI,CAAC;YAE9B,SAAI,GAAG,OAAgB,CAAC;QAiCnC,CAAC;;;YAtED,6KAsEC;;;;iBAnEiB,WAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;GAwB3B,AAxBqB,CAwBpB;QAYM,gBAAgB;YACtB,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBAAE,OAAO;YACpC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;YAC1D,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;YAC5D,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE;gBAC1B,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,QAAQ,EAAE,CAAC,KAA8B,EAAE,EAAE;oBAC3C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAc,CAAC,eAAe,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;oBACrE,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;gBAC1C,CAAC;aACF,CAAC,CAAC;QACL,CAAC;QAEQ,MAAM;YACb,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;YAC/B,MAAM,IAAI,GAAG,KAAK,KAAK,MAAM,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,oBAAoB,CAAC;YAC3E,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;YAEjC,OAAO,IAAI,CAAA;;;mBAGI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,sBAAsB,CAAC,KAAK,EAAE,GAAG,CAAC;yBAC/C,CAAC;kBACR,MAAM;qBACH,IAAI;iBACR,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE;;qBAEzB,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,wBAAwB,IAAI;;KAE/D,CAAC;QACJ,CAAC;;YArEU,uDAAuB;;;;;SAAvB,uBAAuB","sourcesContent":["import {\n  EdgelessPenDarkIcon,\n  EdgelessPenLightIcon,\n} from '@lumensuite/affine-components/icons';\nimport { ThemeObserver } from '@lumensuite/affine-shared/theme';\nimport { SignalWatcher } from '@lumensuite/block-std';\nimport { computed } from '@lit-labs/preact-signals';\nimport { css, html, LitElement } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\n\nimport '../../buttons/toolbar-button.js';\nimport { getTooltipWithShortcut } from '../../utils.js';\nimport { EdgelessToolbarToolMixin } from '../mixins/tool.mixin.js';\nimport './brush-menu.js';\n\n@customElement('edgeless-brush-tool-button')\nexport class EdgelessBrushToolButton extends EdgelessToolbarToolMixin(\n  SignalWatcher(LitElement)\n) {\n  static override styles = css`\n    :host {\n      display: flex;\n      height: 100%;\n      overflow-y: hidden;\n    }\n    .edgeless-brush-button {\n      height: 100%;\n    }\n    .pen-wrapper {\n      width: 35px;\n      height: 64px;\n      display: flex;\n      align-items: flex-end;\n      justify-content: center;\n    }\n    #edgeless-pen-icon {\n      transition: transform 0.3s ease-in-out;\n      transform: translateY(8px);\n    }\n    .edgeless-brush-button:hover #edgeless-pen-icon,\n    .pen-wrapper.active #edgeless-pen-icon {\n      transform: translateY(0);\n    }\n  `;\n\n  private _color$ = computed(() => {\n    return ThemeObserver.generateColorProperty(\n      this.edgeless.service.editPropsStore.lastProps$.value.brush.color\n    );\n  });\n\n  override enableActiveBackground = true;\n\n  override type = 'brush' as const;\n\n  private _toggleBrushMenu() {\n    if (this.tryDisposePopper()) return;\n    !this.active && this.setEdgelessTool({ type: this.type });\n    const menu = this.createPopper('edgeless-brush-menu', this);\n    Object.assign(menu.element, {\n      edgeless: this.edgeless,\n      onChange: (props: Record<string, unknown>) => {\n        this.edgeless.service.editPropsStore.recordLastProps('brush', props);\n        this.setEdgelessTool({ type: 'brush' });\n      },\n    });\n  }\n\n  override render() {\n    const { active, theme } = this;\n    const icon = theme === 'dark' ? EdgelessPenDarkIcon : EdgelessPenLightIcon;\n    const color = this._color$.value;\n\n    return html`\n      <edgeless-toolbar-button\n        class=\"edgeless-brush-button\"\n        .tooltip=${this.popper ? '' : getTooltipWithShortcut('Pen', 'P')}\n        .tooltipOffset=${4}\n        .active=${active}\n        .withHover=${true}\n        @click=${() => this._toggleBrushMenu()}\n      >\n        <div style=${styleMap({ color })} class=\"pen-wrapper\">${icon}</div>\n      </edgeless-toolbar-button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'edgeless-brush-tool-button': EdgelessBrushToolButton;\n  }\n}\n"]}