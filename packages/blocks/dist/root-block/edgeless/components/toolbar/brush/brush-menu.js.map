{"version":3,"file":"brush-menu.js","sourceRoot":"","sources":["../../../../../../src/root-block/edgeless/components/toolbar/brush/brush-menu.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAO,EAAE,aAAa,EAAE,MAAM,iCAAiC,CAAC;AAChE,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAK5D,OAAO,mCAAmC,CAAC;AAC3C,OAAO,EAEL,sBAAsB,GACvB,MAAM,4BAA4B,CAAC;AACpC,OAAO,oCAAoC,CAAC;AAC5C,OAAO,yBAAyB,CAAC;AACjC,OAAO,EAAE,wBAAwB,EAAE,MAAM,yBAAyB,CAAC;IAGtD,iBAAiB;4BAD7B,aAAa,CAAC,qBAAqB,CAAC;;;;sBACE,wBAAwB,CAAC,UAAU,CAAC;;;;;;;;;;iCAA5C,SAAQ,WAAoC;;;;iCAiDxE,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;qCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;oCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;YAL/B,oKAAS,KAAK,6BAAL,KAAK,qFAAS;YAGvB,gLAAS,SAAS,6BAAT,SAAS,6FAAU;YAG5B,6KAAS,QAAQ,6BAAR,QAAQ,2FAA4C;YAxD/D,6KAyDC;;;;iBAxDiB,WAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;GAgB3B,AAhBqB,CAgBpB;QAIO,MAAM;YACb,MAAM,KAAK,GAAG,aAAa,CAAC,aAAa,CACvC,IAAI,CAAC,KAAK,EACV,sBAAsB,EAAE,CACzB,CAAC;YAEF,OAAO,IAAI,CAAA;;;;4BAIa,IAAI,CAAC,SAAS;sBACpB,CAAC,CAAiB,EAAE,EAAE,CAC9B,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;;;oCAGhB,IAAI;;qBAEnB,KAAK;8BACI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,OAAO,CACzD,qBAAqB,CACtB;sBACS,CAAC,CAAa,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;;;;KAItE,CAAC;QACJ,CAAC;QAGD,wBAAuB;QAAvB,IAAS,KAAK,2CAAS;QAAvB,IAAS,KAAK,iDAAS;QAGvB,4BAA4B;QAA5B,IAAS,SAAS,+CAAU;QAA5B,IAAS,SAAS,qDAAU;QAG5B,2BAA6D;QAA7D,IAAS,QAAQ,8CAA4C;QAA7D,IAAS,QAAQ,oDAA4C;;;YArC7D,SAAI,GAAyB,OAAO,CAAC;YA+B5B,oFAAc;YAGd,iJAAmB;YAGnB,mJAAoD;;;;YAxDlD,uDAAiB;;;;;SAAjB,iBAAiB","sourcesContent":["import type { Color } from '@blocksuite/affine-model';\n\nimport { ThemeObserver } from '@blocksuite/affine-shared/theme';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport type { EdgelessTool } from '../../../types.js';\nimport type { LineWidthEvent } from '../../panel/line-width-panel.js';\n\nimport '../../buttons/tool-icon-button.js';\nimport {\n  type ColorEvent,\n  GET_DEFAULT_LINE_COLOR,\n} from '../../panel/color-panel.js';\nimport '../../panel/one-row-color-panel.js';\nimport '../common/slide-menu.js';\nimport { EdgelessToolbarToolMixin } from '../mixins/tool.mixin.js';\n\n@customElement('edgeless-brush-menu')\nexport class EdgelessBrushMenu extends EdgelessToolbarToolMixin(LitElement) {\n  static override styles = css`\n    :host {\n      display: flex;\n      position: absolute;\n      z-index: -1;\n    }\n\n    .menu-content {\n      display: flex;\n      align-items: center;\n    }\n\n    menu-divider {\n      height: 24px;\n      margin: 0 9px;\n    }\n  `;\n\n  type: EdgelessTool['type'] = 'brush';\n\n  override render() {\n    const color = ThemeObserver.getColorValue(\n      this.color,\n      GET_DEFAULT_LINE_COLOR()\n    );\n\n    return html`\n      <edgeless-slide-menu>\n        <div class=\"menu-content\">\n          <edgeless-line-width-panel\n            .selectedSize=${this.lineWidth}\n            @select=${(e: LineWidthEvent) =>\n              this.onChange({ lineWidth: e.detail })}\n          >\n          </edgeless-line-width-panel>\n          <menu-divider .vertical=${true}></menu-divider>\n          <edgeless-one-row-color-panel\n            .value=${color}\n            .hasTransparent=${!this.edgeless.doc.awarenessStore.getFlag(\n              'enable_color_picker'\n            )}\n            @select=${(e: ColorEvent) => this.onChange({ color: e.detail })}\n          ></edgeless-one-row-color-panel>\n        </div>\n      </edgeless-slide-menu>\n    `;\n  }\n\n  @property({ attribute: false })\n  accessor color!: Color;\n\n  @property({ attribute: false })\n  accessor lineWidth!: number;\n\n  @property({ attribute: false })\n  accessor onChange!: (props: Record<string, unknown>) => void;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'edgeless-brush-menu': EdgelessBrushMenu;\n  }\n}\n"]}