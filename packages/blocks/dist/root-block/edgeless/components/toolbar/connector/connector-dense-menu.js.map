{"version":3,"file":"connector-dense-menu.js","sourceRoot":"","sources":["../../../../../../src/root-block/edgeless/components/toolbar/connector/connector-dense-menu.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,uBAAuB,EACvB,aAAa,EACb,uBAAuB,EACvB,uBAAuB,GACxB,MAAM,qCAAqC,CAAC;AAC7C,OAAO,EAAE,aAAa,EAAE,MAAM,0BAA0B,CAAC;AAIzD,MAAM,CAAC,MAAM,uBAAuB,GAAqB,QAAQ,CAAC,EAAE;IAClE,MAAM,QAAQ,GACZ,QAAQ,CAAC,OAAO,CAAC,cAAc,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;IAElE,MAAM,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,KAAK,WAAW,CAAC;IAEpE,MAAM,YAAY,GAChB,CAAC,IAAmB,EAAE,MAAM,GAAG,IAAI,EAAE,EAAE,CACvC,GAAG,EAAE;QACH,QAAQ,CAAC,KAAK,CAAC,eAAe,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;QAC5D,MAAM;YACJ,QAAQ,CAAC,OAAO,CAAC,cAAc,CAAC,eAAe,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;IAC3E,CAAC,CAAC;IAEJ,OAAO;QACL,IAAI,EAAE,UAAU;QAChB,IAAI,EAAE,WAAW;QACjB,IAAI,EAAE,aAAa;QACnB,MAAM,EAAE,YAAY,CAAC,QAAQ,EAAE,KAAK,CAAC;QACrC,UAAU;QACV,OAAO,EAAE;YACP,KAAK,EAAE;gBACL;oBACE,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,OAAO;oBACb,IAAI,EAAE,uBAAuB;oBAC7B,MAAM,EAAE,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC;oBACzC,UAAU,EAAE,UAAU,IAAI,QAAQ,KAAK,aAAa,CAAC,KAAK;iBAC3D;gBACD;oBACE,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,SAAS;oBACf,IAAI,EAAE,uBAAuB;oBAC7B,MAAM,EAAE,YAAY,CAAC,aAAa,CAAC,UAAU,CAAC;oBAC9C,UAAU,EAAE,UAAU,IAAI,QAAQ,KAAK,aAAa,CAAC,UAAU;iBAChE;gBACD;oBACE,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,UAAU;oBAChB,IAAI,EAAE,uBAAuB;oBAC7B,MAAM,EAAE,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC;oBAC5C,UAAU,EAAE,UAAU,IAAI,QAAQ,KAAK,aAAa,CAAC,QAAQ;iBAC9D;aACF;SACF;KACF,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import {\n  ConnectorCWithArrowIcon,\n  ConnectorIcon,\n  ConnectorLWithArrowIcon,\n  ConnectorXWithArrowIcon,\n} from '@blocksuite/affine-components/icons';\nimport { ConnectorMode } from '@blocksuite/affine-model';\n\nimport type { DenseMenuBuilder } from '../common/type.js';\n\nexport const buildConnectorDenseMenu: DenseMenuBuilder = edgeless => {\n  const prevMode =\n    edgeless.service.editPropsStore.lastProps$.value.connector.mode;\n\n  const isSelected = edgeless.tools.edgelessTool.type === 'connector';\n\n  const createSelect =\n    (mode: ConnectorMode, record = true) =>\n    () => {\n      edgeless.tools.setEdgelessTool({ type: 'connector', mode });\n      record &&\n        edgeless.service.editPropsStore.recordLastProps('connector', { mode });\n    };\n\n  return {\n    type: 'sub-menu',\n    name: 'Connector',\n    icon: ConnectorIcon,\n    select: createSelect(prevMode, false),\n    isSelected,\n    options: {\n      items: [\n        {\n          type: 'action',\n          name: 'Curve',\n          icon: ConnectorCWithArrowIcon,\n          select: createSelect(ConnectorMode.Curve),\n          isSelected: isSelected && prevMode === ConnectorMode.Curve,\n        },\n        {\n          type: 'action',\n          name: 'Elbowed',\n          icon: ConnectorXWithArrowIcon,\n          select: createSelect(ConnectorMode.Orthogonal),\n          isSelected: isSelected && prevMode === ConnectorMode.Orthogonal,\n        },\n        {\n          type: 'action',\n          name: 'Straight',\n          icon: ConnectorLWithArrowIcon,\n          select: createSelect(ConnectorMode.Straight),\n          isSelected: isSelected && prevMode === ConnectorMode.Straight,\n        },\n      ],\n    },\n  };\n};\n"]}