{"version":3,"file":"connector-tool-button.js","sourceRoot":"","sources":["../../../../../../src/root-block/edgeless/components/toolbar/connector/connector-tool-button.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ArrowUpIcon,\n  ConnectorCWithArrowIcon,\n  ConnectorLWithArrowIcon,\n  ConnectorXWithArrowIcon,\n} from '@blocksuite/affine-components/icons';\nimport { ConnectorMode, getConnectorModeName } from '@blocksuite/affine-model';\nimport { SignalWatcher } from '@blocksuite/block-std';\nimport { computed } from '@lit-labs/preact-signals';\nimport { css, html, LitElement } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\n\nimport '../../buttons/toolbar-button.js';\nimport { getTooltipWithShortcut } from '../../utils.js';\nimport { QuickToolMixin } from '../mixins/quick-tool.mixin.js';\nimport './connector-menu.js';\n\nconst IcomMap = {\n  [ConnectorMode.Straight]: ConnectorLWithArrowIcon,\n  [ConnectorMode.Orthogonal]: ConnectorXWithArrowIcon,\n  [ConnectorMode.Curve]: ConnectorCWithArrowIcon,\n};\n\n@customElement('edgeless-connector-tool-button')\nexport class EdgelessConnectorToolButton extends QuickToolMixin(\n  SignalWatcher(LitElement)\n) {\n  static override styles = css`\n    :host {\n      display: flex;\n    }\n    .edgeless-connector-button {\n      display: flex;\n      position: relative;\n    }\n    .arrow-up-icon {\n      position: absolute;\n      top: 4px;\n      right: 2px;\n      font-size: 0;\n    }\n  `;\n\n  private _mode$ = computed(() => {\n    return this.edgeless.service.editPropsStore.lastProps$.value.connector.mode;\n  });\n\n  override type = 'connector' as const;\n\n  private _toggleMenu() {\n    if (this.tryDisposePopper()) return;\n\n    const menu = this.createPopper('edgeless-connector-menu', this);\n    menu.element.edgeless = this.edgeless;\n    menu.element.onChange = (props: Record<string, unknown>) => {\n      this.edgeless.service.editPropsStore.recordLastProps('connector', props);\n      this.setEdgelessTool({\n        type: this.type,\n        mode: this._mode$.value,\n      });\n    };\n  }\n\n  override render() {\n    const { active } = this;\n    const mode = this._mode$.value;\n    const arrowColor = active ? 'currentColor' : 'var(--affine-icon-secondary)';\n    return html`\n      <edgeless-tool-icon-button\n        .tooltip=${this.popper\n          ? ''\n          : getTooltipWithShortcut(getConnectorModeName(mode), 'C')}\n        .tooltipOffset=${17}\n        .active=${active}\n        .iconContainerPadding=${6}\n        class=\"edgeless-connector-button\"\n        @click=${() => {\n          // don't update tool before toggling menu\n          this._toggleMenu();\n          this.edgeless.tools.setEdgelessTool({\n            type: 'connector',\n            mode: mode,\n          });\n        }}\n      >\n        ${IcomMap[mode]}\n        <span class=\"arrow-up-icon\" style=${styleMap({ color: arrowColor })}>\n          ${ArrowUpIcon}\n        </span>\n      </edgeless-tool-icon-button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'edgeless-connector-tool-button': EdgelessConnectorToolButton;\n  }\n}\n"]}