{"version":3,"file":"navigator-setting-button.js","sourceRoot":"","sources":["../../../../../../src/root-block/edgeless/components/toolbar/present/navigator-setting-button.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAO,EAAE,qBAAqB,EAAE,MAAM,qCAAqC,CAAC;AAC5E,OAAO,EAAE,kBAAkB,EAAE,MAAM,iCAAiC,CAAC;AACrE,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACvD,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AACrD,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAI1E,OAAO,oDAAoD,CAAC;AAC5D,OAAO,mCAAmC,CAAC;AAC3C,OAAO,uBAAuB,CAAC;IAGlB,8BAA8B;4BAD1C,aAAa,CAAC,mCAAmC,CAAC;;;;sBACC,cAAc,CAAC,UAAU,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CAAlC,SAAQ,WAA0B;;;;mDA2J3E,KAAK,CAAC,2BAA2B,CAAC;iDAGlC,KAAK,CAAC,yBAAyB,CAAC;2CAGhC,KAAK,EAAE;oCAGP,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;kCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;uCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;6CAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;+CAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;sCAI9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;yCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;YA3B/B,0NAAiB,uBAAuB,6BAAvB,uBAAuB,yHAAe;YAGvD,oNAAiB,qBAAqB,6BAArB,qBAAqB,qHAAe;YAGrD,kMAAS,eAAe,6BAAf,eAAe,yGAAQ;YAGhC,6KAAS,QAAQ,6BAAR,QAAQ,2FAA8B;YAG/C,uKAAS,MAAM,6BAAN,MAAM,uFAAqB;YAGpC,sLAAS,WAAW,6BAAX,WAAW,iGAAS;YAG7B,wMAAS,iBAAiB,6BAAjB,iBAAiB,6GAAS;YAGnC,8MAAS,mBAAmB,6BAAnB,mBAAmB,iHAChB;YAGZ,mLAAS,UAAU,6BAAV,UAAU,+FAAS;YAG5B,4LAAS,aAAa,6BAAb,aAAa,qGAAqC;YAxL7D,6KAyLC;;;;iBAxLiB,WAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyD3B,AAzDqB,CAyDpB;QAaM,mBAAmB;YACzB,MAAM,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,cAAc,CAAC,UAAU,CACrE,wBAAwB,CACzB,CAAC;YACF,IAAI,CAAC,eAAe,GAAG,eAAe,IAAI,IAAI,CAAC;QACjD,CAAC;QAEQ,iBAAiB;YACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;YAC1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC;QAEQ,YAAY;YACnB,IAAI,CAAC,uBAAuB,GAAG,kBAAkB,CAC/C,IAAI,CAAC,uBAAuB,EAC5B,IAAI,CAAC,qBAAqB,EAC1B,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,KAAK,MAAM,CAAC,EACvD;gBACE,QAAQ,EAAE,EAAE;aACb,CACF,CAAC;QACJ,CAAC;QAEQ,MAAM;YACb,OAAO,IAAI,CAAA;;;mBAGI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU;iBACnC,GAAG,EAAE;gBACZ,IAAI,CAAC,uBAAuB,EAAE,MAAM,EAAE,CAAC;YACzC,CAAC;gCACuB,CAAC;;UAEvB,qBAAqB;;;;;iBAKd,CAAC,CAAa,EAAE,EAAE;gBACzB,CAAC,CAAC,eAAe,EAAE,CAAC;YACtB,CAAC;;;;;;;;;;kBAUS,IAAI,CAAC,eAAe;wBACd,IAAI,CAAC,wBAAwB;;;;;;;;;kBASnC,IAAI,CAAC,WAAW;wBACV,CAAC,OAAgB,EAAE,EAAE;gBAC/B,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;YAChE,CAAC;;;;;UAKH,IAAI,CAAC,iBAAiB;gBACtB,CAAC,CAAC,IAAI,CAAA;;;;;;4BAMY,IAAI,CAAC,QAAQ;0BACf,IAAI,CAAC,MAAM;yBACZ,IAAI;4CACe;gBAClC,CAAC,CAAC,OAAO;;KAEd,CAAC;QACJ,CAAC;QAGD,0CAAuD;QAAvD,IAAiB,uBAAuB,6DAAe;QAAvD,IAAiB,uBAAuB,mEAAe;QAGvD,wCAAqD;QAArD,IAAiB,qBAAqB,2DAAe;QAArD,IAAiB,qBAAqB,iEAAe;QAGrD,kCAAgC;QAAhC,IAAS,eAAe,qDAAQ;QAAhC,IAAS,eAAe,2DAAQ;QAGhC,2BAA+C;QAA/C,IAAS,QAAQ,8CAA8B;QAA/C,IAAS,QAAQ,oDAA8B;QAG/C,yBAAoC;QAApC,IAAS,MAAM,4CAAqB;QAApC,IAAS,MAAM,kDAAqB;QAGpC,8BAA6B;QAA7B,IAAS,WAAW,iDAAS;QAA7B,IAAS,WAAW,uDAAS;QAG7B,oCAAmC;QAAnC,IAAS,iBAAiB,uDAAS;QAAnC,IAAS,iBAAiB,6DAAS;QAGnC,sCACY;QADZ,IAAS,mBAAmB,yDAChB;QADZ,IAAS,mBAAmB,+DAChB;QAGZ,6BAA4B;QAA5B,IAAS,UAAU,gDAAS;QAA5B,IAAS,UAAU,sDAAS;QAG5B,gCAA2D;QAA3D,IAAS,aAAa,mDAAqC;QAA3D,IAAS,aAAa,yDAAqC;;;YA5HnD,4BAAuB,GAEpB,IAAI,CAAC;YAER,6BAAwB,GAAG,CAAC,OAAgB,EAAE,EAAE;gBACtD,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;gBAC/B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,uBAAuB,CAAC,IAAI,CAAC;oBAC/C,eAAe,EAAE,IAAI,CAAC,eAAe;iBACtC,CAAC,CAAC;YACL,CAAC,CAAC;YAuFe,wHAAsC;YAGtC,2LAAoC;YAG5C,oKAAkB,IAAI,GAAC;YAGvB,yJAAsC;YAGtC,8IAA2B;YAG3B,6IAAc,KAAK,GAAC;YAGpB,8JAAoB,KAAK,GAAC;YAG1B,wKACP,SAAS,GAAC;YAGH,wJAAa,KAAK,GAAC;YAGnB,qJAAyC,GAAG,EAAE,GAAE,CAAC,GAAC;;;;YAxLhD,uDAA8B;;;;;SAA9B,8BAA8B","sourcesContent":["import type { FrameBlockModel } from '@lumensuite/affine-model';\n\nimport { NavigatorSettingsIcon } from '@lumensuite/affine-components/icons';\nimport { createButtonPopper } from '@lumensuite/affine-shared/utils';\nimport { WithDisposable } from '@lumensuite/block-std';\nimport { css, html, LitElement, nothing } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\n\nimport type { EdgelessRootBlockComponent } from '../../../edgeless-root-block.js';\n\nimport '../../../../../_common/components/toggle-switch.js';\nimport '../../buttons/tool-icon-button.js';\nimport './frame-order-menu.js';\n\n@customElement('edgeless-navigator-setting-button')\nexport class EdgelessNavigatorSettingButton extends WithDisposable(LitElement) {\n  static override styles = css`\n    .navigator-setting-menu {\n      display: none;\n      padding: 8px;\n      border-radius: 8px;\n      font-size: 12px;\n      font-weight: 500;\n      background-color: var(--affine-background-overlay-panel-color);\n      box-shadow: var(--affine-menu-shadow);\n      color: var(--affine-text-primary-color);\n    }\n\n    .navigator-setting-menu[data-show] {\n      display: flex;\n      flex-direction: column;\n      gap: 4px;\n    }\n\n    .item-container {\n      padding: 4px 12px;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      min-width: 264px;\n      width: 100%;\n      box-sizing: border-box;\n    }\n    .item-container.header {\n      height: 34px;\n    }\n\n    .text {\n      padding: 0px 4px;\n      line-height: 22px;\n      font-size: var(--affine-font-sm);\n      color: var(--affine-text-primary-color);\n    }\n\n    .text.title {\n      font-weight: 500;\n      line-height: 20px;\n      font-size: var(--affine-font-xs);\n      color: var(--affine-text-secondary-color);\n    }\n\n    .divider {\n      width: 100%;\n      height: 16px;\n      display: flex;\n      align-items: center;\n    }\n    .divider::before {\n      content: '';\n      width: 100%;\n      height: 1px;\n      background: var(--affine-border-color);\n    }\n  `;\n\n  private _navigatorSettingPopper?: ReturnType<\n    typeof createButtonPopper\n  > | null = null;\n\n  private _onBlackBackgroundChange = (checked: boolean) => {\n    this.blackBackground = checked;\n    this.edgeless.slots.navigatorSettingUpdated.emit({\n      blackBackground: this.blackBackground,\n    });\n  };\n\n  private _tryRestoreSettings() {\n    const blackBackground = this.edgeless.service.editPropsStore.getStorage(\n      'presentBlackBackground'\n    );\n    this.blackBackground = blackBackground ?? true;\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this._tryRestoreSettings();\n  }\n\n  override firstUpdated() {\n    this._navigatorSettingPopper = createButtonPopper(\n      this._navigatorSettingButton,\n      this._navigatorSettingMenu,\n      ({ display }) => this.setPopperShow(display === 'show'),\n      {\n        mainAxis: 22,\n      }\n    );\n  }\n\n  override render() {\n    return html`\n      <edgeless-tool-icon-button\n        class=\"navigator-setting-button\"\n        .tooltip=${this.popperShow ? '' : 'Settings'}\n        @click=${() => {\n          this._navigatorSettingPopper?.toggle();\n        }}\n        .iconContainerPadding=${0}\n      >\n        ${NavigatorSettingsIcon}\n      </edgeless-tool-icon-button>\n\n      <div\n        class=\"navigator-setting-menu\"\n        @click=${(e: MouseEvent) => {\n          e.stopPropagation();\n        }}\n      >\n        <div class=\"item-container header\">\n          <div class=\"text title\">Playback Settings</div>\n        </div>\n\n        <div class=\"item-container\">\n          <div class=\"text\">Black background</div>\n\n          <toggle-switch\n            .on=${this.blackBackground}\n            .onChange=${this._onBlackBackgroundChange}\n          >\n          </toggle-switch>\n        </div>\n\n        <div class=\"item-container\">\n          <div class=\"text\">Hide toolbar</div>\n\n          <toggle-switch\n            .on=${this.hideToolbar}\n            .onChange=${(checked: boolean) => {\n              this.onHideToolbarChange && this.onHideToolbarChange(checked);\n            }}\n          >\n          </toggle-switch>\n        </div>\n\n        ${this.includeFrameOrder\n          ? html` <div class=\"divider\"></div>\n              <div class=\"item-container header\">\n                <div class=\"text title\">Frame Order</div>\n              </div>\n\n              <edgeless-frame-order-menu\n                .edgeless=${this.edgeless}\n                .frames=${this.frames}\n                .embed=${true}\n              ></edgeless-frame-order-menu>`\n          : nothing}\n      </div>\n    `;\n  }\n\n  @query('.navigator-setting-button')\n  private accessor _navigatorSettingButton!: HTMLElement;\n\n  @query('.navigator-setting-menu')\n  private accessor _navigatorSettingMenu!: HTMLElement;\n\n  @state()\n  accessor blackBackground = true;\n\n  @property({ attribute: false })\n  accessor edgeless!: EdgelessRootBlockComponent;\n\n  @property({ attribute: false })\n  accessor frames!: FrameBlockModel[];\n\n  @property({ attribute: false })\n  accessor hideToolbar = false;\n\n  @property({ attribute: false })\n  accessor includeFrameOrder = false;\n\n  @property({ attribute: false })\n  accessor onHideToolbarChange: undefined | ((hideToolbar: boolean) => void) =\n    undefined;\n\n  @property({ attribute: false })\n  accessor popperShow = false;\n\n  @property({ attribute: false })\n  accessor setPopperShow: (show: boolean) => void = () => {};\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'edgeless-navigator-setting-button': EdgelessNavigatorSettingButton;\n  }\n}\n"]}