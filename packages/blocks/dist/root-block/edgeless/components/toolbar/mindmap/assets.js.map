{"version":3,"file":"assets.js","sourceRoot":"","sources":["../../../../../../src/root-block/edgeless/components/toolbar/mindmap/assets.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AAErE,OAAO,EAAsB,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AAC5E,OAAO,EACL,iBAAiB,EACjB,kBAAkB,EAClB,iBAAiB,EACjB,kBAAkB,EAClB,aAAa,EACb,aAAa,GACd,MAAM,YAAY,CAAC;AASpB,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,KAAkB,EAAwB,EAAE,CAAC;IACvE;QACE,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,KAAK,KAAK,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,kBAAkB;QACzE,KAAK,EAAE,YAAY,CAAC,GAAG;QACvB,MAAM,EAAE,gBAAgB,CAAC,YAAY,CAAC,GAAG,CAAC;KAC3C;IACD;QACE,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,aAAa;QACnB,KAAK,EAAE,YAAY,CAAC,IAAI;QACxB,MAAM,EAAE,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC;KAC5C;IACD;QACE,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,aAAa;QACnB,KAAK,EAAE,YAAY,CAAC,KAAK;QACzB,MAAM,EAAE,gBAAgB,CAAC,YAAY,CAAC,KAAK,CAAC;KAC7C;IACD;QACE,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,iBAAiB;QAChE,KAAK,EAAE,YAAY,CAAC,GAAG;QACvB,MAAM,EAAE,gBAAgB,CAAC,YAAY,CAAC,GAAG,CAAC;KAC3C;CACF,CAAC","sourcesContent":["import type { TemplateResult } from 'lit';\n\nimport { ColorScheme, MindmapStyle } from '@lumensuite/affine-model';\n\nimport { type DraggableTool, getMindmapRender } from './basket-elements.js';\nimport {\n  mindMapStyle1Dark,\n  mindMapStyle1Light,\n  mindMapStyle2Dark,\n  mindMapStyle2Light,\n  mindMapStyle3,\n  mindMapStyle4,\n} from './icons.js';\n\nexport type ToolbarMindmapItem = {\n  type: 'mindmap';\n  icon: TemplateResult;\n  style: MindmapStyle;\n  render: DraggableTool['render'];\n};\n\nexport const getMindMaps = (theme: ColorScheme): ToolbarMindmapItem[] => [\n  {\n    type: 'mindmap',\n    icon: theme === ColorScheme.Dark ? mindMapStyle1Dark : mindMapStyle1Light,\n    style: MindmapStyle.ONE,\n    render: getMindmapRender(MindmapStyle.ONE),\n  },\n  {\n    type: 'mindmap',\n    icon: mindMapStyle4,\n    style: MindmapStyle.FOUR,\n    render: getMindmapRender(MindmapStyle.FOUR),\n  },\n  {\n    type: 'mindmap',\n    icon: mindMapStyle3,\n    style: MindmapStyle.THREE,\n    render: getMindmapRender(MindmapStyle.THREE),\n  },\n  {\n    type: 'mindmap',\n    icon: theme === 'light' ? mindMapStyle2Light : mindMapStyle2Dark,\n    style: MindmapStyle.TWO,\n    render: getMindmapRender(MindmapStyle.TWO),\n  },\n];\n"]}