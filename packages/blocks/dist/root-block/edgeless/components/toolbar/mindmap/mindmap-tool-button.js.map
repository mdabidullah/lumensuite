{"version":3,"file":"mindmap-tool-button.js","sourceRoot":"","sources":["../../../../../../src/root-block/edgeless/components/toolbar/mindmap/mindmap-tool-button.ts"],"names":[],"mappings":"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","sourcesContent":["import type { MindmapElementModel } from '@lumensuite/affine-block-surface';\nimport type { MindmapStyle } from '@lumensuite/affine-model';\nimport type { Bound } from '@lumensuite/global/utils';\n\nimport { computed, SignalWatcher } from '@lit-labs/preact-signals';\nimport { css, html, LitElement, nothing } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { styleMap } from 'lit/directives/style-map.js';\n\nimport type { EdgelessTool } from '../../../types.js';\n\nimport { EdgelessDraggableElementController } from '../common/draggable/draggable-element.controller.js';\nimport { EdgelessToolbarToolMixin } from '../mixins/tool.mixin.js';\nimport { getMindMaps } from './assets.js';\nimport {\n  type DraggableTool,\n  getMindmapRender,\n  mindmapConfig,\n  textConfig,\n  textRender,\n  toolConfig2StyleObj,\n} from './basket-elements.js';\nimport { basketIconDark, basketIconLight, textIcon } from './icons.js';\nimport './mindmap-menu.js';\nimport { importMindmap } from './utils/import-mindmap.js';\n\n@customElement('edgeless-mindmap-tool-button')\nexport class EdgelessMindmapToolButton extends EdgelessToolbarToolMixin(\n  SignalWatcher(LitElement)\n) {\n  static override styles = css`\n    :host {\n      width: 100%;\n      height: 100%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n    .partial-clip {\n      flex-shrink: 0;\n      box-sizing: border-box;\n      width: calc(100% + 20px);\n      pointer-events: none;\n      padding: 0 10px;\n      overflow: hidden;\n    }\n    .basket-wrapper {\n      pointer-events: auto;\n      height: 64px;\n      width: 96px;\n      display: flex;\n      justify-content: center;\n      align-items: flex-end;\n      position: relative;\n    }\n    .basket,\n    .basket-tool-item {\n      transition: transform 0.3s ease-in-out;\n      position: absolute;\n    }\n\n    .basket {\n      bottom: 0;\n      height: 17px;\n      width: 76px;\n    }\n    .basket > div,\n    .basket > svg {\n      position: absolute;\n    }\n    .glass {\n      width: 76px;\n      height: 17px;\n      border-radius: 2px;\n      mask: url(#mindmap-basket-body-mask);\n    }\n    .glass.enabled {\n      backdrop-filter: blur(2px);\n    }\n\n    .basket {\n      z-index: 3;\n    }\n    .basket-tool-item {\n      cursor: grab;\n    }\n    .basket-tool-item svg {\n      display: block;\n    }\n    .basket-tool-item {\n      transform: translate(var(--default-x, 0), var(--default-y, 0))\n        rotate(var(--default-r, 0)) scale(var(--default-s, 1));\n      z-index: var(--default-z, 0);\n    }\n\n    .basket-tool-item.next {\n      transform: translate(var(--next-x, 0), var(--next-y, 0))\n        rotate(var(--next-r, 0)) scale(var(--next-s, 1));\n      z-index: var(--next-z, 0);\n    }\n\n    /* active & hover */\n    .basket-wrapper:hover .basket,\n    .basket-wrapper.active .basket {\n      z-index: 0;\n    }\n    .basket-wrapper:hover .basket-tool-item.current,\n    .basket-wrapper.active .basket-tool-item.current {\n      transform: translate(var(--active-x, 0), var(--active-y, 0))\n        rotate(var(--active-r, 0)) scale(var(--active-s, 1));\n      z-index: var(--active-z, 0);\n    }\n\n    .basket-tool-item.next.coming,\n    .basket-wrapper:hover .basket-tool-item.current:hover {\n      transform: translate(var(--hover-x, 0), var(--hover-y, 0))\n        rotate(var(--hover-r, 0)) scale(var(--hover-s, 1));\n      z-index: var(--hover-z, 0);\n    }\n  `;\n\n  private _style$ = computed(() => {\n    const { style } =\n      this.edgeless.service.editPropsStore.lastProps$.value.mindmap;\n    return style;\n  });\n\n  draggableController!: EdgelessDraggableElementController<DraggableTool>;\n\n  override enableActiveBackground = true;\n\n  override type: EdgelessTool['type'][] = ['mindmap', 'text'];\n\n  get draggableTools(): DraggableTool[] {\n    const style = this._style$.value;\n    const mindmap =\n      this.mindmaps.find(m => m.style === style) || this.mindmaps[0];\n    return [\n      {\n        name: 'text',\n        icon: textIcon,\n        config: textConfig,\n        standardWidth: 100,\n        render: textRender,\n      },\n      {\n        name: 'mindmap',\n        icon: mindmap.icon,\n        config: mindmapConfig,\n        standardWidth: 350,\n        render: getMindmapRender(style),\n      },\n    ];\n  }\n\n  get mindmaps() {\n    return getMindMaps(this.theme);\n  }\n\n  private _toggleMenu() {\n    if (this.tryDisposePopper()) return;\n    this.setEdgelessTool({ type: 'default' });\n\n    const menu = this.createPopper('edgeless-mindmap-menu', this);\n    Object.assign(menu.element, {\n      edgeless: this.edgeless,\n      onActiveStyleChange: (style: MindmapStyle) => {\n        this.edgeless.service.editPropsStore.recordLastProps('mindmap', {\n          style,\n        });\n      },\n      onImportMindMap: (bound: Bound) => {\n        return importMindmap(bound).then(mindmap => {\n          const id = this.edgeless.service.addElement('mindmap', {\n            children: mindmap,\n            layoutType: mindmap?.layoutType === 'left' ? 1 : 0,\n          });\n          const element = this.edgeless.service.getElementById(\n            id\n          ) as MindmapElementModel;\n\n          this.tryDisposePopper();\n          this.setEdgelessTool(\n            { type: 'default' },\n            {\n              elements: [element.tree.id],\n              editing: false,\n            }\n          );\n        });\n      },\n    });\n  }\n\n  initDragController() {\n    if (!this.edgeless || !this.toolbarContainer) return;\n    if (this.draggableController) return;\n    this.draggableController = new EdgelessDraggableElementController(this, {\n      service: this.edgeless.service,\n      edgeless: this.edgeless,\n      scopeElement: this.toolbarContainer,\n      standardWidth: 100,\n      clickToDrag: true,\n      onOverlayCreated: (overlay, { data }) => {\n        const tool = this.draggableTools.find(t => t.name === data.name);\n        if (!tool) return;\n\n        // recover the rotation\n        const rotate = tool.config?.hover?.r ?? tool.config?.default?.r ?? 0;\n        overlay.element.style.setProperty('--rotate', rotate + 'deg');\n        setTimeout(() => {\n          overlay.transitionWrapper.style.setProperty(\n            '--rotate',\n            -rotate + 'deg'\n          );\n        }, 50);\n\n        // set the scale (without transition)\n        const scale = tool.config?.hover?.s ?? tool.config?.default?.s ?? 1;\n        overlay.element.style.setProperty('--scale', `${scale}`);\n\n        // a workaround to handle getBoundingClientRect() when the element is rotated\n        const _left = parseInt(overlay.element.style.left);\n        const _top = parseInt(overlay.element.style.top);\n        if (data.name === 'mindmap') {\n          overlay.element.style.left = _left + 3 + 'px';\n          overlay.element.style.top = _top + 5 + 'px';\n        } else if (data.name === 'text') {\n          overlay.element.style.left = _left + 0 + 'px';\n          overlay.element.style.top = _top + 3 + 'px';\n        }\n        this.readyToDrop = true;\n      },\n      onCanceled: overlay => {\n        overlay.transitionWrapper.style.transformOrigin = 'unset';\n        overlay.transitionWrapper.style.setProperty('--rotate', '0deg');\n        this.readyToDrop = false;\n      },\n      onDrop: (el, bound) => {\n        const id = el.data.render(bound, this.edgeless.service, this.edgeless);\n        this.readyToDrop = false;\n        if (el.data.name === 'mindmap') {\n          this.setEdgelessTool(\n            { type: 'default' },\n            { elements: [id], editing: false }\n          );\n        } else if (el.data.name === 'text') {\n          this.setEdgelessTool({ type: 'default' });\n        }\n      },\n    });\n\n    this.edgeless.bindHotKey(\n      {\n        m: () => {\n          const service = this.edgeless.service;\n          if (service.locked) return;\n          if (service.selection.editing) return;\n\n          if (this.readyToDrop) {\n            // change the style\n            const activeIndex = this.mindmaps.findIndex(\n              m => m.style === this._style$.value\n            );\n            const nextIndex = (activeIndex + 1) % this.mindmaps.length;\n            const next = this.mindmaps[nextIndex];\n            this.edgeless.service.editPropsStore.recordLastProps('mindmap', {\n              style: next.style,\n            });\n            const tool = this.draggableTools.find(t => t.name === 'mindmap');\n            this.draggableController.updateElementInfo({\n              data: tool,\n              preview: next.icon,\n            });\n            return;\n          }\n          this.setEdgelessTool({ type: 'mindmap' });\n          const icon = this.mindmapElement;\n          const { x, y } = service.tool.lastMousePos;\n          const { left, top } = this.edgeless.viewport;\n          const clientPos = { x: x + left, y: y + top };\n          this.draggableController.clickToDrag(icon, clientPos);\n        },\n      },\n      { global: true }\n    );\n  }\n\n  override render() {\n    const { popper, theme } = this;\n    const basketIcon = theme === 'light' ? basketIconLight : basketIconDark;\n    const glassBg =\n      theme === 'light' ? 'rgba(255,255,255,0.5)' : 'rgba(74, 74, 74, 0.6)';\n\n    const { cancelled, dragOut, draggingElement } =\n      this.draggableController?.states || {};\n\n    const active = popper || draggingElement;\n\n    return html`<edgeless-toolbar-button\n      class=\"edgeless-mindmap-button\"\n      ?withHover=${true}\n      .tooltip=${popper ? '' : 'Others'}\n      .tooltipOffset=${4}\n      @click=${this._toggleMenu}\n      style=\"width: 100%; height: 100%; display: inline-block\"\n    >\n      <div class=\"partial-clip\">\n        <div class=\"basket-wrapper ${active ? 'active' : ''}\">\n          ${repeat(\n            this.draggableTools,\n            t => t.name,\n            tool => {\n              const isBeingDragged = draggingElement?.data.name === tool.name;\n              const variables = toolConfig2StyleObj(tool.config);\n\n              const nextStyle = styleMap({\n                ...variables,\n              });\n              const currentStyle = styleMap({\n                ...variables,\n                opacity: isBeingDragged ? 0 : 1,\n                pointerEvents: draggingElement ? 'none' : 'auto',\n              });\n\n              return html`${isBeingDragged\n                  ? html`<div\n                      class=${classMap({\n                        'basket-tool-item': true,\n                        next: true,\n                        coming: !!dragOut && !cancelled,\n                      })}\n                      style=${nextStyle}\n                    >\n                      ${tool.icon}\n                    </div>`\n                  : nothing}\n\n                <div\n                  style=${currentStyle}\n                  @mousedown=${(e: MouseEvent) =>\n                    this.draggableController.onMouseDown(e, {\n                      data: tool,\n                      preview: tool.icon,\n                      standardWidth: tool.standardWidth,\n                    })}\n                  @touchstart=${(e: TouchEvent) =>\n                    this.draggableController.onTouchStart(e, {\n                      data: tool,\n                      preview: tool.icon,\n                      standardWidth: tool.standardWidth,\n                    })}\n                  class=\"basket-tool-item current ${tool.name}\"\n                >\n                  ${tool.icon}\n                </div>`;\n            }\n          )}\n\n          <div class=\"basket\">\n            <div\n              class=\"glass ${this.enableBlur ? 'enabled' : ''}\"\n              style=\"background: ${glassBg}\"\n            ></div>\n            ${basketIcon}\n          </div>\n        </div>\n      </div>\n\n      <svg width=\"0\" height=\"0\" style=\"opacity: 0; pointer-events: none\">\n        <defs>\n          <mask id=\"mindmap-basket-body-mask\">\n            <rect\n              x=\"2\"\n              width=\"71.8\"\n              y=\"2\"\n              height=\"15\"\n              rx=\"1.5\"\n              ry=\"1.5\"\n              fill=\"white\"\n            />\n            <rect\n              width=\"32\"\n              height=\"6\"\n              x=\"22\"\n              y=\"5.9\"\n              fill=\"black\"\n              rx=\"3\"\n              ry=\"3\"\n            />\n          </mask>\n        </defs>\n      </svg>\n    </edgeless-toolbar-button>`;\n  }\n\n  override updated(_changedProperties: Map<PropertyKey, unknown>) {\n    const controllerRequiredProps = ['edgeless', 'toolbarContainer'] as const;\n    if (\n      controllerRequiredProps.some(p => _changedProperties.has(p)) &&\n      !this.draggableController\n    ) {\n      this.initDragController();\n    }\n  }\n\n  @property({ type: Boolean })\n  accessor enableBlur = true;\n\n  @query('.basket-tool-item.mindmap')\n  accessor mindmapElement!: HTMLElement;\n\n  @state()\n  accessor readyToDrop = false;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'edgeless-mindmap-tool-button': EdgelessMindmapToolButton;\n  }\n}\n"]}