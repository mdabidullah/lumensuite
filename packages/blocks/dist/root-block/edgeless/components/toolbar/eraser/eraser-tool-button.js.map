{"version":3,"file":"eraser-tool-button.js","sourceRoot":"","sources":["../../../../../../src/root-block/edgeless/components/toolbar/eraser/eraser-tool-button.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EACL,sBAAsB,EACtB,uBAAuB,GACxB,MAAM,qCAAqC,CAAC;AAC7C,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAIlD,OAAO,EAAE,sBAAsB,EAAE,MAAM,gBAAgB,CAAC;AACxD,OAAO,EAAE,wBAAwB,EAAE,MAAM,yBAAyB,CAAC;IAGtD,wBAAwB;4BADpC,aAAa,CAAC,6BAA6B,CAAC;;;;sBACC,wBAAwB,CACpE,UAAU,CACX;wCAFqC,SAAQ,WAE7C;;;;YAwBU,2BAAsB,GAAG,IAAI,CAAC;YAE9B,SAAI,GAAyB,QAAQ,CAAC;QAoCjD,CAAC;;;YAhED,6KAgEC;;;;iBA7DiB,WAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;GAqB3B,AArBqB,CAqBpB;QAMO,YAAY;YACnB,IAAI,CAAC,WAAW,CAAC,GAAG,CAClB,IAAI,CAAC,QAAQ,CAAC,UAAU,CACtB;gBACE,MAAM,EAAE,GAAG,EAAE;oBACX,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;wBACxC,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;oBAC5C,CAAC;gBACH,CAAC;aACF,EACD,EAAE,MAAM,EAAE,IAAI,EAAE,CACjB,CACF,CAAC;QACJ,CAAC;QAEQ,MAAM;YACb,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC;YACrC,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;YAEvB,MAAM,IAAI,GACR,KAAK,KAAK,MAAM,CAAC,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,uBAAuB,CAAC;YAEtE,OAAO,IAAI,CAAA;;;mBAGI,sBAAsB,CAAC,QAAQ,EAAE,GAAG,CAAC;yBAC/B,CAAC;kBACR,IAAI,KAAK,QAAQ;iBAClB,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;;qCAE1B,IAAI;;KAEpC,CAAC;QACJ,CAAC;;YA/DU,uDAAwB;;;;;SAAxB,wBAAwB","sourcesContent":["import {\n  EdgelessEraserDarkIcon,\n  EdgelessEraserLightIcon,\n} from '@blocksuite/affine-components/icons';\nimport { css, html, LitElement } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\nimport type { EdgelessTool } from '../../../types.js';\n\nimport { getTooltipWithShortcut } from '../../utils.js';\nimport { EdgelessToolbarToolMixin } from '../mixins/tool.mixin.js';\n\n@customElement('edgeless-eraser-tool-button')\nexport class EdgelessEraserToolButton extends EdgelessToolbarToolMixin(\n  LitElement\n) {\n  static override styles = css`\n    :host {\n      height: 100%;\n      overflow-y: hidden;\n    }\n    .eraser-button {\n      display: flex;\n      justify-content: center;\n      align-items: flex-end;\n      position: relative;\n      width: 49px;\n      height: 64px;\n    }\n    #edgeless-eraser-icon {\n      transition: transform 0.3s ease-in-out;\n      transform: translateY(8px);\n    }\n    .eraser-button:hover #edgeless-eraser-icon,\n    .eraser-button.active #edgeless-eraser-icon {\n      transform: translateY(0);\n    }\n  `;\n\n  override enableActiveBackground = true;\n\n  override type: EdgelessTool['type'] = 'eraser';\n\n  override firstUpdated() {\n    this.disposables.add(\n      this.edgeless.bindHotKey(\n        {\n          Escape: () => {\n            if (this.edgelessTool.type === 'eraser') {\n              this.setEdgelessTool({ type: 'default' });\n            }\n          },\n        },\n        { global: true }\n      )\n    );\n  }\n\n  override render() {\n    const type = this.edgelessTool?.type;\n    const { theme } = this;\n\n    const icon =\n      theme === 'dark' ? EdgelessEraserDarkIcon : EdgelessEraserLightIcon;\n\n    return html`\n      <edgeless-toolbar-button\n        class=\"edgeless-eraser-button\"\n        .tooltip=${getTooltipWithShortcut('Eraser', 'E')}\n        .tooltipOffset=${4}\n        .active=${type === 'eraser'}\n        @click=${() => this.setEdgelessTool({ type: 'eraser' })}\n      >\n        <div class=\"eraser-button\">${icon}</div>\n      </edgeless-toolbar-button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'edgeless-eraser-tool-button': EdgelessEraserToolButton;\n  }\n}\n"]}