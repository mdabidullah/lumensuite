{"version":3,"file":"frame-preview.js","sourceRoot":"","sources":["../../../../../src/root-block/edgeless/components/frame/frame-preview.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAO,EAAE,mBAAmB,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAC;AAC3E,OAAO,EAEL,iBAAiB,EACjB,cAAc,GACf,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EACL,KAAK,EACL,eAAe,EACf,eAAe,GAChB,MAAM,0BAA0B,CAAC;AAClC,OAAO,EAAE,aAAa,EAAwB,MAAM,mBAAmB,CAAC;AACxE,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AACzC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAC1E,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAMvD,OAAO,EAAE,YAAY,EAAE,MAAM,6BAA6B,CAAC;AAE3D,MAAM,+BAA+B,GAAG,GAAG,CAAC;AAC5C,MAAM,gCAAgC,GAAG,GAAG,CAAC;AAE7C,MAAM,MAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAgCjB,CAAC;IAGW,YAAY;4BADxB,aAAa,CAAC,eAAe,CAAC;;;;sBACG,cAAc,CAAC,iBAAiB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;4BAAzC,SAAQ,WAAiC;;;;+BA0JhE,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;oCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;sCAG9B,KAAK,EAAE;iCAGP,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;gCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;yCAG9B,KAAK,CAAC,aAAa,CAAC;yCAGpB,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;wCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;YApB/B,8JAAS,GAAG,6BAAH,GAAG,iFAAO;YAGnB,6KAAS,QAAQ,6BAAR,QAAQ,2FAA2C;YAG5D,mLAAS,UAAU,6BAAV,UAAU,+FAAS;YAG5B,oKAAS,KAAK,6BAAL,KAAK,qFAAmB;YAGjC,iKAAS,IAAI,6BAAJ,IAAI,mFAAc;YAG3B,4LAAS,aAAa,6BAAb,aAAa,qGAA2B;YAGjD,4LAAS,aAAa,6BAAb,aAAa,qGAA4C;YAGlE,yLAAS,YAAY,6BAAZ,YAAY,mGAA2C;YAhLlE,6KAiLC;;;;iBAhLiB,WAAM,GAAG,MAAM,AAAT,CAAU;QAuCxB,eAAe;YACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE;gBACzD,KAAK,EAAE,IAAI,CAAC,UAAU;gBACtB,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,EAAE;gBACxB,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACvD,CAAC,CAAC,CAAC;QACL,CAAC;QAEO,SAAS;YACf,MAAM,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzD,MAAM,mBAAoB,SAAQ,mBAAmB;yBAC1B,YAAO,GAAG,aAAa,CAAC;gBAExC,OAAO;oBACd,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;oBACvC,YAAY,CAAC,WAAW,CAAC,GAAG,CAC1B,YAAY,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE;wBACxD,MAAM,aAAa,GACjB,SAA8C,CAAC;wBAEjD,aAAa,CAAC,sBAAsB,GAAG,wBAAwB,CAAC;wBAChE,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE;4BACnD,eAAe,EAAE,CAAC;wBACpB,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,CACH,CAAC;gBACJ,CAAC;;YAEH,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAClD,CAAC;QAEO,gBAAgB;YACtB,MAAM,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC;YAE7C,IAAI,CAAC,iBAAiB;gBAAE,OAAO;YAE/B,MAAM,eAAe,GAAG,iBAAiB,CAAC,GAAG,CAAC,UAAU,CACtD,aAAa,CACS,CAAC;YAEzB,MAAM,UAAU,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACtD,eAAe,CAAC,QAAQ,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;QAC1D,CAAC;QAEO,qBAAqB;YAC3B,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,KAAK;gBAAE,OAAO,OAAO,CAAC;YACrD,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YAEhD,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC7C,OAAO,IAAI,CAAA;;cAED,QAAQ,CAAC;gBACf,KAAK,EAAE,GAAG,IAAI,CAAC,YAAY,IAAI;gBAC/B,MAAM,EAAE,GAAG,IAAI,CAAC,aAAa,IAAI;aAClC,CAAC;;;;gBAIQ,QAAQ,CAAC;gBACf,KAAK,EAAE,GAAG,KAAK,IAAI;gBACnB,MAAM,EAAE,GAAG,MAAM,IAAI;aACtB,CAAC;;UAEA,IAAI,aAAa,CAAC;gBAClB,GAAG,EAAE,IAAI,CAAC,WAAW;gBACrB,UAAU,EAAE,YAAY;aACzB,CAAC,CAAC,MAAM,EAAE;;WAER,CAAC;QACV,CAAC;QAEO,oBAAoB,CAAC,KAAsB;YACjD,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,IAAI,CAAC,iBAAiB,GAAG,IAAI,eAAe,EAAE,CAAC;YAC/C,IAAI,CAAC,iBAAiB,CAAC,GAAG,CACxB,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC,GAAG,EAAE;gBACzB,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC1B,CAAC,CAAC,CACH,CAAC;QACJ,CAAC;QAEQ,iBAAiB;YACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;YAC1B,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC;QAEQ,oBAAoB;YAC3B,KAAK,CAAC,oBAAoB,EAAE,CAAC;YAC7B,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAChC,CAAC;QAEQ,YAAY;YACnB,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxC,CAAC;QAEQ,MAAM;YACb,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;YAC7B,MAAM,SAAS,GAAG,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC;YAEjD,OAAO,IAAI,CAAA;QACP,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,EAAE;WAC/C,CAAC;QACV,CAAC;QAEQ,UAAU,CAAC,kBAA6C;YAC/D,IAAI,kBAAkB,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;gBACpC,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC1B,CAAC;QACH,CAAC;QAGD,sBAAmB;QAAnB,IAAS,GAAG,yCAAO;QAAnB,IAAS,GAAG,+CAAO;QAGnB,2BAA4D;QAA5D,IAAS,QAAQ,8CAA2C;QAA5D,IAAS,QAAQ,oDAA2C;QAG5D,6BAA4B;QAA5B,IAAS,UAAU,gDAAS;QAA5B,IAAS,UAAU,sDAAS;QAG5B,wBAAiC;QAAjC,IAAS,KAAK,2CAAmB;QAAjC,IAAS,KAAK,iDAAmB;QAGjC,uBAA2B;QAA3B,IAAS,IAAI,0CAAc;QAA3B,IAAS,IAAI,gDAAc;QAG3B,gCAAiD;QAAjD,IAAS,aAAa,mDAA2B;QAAjD,IAAS,aAAa,yDAA2B;QAGjD,gCAAkE;QAAlE,IAAS,aAAa,mDAA4C;QAAlE,IAAS,aAAa,yDAA4C;QAGlE,+BAAgE;QAAhE,IAAS,YAAY,kDAA2C;QAAhE,IAAS,YAAY,wDAA2C;;;YA7KxD,2BAAsB,GAAG,GAAG,EAAE;gBACpC,IAAI,CAAC,iBAAiB,EAAE,OAAO,EAAE,CAAC;gBAClC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAChC,CAAC,CAAC;YAEM,eAAU,GAAU;gBAC1B,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE;oBACL;wBACE,OAAO,EAAE,cAAc;wBACvB,QAAQ,EAAE,aAAa,CAAC,MAAM;qBAC/B;iBACF;aACF,CAAC;YAEM,sBAAiB,GAA2B,IAAI,CAAC;YAEjD,mBAAc,GAAG,GAAG,EAAE;gBAC5B,MAAM,CAAC,EAAE,AAAD,EAAG,CAAC,EAAE,CAAC,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAEpD,IAAI,KAAK,GAAG,CAAC,CAAC;gBACd,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;oBACpB,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;gBAClE,CAAC;qBAAM,CAAC;oBACN,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;gBAClE,CAAC;gBAED,OAAO;oBACL,KAAK,EAAE,CAAC,GAAG,KAAK;oBAChB,MAAM,EAAE,CAAC,GAAG,KAAK;iBAClB,CAAC;YACJ,CAAC,CAAC;YAEM,gBAAW,GAAe,IAAI,CAAC;YAE/B,iBAAY,GAAG,YAAY,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;YAqHrE,gFAAU;YAGV,oIAA8C,IAAI,GAAC;YAGnD,6IAAa,KAAK,GAAC;YAGnB,8IAAwB;YAGxB,uIAAkB;YAGlB,+IAAmC,IAAI,GAAC;YAGxC,wJAAwB,gCAAgC,GAAC;YAGzD,sJAAuB,+BAA+B,GAAC;;;;YAhLrD,uDAAY;;;;;SAAZ,YAAY","sourcesContent":["import type { FrameBlockModel } from '@blocksuite/affine-model';\n\nimport { BlockServiceWatcher, BlockStdScope } from '@blocksuite/block-std';\nimport {\n  type EditorHost,\n  ShadowlessElement,\n  WithDisposable,\n} from '@blocksuite/block-std';\nimport {\n  Bound,\n  deserializeXYWH,\n  DisposableGroup,\n} from '@blocksuite/global/utils';\nimport { BlockViewType, type Doc, type Query } from '@blocksuite/store';\nimport { css, html, nothing } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\n\nimport type { EdgelessRootBlockComponent } from '../../edgeless-root-block.js';\nimport type { EdgelessRootPreviewBlockComponent } from '../../edgeless-root-preview-block.js';\nimport type { EdgelessRootService } from '../../edgeless-root-service.js';\n\nimport { SpecProvider } from '../../../../_specs/index.js';\n\nconst DEFAULT_PREVIEW_CONTAINER_WIDTH = 280;\nconst DEFAULT_PREVIEW_CONTAINER_HEIGHT = 166;\n\nconst styles = css`\n  .frame-preview-container {\n    display: block;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n    position: relative;\n  }\n\n  .frame-preview-surface-container {\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    overflow: hidden;\n  }\n\n  .frame-preview-viewport {\n    max-width: 100%;\n    box-sizing: border-box;\n    margin: 0 auto;\n    position: relative;\n    overflow: hidden;\n    pointer-events: none;\n    user-select: none;\n\n    .edgeless-background {\n      background-color: transparent;\n      background-image: none;\n    }\n  }\n`;\n\n@customElement('frame-preview')\nexport class FramePreview extends WithDisposable(ShadowlessElement) {\n  static override styles = styles;\n\n  private _clearFrameDisposables = () => {\n    this._frameDisposables?.dispose();\n    this._frameDisposables = null;\n  };\n\n  private _docFilter: Query = {\n    mode: 'loose',\n    match: [\n      {\n        flavour: 'affine:frame',\n        viewType: BlockViewType.Hidden,\n      },\n    ],\n  };\n\n  private _frameDisposables: DisposableGroup | null = null;\n\n  private _getViewportWH = () => {\n    const [, , w, h] = deserializeXYWH(this.frame.xywh);\n\n    let scale = 1;\n    if (this.fillScreen) {\n      scale = Math.max(this.surfaceWidth / w, this.surfaceHeight / h);\n    } else {\n      scale = Math.min(this.surfaceWidth / w, this.surfaceHeight / h);\n    }\n\n    return {\n      width: w * scale,\n      height: h * scale,\n    };\n  };\n\n  private _previewDoc: Doc | null = null;\n\n  private _previewSpec = SpecProvider.getInstance().getSpec('edgeless:preview');\n\n  private _initPreviewDoc() {\n    this._previewDoc = this.doc.collection.getDoc(this.doc.id, {\n      query: this._docFilter,\n      readonly: true,\n    });\n    this.disposables.add(() => {\n      this.doc.blockCollection.clearQuery(this._docFilter);\n    });\n  }\n\n  private _initSpec() {\n    const refreshViewport = this._refreshViewport.bind(this);\n    class FramePreviewWatcher extends BlockServiceWatcher {\n      static override readonly flavour = 'affine:page';\n\n      override mounted() {\n        const blockService = this.blockService;\n        blockService.disposables.add(\n          blockService.specSlots.viewConnected.on(({ component }) => {\n            const edgelessBlock =\n              component as EdgelessRootPreviewBlockComponent;\n\n            edgelessBlock.editorViewportSelector = 'frame-preview-viewport';\n            edgelessBlock.service.viewport.sizeUpdated.once(() => {\n              refreshViewport();\n            });\n          })\n        );\n      }\n    }\n    this._previewSpec.extend([FramePreviewWatcher]);\n  }\n\n  private _refreshViewport() {\n    const previewEditorHost = this.previewEditor;\n\n    if (!previewEditorHost) return;\n\n    const edgelessService = previewEditorHost.std.getService(\n      'affine:page'\n    ) as EdgelessRootService;\n\n    const frameBound = Bound.deserialize(this.frame.xywh);\n    edgelessService.viewport.setViewportByBound(frameBound);\n  }\n\n  private _renderSurfaceContent() {\n    if (!this._previewDoc || !this.frame) return nothing;\n    const { width, height } = this._getViewportWH();\n\n    const _previewSpec = this._previewSpec.value;\n    return html`<div\n      class=\"frame-preview-surface-container\"\n      style=${styleMap({\n        width: `${this.surfaceWidth}px`,\n        height: `${this.surfaceHeight}px`,\n      })}\n    >\n      <div\n        class=\"frame-preview-viewport\"\n        style=${styleMap({\n          width: `${width}px`,\n          height: `${height}px`,\n        })}\n      >\n        ${new BlockStdScope({\n          doc: this._previewDoc,\n          extensions: _previewSpec,\n        }).render()}\n      </div>\n    </div>`;\n  }\n\n  private _setFrameDisposables(frame: FrameBlockModel) {\n    this._clearFrameDisposables();\n    this._frameDisposables = new DisposableGroup();\n    this._frameDisposables.add(\n      frame.propsUpdated.on(() => {\n        this._refreshViewport();\n      })\n    );\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this._initSpec();\n    this._initPreviewDoc();\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this._clearFrameDisposables();\n  }\n\n  override firstUpdated() {\n    this._refreshViewport();\n    this._setFrameDisposables(this.frame);\n  }\n\n  override render() {\n    const { frame, host } = this;\n    const noContent = !frame || !frame.xywh || !host;\n\n    return html`<div class=\"frame-preview-container\">\n      ${noContent ? nothing : this._renderSurfaceContent()}\n    </div>`;\n  }\n\n  override willUpdate(_changedProperties: Map<PropertyKey, unknown>): void {\n    if (_changedProperties.has('frame')) {\n      this._refreshViewport();\n    }\n  }\n\n  @property({ attribute: false })\n  accessor doc!: Doc;\n\n  @property({ attribute: false })\n  accessor edgeless: EdgelessRootBlockComponent | null = null;\n\n  @state()\n  accessor fillScreen = false;\n\n  @property({ attribute: false })\n  accessor frame!: FrameBlockModel;\n\n  @property({ attribute: false })\n  accessor host!: EditorHost;\n\n  @query('editor-host')\n  accessor previewEditor: EditorHost | null = null;\n\n  @property({ attribute: false })\n  accessor surfaceHeight: number = DEFAULT_PREVIEW_CONTAINER_HEIGHT;\n\n  @property({ attribute: false })\n  accessor surfaceWidth: number = DEFAULT_PREVIEW_CONTAINER_WIDTH;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'frame-preview': FramePreview;\n  }\n}\n"]}