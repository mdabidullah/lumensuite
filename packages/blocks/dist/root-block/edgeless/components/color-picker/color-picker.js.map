{"version":3,"file":"color-picker.js","sourceRoot":"","sources":["../../../../../src/root-block/edgeless/components/color-picker/color-picker.ts"],"names":[],"mappings":"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","sourcesContent":["import { on, once, stopPropagation } from '@blocksuite/affine-shared/utils';\nimport { SignalWatcher, WithDisposable } from '@blocksuite/block-std';\nimport { batch, computed, signal } from '@lit-labs/preact-signals';\nimport { html, LitElement } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { live } from 'lit/directives/live.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { styleMap } from 'lit/directives/style-map.js';\n\nimport type {\n  Hsva,\n  ModeRgba,\n  ModeTab,\n  ModeType,\n  NavTab,\n  NavType,\n  PickColorEvent,\n  Point,\n  Rgb,\n} from './types.js';\n\nimport { AREA_CIRCLE_R, MATCHERS, SLIDER_CIRCLE_R } from './consts.js';\nimport { COLOR_PICKER_STYLE } from './styles.js';\nimport {\n  bound01,\n  clamp,\n  defaultHsva,\n  eq,\n  hsvaToHex8,\n  hsvaToRgba,\n  linearGradientAt,\n  parseHexToHsva,\n  renderCanvas,\n  rgbaToHex8,\n  rgbaToHsva,\n  rgbToHex,\n  rgbToHsv,\n} from './utils.js';\n\nconst TABS: NavTab<NavType>[] = [\n  { type: 'colors', name: 'Colors' },\n  { type: 'custom', name: 'Custom' },\n];\n\n@customElement('edgeless-color-picker')\nexport class EdgelessColorPicker extends SignalWatcher(\n  WithDisposable(LitElement)\n) {\n  static override styles = COLOR_PICKER_STYLE;\n\n  #alphaRect = new DOMRect();\n\n  #editAlpha = (e: InputEvent) => {\n    const target = e.target as HTMLInputElement;\n    const orignalValue = target.value;\n    let value = orignalValue.trim().replace(/[^0-9]/, '');\n\n    const alpha = clamp(0, Number(value), 100);\n    const a = bound01(alpha, 100);\n    const hsva = this.hsva$.peek();\n\n    value = `${alpha}`;\n    if (orignalValue !== value) {\n      target.value = value;\n    }\n\n    if (hsva.a === a) return;\n\n    const x = this.#alphaRect.width * a;\n    this.alphaPosX$.value = x;\n\n    this.#pick();\n  };\n\n  #editHex = (e: KeyboardEvent) => {\n    e.stopPropagation();\n\n    const target = e.target as HTMLInputElement;\n\n    if (e.key === 'Enter') {\n      const orignalValue = target.value;\n      let value = orignalValue.trim().replace(MATCHERS.other, '');\n      let matched;\n      if (\n        (matched = value.match(MATCHERS.hex3)) ||\n        (matched = value.match(MATCHERS.hex6))\n      ) {\n        const oldHsva = this.hsva$.peek();\n        const hsv = parseHexToHsva(matched[1]);\n        const newHsva = { ...oldHsva, ...hsv };\n\n        value = rgbToHex(hsvaToRgba(newHsva));\n        if (orignalValue !== value) {\n          target.value = value;\n        }\n\n        if (eq(newHsva, oldHsva)) return;\n\n        this.#setControlsPos(newHsva);\n\n        this.#pick();\n      } else {\n        target.value = this.hex6WithoutHash$.peek();\n      }\n    }\n  };\n\n  #hueRect = new DOMRect();\n\n  #paletteRect = new DOMRect();\n\n  #pick() {\n    const hsva = this.hsva$.peek();\n    const type = this.modeType$.peek();\n    const detail = { [type]: hsvaToHex8(hsva) };\n\n    if (type !== 'normal') {\n      const another = type === 'light' ? 'dark' : 'light';\n      const { hsva } = this[`${another}$`].peek();\n      detail[another] = hsvaToHex8(hsva);\n    }\n\n    this.pick?.({ type: 'pick', detail });\n  }\n\n  #pickEnd() {\n    this.pick?.({ type: 'end' });\n  }\n\n  #pickStart() {\n    this.pick?.({ type: 'start' });\n  }\n\n  #setAlphaPos(clientX: number) {\n    const { left, width } = this.#alphaRect;\n    const x = clamp(0, clientX - left, width);\n\n    this.alphaPosX$.value = x;\n  }\n\n  #setAlphaPosWithWheel(y: number) {\n    const { width } = this.#alphaRect;\n    const px = this.alphaPosX$.peek();\n    const ax = clamp(0, px + (y * width) / 100, width);\n\n    this.alphaPosX$.value = ax;\n  }\n\n  #setControlsPos({ h, s, v, a }: Hsva) {\n    const hx = this.#hueRect.width * h;\n    const px = this.#paletteRect.width * s;\n    const py = this.#paletteRect.height * (1 - v);\n    const ax = this.#alphaRect.width * a;\n\n    batch(() => {\n      this.huePosX$.value = hx;\n      this.alphaPosX$.value = ax;\n      this.palettePos$.value = { x: px, y: py };\n    });\n  }\n\n  #setHuePos(clientX: number) {\n    const { left, width } = this.#hueRect;\n    const x = clamp(0, clientX - left, width);\n\n    this.huePosX$.value = x;\n  }\n\n  #setHuePosWithWheel(y: number) {\n    const { width } = this.#hueRect;\n    const px = this.huePosX$.peek();\n    const ax = clamp(0, px + (y * width) / 100, width);\n\n    this.huePosX$.value = ax;\n  }\n\n  #setPalettePos(clientX: number, clientY: number) {\n    const { left, top, width, height } = this.#paletteRect;\n    const x = clamp(0, clientX - left, width);\n    const y = clamp(0, clientY - top, height);\n\n    this.palettePos$.value = { x, y };\n  }\n\n  #setPalettePosWithWheel(x: number, y: number) {\n    const { width, height } = this.#paletteRect;\n    const pos = this.palettePos$.peek();\n    const px = clamp(0, pos.x + (x * width) / 100, width);\n    const py = clamp(0, pos.y + (y * height) / 100, height);\n\n    this.palettePos$.value = { x: px, y: py };\n  }\n\n  #setRect({ left, top, width, height }: DOMRect, offset: number) {\n    return new DOMRect(\n      left + offset,\n      top + offset,\n      Math.round(width - offset * 2),\n      Math.round(height - offset * 2)\n    );\n  }\n\n  #setRects() {\n    this.#paletteRect = this.#setRect(\n      this.paletteControl.getBoundingClientRect(),\n      AREA_CIRCLE_R\n    );\n\n    this.#hueRect = this.#setRect(\n      this.hueControl.getBoundingClientRect(),\n      SLIDER_CIRCLE_R\n    );\n\n    this.#alphaRect = this.#setRect(\n      this.alphaControl.getBoundingClientRect(),\n      SLIDER_CIRCLE_R\n    );\n  }\n\n  #switchModeTab(type: ModeType) {\n    this.modeType$.value = type;\n    this.#setControlsPos(this.mode$.peek().hsva);\n  }\n\n  #switchNavTab(type: NavType) {\n    this.navType$.value = type;\n\n    if (type === 'colors') {\n      const mode = this.mode$.peek();\n      this.modes$.value[0].hsva = { ...mode.hsva };\n      this.modeType$.value = 'normal';\n    } else {\n      const [normal, light, dark] = this.modes$.value;\n      light.hsva = { ...normal.hsva };\n      dark.hsva = { ...normal.hsva };\n      this.modeType$.value = 'light';\n    }\n  }\n\n  override firstUpdated() {\n    let clicked = false;\n    let dragged = false;\n    let outed = false;\n    let picked = false;\n\n    let pointerenter: (() => void) | null;\n    let pointermove: (() => void) | null;\n    let pointerout: (() => void) | null;\n    let timerId = 0;\n\n    this.disposables.addFromEvent(this, 'wheel', (e: WheelEvent) => {\n      e.stopPropagation();\n\n      const target = e.composedPath()[0] as HTMLElement;\n      const isInHue = target === this.hueControl;\n      const isInAlpha = !isInHue && target === this.alphaControl;\n      const isInPalette = !isInAlpha && target === this.paletteControl;\n      picked = isInHue || isInAlpha || isInPalette;\n\n      if (timerId) {\n        clearTimeout(timerId);\n      }\n\n      // update target rect\n      if (picked) {\n        if (!timerId) {\n          this.#pickStart();\n        }\n        timerId = window.setTimeout(() => {\n          this.#pickEnd();\n          timerId = 0;\n        }, 110);\n      }\n\n      const update = (x: number, y: number) => {\n        if (!picked) return;\n\n        const absX = Math.abs(x);\n        const absY = Math.abs(y);\n\n        x = Math.sign(x);\n        y = Math.sign(y);\n\n        if (Math.hypot(x, y) === 0) return;\n\n        x *= Math.max(1, Math.log10(absX)) * -1;\n        y *= Math.max(1, Math.log10(absY)) * -1;\n\n        if (isInHue) {\n          this.#setHuePosWithWheel(x | y);\n        }\n\n        if (isInAlpha) {\n          this.#setAlphaPosWithWheel(x | y);\n        }\n\n        if (isInPalette) {\n          this.#setPalettePosWithWheel(x, y);\n        }\n\n        this.#pick();\n      };\n\n      update(e.deltaX, e.deltaY);\n    });\n\n    this.disposables.addFromEvent(this, 'pointerdown', (e: PointerEvent) => {\n      e.stopPropagation();\n\n      if (timerId) {\n        clearTimeout(timerId);\n        timerId = 0;\n      }\n\n      // checks pointer enter/out\n      pointerenter = on(this, 'pointerenter', () => (outed = false));\n      pointerout = on(this, 'pointerout', () => (outed = true));\n      // cleanups\n      once(document, 'pointerup', () => {\n        pointerenter?.();\n        pointermove?.();\n        pointerout?.();\n\n        if (picked) {\n          this.#pickEnd();\n        }\n\n        // When dragging the points, the color picker panel should not be triggered to close.\n        if (dragged && outed) {\n          once(document, 'click', stopPropagation, true);\n        }\n\n        pointerenter = pointermove = pointerout = null;\n        clicked = dragged = outed = picked = false;\n      });\n\n      clicked = true;\n\n      const target = e.composedPath()[0] as HTMLElement;\n      const isInHue = target === this.hueControl;\n      const isInAlpha = !isInHue && target === this.alphaControl;\n      const isInPalette = !isInAlpha && target === this.paletteControl;\n      picked = isInHue || isInAlpha || isInPalette;\n\n      // update target rect\n      if (picked) {\n        this.#pickStart();\n\n        const rect = target.getBoundingClientRect();\n        if (isInHue) {\n          this.#hueRect = this.#setRect(rect, SLIDER_CIRCLE_R);\n        } else if (isInAlpha) {\n          this.#alphaRect = this.#setRect(rect, SLIDER_CIRCLE_R);\n        } else if (isInPalette) {\n          this.#paletteRect = this.#setRect(rect, AREA_CIRCLE_R);\n        }\n      }\n\n      const update = (x: number, y: number) => {\n        if (!picked) return;\n\n        if (isInHue) {\n          this.#setHuePos(x);\n        }\n\n        if (isInAlpha) {\n          this.#setAlphaPos(x);\n        }\n\n        if (isInPalette) {\n          this.#setPalettePos(x, y);\n        }\n\n        this.#pick();\n      };\n\n      update(e.x, e.y);\n\n      pointermove = on(document, 'pointermove', (e: PointerEvent) => {\n        if (!clicked) return;\n        if (!dragged) dragged = true;\n\n        update(e.x, e.y);\n      });\n    });\n    this.disposables.addFromEvent(this, 'click', stopPropagation);\n\n    const batches: (() => void)[] = [];\n    const { type, modes } = this.colors;\n\n    // Updates UI states\n    if (['dark', 'light'].includes(type)) {\n      batches.push(() => {\n        this.modeType$.value = type;\n        this.navType$.value = 'custom';\n      });\n    }\n\n    // Updates modes\n    if (modes?.length) {\n      batches.push(() => {\n        this.modes$.value.reduce((fallback, curr, n) => {\n          const m = modes[n];\n          curr.hsva = m ? rgbaToHsva(m.rgba) : fallback;\n          return { ...curr.hsva };\n        }, defaultHsva());\n      });\n    }\n\n    // Updates controls' positions\n    batches.push(() => {\n      const mode = this.mode$.peek();\n      this.#setControlsPos(mode.hsva);\n    });\n\n    // Updates controls' rects\n    this.#setRects();\n\n    batch(() => batches.forEach(fn => fn()));\n\n    this.updateComplete\n      .then(() => {\n        this.disposables.add(\n          this.hsva$.subscribe((hsva: Hsva) => {\n            const type = this.modeType$.peek();\n            const mode = this.modes$.value.find(mode => mode.type === type);\n\n            if (mode) {\n              mode.hsva = { ...hsva };\n            }\n          })\n        );\n\n        this.disposables.add(\n          this.huePosX$.subscribe((x: number) => {\n            const { width } = this.#hueRect;\n            const rgb = linearGradientAt(bound01(x, width));\n\n            // Updates palette canvas\n            renderCanvas(this.canvas, rgb);\n\n            this.hue$.value = rgb;\n          })\n        );\n\n        this.disposables.add(\n          this.hue$.subscribe((rgb: Rgb) => {\n            const hsva = this.hsva$.peek();\n            const h = rgbToHsv(rgb).h;\n\n            this.hsva$.value = { ...hsva, h };\n          })\n        );\n\n        this.disposables.add(\n          this.alphaPosX$.subscribe((x: number) => {\n            const hsva = this.hsva$.peek();\n            const { width } = this.#alphaRect;\n            const a = bound01(x, width);\n\n            this.hsva$.value = { ...hsva, a };\n          })\n        );\n\n        this.disposables.add(\n          this.palettePos$.subscribe(({ x, y }: Point) => {\n            const hsva = this.hsva$.peek();\n            const { width, height } = this.#paletteRect;\n            const s = bound01(x, width);\n            const v = bound01(height - y, height);\n\n            this.hsva$.value = { ...hsva, s, v };\n          })\n        );\n      })\n      .catch(console.error);\n  }\n\n  override render() {\n    return html`\n      <header>\n        <nav>\n          ${repeat(\n            TABS,\n            tab => tab.type,\n            ({ type, name }) => html`\n              <button\n                ?active=${type === this.navType$.value}\n                @click=${() => this.#switchNavTab(type)}\n              >\n                ${name}\n              </button>\n            `\n          )}\n        </nav>\n      </header>\n\n      <div class=\"modes\" ?active=${this.navType$.value === 'custom'}>\n        ${repeat(\n          [this.light$.value, this.dark$.value],\n          mode => mode.type,\n          ({ type, name, hsva }) => html`\n            <div\n              class=\"${classMap({ mode: true, [type]: true })}\"\n              style=${styleMap({ '--c': hsvaToHex8(hsva) })}\n            >\n              <button\n                ?active=${this.modeType$.value === type}\n                @click=${() => this.#switchModeTab(type)}\n              >\n                <div class=\"color\"></div>\n                <div>${name}</div>\n              </button>\n            </div>\n          `\n        )}\n      </div>\n\n      <div class=\"content\">\n        <div\n          class=\"color-palette-wrapper\"\n          style=${styleMap(this.paletteStyle$.value)}\n        >\n          <canvas></canvas>\n          <div class=\"color-circle\"></div>\n          <div class=\"color-palette\"></div>\n        </div>\n        <div\n          class=\"color-slider-wrapper hue\"\n          style=${styleMap(this.hueStyle$.value)}\n        >\n          <div class=\"color-circle\"></div>\n          <div class=\"color-slider\"></div>\n        </div>\n        <div\n          class=\"color-slider-wrapper alpha\"\n          style=${styleMap(this.alphaStyle$.value)}\n        >\n          <div class=\"color-circle\"></div>\n          <div class=\"color-slider\"></div>\n        </div>\n      </div>\n\n      <footer>\n        <label class=\"field color\">\n          <span>#</span>\n          <input\n            autocomplete=\"off\"\n            spellcheck=\"false\"\n            minlength=\"1\"\n            maxlength=\"6\"\n            .value=${live(this.hex6WithoutHash$.value)}\n            @keydown=${this.#editHex}\n            @cut=${stopPropagation}\n            @copy=${stopPropagation}\n            @paste=${stopPropagation}\n          />\n        </label>\n        <label class=\"field alpha\">\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"100\"\n            .value=${live(this.alpha100$.value)}\n            @input=${this.#editAlpha}\n            @cut=${stopPropagation}\n            @copy=${stopPropagation}\n            @paste=${stopPropagation}\n          />\n          <span>%</span>\n        </label>\n      </footer>\n    `;\n  }\n\n  // 0-100\n  accessor alpha100$ = computed(\n    () => `${Math.round(this.hsva$.value.a * 100)}`\n  );\n\n  @query('.color-slider-wrapper.alpha .color-slider')\n  accessor alphaControl!: HTMLDivElement;\n\n  accessor alphaPosX$ = signal<number>(0);\n\n  accessor alphaStyle$ = computed(() => {\n    const x = this.alphaPosX$.value;\n    const rgba = this.rgba$.value;\n    const hex = `#${rgbToHex(rgba)}`;\n    return {\n      '--o': rgba.a,\n      '--s': `${hex}00`,\n      '--c': `${hex}ff`,\n      '--x': `${x}px`,\n      '--r': `${SLIDER_CIRCLE_R}px`,\n    };\n  });\n\n  @query('canvas')\n  accessor canvas!: HTMLCanvasElement;\n\n  @property({ attribute: false })\n  accessor colors: { type: ModeType; modes?: ModeRgba[] } = { type: 'normal' };\n\n  accessor dark$ = computed<ModeTab<ModeType>>(() => this.modes$.value[2]);\n\n  // #ffffff\n  accessor hex6$ = computed(() => this.hex8$.value.substring(0, 7));\n\n  // ffffff\n  accessor hex6WithoutHash$ = computed(() => this.hex6$.value.substring(1));\n\n  // #ffffffff\n  accessor hex8$ = computed(() => rgbaToHex8(this.rgba$.value));\n\n  accessor hsva$ = signal<Hsva>(defaultHsva());\n\n  accessor hue$ = signal<Rgb>({ r: 0, g: 0, b: 0 });\n\n  @query('.color-slider-wrapper.hue .color-slider')\n  accessor hueControl!: HTMLDivElement;\n\n  accessor huePosX$ = signal<number>(0);\n\n  accessor hueStyle$ = computed(() => {\n    const x = this.huePosX$.value;\n    const rgb = this.hue$.value;\n    return {\n      '--x': `${x}px`,\n      '--c': `#${rgbToHex(rgb)}`,\n      '--r': `${SLIDER_CIRCLE_R}px`,\n    };\n  });\n\n  accessor light$ = computed<ModeTab<ModeType>>(() => this.modes$.value[1]);\n\n  accessor mode$ = computed<ModeTab<ModeType>>(() => {\n    const modeType = this.modeType$.value;\n    return this.modes$.value.find(mode => mode.type === modeType)!;\n  });\n\n  accessor modes$ = signal<ModeTab<ModeType>[]>([\n    { type: 'normal', name: 'Normal', hsva: defaultHsva() },\n    { type: 'light', name: 'Light', hsva: defaultHsva() },\n    { type: 'dark', name: 'Dark', hsva: defaultHsva() },\n  ]);\n\n  accessor modeType$ = signal<ModeType>('normal');\n\n  accessor navType$ = signal<NavType>('colors');\n\n  @query('.color-palette')\n  accessor paletteControl!: HTMLDivElement;\n\n  accessor palettePos$ = signal<Point>({ x: 0, y: 0 });\n\n  accessor paletteStyle$ = computed(() => {\n    const { x, y } = this.palettePos$.value;\n    const c = this.hex6$.value;\n    return {\n      '--c': c,\n      '--x': `${x}px`,\n      '--y': `${y}px`,\n      '--r': `${AREA_CIRCLE_R}px`,\n    };\n  });\n\n  @property({ attribute: false })\n  accessor pick!: (event: PickColorEvent) => void;\n\n  accessor rgba$ = computed(() => hsvaToRgba(this.hsva$.value));\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'edgeless-color-picker': EdgelessColorPicker;\n  }\n}\n"]}