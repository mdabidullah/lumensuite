{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../../src/root-block/edgeless/components/color-picker/utils.ts"],"names":[],"mappings":"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","sourcesContent":["// https://www.w3.org/TR/css-color-4/\n\nimport type { Color, ColorScheme } from '@lumensuite/affine-model';\n\nimport type {\n  Hsv,\n  Hsva,\n  ModeType,\n  PickColorDetail,\n  PickColorType,\n  Point,\n  Rgb,\n  Rgba,\n} from './types.js';\n\nimport { COLORS, FIRST_COLOR } from './consts.js';\n\nexport const defaultPoint = (x = 0, y = 0): Point => ({ x, y });\n\nexport const defaultHsva = (): Hsva => ({ ...rgbToHsv(FIRST_COLOR), a: 1 });\n\nexport function linearGradientAt(t: number): Rgb {\n  if (t < 0) return COLORS[0][0];\n  if (t > 1) return COLORS[COLORS.length - 1][0];\n\n  let low = 0;\n  let high = COLORS.length;\n  while (low < high) {\n    const mid = Math.floor((low + high) / 2);\n    const color = COLORS[mid];\n    if (color[1] < t) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n\n  if (low === 0) {\n    low = 1;\n  }\n\n  const [rgb0, s0] = COLORS[low - 1];\n  const [rgb1, s1] = COLORS[low];\n  t = (t - s0) / (s1 - s0);\n\n  const [r, g, b] = [\n    lerp(rgb0.r, rgb1.r, t),\n    lerp(rgb0.g, rgb1.g, t),\n    lerp(rgb0.b, rgb1.b, t),\n  ];\n\n  return { r, g, b };\n}\n\nconst lerp = (a: number, b: number, t: number) => a + t * (b - a);\n\nexport const clamp = (min: number, val: number, max: number) =>\n  Math.min(Math.max(min, val), max);\n\nexport const bound01 = (n: number, max: number) => {\n  n = clamp(0, n, max);\n\n  // Handle floating point rounding errors\n  if (Math.abs(n - max) < 0.000001) {\n    return 1;\n  }\n\n  // Convert into [0, 1] range if it isn't already\n  return (n % max) / max;\n};\n\n// Converts an RGB color value to HSV\nexport const rgbToHsv = ({ r, g, b }: Rgb): Hsv => {\n  const v = Math.max(r, g, b); // value\n  const d = v - Math.min(r, g, b);\n\n  if (d === 0) {\n    return { h: 0, s: 0, v };\n  }\n\n  const s = d / v;\n  let h = 0;\n\n  if (v === r) {\n    h = (g - b) / d + (g < b ? 6 : 0);\n  } else if (v === g) {\n    h = (b - r) / d + 2;\n  } else {\n    h = (r - g) / d + 4;\n  }\n\n  h /= 6;\n\n  return { h, s, v };\n};\n\n// Converts an HSV color value to RGB\nexport const hsvToRgb = ({ h, s, v }: Hsv): Rgb => {\n  if (h < 0) h = (h + 1) % 1; // wrap\n  h *= 6;\n  s = clamp(0, s, 1);\n\n  const i = Math.floor(h),\n    f = h - i,\n    p = v * (1 - s),\n    q = v * (1 - f * s),\n    t = v * (1 - (1 - f) * s),\n    m = i % 6;\n\n  let rgb = [0, 0, 0];\n\n  if (m === 0) rgb = [v, t, p];\n  else if (m === 1) rgb = [q, v, p];\n  else if (m === 2) rgb = [p, v, t];\n  else if (m === 3) rgb = [p, q, v];\n  else if (m === 4) rgb = [t, p, v];\n  else if (m === 5) rgb = [v, p, q];\n\n  const [r, g, b] = rgb;\n\n  return { r, g, b };\n};\n\n// Converts a RGBA color value to HSVA\nexport const rgbaToHsva = (rgba: Rgba): Hsva => ({\n  ...rgbToHsv(rgba),\n  a: rgba.a,\n});\n\n// Converts an HSVA color value to RGBA\nexport const hsvaToRgba = (hsva: Hsva): Rgba => ({\n  ...hsvToRgb(hsva),\n  a: hsva.a,\n});\n\n// Converts a RGB color to hex\nexport const rgbToHex = ({ r, g, b }: Rgb) =>\n  [r, g, b]\n    .map(n => n * 255)\n    .map(Math.round)\n    .map(s => s.toString(16).padStart(2, '0'))\n    .join('');\n\n// Converts an RGBA color to CSS's hex8 string\nexport const rgbaToHex8 = ({ r, g, b, a }: Rgba) => {\n  const hex = [r, g, b, a]\n    .map(n => n * 255)\n    .map(Math.round)\n    .map(n => n.toString(16).padStart(2, '0'))\n    .join('');\n  return `#${hex}`;\n};\n\n// Converts an HSVA color to CSS's hex8 string\nexport const hsvaToHex8 = (hsva: Hsva) => rgbaToHex8(hsvaToRgba(hsva));\n\n// Parses an hex string to RGBA.\nexport const parseHexToRgba = (hex: string) => {\n  if (hex.startsWith('#')) {\n    hex = hex.substring(1);\n  }\n\n  const len = hex.length;\n  let arr: string[] = [];\n\n  if (len === 3 || len === 4) {\n    arr = hex.split('').map(s => s.repeat(2));\n  } else if (len === 6 || len === 8) {\n    arr = Array.from<number>({ length: len / 2 })\n      .fill(0)\n      .map((n, i) => n + i * 2)\n      .map(n => hex.substring(n, n + 2));\n  }\n\n  const [r, g, b, a = 1] = arr\n    .map(s => parseInt(s, 16))\n    .map(n => bound01(n, 255));\n\n  return { r, g, b, a };\n};\n\n// Parses an hex string to HSVA\nexport const parseHexToHsva = (hex: string) => rgbaToHsva(parseHexToRgba(hex));\n\n// Compares two hsvs.\nexport const eq = (lhs: Hsv, rhs: Hsv) =>\n  lhs.h === rhs.h && lhs.s === rhs.s && lhs.v === rhs.v;\n\nexport const renderCanvas = (canvas: HTMLCanvasElement, rgb: Rgb) => {\n  const { width, height } = canvas;\n  const ctx = canvas.getContext('2d')!;\n\n  ctx.globalCompositeOperation = 'color';\n  ctx.clearRect(0, 0, width, height);\n\n  // Saturation: from top to bottom\n  const s = ctx.createLinearGradient(0, 0, 0, height);\n  s.addColorStop(0, '#0000'); // transparent\n  s.addColorStop(1, '#000'); // black\n\n  ctx.fillStyle = s;\n  ctx.fillRect(0, 0, width, height);\n\n  // Value: from left to right\n  const v = ctx.createLinearGradient(0, 0, width, 0);\n  v.addColorStop(0, '#fff'); // white\n  v.addColorStop(1, `#${rgbToHex(rgb)}`); // picked color\n\n  ctx.fillStyle = v;\n  ctx.fillRect(0, 0, width, height);\n};\n\n// Drops alpha value\nexport const keepColor = (color: string) =>\n  color.length > 7 && !color.endsWith('transparent')\n    ? color.substring(0, 7)\n    : color;\n\nexport const parseStringToRgba = (value: string) => {\n  value = value.trim();\n\n  // Compatible old format: `--affine-palette-transparent`\n  if (value.endsWith('transparent')) {\n    return { r: 1, g: 1, b: 1, a: 0 };\n  }\n\n  if (value.startsWith('#')) {\n    return parseHexToRgba(value);\n  }\n\n  if (value.startsWith('rgb')) {\n    const [r, g, b, a = 1] = value\n      .replace(/^rgba?/, '')\n      .replace(/\\(|\\)/, '')\n      .split(',')\n      .map(s => parseFloat(s.trim()))\n      // In CSS, the alpha is already in the range [0, 1]\n      .map((n, i) => bound01(n, i === 3 ? 1 : 255));\n\n    return { r, g, b, a };\n  }\n\n  return { r: 0, g: 0, b: 0, a: 1 };\n};\n\n// Preprocess Color\nexport const preprocessColor = (style: CSSStyleDeclaration) => {\n  return ({ type, value }: { type: ModeType; value: string }) => {\n    if (value.startsWith('--')) {\n      // Compatible old format: `--affine-palette-transparent`\n      value = value.endsWith('transparent')\n        ? 'transparent'\n        : style.getPropertyValue(value);\n    }\n\n    const rgba = parseStringToRgba(value);\n\n    return { type, rgba };\n  };\n};\n\n/**\n * Packs to generate an object with a field name and picked color detail\n *\n * @param key - The model's field name\n * @param detail - The picked color detail\n * @returns An object\n *\n * @example\n *\n * ```json\n * { 'fillColor': '--affine-palette-shape-yellow' }\n * { 'fillColor': { normal: '#ffffffff' }}\n * { 'fillColor': { light: '#fff000ff', 'dark': '#0000fff00' }}\n * ```\n */\nexport const packColor = (key: string, detail: PickColorDetail) => {\n  return { [key]: detail.palette ?? detail };\n};\n\n/**\n * Packs to generate a color array with the color-scheme\n *\n * @param colorScheme - The current color theme\n * @param value - The color value\n * @param oldColor - The old color\n * @returns A color array\n */\nexport const packColorsWithColorScheme = (\n  colorScheme: ColorScheme,\n  value: string,\n  oldColor: Color\n) => {\n  const colors: { type: ModeType; value: string }[] = [\n    { type: 'normal', value },\n    { type: 'light', value },\n    { type: 'dark', value },\n  ];\n  let type: PickColorType = 'palette';\n\n  if (typeof oldColor === 'object') {\n    type = colorScheme in oldColor ? colorScheme : 'normal';\n    colors[0].value = oldColor.normal ?? value;\n    colors[1].value = oldColor.light ?? value;\n    colors[2].value = oldColor.dark ?? value;\n  }\n\n  return { type, colors };\n};\n"]}