{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../../src/root-block/edgeless/components/color-picker/types.ts"],"names":[],"mappings":"AAAA,qCAAqC","sourcesContent":["// https://www.w3.org/TR/css-color-4/\n\nimport type { ColorScheme } from '@blocksuite/affine-model';\n\n// Red, green, blue. All in the range [0, 1].\nexport type Rgb = {\n  // red 0-1\n  r: number;\n  // green 0-1\n  g: number;\n  // blue 0-1\n  b: number;\n};\n\n// Red, green, blue, alpha. All in the range [0, 1].\nexport type Rgba = Rgb & {\n  // alpha 0-1\n  a: number;\n};\n\n// Hue, saturation, value. All in the range [0, 1].\nexport type Hsv = {\n  // hue 0-1\n  h: number;\n  // saturation 0-1\n  s: number;\n  // value 0-1\n  v: number;\n};\n\n// Hue, saturation, value, alpha. All in the range [0, 1].\nexport type Hsva = Hsv & {\n  // alpha 0-1\n  a: number;\n};\n\nexport type Point = { x: number; y: number };\n\nexport type NavType = 'colors' | 'custom';\n\nexport type NavTab<Type> = { type: Type; name: string };\n\nexport type ModeType = 'normal' | `${ColorScheme}`;\n\nexport type ModeTab<Type> = NavTab<Type> & { hsva: Hsva };\n\nexport type ModeRgba = { type: ModeType; rgba: Rgba };\n\nexport type PickColorType = 'palette' | ModeType;\n\nexport type PickColorDetail = { [K in PickColorType]?: string };\n\nexport type PickColorEvent =\n  | { type: 'start' | 'end' }\n  | { type: 'pick'; detail: PickColorDetail };\n"]}