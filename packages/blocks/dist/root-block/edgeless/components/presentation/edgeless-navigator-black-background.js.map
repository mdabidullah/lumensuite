{"version":3,"file":"edgeless-navigator-black-background.js","sourceRoot":"","sources":["../../../../../src/root-block/edgeless/components/presentation/edgeless-navigator-black-background.ts"],"names":[],"mappings":"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","sourcesContent":["import type { FrameBlockModel } from '@blocksuite/affine-model';\n\nimport { WithDisposable } from '@blocksuite/block-std';\nimport { Bound } from '@blocksuite/global/utils';\nimport { css, html, LitElement, nothing } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\n\nimport type { EdgelessRootBlockComponent } from '../../edgeless-root-block.js';\n\n@customElement('edgeless-navigator-black-background')\nexport class EdgelessNavigatorBlackBackground extends WithDisposable(\n  LitElement\n) {\n  static override styles = css`\n    .edgeless-navigator-black-background {\n      background-color: black;\n      position: absolute;\n      z-index: 1;\n      background-color: transparent;\n      box-shadow: 0 0 0 5000px black;\n    }\n  `;\n\n  private _blackBackground = false;\n\n  private _tryLoadBlackBackground() {\n    const value = this.edgeless.service.editPropsStore.getStorage(\n      'presentBlackBackground'\n    );\n    this._blackBackground = value ?? true;\n  }\n\n  override firstUpdated() {\n    const { _disposables, edgeless } = this;\n    _disposables.add(\n      edgeless.slots.navigatorFrameChanged.on(frame => {\n        this.frame = frame;\n      })\n    );\n\n    _disposables.add(\n      edgeless.slots.navigatorSettingUpdated.on(({ blackBackground }) => {\n        if (blackBackground !== undefined) {\n          this.edgeless.service.editPropsStore.setStorage(\n            'presentBlackBackground',\n            blackBackground\n          );\n\n          this._blackBackground = blackBackground;\n\n          this.show =\n            blackBackground && edgeless.edgelessTool.type === 'frameNavigator';\n        }\n      })\n    );\n\n    _disposables.add(\n      edgeless.slots.edgelessToolUpdated.on(tool => {\n        if (tool.type !== 'frameNavigator') {\n          this.show = false;\n        } else {\n          this.show = this._blackBackground;\n        }\n      })\n    );\n\n    _disposables.add(\n      edgeless.slots.fullScreenToggled.on(\n        () =>\n          setTimeout(() => {\n            this.requestUpdate();\n          }, 500) // wait for full screen animation\n      )\n    );\n\n    this._tryLoadBlackBackground();\n  }\n\n  override render() {\n    const { edgeless, frame, show } = this;\n\n    if (!show || !frame) return nothing;\n\n    const bound = Bound.deserialize(frame.xywh);\n    const zoom = edgeless.service.viewport.zoom;\n    const width = bound.w * zoom;\n    const height = bound.h * zoom;\n    const [x, y] = edgeless.service.viewport.toViewCoord(bound.x, bound.y);\n\n    return html` <style>\n        .edgeless-navigator-black-background {\n          width: ${width}px;\n          height: ${height}px;\n          top: ${y}px;\n          left: ${x}px;\n        }\n      </style>\n      <div class=\"edgeless-navigator-black-background\"></div>`;\n  }\n\n  @property({ attribute: false })\n  accessor edgeless!: EdgelessRootBlockComponent;\n\n  @state()\n  private accessor frame: FrameBlockModel | undefined = undefined;\n\n  @state()\n  private accessor show = false;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'edgeless-navigator-black-background': EdgelessNavigatorBlackBackground;\n  }\n}\n"]}