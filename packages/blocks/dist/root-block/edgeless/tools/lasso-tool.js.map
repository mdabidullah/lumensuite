{"version":3,"file":"lasso-tool.js","sourceRoot":"","sources":["../../../../src/root-block/edgeless/tools/lasso-tool.ts"],"names":[],"mappings":"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","sourcesContent":["import type { PointerEventState } from '@blocksuite/block-std';\nimport type { IPoint, IVec } from '@blocksuite/global/utils';\n\nimport { CommonUtils, Overlay } from '@blocksuite/affine-block-surface';\nimport { ThemeObserver } from '@blocksuite/affine-shared/theme';\nimport {\n  Bound,\n  getBoundFromPoints,\n  getPolygonPathFromPoints,\n  linePolygonIntersects,\n  noop,\n  pointInPolygon,\n  rotatePoints,\n  Vec,\n} from '@blocksuite/global/utils';\n\nimport type { EdgelessTool } from '../types.js';\n\nimport { LassoMode } from '../../../_common/types.js';\nimport { EdgelessToolController } from './edgeless-tool.js';\n\nclass LassoOverlay extends Overlay {\n  d = '';\n\n  startPoint: IVec | null = null;\n\n  render(ctx: CanvasRenderingContext2D): void {\n    const path = new Path2D(this.d);\n    const zoom = this._renderer?.viewport.zoom ?? 1.0;\n    ctx.save();\n    const primaryColor = ThemeObserver.getPropertyValue(\n      '--affine-primary-color'\n    );\n    const strokeColor = ThemeObserver.getPropertyValue(\n      '--affine-secondary-color'\n    );\n    if (this.startPoint) {\n      const [x, y] = this.startPoint;\n      ctx.beginPath();\n      ctx.arc(x, y, 2 / zoom, 0, Math.PI * 2);\n      ctx.fillStyle = primaryColor;\n      ctx.fill();\n    }\n\n    ctx.strokeStyle = strokeColor;\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.1)';\n    ctx.lineWidth = 2 / zoom;\n    ctx.lineJoin = 'round';\n    ctx.lineCap = 'round';\n    ctx.setLineDash([2, 5]);\n    ctx.fill(path);\n    ctx.stroke(path);\n    ctx.restore();\n  }\n}\n\nexport type LassoTool = {\n  type: 'lasso';\n  mode: LassoMode;\n};\n\nexport class LassoToolController extends EdgelessToolController<LassoTool> {\n  private _currentSelectionState = new Set<string>();\n\n  private _isSelecting = false;\n\n  private _lassoPoints: IVec[] = [];\n\n  private _lastPoint: IVec = [0, 0];\n\n  private _loop = () => {\n    const path =\n      this.tool.mode === LassoMode.FreeHand\n        ? CommonUtils.getSvgPathFromStroke(this._lassoPoints)\n        : getPolygonPathFromPoints(this._lassoPoints);\n\n    this._overlay.d = path;\n    this._surface.refresh();\n    this._raf = requestAnimationFrame(this._loop);\n  };\n\n  private _overlay = new LassoOverlay();\n\n  private _raf = 0;\n\n  readonly tool = {\n    type: 'lasso',\n  } as LassoTool; // to finalize the selection\n\n  get isSelecting() {\n    return this._isSelecting;\n  }\n\n  get selection() {\n    return this._edgeless.service.selection;\n  }\n\n  private _clearLastSelection() {\n    if (this.selection.empty) {\n      this.selection.clearLast();\n    }\n  }\n\n  private _getElementsInsideLasso() {\n    const lassoBounds = getBoundFromPoints(this._lassoPoints);\n    return this._service.gfx\n      .getElementsByBound(lassoBounds)\n      .filter(e =>\n        this.isInsideLassoSelection(Bound.deserialize(e.xywh), e.rotate)\n      );\n  }\n\n  private _getSelectionMode(ev: PointerEventState): 'add' | 'sub' | 'set' {\n    const shiftKey = ev.keys.shift ?? this._edgeless.tools.shiftKey;\n    const altKey = ev.keys.alt ?? false;\n    if (shiftKey) return 'add';\n    else if (altKey) return 'sub';\n    else {\n      return 'set';\n    }\n  }\n\n  private _reset() {\n    cancelAnimationFrame(this._raf);\n    this._edgeless.surface.renderer.removeOverlay(this._overlay);\n    this._overlay.d = '';\n    this._overlay.startPoint = null;\n\n    const elements = this._getElementsInsideLasso();\n\n    this._currentSelectionState = new Set([\n      ...Array.from(this._currentSelectionState),\n      ...elements.map(el => el.id),\n    ]);\n\n    this._lassoPoints = [];\n    this._isSelecting = false;\n  }\n\n  private _setSelectionState(elements: string[], editing: boolean) {\n    this.selection.set({\n      elements,\n      editing,\n    });\n  }\n\n  private _updateSelection(e: PointerEventState) {\n    // elements inside the lasso selection\n    const elements = this._getElementsInsideLasso().map(el => el.id);\n\n    // current selections\n    const selection = this.selection.selectedElements.map(el => el.id);\n\n    const selectionMode = this._getSelectionMode(e);\n    let set!: Set<string>;\n    switch (selectionMode) {\n      case 'add':\n        set = new Set([\n          ...elements,\n          ...selection.filter(elId => this._currentSelectionState.has(elId)),\n        ]);\n        break;\n      case 'sub': {\n        const toRemove = new Set(elements);\n        set = new Set(\n          Array.from(this._currentSelectionState).filter(\n            el => !toRemove.has(el)\n          )\n        );\n        break;\n      }\n      case 'set':\n        set = new Set(elements);\n        break;\n    }\n    this._setSelectionState(Array.from(set), false);\n  }\n\n  private isInsideLassoSelection(bound: Bound, rotate: number): boolean {\n    const { points, center } = bound;\n\n    const firstPoint = this._lassoPoints[0];\n    const lassoPoints = this._lassoPoints.concat(\n      firstPoint ? [firstPoint] : []\n    );\n\n    const elPoly = rotatePoints(points, center, rotate);\n    const lassoLen = lassoPoints.length;\n    return (\n      elPoly.some(point => pointInPolygon(point, lassoPoints)) ||\n      lassoPoints.some((point, i, points) => {\n        return linePolygonIntersects(point, points[(i + 1) % lassoLen], elPoly);\n      })\n    );\n  }\n\n  private toModelCoord(p: IPoint): IVec {\n    return this._service.viewport.toModelCoord(p.x, p.y);\n  }\n\n  abort() {\n    this._reset();\n  }\n\n  override afterModeSwitch(newTool?: EdgelessTool): void {\n    if (newTool?.type === 'lasso')\n      this._currentSelectionState = new Set(\n        this.selection.selectedElements.map(el => el.id)\n      );\n    this._reset();\n  }\n\n  override beforeModeSwitch(edgelessTool?: EdgelessTool) {\n    if (edgelessTool?.type === 'pan') {\n      this._clearLastSelection();\n    }\n  }\n\n  override onContainerClick(): void {}\n\n  override onContainerContextMenu(): void {\n    noop();\n  }\n\n  override onContainerDblClick(): void {\n    noop();\n  }\n\n  override onContainerDragEnd(e: PointerEventState): void {\n    if (this.tool.mode !== LassoMode.FreeHand) return;\n\n    this._updateSelection(e);\n\n    this._reset();\n  }\n\n  override onContainerDragMove(e: PointerEventState): void {\n    if (this.tool.mode !== LassoMode.FreeHand) return;\n\n    const { point } = e;\n    const [x, y] = this.toModelCoord(point);\n    this._lassoPoints.push([x, y]);\n\n    this._updateSelection(e);\n  }\n\n  // For Freehand Mode =\n  override onContainerDragStart(e: PointerEventState): void {\n    if (this.tool.mode !== LassoMode.FreeHand) return;\n    const { alt, shift } = e.keys;\n\n    if (!shift && !alt) {\n      this._currentSelectionState.clear();\n      this.selection.clear();\n    }\n\n    this._currentSelectionState = new Set(\n      this.selection.selectedElements.map(el => el.id)\n    );\n\n    this._isSelecting = true;\n\n    const { point } = e;\n    const [x, y] = this.toModelCoord(point);\n    this._lassoPoints = [[x, y]];\n    this._raf = requestAnimationFrame(this._loop);\n    this._overlay.startPoint = this._lassoPoints[0];\n    this._surface.renderer.addOverlay(this._overlay);\n  }\n\n  override onContainerMouseMove(e: PointerEventState): void {\n    if (this.tool.mode !== LassoMode.Polygonal || !this._isSelecting) return;\n\n    const lastPoint = this._lastPoint;\n    const [x, y] = this.toModelCoord(e.point);\n    if (lastPoint) {\n      lastPoint[0] = x;\n      lastPoint[1] = y;\n    }\n    this._updateSelection(e);\n  }\n\n  override onContainerMouseOut(): void {\n    noop();\n  }\n\n  override onContainerPointerDown(e: PointerEventState): void {\n    const { mode } = this.tool;\n    if (mode !== LassoMode.Polygonal) return;\n\n    const { alt, shift } = e.keys;\n    if (!shift && !alt) {\n      this._currentSelectionState.clear();\n      this.selection.clear();\n    }\n\n    this._isSelecting = true;\n\n    const { point } = e;\n    const [x, y] = this.toModelCoord(point);\n    if (this._lassoPoints.length < 2) {\n      this._currentSelectionState = new Set(\n        this.selection.selectedElements.map(el => el.id)\n      );\n\n      const a: IVec = [x, y];\n      const b: IVec = [x, y];\n      this._lassoPoints = [a, b];\n      this._lastPoint = b;\n      this._overlay.startPoint = a;\n      this._raf = requestAnimationFrame(this._loop);\n      this._surface.renderer.addOverlay(this._overlay);\n    } else {\n      const firstPoint = this._lassoPoints[0];\n      const lastPoint = this._lastPoint;\n      const dx = lastPoint[0] - firstPoint[0];\n      const dy = lastPoint[1] - firstPoint[1];\n      if (Vec.len2([dx, dy]) < 20 ** 2) {\n        this._updateSelection(e);\n\n        return this._reset();\n      }\n\n      this._lastPoint = [x, y];\n      this._lassoPoints.push(this._lastPoint);\n    }\n  }\n\n  override onContainerTripleClick(): void {\n    noop();\n  }\n\n  override onPressShiftKey(): void {\n    noop();\n  }\n\n  override onPressSpaceBar(): void {\n    noop();\n  }\n}\n\ndeclare global {\n  namespace BlockSuite {\n    interface EdgelessToolMap {\n      lasso: LassoToolController;\n    }\n  }\n}\n"]}