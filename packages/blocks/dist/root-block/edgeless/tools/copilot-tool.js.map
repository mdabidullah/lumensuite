{"version":3,"file":"copilot-tool.js","sourceRoot":"","sources":["../../../../src/root-block/edgeless/tools/copilot-tool.ts"],"names":[],"mappings":"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","sourcesContent":["import type { PointerEventState } from '@lumensuite/block-std';\n\nimport { Bound, getElementsBound } from '@lumensuite/global/utils';\nimport { Slot } from '@lumensuite/store';\n\nimport type { EdgelessTool } from '../types.js';\n\nimport {\n  AFFINE_AI_PANEL_WIDGET,\n  type AffineAIPanelWidget,\n} from '../../widgets/ai-panel/ai-panel.js';\nimport { EdgelessToolController } from './edgeless-tool.js';\n\ntype CopilotSelectionTool = {\n  type: 'copilot';\n};\n\nexport class CopilotSelectionController extends EdgelessToolController<CopilotSelectionTool> {\n  private _dragging = false;\n\n  draggingAreaUpdated = new Slot<boolean | void>();\n\n  dragLastPoint: [number, number] = [0, 0];\n\n  dragStartPoint: [number, number] = [0, 0];\n\n  readonly tool = {\n    type: 'copilot',\n  } as CopilotSelectionTool;\n\n  get area() {\n    const start = new DOMPoint(this.dragStartPoint[0], this.dragStartPoint[1]);\n    const end = new DOMPoint(this.dragLastPoint[0], this.dragLastPoint[1]);\n\n    const minX = Math.min(start.x, end.x);\n    const minY = Math.min(start.y, end.y);\n    const maxX = Math.max(start.x, end.x);\n    const maxY = Math.max(start.y, end.y);\n\n    return new DOMRect(minX, minY, maxX - minX, maxY - minY);\n  }\n\n  // AI processing\n  get processing() {\n    const aiPanel = this._edgeless.host.view.getWidget(\n      AFFINE_AI_PANEL_WIDGET,\n      this._edgeless.doc.root!.id\n    ) as AffineAIPanelWidget;\n    return aiPanel && aiPanel.state !== 'hidden';\n  }\n\n  get selectedElements() {\n    return this.selection.selectedElements;\n  }\n\n  get selection() {\n    return this._edgeless.service.selection;\n  }\n\n  private _initDragState(e: PointerEventState) {\n    this.dragStartPoint = this._service.viewport.toModelCoord(e.x, e.y);\n    this.dragLastPoint = this.dragStartPoint;\n  }\n\n  abort() {\n    this._dragging = false;\n    this.dragStartPoint = [0, 0];\n    this.dragLastPoint = [0, 0];\n    this._edgeless.tools.setEdgelessTool({ type: 'default' });\n  }\n\n  afterModeSwitch(): void {}\n\n  override beforeModeSwitch(edgelessTool?: EdgelessTool) {\n    this._service.locked = edgelessTool?.type === 'copilot';\n  }\n\n  onContainerClick(): void {}\n\n  onContainerContextMenu(): void {}\n\n  onContainerDblClick(): void {}\n\n  override onContainerDragEnd(): void {\n    if (!this._dragging) return;\n\n    this._dragging = false;\n    this.draggingAreaUpdated.emit(true);\n  }\n\n  override onContainerDragMove(e: PointerEventState): void {\n    if (!this._dragging) return;\n\n    this.dragLastPoint = this._service.viewport.toModelCoord(e.x, e.y);\n\n    const area = this.area;\n    const bound = new Bound(area.x, area.y, area.width, area.height);\n\n    if (area.width & area.height) {\n      const elements = this._service.gfx.getElementsByBound(bound);\n\n      const set = new Set(elements);\n\n      this.selection.set({\n        elements: Array.from(set).map(element => element.id),\n        editing: false,\n        inoperable: true,\n      });\n    }\n\n    this.draggingAreaUpdated.emit();\n  }\n\n  override onContainerDragStart(e: PointerEventState): void {\n    if (this.processing) return;\n\n    this._initDragState(e);\n    this._dragging = true;\n    this.draggingAreaUpdated.emit();\n  }\n\n  onContainerMouseMove(): void {}\n\n  onContainerMouseOut(): void {}\n\n  onContainerPointerDown(e: PointerEventState): void {\n    if (this.processing) {\n      e.raw.stopPropagation();\n      return;\n    }\n\n    this._edgeless.tools.setEdgelessTool({ type: 'default' });\n  }\n\n  onContainerTripleClick(): void {}\n\n  onPressShiftKey(): void {}\n\n  onPressSpaceBar(): void {}\n\n  updateDragPointsWith(\n    selectedElements: LumenSuite.EdgelessModel[],\n    padding = 0\n  ) {\n    const bounds = getElementsBound(\n      selectedElements.map(e => e.elementBound)\n    ).expand(padding / this._edgeless.service.zoom);\n\n    this.dragStartPoint = bounds.tl as [number, number];\n    this.dragLastPoint = bounds.br as [number, number];\n  }\n\n  updateSelectionWith(\n    selectedElements: LumenSuite.EdgelessModel[],\n    padding = 0\n  ) {\n    const { selection } = this._edgeless.service;\n\n    selection.clear();\n\n    this.updateDragPointsWith(selectedElements, padding);\n\n    selection.set({\n      elements: selectedElements.map(e => e.id),\n      editing: false,\n      inoperable: true,\n    });\n\n    this.draggingAreaUpdated.emit(true);\n  }\n}\n\ndeclare global {\n  namespace LumenSuite {\n    interface EdgelessToolMap {\n      'copilot-selection': CopilotSelectionController;\n    }\n  }\n}\n"]}