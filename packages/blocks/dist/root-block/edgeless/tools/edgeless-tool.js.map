{"version":3,"file":"edgeless-tool.js","sourceRoot":"","sources":["../../../../src/root-block/edgeless/tools/edgeless-tool.ts"],"names":[],"mappings":"AAQA,MAAM,OAAgB,sBAAsB;IAa1C,IAAc,OAAO;QACnB,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC;IACvC,CAAC;IAED,IAAc,IAAI;QAChB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;IAC5B,CAAC;IAED,IAAc,QAAQ;QACpB,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;IAChC,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,YAAY,OAA4B;QA1B9B,kBAAa,GAAyB,IAAI,CAAC;QAMrD,gBAAW,GAAG,KAAK,CAAC;QAqBlB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC1B,CAAC;IAID,KAAK,CAAC,QAAoC;QACxC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC5B,CAAC;CAqBF","sourcesContent":["import type { PointerEventState } from '@lumensuite/block-std';\n\nimport type { GfxBlockModel } from '../block-model.js';\nimport type { EdgelessRootBlockComponent } from '../edgeless-root-block.js';\nimport type { EdgelessRootService } from '../edgeless-root-service.js';\nimport type { SelectionArea } from '../services/tools-manager.js';\nimport type { EdgelessTool } from '../types.js';\n\nexport abstract class EdgelessToolController<\n  Tool extends EdgelessTool = EdgelessTool,\n> {\n  protected _draggingArea: SelectionArea | null = null;\n\n  protected _edgeless!: EdgelessRootBlockComponent;\n\n  protected _service: EdgelessRootService;\n\n  enableHover = false;\n\n  abstract tool: Tool;\n\n  protected get _blocks(): GfxBlockModel[] {\n    return this._edgeless.service.blocks;\n  }\n\n  protected get _doc() {\n    return this._edgeless.doc;\n  }\n\n  protected get _surface() {\n    return this._edgeless.surface;\n  }\n\n  get draggingArea() {\n    return this._draggingArea;\n  }\n\n  constructor(service: EdgelessRootService) {\n    this._service = service;\n  }\n\n  abstract afterModeSwitch(newMode: Tool): void;\n  abstract beforeModeSwitch(prevMode: Tool): void;\n  mount(edgeless: EdgelessRootBlockComponent) {\n    this._edgeless = edgeless;\n  }\n  abstract onContainerClick(e: PointerEventState): void;\n  abstract onContainerContextMenu(e: PointerEventState): void;\n  abstract onContainerDblClick(e: PointerEventState): void;\n  abstract onContainerDragEnd(e: PointerEventState): void;\n  abstract onContainerDragMove(e: PointerEventState): void;\n  abstract onContainerDragStart(e: PointerEventState): void;\n  abstract onContainerMouseMove(e: PointerEventState): void;\n  abstract onContainerMouseOut(e: PointerEventState): void;\n  abstract onContainerPointerDown(e: PointerEventState): void;\n  abstract onContainerTripleClick(e: PointerEventState): void;\n\n  /**\n   * @warning Check `!ev.repeat` before calling this function in KeyboardEvents where needed\n   */\n  abstract onPressShiftKey(pressed: boolean): void;\n\n  /**\n   * @warning Check `!ev.repeat` before calling this function in KeyboardEvents where needed\n   */\n  abstract onPressSpaceBar(pressed: boolean): void;\n}\n"]}