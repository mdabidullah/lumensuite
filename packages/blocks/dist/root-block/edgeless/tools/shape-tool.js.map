{"version":3,"file":"shape-tool.js","sourceRoot":"","sources":["../../../../src/root-block/edgeless/tools/shape-tool.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ShapeElementModel, ShapeName } from '@blocksuite/affine-model';\nimport type { PointerEventState } from '@blocksuite/block-std';\nimport type { IVec } from '@blocksuite/global/utils';\n\nimport { CanvasElementType } from '@blocksuite/affine-block-surface';\nimport {\n  DEFAULT_SHAPE_FILL_COLOR,\n  DEFAULT_SHAPE_STROKE_COLOR,\n  getShapeType,\n  ShapeType,\n} from '@blocksuite/affine-model';\nimport { TelemetryProvider } from '@blocksuite/affine-shared/services';\nimport { ThemeObserver } from '@blocksuite/affine-shared/theme';\nimport { Bound, noop } from '@blocksuite/global/utils';\n\nimport type { SelectionArea } from '../services/tools-manager.js';\nimport type { EdgelessTool } from '../types.js';\n\nimport { hasClassNameInList } from '../../../_common/utils/index.js';\nimport {\n  EXCLUDING_MOUSE_OUT_CLASS_LIST,\n  SHAPE_OVERLAY_HEIGHT,\n  SHAPE_OVERLAY_OPTIONS,\n  SHAPE_OVERLAY_WIDTH,\n} from '../utils/consts.js';\nimport { ShapeOverlay } from '../utils/tool-overlay.js';\nimport { EdgelessToolController } from './edgeless-tool.js';\n\nexport type ShapeTool = {\n  type: 'shape';\n  shapeName: ShapeName;\n};\n\nexport class ShapeToolController extends EdgelessToolController<ShapeTool> {\n  private _disableOverlay = false;\n\n  private _draggingElement: ShapeElementModel | null = null;\n\n  private _draggingElementId: string | null = null;\n\n  private _moveWithSpaceShapePosTemp: SelectionArea | null = null;\n\n  // For moving selection with space with mouse\n  private _moveWithSpaceStartPos: IVec = [0, 0];\n\n  // shape overlay\n  private _shapeOverlay: ShapeOverlay | null = null;\n\n  protected override _draggingArea: SelectionArea | null = null;\n\n  readonly tool: ShapeTool = {\n    type: 'shape',\n    shapeName: ShapeType.Rect,\n  };\n\n  private _addNewShape(\n    e: PointerEventState,\n    width: number,\n    height: number\n  ): string {\n    const { viewport } = this._service;\n    const { shapeName } = this.tool;\n    const attributes =\n      this._edgeless.service.editPropsStore.lastProps$.value[\n        `shape:${shapeName}`\n      ];\n\n    if (shapeName === 'roundedRect') {\n      width += 40;\n    }\n    // create a shape block when drag start\n    const [modelX, modelY] = viewport.toModelCoord(e.point.x, e.point.y);\n    const bound = new Bound(modelX, modelY, width, height);\n\n    const id = this._service.addElement(CanvasElementType.SHAPE, {\n      shapeType: getShapeType(shapeName),\n      xywh: bound.serialize(),\n      radius: attributes.radius,\n    });\n\n    this._service.std\n      .getOptional(TelemetryProvider)\n      ?.track('CanvasElementAdded', {\n        control: 'canvas:draw',\n        page: 'whiteboard editor',\n        module: 'toolbar',\n        segment: 'toolbar',\n        type: CanvasElementType.SHAPE,\n        other: {\n          shapeName,\n        },\n      });\n\n    return id;\n  }\n\n  private _hideOverlay() {\n    if (!this._shapeOverlay) return;\n\n    this._shapeOverlay.globalAlpha = 0;\n    this._edgeless.surface.refresh();\n  }\n\n  private _move() {\n    const {\n      _draggingArea,\n      _moveWithSpaceStartPos,\n      _moveWithSpaceShapePosTemp,\n    } = this;\n    if (!_draggingArea) return;\n    if (!_moveWithSpaceShapePosTemp) return;\n\n    const { x: moveCurX, y: moveCurY } = _draggingArea.end;\n\n    const dx = moveCurX - _moveWithSpaceStartPos[0];\n    const dy = moveCurY - _moveWithSpaceStartPos[1];\n\n    const { start, end } = _moveWithSpaceShapePosTemp;\n    _draggingArea.start.x = start.x + dx;\n    _draggingArea.start.y = start.y + dy;\n    _draggingArea.end.x = end.x + dx;\n    _draggingArea.end.y = end.y + dy;\n  }\n\n  private _resize(shift = false) {\n    const { _draggingElementId: id, _draggingArea } = this;\n    if (!id) return;\n    if (!_draggingArea) return;\n\n    const { viewport } = this._service;\n    const { zoom } = viewport;\n    const {\n      start: { x: startX, y: startY },\n      end,\n    } = _draggingArea;\n    let { x: endX, y: endY } = end;\n\n    if (shift) {\n      const w = Math.abs(endX - startX);\n      const h = Math.abs(endY - startY);\n      const m = Math.max(w, h);\n      endX = startX + (endX > startX ? m : -m);\n      endY = startY + (endY > startY ? m : -m);\n    }\n\n    const [x, y] = viewport.toModelCoord(\n      Math.min(startX, endX),\n      Math.min(startY, endY)\n    );\n    const w = Math.abs(startX - endX) / zoom;\n    const h = Math.abs(startY - endY) / zoom;\n\n    const bound = new Bound(x, y, w, h);\n\n    this._service.updateElement(id, {\n      xywh: bound.serialize(),\n    });\n  }\n\n  private _updateOverlayPosition(x: number, y: number) {\n    if (!this._shapeOverlay) return;\n    this._shapeOverlay.x = x;\n    this._shapeOverlay.y = y;\n    this._edgeless.surface.refresh();\n  }\n\n  afterModeSwitch(newTool: EdgelessTool) {\n    if (newTool.type !== 'shape') return;\n    this.createOverlay();\n  }\n\n  beforeModeSwitch() {\n    this.clearOverlay();\n  }\n\n  clearOverlay() {\n    if (!this._shapeOverlay) return;\n\n    this._shapeOverlay.dispose();\n    this._edgeless.surface.renderer.removeOverlay(this._shapeOverlay);\n    this._shapeOverlay = null;\n    this._edgeless.surface.refresh();\n  }\n\n  createOverlay() {\n    this.clearOverlay();\n    if (this._disableOverlay) return;\n    const options = SHAPE_OVERLAY_OPTIONS;\n    const { shapeName } = this.tool;\n    const attributes =\n      this._edgeless.service.editPropsStore.lastProps$.value[\n        `shape:${shapeName}`\n      ];\n    options.stroke = ThemeObserver.getColorValue(\n      attributes.strokeColor,\n      DEFAULT_SHAPE_STROKE_COLOR,\n      true\n    );\n    options.fill = ThemeObserver.getColorValue(\n      attributes.fillColor,\n      DEFAULT_SHAPE_FILL_COLOR,\n      true\n    );\n\n    switch (attributes.strokeStyle!) {\n      case 'dash':\n        options.strokeLineDash = [12, 12];\n        break;\n      case 'none':\n        options.strokeLineDash = [];\n        options.stroke = 'transparent';\n        break;\n      default:\n        options.strokeLineDash = [];\n    }\n    this._shapeOverlay = new ShapeOverlay(this._edgeless, shapeName, options, {\n      shapeStyle: attributes.shapeStyle,\n      fillColor: attributes.fillColor,\n      strokeColor: attributes.strokeColor,\n    });\n    this._edgeless.surface.renderer.addOverlay(this._shapeOverlay);\n  }\n\n  onContainerClick(e: PointerEventState): void {\n    this.clearOverlay();\n    if (this._disableOverlay) return;\n\n    this._doc.captureSync();\n\n    const id = this._addNewShape(e, SHAPE_OVERLAY_WIDTH, SHAPE_OVERLAY_HEIGHT);\n\n    const element = this._service.getElementById(id);\n    if (!element) return;\n\n    this._edgeless.tools.switchToDefaultMode({\n      elements: [element.id],\n      editing: false,\n    });\n  }\n\n  onContainerContextMenu(): void {\n    noop();\n  }\n\n  onContainerDblClick(): void {\n    noop();\n  }\n\n  onContainerDragEnd() {\n    if (this._disableOverlay) return;\n    if (this._draggingElement) {\n      const draggingElement = this._draggingElement;\n\n      draggingElement.pop('xywh');\n    }\n\n    const id = this._draggingElementId;\n    if (!id) return;\n\n    if (this._draggingArea) {\n      const width = Math.abs(\n        this._draggingArea?.end.x - this._draggingArea?.start.x\n      );\n      const height = Math.abs(\n        this._draggingArea?.end.y - this._draggingArea?.start.y\n      );\n      if (width < 20 && height < 20) {\n        this._service.removeElement(id);\n        return;\n      }\n    }\n\n    this._draggingElement = null;\n    this._draggingElementId = null;\n    this._draggingArea = null;\n\n    this._doc.captureSync();\n\n    const element = this._service.getElementById(id);\n    if (!element) return;\n\n    this._edgeless.tools.switchToDefaultMode({\n      elements: [element.id],\n      editing: false,\n    });\n  }\n\n  onContainerDragMove(e: PointerEventState) {\n    if (this._disableOverlay) return;\n    if (!this._draggingElementId) return;\n    if (!this._draggingArea) return;\n\n    this._draggingArea.end = new DOMPoint(e.x, e.y);\n\n    if (this._edgeless.tools.spaceBar) {\n      this._move();\n    }\n\n    this._resize(e.keys.shift || this._edgeless.tools.shiftKey);\n  }\n\n  onContainerDragStart(e: PointerEventState) {\n    if (this._disableOverlay) return;\n    this.clearOverlay();\n\n    this._doc.captureSync();\n\n    const id = this._addNewShape(e, 0, 0);\n\n    this._draggingElementId = id;\n    this._draggingElement = this._service.getElementById(\n      id\n    ) as ShapeElementModel;\n    this._draggingElement.stash('xywh');\n    this._draggingArea = {\n      start: new DOMPoint(e.x, e.y),\n      end: new DOMPoint(e.x, e.y),\n    };\n  }\n\n  onContainerMouseMove(e: PointerEventState) {\n    if (!this._shapeOverlay) return;\n    // shape options, like stroke color, fill color, etc.\n    if (this._shapeOverlay.globalAlpha === 0)\n      this._shapeOverlay.globalAlpha = 1;\n    const [x, y] = this._service.viewport.toModelCoord(e.x, e.y);\n    this._updateOverlayPosition(x, y);\n  }\n\n  onContainerMouseOut(e: PointerEventState) {\n    if (\n      e.raw.relatedTarget &&\n      hasClassNameInList(\n        e.raw.relatedTarget as Element,\n        EXCLUDING_MOUSE_OUT_CLASS_LIST\n      )\n    )\n      return;\n    this._hideOverlay();\n  }\n\n  onContainerPointerDown(): void {\n    noop();\n  }\n\n  onContainerTripleClick() {\n    noop();\n  }\n\n  onPressShiftKey(pressed: boolean) {\n    const id = this._draggingElementId;\n    if (!id) return;\n    this._resize(pressed);\n  }\n\n  onPressSpaceBar(pressed: boolean): void {\n    const { tools } = this._edgeless;\n    if (tools.dragging && pressed) {\n      if (!this._draggingArea) return;\n\n      const x = this._draggingArea.end.x;\n      const y = this._draggingArea.end.y;\n      this._moveWithSpaceStartPos = [x, y];\n\n      // Keep a temp version of the _draggingArea\n      const {\n        start: { x: startX, y: startY },\n        end: { x: endX, y: endY },\n      } = this._draggingArea;\n\n      this._moveWithSpaceShapePosTemp = {\n        start: new DOMPoint(startX, startY),\n        end: new DOMPoint(endX, endY),\n      };\n    }\n  }\n\n  setDisableOverlay(disable: boolean) {\n    this._disableOverlay = disable;\n  }\n}\n\ndeclare global {\n  namespace BlockSuite {\n    interface EdgelessToolMap {\n      shape: ShapeToolController;\n    }\n  }\n}\n"]}