{"version":3,"file":"pan-tool.js","sourceRoot":"","sources":["../../../../src/root-block/edgeless/tools/pan-tool.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,IAAI,EAAE,MAAM,0BAA0B,CAAC;AAEhD,OAAO,EAAE,sBAAsB,EAAE,MAAM,oBAAoB,CAAC;AAO5D,MAAM,OAAO,iBAAkB,SAAQ,sBAA+B;IAAtE;;QACU,eAAU,GAA4B,IAAI,CAAC;QAE1C,SAAI,GAAG;YACd,IAAI,EAAE,KAAK;SACD,CAAC;IA4Ef,CAAC;IA1EC,eAAe;QACb,IAAI,EAAE,CAAC;IACT,CAAC;IAED,gBAAgB;QACd,IAAI,EAAE,CAAC;IACT,CAAC;IAED,gBAAgB;QACd,IAAI,EAAE,CAAC;IACT,CAAC;IAED,sBAAsB;QACpB,IAAI,EAAE,CAAC;IACT,CAAC;IAED,mBAAmB;QACjB,IAAI,EAAE,CAAC;IACT,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,eAAe,CAAC;YACnC,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,KAAK;SACf,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB,CAAC,CAAoB;QACtC,IAAI,CAAC,IAAI,CAAC,UAAU;YAAE,OAAO;QAE7B,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;QACnC,MAAM,EAAE,IAAI,EAAE,GAAG,QAAQ,CAAC;QAE1B,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;QACvC,MAAM,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;QAC3B,MAAM,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;QAE3B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAE7B,QAAQ,CAAC,gBAAgB,CAAC,MAAM,GAAG,IAAI,EAAE,MAAM,GAAG,IAAI,CAAC,CAAC;IAC1D,CAAC;IAED,oBAAoB,CAAC,CAAoB;QACvC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,eAAe,CAAC;YACnC,IAAI,EAAE,KAAK;YACX,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;IACL,CAAC;IAED,oBAAoB;QAClB,IAAI,EAAE,CAAC;IACT,CAAC;IAED,mBAAmB;QACjB,IAAI,EAAE,CAAC;IACT,CAAC;IAED,sBAAsB;QACpB,IAAI,EAAE,CAAC;IACT,CAAC;IAED,sBAAsB;QACpB,IAAI,EAAE,CAAC;IACT,CAAC;IAED,eAAe,CAAC,CAAU;QACxB,IAAI,EAAE,CAAC;IACT,CAAC;IAED,eAAe,CAAC,QAAiB;QAC/B,IAAI,EAAE,CAAC;IACT,CAAC;CACF","sourcesContent":["import type { PointerEventState } from '@lumensuite/block-std';\n\nimport { noop } from '@lumensuite/global/utils';\n\nimport { EdgelessToolController } from './edgeless-tool.js';\n\ntype PanTool = {\n  type: 'pan';\n  panning: boolean;\n};\n\nexport class PanToolController extends EdgelessToolController<PanTool> {\n  private _lastPoint: [number, number] | null = null;\n\n  readonly tool = {\n    type: 'pan',\n  } as PanTool;\n\n  afterModeSwitch() {\n    noop();\n  }\n\n  beforeModeSwitch() {\n    noop();\n  }\n\n  onContainerClick(): void {\n    noop();\n  }\n\n  onContainerContextMenu(): void {\n    noop();\n  }\n\n  onContainerDblClick(): void {\n    noop();\n  }\n\n  onContainerDragEnd() {\n    this._lastPoint = null;\n    this._edgeless.tools.setEdgelessTool({\n      type: 'pan',\n      panning: false,\n    });\n  }\n\n  onContainerDragMove(e: PointerEventState) {\n    if (!this._lastPoint) return;\n\n    const { viewport } = this._service;\n    const { zoom } = viewport;\n\n    const [lastX, lastY] = this._lastPoint;\n    const deltaX = lastX - e.x;\n    const deltaY = lastY - e.y;\n\n    this._lastPoint = [e.x, e.y];\n\n    viewport.applyDeltaCenter(deltaX / zoom, deltaY / zoom);\n  }\n\n  onContainerDragStart(e: PointerEventState) {\n    this._lastPoint = [e.x, e.y];\n    this._edgeless.tools.setEdgelessTool({\n      type: 'pan',\n      panning: true,\n    });\n  }\n\n  onContainerMouseMove() {\n    noop();\n  }\n\n  onContainerMouseOut() {\n    noop();\n  }\n\n  onContainerPointerDown(): void {\n    noop();\n  }\n\n  onContainerTripleClick() {\n    noop();\n  }\n\n  onPressShiftKey(_: boolean) {\n    noop();\n  }\n\n  onPressSpaceBar(_pressed: boolean): void {\n    noop();\n  }\n}\n\ndeclare global {\n  namespace LumenSuite {\n    interface EdgelessToolMap {\n      pan: PanToolController;\n    }\n  }\n}\n"]}