{"version":3,"file":"eraser-tool.js","sourceRoot":"","sources":["../../../../src/root-block/edgeless/tools/eraser-tool.ts"],"names":[],"mappings":"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","sourcesContent":["import type { PointerEventState } from '@lumensuite/block-std';\nimport type { IPoint, IVec } from '@lumensuite/global/utils';\n\nimport { CommonUtils, Overlay } from '@lumensuite/affine-block-surface';\nimport { Bound, noop } from '@lumensuite/global/utils';\n\nimport { deleteElements } from '../utils/crud.js';\nimport { isTopLevelBlock } from '../utils/query.js';\nimport { EdgelessToolController } from './edgeless-tool.js';\n\nconst { getSvgPathFromStroke, getStroke, linePolygonIntersects } = CommonUtils;\n\nclass EraserOverlay extends Overlay {\n  d = '';\n\n  override render(ctx: CanvasRenderingContext2D): void {\n    ctx.globalAlpha = 0.33;\n    const path = new Path2D(this.d);\n    ctx.fillStyle = '#aaa';\n    ctx.fill(path);\n  }\n}\n\ntype EraserTool = {\n  type: 'eraser';\n};\n\nexport class EraserToolController extends EdgelessToolController<EraserTool> {\n  private _erasables = new Set<LumenSuite.EdgelessModel>();\n\n  private _eraserPoints: IVec[] = [];\n\n  private _eraseTargets = new Set<LumenSuite.EdgelessModel>();\n\n  private _loop = () => {\n    const now = Date.now();\n    const elapsed = now - this._timestamp;\n\n    let didUpdate = false;\n\n    if (this._prevEraserPoint !== this._prevPoint) {\n      didUpdate = true;\n      this._eraserPoints.push(this._prevPoint);\n      this._prevEraserPoint = this._prevPoint;\n    }\n    if (elapsed > 32) {\n      if (this._eraserPoints.length > 1) {\n        didUpdate = true;\n        this._eraserPoints.splice(\n          0,\n          Math.ceil(this._eraserPoints.length * 0.1)\n        );\n        this._timestamp = now;\n      }\n    }\n    if (didUpdate) {\n      const zoom = this._service.viewport.zoom;\n      const d = getSvgPathFromStroke(\n        getStroke(this._eraserPoints, {\n          size: 16 / zoom,\n          start: { taper: true },\n        })\n      );\n      this._overlay.d = d;\n      this._edgeless.surface.refresh();\n    }\n    this._timer = requestAnimationFrame(this._loop);\n  };\n\n  private _overlay = new EraserOverlay();\n\n  private _prevEraserPoint: IVec = [0, 0];\n\n  private _prevPoint: IVec = [0, 0];\n\n  private _timer = 0;\n\n  private _timestamp = 0;\n\n  override readonly tool: EraserTool = {\n    type: 'eraser',\n  };\n\n  private _reset() {\n    cancelAnimationFrame(this._timer);\n    this._edgeless.surface.renderer.removeOverlay(this._overlay);\n    this._erasables.clear();\n    this._eraseTargets.clear();\n  }\n\n  private toModelCoord(p: IPoint): IVec {\n    return this._service.viewport.toModelCoord(p.x, p.y);\n  }\n\n  override afterModeSwitch(_newMode: EraserTool): void {\n    noop();\n  }\n\n  override beforeModeSwitch() {\n    this._eraseTargets.forEach(erasable => {\n      if (isTopLevelBlock(erasable)) {\n        const ele = this._edgeless.host.view.getBlock(erasable.id);\n        ele && ((ele as HTMLElement).style.opacity = '1');\n      } else {\n        erasable.opacity = 1;\n      }\n    });\n    this._reset();\n  }\n\n  override onContainerClick(): void {\n    noop();\n  }\n\n  override onContainerContextMenu(): void {\n    noop();\n  }\n\n  override onContainerDblClick(): void {\n    noop();\n  }\n\n  override onContainerDragEnd(): void {\n    deleteElements(this._edgeless, Array.from(this._eraseTargets));\n    this._reset();\n    this._doc.captureSync();\n  }\n\n  override onContainerDragMove(e: PointerEventState): void {\n    const currentPoint = this.toModelCoord(e.point);\n    this._erasables.forEach(erasable => {\n      if (this._eraseTargets.has(erasable)) return;\n      if (isTopLevelBlock(erasable)) {\n        const bound = Bound.deserialize(erasable.xywh);\n        if (\n          linePolygonIntersects(this._prevPoint, currentPoint, bound.points)\n        ) {\n          this._eraseTargets.add(erasable);\n          const ele = this._edgeless.host.view.getBlock(erasable.id);\n          ele && ((ele as HTMLElement).style.opacity = '0.3');\n        }\n      } else {\n        if (\n          erasable.getLineIntersections(\n            this._prevPoint as IVec,\n            currentPoint as IVec\n          )\n        ) {\n          this._eraseTargets.add(erasable);\n          erasable.opacity = 0.3;\n        }\n      }\n    });\n\n    this._prevPoint = currentPoint;\n  }\n\n  override onContainerDragStart(e: PointerEventState): void {\n    this._doc.captureSync();\n\n    const { point } = e;\n    const [x, y] = this.toModelCoord(point);\n    this._eraserPoints = [[x, y]];\n    this._prevPoint = [x, y];\n    this._erasables = new Set([\n      ...this._service.elements,\n      ...this._service.blocks,\n    ]);\n    this._loop();\n    this._edgeless.surface.renderer.addOverlay(this._overlay);\n  }\n\n  override onContainerMouseMove(): void {\n    noop();\n  }\n\n  override onContainerMouseOut(): void {\n    noop();\n  }\n\n  onContainerPointerDown(): void {\n    noop();\n  }\n\n  override onContainerTripleClick(): void {\n    noop();\n  }\n\n  override onPressShiftKey(_pressed: boolean): void {\n    noop();\n  }\n\n  override onPressSpaceBar(_pressed: boolean): void {\n    noop();\n  }\n}\n\ndeclare global {\n  namespace LumenSuite {\n    interface EdgelessToolMap {\n      eraser: EraserToolController;\n    }\n  }\n}\n"]}