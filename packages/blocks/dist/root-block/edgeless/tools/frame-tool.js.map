{"version":3,"file":"frame-tool.js","sourceRoot":"","sources":["../../../../src/root-block/edgeless/tools/frame-tool.ts"],"names":[],"mappings":"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","sourcesContent":["import type { FrameBlockModel } from '@blocksuite/affine-model';\nimport type { PointerEventState } from '@blocksuite/block-std';\nimport type { IPoint, IVec } from '@blocksuite/global/utils';\n\nimport { TelemetryProvider } from '@blocksuite/affine-shared/services';\nimport { Bound, noop, Vec } from '@blocksuite/global/utils';\nimport { DocCollection } from '@blocksuite/store';\n\nimport { getTopElements } from '../utils/tree.js';\nimport { EdgelessToolController } from './edgeless-tool.js';\n\ntype FrameTool = {\n  type: 'frame';\n};\n\nexport class FrameToolController extends EdgelessToolController<FrameTool> {\n  private _frame: FrameBlockModel | null = null;\n\n  private _startPoint: IVec | null = null;\n\n  readonly tool = {\n    type: 'frame',\n  } as FrameTool;\n\n  private _toModelCoord(p: IPoint): IVec {\n    return this._service.viewport.toModelCoord(p.x, p.y);\n  }\n\n  override afterModeSwitch(): void {\n    noop();\n  }\n\n  override beforeModeSwitch(): void {\n    noop();\n  }\n\n  override onContainerClick(): void {\n    noop();\n  }\n\n  override onContainerContextMenu(): void {\n    noop();\n  }\n\n  override onContainerDblClick(): void {\n    noop();\n  }\n\n  override onContainerDragEnd(): void {\n    if (this._frame) {\n      const frame = this._frame;\n      this._doc.transact(() => {\n        frame.pop('xywh');\n      });\n      this._edgeless.tools.setEdgelessTool({ type: 'default' });\n      this._edgeless.service.selection.set({\n        elements: [frame.id],\n        editing: false,\n      });\n\n      const frameManager = this._edgeless.service.frame;\n      frameManager.addElementsToFrame(\n        frame,\n        getTopElements(frameManager.getElementsInFrameBound(frame))\n      );\n\n      this._doc.captureSync();\n    }\n\n    this._frame = null;\n    this._startPoint = null;\n    this._service.frameOverlay.clear();\n  }\n\n  override onContainerDragMove(e: PointerEventState): void {\n    if (!this._startPoint) return;\n\n    const currentPoint = this._toModelCoord(e.point);\n    if (Vec.dist(this._startPoint, currentPoint) < 8 && !this._frame) return;\n    if (!this._frame) {\n      const frames = this._service.frames;\n\n      const id = this._service.addBlock(\n        'affine:frame',\n        {\n          title: new DocCollection.Y.Text(`Frame ${frames.length + 1}`),\n          xywh: Bound.fromPoints([this._startPoint, currentPoint]).serialize(),\n        },\n        this._service.surface\n      );\n      this._service.std\n        .getOptional(TelemetryProvider)\n        ?.track('CanvasElementAdded', {\n          control: 'canvas:draw',\n          page: 'whiteboard editor',\n          module: 'toolbar',\n          segment: 'toolbar',\n          type: 'frame',\n        });\n      this._frame = this._service.getElementById(id) as FrameBlockModel;\n      this._frame.stash('xywh');\n      return;\n    }\n\n    this._service.updateElement(this._frame.id, {\n      xywh: Bound.fromPoints([this._startPoint, currentPoint]).serialize(),\n    });\n\n    this._service.frameOverlay.highlight(this._frame, true);\n  }\n\n  override onContainerDragStart(e: PointerEventState): void {\n    this._doc.captureSync();\n    const { point } = e;\n    this._startPoint = this._toModelCoord(point);\n  }\n\n  override onContainerMouseMove(): void {\n    noop();\n  }\n\n  override onContainerMouseOut(): void {\n    noop();\n  }\n\n  override onContainerPointerDown(): void {\n    noop();\n  }\n\n  override onContainerTripleClick(): void {\n    noop();\n  }\n\n  override onPressShiftKey(): void {\n    noop();\n  }\n\n  override onPressSpaceBar(_pressed: boolean): void {\n    noop();\n  }\n}\n\ndeclare global {\n  namespace BlockSuite {\n    interface EdgelessToolMap {\n      frame: FrameToolController;\n    }\n  }\n}\n"]}