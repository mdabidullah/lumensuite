{"version":3,"file":"text-tool.js","sourceRoot":"","sources":["../../../../src/root-block/edgeless/tools/text-tool.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,iBAAiB,EAAE,MAAM,oCAAoC,CAAC;AACvE,OAAO,EAAE,IAAI,EAAE,MAAM,0BAA0B,CAAC;AAEhD,OAAO,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AAC3C,OAAO,EAAE,sBAAsB,EAAE,MAAM,oBAAoB,CAAC;AAM5D,MAAM,OAAO,kBAAmB,SAAQ,sBAAgC;IAAxE;;QACW,SAAI,GAAG;YACd,IAAI,EAAE,MAAM;SACD,CAAC;IA8EhB,CAAC;IA5EC,eAAe;QACb,IAAI,EAAE,CAAC;IACT,CAAC;IAED,gBAAgB;QACd,IAAI,EAAE,CAAC;IACT,CAAC;IAED,gBAAgB,CAAC,CAAoB;QACnC,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,OAAO,CACxD,sBAAsB,CACvB,CAAC;QAEF,IAAI,QAAQ,EAAE,CAAC;YACb,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAChE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC;gBACjC,IAAI,EAAE,SAAS;aAChB,CAAC,CAAC;QACL,CAAC;aAAM,CAAC;YACN,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QAC7B,CAAC;QACD,IAAI,CAAC,SAAS,CAAC,GAAG;aACf,WAAW,CAAC,iBAAiB,CAAC;YAC/B,EAAE,KAAK,CAAC,oBAAoB,EAAE;YAC5B,OAAO,EAAE,aAAa;YACtB,IAAI,EAAE,mBAAmB;YACzB,MAAM,EAAE,SAAS;YACjB,OAAO,EAAE,SAAS;YAClB,IAAI,EAAE,MAAM;SACb,CAAC,CAAC;IACP,CAAC;IAED,sBAAsB;QACpB,IAAI,EAAE,CAAC;IACT,CAAC;IAED,mBAAmB;QACjB,IAAI,EAAE,CAAC;IACT,CAAC;IAED,kBAAkB;QAChB,IAAI,EAAE,CAAC;IACT,CAAC;IAED,mBAAmB;QACjB,IAAI,EAAE,CAAC;IACT,CAAC;IAED,oBAAoB;QAClB,IAAI,EAAE,CAAC;IACT,CAAC;IAED,oBAAoB;QAClB,IAAI,EAAE,CAAC;IACT,CAAC;IAED,mBAAmB;QACjB,IAAI,EAAE,CAAC;IACT,CAAC;IAED,sBAAsB;QACpB,IAAI,EAAE,CAAC;IACT,CAAC;IAED,sBAAsB;QACpB,IAAI,EAAE,CAAC;IACT,CAAC;IAED,eAAe,CAAC,CAAU;QACxB,IAAI,EAAE,CAAC;IACT,CAAC;IAED,eAAe,CAAC,QAAiB;QAC/B,IAAI,EAAE,CAAC;IACT,CAAC;CACF","sourcesContent":["import type { PointerEventState } from '@lumensuite/block-std';\n\nimport { TelemetryProvider } from '@lumensuite/affine-shared/services';\nimport { noop } from '@lumensuite/global/utils';\n\nimport { addText } from '../utils/text.js';\nimport { EdgelessToolController } from './edgeless-tool.js';\n\nexport type TextTool = {\n  type: 'text';\n};\n\nexport class TextToolController extends EdgelessToolController<TextTool> {\n  readonly tool = {\n    type: 'text',\n  } as TextTool;\n\n  afterModeSwitch() {\n    noop();\n  }\n\n  beforeModeSwitch() {\n    noop();\n  }\n\n  onContainerClick(e: PointerEventState): void {\n    const textFlag = this._edgeless.doc.awarenessStore.getFlag(\n      'enable_edgeless_text'\n    );\n\n    if (textFlag) {\n      const [x, y] = this._service.viewport.toModelCoord(e.x, e.y);\n      this._edgeless.std.command.exec('insertEdgelessText', { x, y });\n      this._service.tool.setEdgelessTool({\n        type: 'default',\n      });\n    } else {\n      addText(this._edgeless, e);\n    }\n    this._edgeless.std\n      .getOptional(TelemetryProvider)\n      ?.track('CanvasElementAdded', {\n        control: 'canvas:draw',\n        page: 'whiteboard editor',\n        module: 'toolbar',\n        segment: 'toolbar',\n        type: 'text',\n      });\n  }\n\n  onContainerContextMenu(): void {\n    noop();\n  }\n\n  onContainerDblClick(): void {\n    noop();\n  }\n\n  onContainerDragEnd() {\n    noop();\n  }\n\n  onContainerDragMove() {\n    noop();\n  }\n\n  onContainerDragStart() {\n    noop();\n  }\n\n  onContainerMouseMove() {\n    noop();\n  }\n\n  onContainerMouseOut() {\n    noop();\n  }\n\n  onContainerPointerDown(): void {\n    noop();\n  }\n\n  onContainerTripleClick() {\n    noop();\n  }\n\n  onPressShiftKey(_: boolean) {\n    noop();\n  }\n\n  onPressSpaceBar(_pressed: boolean): void {\n    noop();\n  }\n}\n\ndeclare global {\n  namespace LumenSuite {\n    interface EdgelessToolMap {\n      text: TextToolController;\n    }\n  }\n}\n"]}