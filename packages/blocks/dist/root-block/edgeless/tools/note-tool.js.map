{"version":3,"file":"note-tool.js","sourceRoot":"","sources":["../../../../src/root-block/edgeless/tools/note-tool.ts"],"names":[],"mappings":"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","sourcesContent":["import type { PointerEventState } from '@blocksuite/block-std';\n\nimport { noop, Point } from '@blocksuite/global/utils';\n\nimport type { SelectionArea } from '../services/tools-manager.js';\nimport type { EdgelessTool } from '../types.js';\n\nimport {\n  hasClassNameInList,\n  type NoteChildrenFlavour,\n} from '../../../_common/utils/index.js';\nimport {\n  EXCLUDING_MOUSE_OUT_CLASS_LIST,\n  NOTE_INIT_HEIGHT,\n  NOTE_MIN_WIDTH,\n} from '../utils/consts.js';\nimport { addNote } from '../utils/note.js';\nimport { DraggingNoteOverlay, NoteOverlay } from '../utils/tool-overlay.js';\nimport { EdgelessToolController } from './edgeless-tool.js';\n\nexport type NoteTool = {\n  type: 'affine:note';\n  childFlavour: NoteChildrenFlavour;\n  childType: string | null;\n  tip: string;\n};\n\nexport class NoteToolController extends EdgelessToolController<NoteTool> {\n  private _draggingNoteOverlay: DraggingNoteOverlay | null = null;\n\n  private _noteOverlay: NoteOverlay | null = null;\n\n  protected override _draggingArea: SelectionArea | null = null;\n\n  readonly tool = {\n    type: 'affine:note',\n    childFlavour: 'affine:paragraph',\n    childType: 'text',\n    tip: 'Text',\n  } as NoteTool;\n\n  // Ensure clear overlay before adding a new note\n  private _clearOverlay() {\n    this._noteOverlay = this._disposeOverlay(this._noteOverlay);\n    this._draggingNoteOverlay = this._disposeOverlay(this._draggingNoteOverlay);\n    this._edgeless.surface.refresh();\n  }\n\n  private _disposeOverlay(overlay: NoteOverlay | null) {\n    if (!overlay) return null;\n\n    overlay.dispose();\n    this._edgeless.surface.renderer.removeOverlay(overlay);\n    return null;\n  }\n\n  // Should hide overlay when mouse is out of viewport or on menu and toolbar\n  private _hideOverlay() {\n    if (!this._noteOverlay) return;\n\n    this._noteOverlay.globalAlpha = 0;\n    this._edgeless.surface.refresh();\n  }\n\n  private _resize(shift = false) {\n    const { _draggingArea, _draggingNoteOverlay, _edgeless } = this;\n    if (!_draggingArea || !_draggingNoteOverlay) return;\n\n    const { viewport } = _edgeless.service;\n    const { zoom } = viewport;\n    const {\n      start: { x: startX, y: startY },\n      end,\n    } = _draggingArea;\n    let { x: endX, y: endY } = end;\n\n    if (shift) {\n      const w = Math.abs(endX - startX);\n      const h = Math.abs(endY - startY);\n      const m = Math.max(w, h);\n      endX = startX + (endX > startX ? m : -m);\n      endY = startY + (endY > startY ? m : -m);\n    }\n\n    const [x, y] = viewport.toModelCoord(\n      Math.min(startX, endX),\n      Math.min(startY, endY)\n    );\n    const w = Math.abs(startX - endX) / zoom;\n    const h = Math.abs(startY - endY) / zoom;\n\n    _draggingNoteOverlay.slots.draggingNoteUpdated.emit({\n      xywh: [x, y, w, h],\n    });\n  }\n\n  private _updateOverlayPosition(x: number, y: number) {\n    if (!this._noteOverlay) return;\n    this._noteOverlay.x = x;\n    this._noteOverlay.y = y;\n    this._edgeless.surface.refresh();\n  }\n\n  afterModeSwitch(newTool: EdgelessTool) {\n    if (newTool.type !== 'affine:note') return;\n\n    const attributes =\n      this._edgeless.service.editPropsStore.lastProps$.value['affine:note'];\n    const background = attributes.background;\n    this._noteOverlay = new NoteOverlay(this._edgeless, background);\n    this._noteOverlay.text = newTool.tip;\n    this._edgeless.surface.renderer.addOverlay(this._noteOverlay);\n  }\n\n  beforeModeSwitch() {\n    this._clearOverlay();\n  }\n\n  onContainerClick(e: PointerEventState): void {\n    this._clearOverlay();\n\n    const { childFlavour, childType } = this.tool;\n    const options = {\n      childFlavour,\n      childType,\n      collapse: false,\n    };\n    const point = new Point(e.point.x, e.point.y);\n    addNote(this._edgeless, point, options);\n  }\n\n  onContainerContextMenu(): void {\n    noop();\n  }\n\n  onContainerDblClick(): void {\n    noop();\n  }\n\n  onContainerDragEnd() {\n    if (!this._draggingNoteOverlay) return;\n    this._draggingArea = null;\n\n    const { x, y, width, height } = this._draggingNoteOverlay;\n\n    this._disposeOverlay(this._draggingNoteOverlay);\n\n    const { childFlavour, childType } = this.tool;\n\n    const options = {\n      childFlavour,\n      childType,\n      collapse: true,\n    };\n\n    const [viewX, viewY] = this._edgeless.service.viewport.toViewCoord(x, y);\n\n    const point = new Point(viewX, viewY);\n\n    this._doc.captureSync();\n\n    addNote(\n      this._edgeless,\n      point,\n      options,\n      Math.max(width, NOTE_MIN_WIDTH),\n      Math.max(height, NOTE_INIT_HEIGHT)\n    );\n  }\n\n  onContainerDragMove(e: PointerEventState) {\n    if (!this._draggingNoteOverlay || !this._draggingArea) return;\n\n    this._draggingArea.end = new DOMPoint(e.x, e.y);\n    this._resize(e.keys.shift || this._edgeless.tools.shiftKey);\n  }\n\n  onContainerDragStart(e: PointerEventState) {\n    this._clearOverlay();\n\n    const attributes =\n      this._edgeless.service.editPropsStore.lastProps$.value['affine:note'];\n    const background = attributes.background;\n    this._draggingNoteOverlay = new DraggingNoteOverlay(\n      this._edgeless,\n      background\n    );\n    this._edgeless.surface.renderer.addOverlay(this._draggingNoteOverlay);\n\n    this._draggingArea = {\n      start: new DOMPoint(e.x, e.y),\n      end: new DOMPoint(e.x, e.y),\n    };\n  }\n\n  onContainerMouseMove(e: PointerEventState) {\n    if (!this._noteOverlay) return;\n\n    // if mouse is in viewport and move, update overlay pointion and show overlay\n    if (this._noteOverlay.globalAlpha === 0) this._noteOverlay.globalAlpha = 1;\n    const [x, y] = this._service.viewport.toModelCoord(e.x, e.y);\n    this._updateOverlayPosition(x, y);\n  }\n\n  onContainerMouseOut(e: PointerEventState) {\n    // should not hide the overlay when pointer on the area of other notes\n    if (\n      e.raw.relatedTarget &&\n      hasClassNameInList(\n        e.raw.relatedTarget as Element,\n        EXCLUDING_MOUSE_OUT_CLASS_LIST\n      )\n    )\n      return;\n    this._hideOverlay();\n  }\n\n  onContainerPointerDown(): void {\n    noop();\n  }\n\n  onContainerTripleClick() {\n    noop();\n  }\n\n  onPressShiftKey(pressed: boolean) {\n    if (!this._draggingNoteOverlay) return;\n    this._resize(pressed);\n  }\n\n  onPressSpaceBar(_pressed: boolean): void {\n    noop();\n  }\n}\n\ndeclare global {\n  namespace BlockSuite {\n    interface EdgelessToolMap {\n      note: NoteToolController;\n    }\n  }\n}\n"]}