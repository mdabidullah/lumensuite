{"version":3,"file":"edgeless-root-preview-block.js","sourceRoot":"","sources":["../../../src/root-block/edgeless/edgeless-root-preview-block.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  SurfaceBlockComponent,\n  SurfaceBlockModel,\n} from '@blocksuite/affine-block-surface';\nimport type { RootBlockModel } from '@blocksuite/affine-model';\nimport type { SurfaceSelection } from '@blocksuite/block-std';\nimport type { IBound } from '@blocksuite/global/utils';\n\nimport '@blocksuite/affine-block-surface';\nimport { FontLoaderService } from '@blocksuite/affine-shared/services';\nimport { BlockComponent } from '@blocksuite/block-std';\nimport { assertExists } from '@blocksuite/global/utils';\nimport { css, html } from 'lit';\nimport { customElement, query, state } from 'lit/decorators.js';\n\nimport type { EdgelessRootBlockWidgetName } from '../types.js';\nimport type { EdgelessRootService } from './edgeless-root-service.js';\n\nimport { requestThrottledConnectedFrame } from '../../_common/utils/index.js';\nimport './components/note-slicer/index.js';\nimport './components/presentation/edgeless-navigator-black-background.js';\nimport './components/rects/edgeless-dragging-area-rect.js';\nimport './components/rects/edgeless-selected-rect.js';\nimport './components/toolbar/edgeless-toolbar.js';\nimport { edgelessElementsBound } from './utils/bound-utils.js';\nimport { getBackgroundGrid, isCanvasElement } from './utils/query.js';\n\n@customElement('affine-edgeless-root-preview')\nexport class EdgelessRootPreviewBlockComponent extends BlockComponent<\n  RootBlockModel,\n  EdgelessRootService,\n  EdgelessRootBlockWidgetName\n> {\n  static override styles = css`\n    affine-edgeless-root {\n      -webkit-user-select: none;\n      user-select: none;\n      display: block;\n      height: 100%;\n    }\n\n    .widgets-container {\n      position: absolute;\n      left: 0;\n      top: 0;\n      contain: size layout;\n      z-index: 1;\n      height: 100%;\n    }\n\n    .edgeless-background {\n      height: 100%;\n      background-color: var(--affine-background-primary-color);\n      background-image: radial-gradient(\n        var(--affine-edgeless-grid-color) 1px,\n        var(--affine-background-primary-color) 1px\n      );\n    }\n\n    .edgeless-layer {\n      position: absolute;\n      top: 0;\n      left: 0;\n      contain: size layout style;\n    }\n\n    @media print {\n      .selected {\n        background-color: transparent !important;\n      }\n    }\n  `;\n\n  private _refreshLayerViewport = requestThrottledConnectedFrame(() => {\n    const { zoom, translateX, translateY } = this.service.viewport;\n    const { gap } = getBackgroundGrid(zoom, true);\n\n    this.background.style.setProperty(\n      'background-position',\n      `${translateX}px ${translateY}px`\n    );\n    this.background.style.setProperty('background-size', `${gap}px ${gap}px`);\n\n    this.layer.style.setProperty('transform', this._getLayerViewport());\n    this.layer.dataset.scale = zoom.toString();\n  }, this);\n\n  private _resizeObserver: ResizeObserver | null = null;\n\n  private _viewportElement: HTMLElement | null = null;\n\n  mouseRoot!: HTMLElement;\n\n  get dispatcher() {\n    return this.service?.uiEventDispatcher;\n  }\n\n  get surfaceBlockModel() {\n    return this.model.children.find(\n      child => child.flavour === 'affine:surface'\n    ) as SurfaceBlockModel;\n  }\n\n  get viewportElement(): HTMLElement {\n    if (this._viewportElement) return this._viewportElement;\n    this._viewportElement = this.host.closest(\n      this.editorViewportSelector\n    ) as HTMLElement | null;\n    assertExists(this._viewportElement);\n    return this._viewportElement;\n  }\n\n  private _getLayerViewport(negative = false) {\n    const { translateX, translateY, zoom } = this.service.viewport;\n\n    if (negative) {\n      return `scale(${1 / zoom}) translate(${-translateX}px, ${-translateY}px)`;\n    }\n\n    return `translate(${translateX}px, ${translateY}px) scale(${zoom})`;\n  }\n\n  private _initFontLoader() {\n    this.std\n      .get(FontLoaderService)\n      .ready.then(() => {\n        this.surface.refresh();\n      })\n      .catch(console.error);\n  }\n\n  private _initPixelRatioChangeEffect() {\n    let media: MediaQueryList;\n\n    const onPixelRatioChange = () => {\n      if (media) {\n        this.service.viewport.onResize();\n        media.removeEventListener('change', onPixelRatioChange);\n      }\n\n      media = matchMedia(`(resolution: ${window.devicePixelRatio}dppx)`);\n      media.addEventListener('change', onPixelRatioChange);\n    };\n\n    onPixelRatioChange();\n\n    this._disposables.add(() => {\n      media?.removeEventListener('change', onPixelRatioChange);\n    });\n  }\n\n  private _initResizeEffect() {\n    if (!this._viewportElement) {\n      return;\n    }\n\n    const resizeObserver = new ResizeObserver((_: ResizeObserverEntry[]) => {\n      // FIXME: find a better way to get rid of empty check\n      if (!this.service || !this.service.selection || !this.service.viewport) {\n        console.error('Service not ready');\n        return;\n      }\n      this.service.selection.set(this.service.selection.surfaceSelections);\n      this.service.viewport.onResize();\n    });\n\n    resizeObserver.observe(this.viewportElement);\n    this._resizeObserver?.disconnect();\n    this._resizeObserver = resizeObserver;\n  }\n\n  private _initSlotEffects() {\n    const { disposables } = this;\n\n    this.disposables.add(\n      this.service.themeObserver.mode$.subscribe(() => this.surface.refresh())\n    );\n\n    disposables.add(this.service.selection);\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n\n    this.handleEvent('selectionChange', () => {\n      const surface = this.host.selection.value.find(\n        (sel): sel is SurfaceSelection => sel.is('surface')\n      );\n      if (!surface) return;\n\n      const el = this.service.getElementById(surface.elements[0]);\n      if (isCanvasElement(el)) {\n        return true;\n      }\n\n      return;\n    });\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n\n    if (this._resizeObserver) {\n      this._resizeObserver.disconnect();\n      this._resizeObserver = null;\n    }\n  }\n\n  override firstUpdated() {\n    this._initSlotEffects();\n    this._initResizeEffect();\n    this._initPixelRatioChangeEffect();\n    this._initFontLoader();\n\n    this._disposables.add(\n      this.service.viewport.viewportUpdated.on(() => {\n        this._refreshLayerViewport();\n      })\n    );\n\n    this._refreshLayerViewport();\n  }\n\n  getElementsBound(): IBound | null {\n    const { service } = this;\n    return edgelessElementsBound([...service.elements, ...service.blocks]);\n  }\n\n  override renderBlock() {\n    return html`\n      <div class=\"edgeless-background edgeless-container\">\n        <div class=\"edgeless-layer\">\n          ${this.renderChildren(this.model)}${this.renderChildren(\n            this.surfaceBlockModel\n          )}\n        </div>\n      </div>\n    `;\n  }\n\n  override willUpdate(_changedProperties: Map<PropertyKey, unknown>): void {\n    if (_changedProperties.has('editorViewportSelector')) {\n      this._initResizeEffect();\n    }\n  }\n\n  @query('.edgeless-background')\n  accessor background!: HTMLDivElement;\n\n  @state()\n  accessor editorViewportSelector = '.affine-edgeless-viewport';\n\n  @query('.edgeless-layer')\n  accessor layer!: HTMLDivElement;\n\n  @query('affine-surface')\n  accessor surface!: SurfaceBlockComponent;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'affine-edgeless-root-preview': EdgelessRootPreviewBlockComponent;\n  }\n}\n"]}