{"version":3,"file":"toolbar.js","sourceRoot":"","sources":["../../../src/root-block/configs/toolbar.ts"],"names":[],"mappings":"AAKA,MAAM,OAAgB,WAAW;IAG/B,IAAI,YAAY;QACd,OAAO,IAAI,CAAC;IACd,CAAC;IAQD,uCAAuC;IACvC,KAAK,KAAI,CAAC;IAEV,SAAS;QACP,OAAO,KAAK,CAAC;IACf,CAAC;CAOF;AAQD,MAAM,UAAU,iBAAiB,CAAC,GAAkB;IAClD,OAAO;QACL,SAAS,EAAE,CAAwB,MAA0B,EAAE,EAAE,CAAC,MAAM;QACxE,GAAG,GAAG,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,eAAe;KACjD,CAAC;AACJ,CAAC","sourcesContent":["import type { MenuItemGroup } from '@blocksuite/affine-components/toolbar';\nimport type { BlockStdScope, EditorHost } from '@blocksuite/block-std';\nimport type { GfxModel } from '@blocksuite/block-std/gfx';\nimport type { BlockModel, Doc } from '@blocksuite/store';\n\nexport abstract class MenuContext {\n  abstract get doc(): Doc;\n\n  get firstElement(): GfxModel | null {\n    return null;\n  }\n\n  abstract get host(): EditorHost;\n\n  abstract get selectedBlockModels(): BlockModel[];\n\n  abstract get std(): BlockStdScope;\n\n  // Sometimes we need to close the menu.\n  close() {}\n\n  isElement() {\n    return false;\n  }\n\n  abstract isEmpty(): boolean;\n\n  abstract isMultiple(): boolean;\n\n  abstract isSingle(): boolean;\n}\n\nexport interface ToolbarMoreMenuConfig {\n  configure: <T extends MenuContext>(\n    groups: MenuItemGroup<T>[]\n  ) => MenuItemGroup<T>[];\n}\n\nexport function getMoreMenuConfig(std: BlockStdScope): ToolbarMoreMenuConfig {\n  return {\n    configure: <T extends MenuContext>(groups: MenuItemGroup<T>[]) => groups,\n    ...std.getConfig('affine:page')?.toolbarMoreMenu,\n  };\n}\n"]}