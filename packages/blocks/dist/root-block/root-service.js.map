{"version":3,"file":"root-service.js","sourceRoot":"","sources":["../../src/root-block/root-service.ts"],"names":[],"mappings":"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","sourcesContent":["import type { PeekViewService } from '@blocksuite/affine-components/peek';\nimport type { RefNodeSlots } from '@blocksuite/affine-components/rich-text';\nimport type { BlockComponent } from '@blocksuite/block-std';\n\nimport { RootBlockSchema } from '@blocksuite/affine-model';\nimport { ThemeObserver } from '@blocksuite/affine-shared/theme';\nimport { BlockService } from '@blocksuite/block-std';\n\nimport type { NotificationService } from '../_common/components/index.js';\nimport type { RootBlockComponent } from './types.js';\n\nimport {\n  FileDropManager,\n  type FileDropOptions,\n} from '../_common/components/file-drop-manager.js';\nimport { DEFAULT_IMAGE_PROXY_ENDPOINT } from '../_common/consts.js';\nimport { ExportManager } from '../_common/export-manager/export-manager.js';\nimport {\n  HtmlTransformer,\n  MarkdownTransformer,\n  ZipTransformer,\n} from '../_common/transformers/index.js';\nimport { EditPropsStore } from './edgeless/services/edit-session.js';\n\nexport abstract class RootService extends BlockService {\n  static override readonly flavour = RootBlockSchema.model.flavour;\n\n  private _exportOptions = {\n    imageProxyEndpoint: DEFAULT_IMAGE_PROXY_ENDPOINT,\n  };\n\n  private _fileDropOptions: FileDropOptions = {\n    flavour: this.flavour,\n  };\n\n  readonly editPropsStore: EditPropsStore = new EditPropsStore(this);\n\n  readonly exportManager = new ExportManager(this, this._exportOptions);\n\n  readonly fileDropManager = new FileDropManager(this, this._fileDropOptions);\n\n  // implements provided by affine\n  notificationService: NotificationService | null = null;\n\n  peekViewService: PeekViewService | null = null;\n\n  abstract slots: RefNodeSlots;\n\n  readonly themeObserver = ThemeObserver.instance;\n\n  transformers = {\n    markdown: MarkdownTransformer,\n    html: HtmlTransformer,\n    zip: ZipTransformer,\n  };\n\n  get selectedBlocks() {\n    let result: BlockComponent[] = [];\n    this.std.command\n      .chain()\n      .tryAll(chain => [\n        chain.getTextSelection(),\n        chain.getImageSelections(),\n        chain.getBlockSelections(),\n      ])\n      .getSelectedBlocks()\n      .inline(({ selectedBlocks }) => {\n        if (!selectedBlocks) return;\n        result = selectedBlocks;\n      })\n      .run();\n    return result;\n  }\n\n  get selectedModels() {\n    return this.selectedBlocks.map(block => block.model);\n  }\n\n  get viewportElement() {\n    const rootId = this.std.doc.root?.id;\n    if (!rootId) return null;\n    const rootComponent = this.std.view.getBlock(\n      rootId\n    ) as RootBlockComponent | null;\n    if (!rootComponent) return null;\n    const viewportElement = rootComponent.viewportElement;\n    return viewportElement;\n  }\n\n  override mounted() {\n    super.mounted();\n\n    this.disposables.addFromEvent(\n      this.host,\n      'dragover',\n      this.fileDropManager.onDragOver\n    );\n\n    this.disposables.addFromEvent(\n      this.host,\n      'dragleave',\n      this.fileDropManager.onDragLeave\n    );\n\n    this.disposables.add(\n      this.std.event.add('pointerDown', ctx => {\n        const state = ctx.get('pointerState');\n        state.raw.stopPropagation();\n      })\n    );\n  }\n\n  override unmounted() {\n    this.editPropsStore.dispose();\n  }\n}\n\ndeclare global {\n  namespace BlockSuite {\n    interface BlockServices {\n      'affine:page': RootService;\n    }\n  }\n}\n"]}