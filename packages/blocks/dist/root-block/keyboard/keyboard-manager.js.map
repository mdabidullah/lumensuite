{"version":3,"file":"keyboard-manager.js","sourceRoot":"","sources":["../../../src/root-block/keyboard/keyboard-manager.ts"],"names":[],"mappings":"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","sourcesContent":["import type { BlockComponent, BlockSelection } from '@blocksuite/block-std';\n\nimport { matchFlavours } from '@blocksuite/affine-shared/utils';\nimport { IS_MAC, IS_WINDOWS } from '@blocksuite/global/env';\nimport { assertExists } from '@blocksuite/global/utils';\n\nimport {\n  convertSelectedBlocksToLinkedDoc,\n  getTitleFromSelectedModels,\n  notifyDocCreated,\n  promptDocTitle,\n} from '../../_common/utils/render-linked-doc.js';\n\nexport class PageKeyboardManager {\n  private _handleDelete = () => {\n    const blockSelections = this._currentSelection.filter(sel =>\n      sel.is('block')\n    );\n    if (blockSelections.length === 0) {\n      return;\n    }\n\n    this._doc.transact(() => {\n      const selection = this._replaceBlocksBySelection(\n        blockSelections,\n        'affine:paragraph',\n        {}\n      );\n\n      if (selection) {\n        this._selection.setGroup('note', [\n          this._selection.create('text', {\n            from: {\n              index: 0,\n              length: 0,\n              blockId: selection.blockId,\n            },\n            to: null,\n          }),\n        ]);\n      }\n    });\n  };\n\n  private get _currentSelection() {\n    return this._selection.value;\n  }\n\n  private get _doc() {\n    return this.rootComponent.doc;\n  }\n\n  private get _selection() {\n    return this.rootComponent.host.selection;\n  }\n\n  constructor(public rootComponent: BlockComponent) {\n    this.rootComponent.bindHotKey(\n      {\n        'Mod-z': ctx => {\n          ctx.get('defaultState').event.preventDefault();\n\n          if (this._doc.canUndo) {\n            this._doc.undo();\n          }\n        },\n        'Shift-Mod-z': ctx => {\n          ctx.get('defaultState').event.preventDefault();\n          if (this._doc.canRedo) {\n            this._doc.redo();\n          }\n        },\n        'Control-y': ctx => {\n          if (!IS_WINDOWS) return;\n\n          ctx.get('defaultState').event.preventDefault();\n          if (this._doc.canRedo) {\n            this._doc.redo();\n          }\n        },\n        'Mod-Backspace': () => true,\n        Backspace: this._handleDelete,\n        Delete: this._handleDelete,\n        'Control-d': () => {\n          if (!IS_MAC) return;\n          this._handleDelete();\n        },\n        'Mod-Shift-l': () => {\n          this._createEmbedBlock();\n        },\n      },\n      {\n        global: true,\n      }\n    );\n  }\n\n  private _createEmbedBlock() {\n    const rootComponent = this.rootComponent;\n    const [_, ctx] = this.rootComponent.std.command\n      .chain()\n      .getSelectedModels({\n        types: ['block'],\n        mode: 'highest',\n      })\n      .run();\n    const selectedModels = ctx.selectedModels?.filter(\n      block =>\n        !block.flavour.startsWith('affine:embed-') &&\n        matchFlavours(doc.getParent(block), ['affine:note'])\n    );\n\n    if (!selectedModels?.length) {\n      return;\n    }\n\n    const doc = rootComponent.host.doc;\n    const autofill = getTitleFromSelectedModels(selectedModels);\n    void promptDocTitle(rootComponent.host, autofill).then(title => {\n      if (title === null) return;\n      convertSelectedBlocksToLinkedDoc(doc, selectedModels, title);\n      notifyDocCreated(rootComponent.host, doc);\n    });\n  }\n\n  private _deleteBlocksBySelection(selections: BlockSelection[]) {\n    selections.forEach(selection => {\n      const block = this._doc.getBlockById(selection.blockId);\n      if (block) {\n        this._doc.deleteBlock(block);\n      }\n    });\n  }\n\n  private _replaceBlocksBySelection(\n    selections: BlockSelection[],\n    flavour: string,\n    props: Record<string, unknown>\n  ) {\n    const current = selections[0];\n    const first = this._doc.getBlockById(current.blockId);\n    const firstElement = this.rootComponent.host.view.getBlock(current.blockId);\n\n    assertExists(first, `Cannot find block ${current.blockId}`);\n    assertExists(firstElement, `Cannot find block view ${current.blockId}`);\n\n    const parent = this._doc.getParent(first);\n    const index = parent?.children.indexOf(first);\n\n    this._deleteBlocksBySelection(selections);\n\n    try {\n      this._doc.schema.validate(flavour, parent?.flavour);\n    } catch {\n      return null;\n    }\n\n    const blockId = this._doc.addBlock(flavour as never, props, parent, index);\n\n    return {\n      blockId,\n      path: blockId,\n    };\n  }\n}\n"]}