{"version":3,"file":"remote-color-manager.js","sourceRoot":"","sources":["../../../src/root-block/remote-color-manager/remote-color-manager.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAC;AAEtD,MAAM,OAAO,kBAAkB;IAC7B,IAAY,cAAc;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,cAAc,CAAC;IACjD,CAAC;IAED,IAAY,WAAW;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IACjD,CAAC;IAED,YAAqB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QACnC,MAAM,YAAY,GAChB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QAC5D,IAAI,YAAY,EAAE,CAAC;YACjB,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,kBAAkB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;YACxE,OAAO;QACT,CAAC;QAED,MAAM,SAAS,GAAG,iBAAiB,CAAC,IAAI,EAAE,CAAC;QAC3C,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,kBAAkB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QACrE,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,UAAU,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;IACvE,CAAC;IAED,GAAG,CAAC,EAAU;QACZ,MAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;QACtE,IAAI,cAAc,EAAE,CAAC;YACnB,OAAO,cAAc,CAAC;QACxB,CAAC;QAED,IAAI,EAAE,KAAK,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,QAAQ;YAAE,OAAO,IAAI,CAAC;QAE/D,MAAM,YAAY,GAChB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QAC5D,IAAI,YAAY,EAAE,CAAC;YACjB,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,kBAAkB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;YACxE,OAAO,YAAY,CAAC;QACtB,CAAC;QAED,MAAM,SAAS,GAAG,iBAAiB,CAAC,IAAI,EAAE,CAAC;QAC3C,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,kBAAkB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QACrE,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,UAAU,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;QACrE,OAAO,SAAS,CAAC;IACnB,CAAC;CACF","sourcesContent":["import type { EditorHost } from '@lumensuite/block-std';\n\nimport { multiPlayersColor } from './color-picker.js';\n\nexport class RemoteColorManager {\n  private get awarenessStore() {\n    return this.host.doc.collection.awarenessStore;\n  }\n\n  private get rootService() {\n    return this.host.std.getService('affine:page');\n  }\n\n  constructor(readonly host: EditorHost) {\n    const sessionColor =\n      this.rootService.editPropsStore.getStorage('remoteColor');\n    if (sessionColor) {\n      this.awarenessStore.awareness.setLocalStateField('color', sessionColor);\n      return;\n    }\n\n    const pickColor = multiPlayersColor.pick();\n    this.awarenessStore.awareness.setLocalStateField('color', pickColor);\n    this.rootService.editPropsStore.setStorage('remoteColor', pickColor);\n  }\n\n  get(id: number) {\n    const awarenessColor = this.awarenessStore.getStates().get(id)?.color;\n    if (awarenessColor) {\n      return awarenessColor;\n    }\n\n    if (id !== this.awarenessStore.awareness.clientID) return null;\n\n    const sessionColor =\n      this.rootService.editPropsStore.getStorage('remoteColor');\n    if (sessionColor) {\n      this.awarenessStore.awareness.setLocalStateField('color', sessionColor);\n      return sessionColor;\n    }\n\n    const pickColor = multiPlayersColor.pick();\n    this.awarenessStore.awareness.setLocalStateField('color', pickColor);\n    this.rootService.editPropsStore.setStorage('remoteColor', pickColor);\n    return pickColor;\n  }\n}\n"]}