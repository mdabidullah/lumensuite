{"version":3,"file":"format-bar.js","sourceRoot":"","sources":["../../../../src/root-block/widgets/format-bar/format-bar.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  AffineTextAttributes,\n  RichText,\n} from '@lumensuite/affine-components/rich-text';\nimport type {\n  BaseSelection,\n  BlockComponent,\n  CursorSelection,\n} from '@lumensuite/block-std';\n\nimport { HoverController } from '@lumensuite/affine-components/hover';\nimport { isFormatSupported } from '@lumensuite/affine-components/rich-text';\nimport {\n  cloneGroups,\n  type MenuItemGroup,\n} from '@lumensuite/affine-components/toolbar';\nimport { matchFlavours } from '@lumensuite/affine-shared/utils';\nimport { WidgetComponent } from '@lumensuite/block-std';\nimport { assertExists, DisposableGroup } from '@lumensuite/global/utils';\nimport {\n  autoUpdate,\n  computePosition,\n  inline,\n  offset,\n  type Placement,\n  type ReferenceElement,\n  shift,\n} from '@floating-ui/dom';\nimport { html, nothing } from 'lit';\nimport { customElement, query, state } from 'lit/decorators.js';\n\nimport type { FormatBarContext } from './context.js';\n\nimport '../../../_common/components/button.js';\nimport { getMoreMenuConfig } from '../../configs/toolbar.js';\nimport { ConfigRenderer } from './components/config-renderer.js';\nimport {\n  BUILT_IN_GROUPS,\n  type FormatBarConfigItem,\n  type InlineActionConfigItem,\n  type ParagraphActionConfigItem,\n  toolbarDefaultConfig,\n  toolbarMoreButton,\n} from './config.js';\nimport { formatBarStyle } from './styles.js';\n\nexport const AFFINE_FORMAT_BAR_WIDGET = 'affine-format-bar-widget';\n\n@customElement(AFFINE_FORMAT_BAR_WIDGET)\nexport class AffineFormatBarWidget extends WidgetComponent {\n  static override styles = formatBarStyle;\n\n  private _abortController = new AbortController();\n\n  private _floatDisposables: DisposableGroup | null = null;\n\n  private _lastCursor: CursorSelection | undefined = undefined;\n\n  private _placement: Placement = 'top';\n\n  /*\n   * Caches the more menu items.\n   * Currently only supports configuring more menu.\n   */\n  moreGroups: MenuItemGroup<FormatBarContext>[] = cloneGroups(BUILT_IN_GROUPS);\n\n  private get _selectionManager() {\n    return this.host.selection;\n  }\n\n  get displayType() {\n    return this._displayType;\n  }\n\n  get nativeRange() {\n    const sl = document.getSelection();\n    if (!sl || sl.rangeCount === 0) return null;\n    return sl.getRangeAt(0);\n  }\n\n  get selectedBlocks() {\n    return this._selectedBlocks;\n  }\n\n  private _calculatePlacement() {\n    const rootComponent = this.block;\n\n    this.handleEvent('dragStart', () => {\n      this._dragging = true;\n    });\n\n    this.handleEvent('dragEnd', () => {\n      this._dragging = false;\n    });\n\n    // calculate placement\n    this.disposables.add(\n      this.host.event.add('pointerUp', ctx => {\n        let targetRect: DOMRect | null = null;\n        if (this.displayType === 'text' || this.displayType === 'native') {\n          const range = this.nativeRange;\n          if (!range) {\n            this.reset();\n            return;\n          }\n          targetRect = range.getBoundingClientRect();\n        } else if (this.displayType === 'block') {\n          const block = this._selectedBlocks[0];\n          if (!block) return;\n          targetRect = block.getBoundingClientRect();\n        } else {\n          return;\n        }\n\n        const { top: editorHostTop, bottom: editorHostBottom } =\n          this.host.getBoundingClientRect();\n        const e = ctx.get('pointerState');\n        if (editorHostBottom - targetRect.bottom < 50) {\n          this._placement = 'top';\n        } else if (targetRect.top - Math.max(editorHostTop, 0) < 50) {\n          this._placement = 'bottom';\n        } else if (e.raw.y < targetRect.top + targetRect.height / 2) {\n          this._placement = 'top';\n        } else {\n          this._placement = 'bottom';\n        }\n      })\n    );\n\n    // listen to selection change\n    this.disposables.add(\n      this._selectionManager.slots.changed.on(() => {\n        const update = async () => {\n          const textSelection = rootComponent.selection.find('text');\n          const blockSelections = rootComponent.selection.filter('block');\n\n          // Should not re-render format bar when only cursor selection changed in edgeless\n          const cursorSelection = rootComponent.selection.find('cursor');\n          if (cursorSelection) {\n            if (!this._lastCursor) {\n              this._lastCursor = cursorSelection;\n              return;\n            }\n\n            if (!this._selectionEqual(cursorSelection, this._lastCursor)) {\n              this._lastCursor = cursorSelection;\n              return;\n            }\n          }\n\n          await this.host.getUpdateComplete();\n\n          if (textSelection) {\n            const block = this.host.view.getBlock(textSelection.blockId);\n\n            if (\n              !textSelection.isCollapsed() &&\n              block &&\n              block.model.role === 'content'\n            ) {\n              this._displayType = 'text';\n              if (!rootComponent.std.range) return;\n              this.host.std.command\n                .chain()\n                .getTextSelection()\n                .getSelectedBlocks({\n                  types: ['text'],\n                })\n                .inline(ctx => {\n                  const { selectedBlocks } = ctx;\n                  if (!selectedBlocks) return;\n                  this._selectedBlocks = selectedBlocks;\n                })\n                .run();\n\n              return;\n            }\n\n            this.reset();\n            return;\n          }\n\n          if (blockSelections.length > 0) {\n            this._displayType = 'block';\n            const selectedBlocks = blockSelections\n              .map(selection => {\n                const path = selection.blockId;\n                return this.block.host.view.getBlock(path);\n              })\n              .filter((el): el is BlockComponent => !!el);\n\n            this._selectedBlocks = selectedBlocks;\n            return;\n          }\n\n          this.reset();\n        };\n\n        update().catch(console.error);\n      })\n    );\n    this.disposables.addFromEvent(document, 'selectionchange', () => {\n      if (!this.host.event.active) return;\n\n      const databaseSelection = this.host.selection.find('database');\n      if (!databaseSelection) {\n        return;\n      }\n\n      const reset = () => {\n        this.reset();\n        this.requestUpdate();\n      };\n      const viewSelection = databaseSelection.viewSelection;\n      // check table selection\n      if (\n        viewSelection.type === 'table' &&\n        (viewSelection.selectionType !== 'area' || !viewSelection.isEditing)\n      )\n        return reset();\n      // check kanban selection\n      if (\n        (viewSelection.type === 'kanban' &&\n          viewSelection.selectionType !== 'cell') ||\n        !viewSelection.isEditing\n      )\n        return reset();\n\n      const range = this.nativeRange;\n\n      if (!range || range.collapsed) return reset();\n      this._displayType = 'native';\n      this.requestUpdate();\n    });\n  }\n\n  private _listenFloatingElement() {\n    const formatQuickBarElement = this.formatBarElement;\n    assertExists(formatQuickBarElement, 'format quick bar should exist');\n\n    const listenFloatingElement = (\n      getElement: () => ReferenceElement | void\n    ) => {\n      const initialElement = getElement();\n      if (!initialElement) {\n        return;\n      }\n\n      assertExists(this._floatDisposables);\n      HoverController.globalAbortController?.abort();\n      this._floatDisposables.add(\n        autoUpdate(\n          initialElement,\n          formatQuickBarElement,\n          () => {\n            const element = getElement();\n            if (!element) return;\n\n            computePosition(element, formatQuickBarElement, {\n              placement: this._placement,\n              middleware: [\n                offset(10),\n                inline(),\n                shift({\n                  padding: 6,\n                }),\n              ],\n            })\n              .then(({ x, y }) => {\n                formatQuickBarElement.style.display = 'flex';\n                formatQuickBarElement.style.top = `${y}px`;\n                formatQuickBarElement.style.left = `${x}px`;\n              })\n              .catch(console.error);\n          },\n          {\n            // follow edgeless viewport update\n            animationFrame: true,\n          }\n        )\n      );\n    };\n\n    const getReferenceElementFromBlock = () => {\n      const firstBlock = this._selectedBlocks[0];\n      let rect = firstBlock?.getBoundingClientRect();\n\n      if (!rect) return;\n\n      this._selectedBlocks.forEach(el => {\n        const elRect = el.getBoundingClientRect();\n        if (elRect.top < rect.top) {\n          rect = new DOMRect(rect.left, elRect.top, rect.width, rect.bottom);\n        }\n        if (elRect.bottom > rect.bottom) {\n          rect = new DOMRect(rect.left, rect.top, rect.width, elRect.bottom);\n        }\n        if (elRect.left < rect.left) {\n          rect = new DOMRect(elRect.left, rect.top, rect.right, rect.bottom);\n        }\n        if (elRect.right > rect.right) {\n          rect = new DOMRect(rect.left, rect.top, elRect.right, rect.bottom);\n        }\n      });\n      return {\n        getBoundingClientRect: () => rect,\n        getClientRects: () =>\n          this._selectedBlocks.map(el => el.getBoundingClientRect()),\n      };\n    };\n\n    const getReferenceElementFromText = () => {\n      const range = this.nativeRange;\n      if (!range) {\n        return;\n      }\n      return {\n        getBoundingClientRect: () => range.getBoundingClientRect(),\n        getClientRects: () => range.getClientRects(),\n      };\n    };\n\n    switch (this.displayType) {\n      case 'text':\n      case 'native':\n        return listenFloatingElement(getReferenceElementFromText);\n      case 'block':\n        return listenFloatingElement(getReferenceElementFromBlock);\n      default:\n        return;\n    }\n  }\n\n  private _selectionEqual(\n    target: BaseSelection | undefined,\n    current: BaseSelection | undefined\n  ) {\n    if (target === current || (target && current && target.equals(current))) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private _shouldDisplay() {\n    const readonly = this.doc.awarenessStore.isReadonly(\n      this.doc.blockCollection\n    );\n    const active = this.host.event.active;\n    if (readonly || !active) return false;\n\n    if (\n      this.displayType === 'block' &&\n      this._selectedBlocks?.[0]?.flavour === 'affine:surface-ref'\n    ) {\n      return false;\n    }\n\n    if (this.displayType === 'block' && this._selectedBlocks.length === 1) {\n      const selectedBlock = this._selectedBlocks[0];\n      if (\n        !matchFlavours(selectedBlock.model, [\n          'affine:paragraph',\n          'affine:list',\n          'affine:code',\n          'affine:image',\n        ])\n      ) {\n        return false;\n      }\n    }\n\n    if (this.displayType === 'none' || this._dragging) {\n      return false;\n    }\n\n    // if the selection is on an embed (ex. linked page), we should not display the format bar\n    if (this.displayType === 'text' && this._selectedBlocks.length === 1) {\n      const isEmbed = () => {\n        const [element] = this._selectedBlocks;\n        const richText = element.querySelector<RichText>('rich-text');\n        const inline = richText?.inlineEditor;\n        if (!richText || !inline) {\n          return false;\n        }\n        const range = inline.getInlineRange();\n        if (!range || range.length > 1) {\n          return false;\n        }\n        const deltas = inline.getDeltasByInlineRange(range);\n        if (deltas.length > 2) {\n          return false;\n        }\n        const delta = deltas?.[1]?.[0];\n        if (!delta) {\n          return false;\n        }\n\n        return inline.isEmbed(delta);\n      };\n\n      if (isEmbed()) {\n        return false;\n      }\n    }\n\n    // todo: refactor later that ai panel & format bar should not depend on each other\n    // do not display if AI panel is open\n    const rootBlockId = this.host.doc.root?.id;\n    const aiPanel = rootBlockId\n      ? this.host.view.getWidget('affine-ai-panel-widget', rootBlockId)\n      : null;\n\n    // @ts-ignore\n    if (aiPanel && aiPanel?.state !== 'hidden') {\n      return false;\n    }\n\n    return true;\n  }\n\n  addBlockTypeSwitch(config: {\n    flavour: LumenSuite.Flavour;\n    icon: ParagraphActionConfigItem['icon'];\n    type?: string;\n    name?: string;\n  }) {\n    const { flavour, type, icon } = config;\n    return this.addParagraphAction({\n      id: `${flavour}/${type ?? ''}`,\n      icon,\n      flavour,\n      name: config.name ?? camelCaseToWords(type ?? flavour),\n      action: chain => {\n        chain\n          .updateBlockType({\n            flavour,\n            props: type != null ? { type } : undefined,\n          })\n          .run();\n      },\n    });\n  }\n\n  addDivider() {\n    this.configItems.push({ type: 'divider' });\n    return this;\n  }\n\n  addHighlighterDropdown() {\n    this.configItems.push({ type: 'highlighter-dropdown' });\n    return this;\n  }\n\n  addInlineAction(config: Omit<InlineActionConfigItem, 'type'>) {\n    this.configItems.push({ ...config, type: 'inline-action' });\n    return this;\n  }\n\n  addParagraphAction(config: Omit<ParagraphActionConfigItem, 'type'>) {\n    this.configItems.push({ ...config, type: 'paragraph-action' });\n    return this;\n  }\n\n  addParagraphDropdown() {\n    this.configItems.push({ type: 'paragraph-dropdown' });\n    return this;\n  }\n\n  addRawConfigItems(configItems: FormatBarConfigItem[], index?: number) {\n    if (index === undefined) {\n      this.configItems.push(...configItems);\n    } else {\n      this.configItems.splice(index, 0, ...configItems);\n    }\n    return this;\n  }\n\n  addTextStyleToggle(config: {\n    icon: InlineActionConfigItem['icon'];\n    key: Exclude<\n      keyof AffineTextAttributes,\n      'color' | 'background' | 'reference'\n    >;\n    action: InlineActionConfigItem['action'];\n  }) {\n    const { key } = config;\n    return this.addInlineAction({\n      id: key,\n      name: camelCaseToWords(key),\n      icon: config.icon,\n      isActive: chain => {\n        const [result] = chain.isTextStyleActive({ key }).run();\n        return result;\n      },\n      action: config.action,\n      showWhen: chain => {\n        const [result] = isFormatSupported(chain).run();\n        return result;\n      },\n    });\n  }\n\n  clearConfig() {\n    this.configItems = [];\n    return this;\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this._abortController = new AbortController();\n\n    const rootComponent = this.block;\n    assertExists(rootComponent);\n    const widgets = rootComponent.widgets;\n\n    // check if the host use the format bar widget\n    if (!Object.hasOwn(widgets, AFFINE_FORMAT_BAR_WIDGET)) {\n      return;\n    }\n\n    // check if format bar widget support the host\n    if (rootComponent.model.flavour !== 'affine:page') {\n      console.error(\n        `format bar not support rootComponent: ${rootComponent.constructor.name} but its widgets has format bar`\n      );\n      return;\n    }\n\n    this._calculatePlacement();\n\n    if (this.configItems.length === 0) {\n      toolbarDefaultConfig(this);\n    }\n\n    this.moreGroups = getMoreMenuConfig(this.std).configure(this.moreGroups);\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this._abortController.abort();\n    this.reset();\n    this._lastCursor = undefined;\n  }\n\n  override render() {\n    if (!this._shouldDisplay()) {\n      return nothing;\n    }\n\n    const items = ConfigRenderer(this);\n\n    return html`\n      <editor-toolbar class=\"${AFFINE_FORMAT_BAR_WIDGET}\">\n        ${items}\n        <editor-toolbar-separator></editor-toolbar-separator>\n        ${toolbarMoreButton(this)}\n      </editor-toolbar>\n    `;\n  }\n\n  reset() {\n    this._displayType = 'none';\n    this._selectedBlocks = [];\n  }\n\n  override updated() {\n    if (!this._shouldDisplay()) {\n      if (this._floatDisposables) {\n        this._floatDisposables.dispose();\n      }\n      return;\n    }\n\n    this._floatDisposables = new DisposableGroup();\n    this._listenFloatingElement();\n  }\n\n  @state()\n  private accessor _displayType: 'text' | 'block' | 'native' | 'none' = 'none';\n\n  @state()\n  private accessor _dragging = false;\n\n  @state()\n  private accessor _selectedBlocks: BlockComponent[] = [];\n\n  @state()\n  accessor configItems: FormatBarConfigItem[] = [];\n\n  @query(`.${AFFINE_FORMAT_BAR_WIDGET}`)\n  accessor formatBarElement: HTMLElement | null = null;\n}\n\nfunction camelCaseToWords(s: string) {\n  const result = s.replace(/([A-Z])/g, ' $1');\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    [AFFINE_FORMAT_BAR_WIDGET]: AffineFormatBarWidget;\n  }\n}\n"]}