{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/root-block/widgets/edgeless-remote-selection/index.ts"],"names":[],"mappings":"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","sourcesContent":["import type { RootBlockModel } from '@blocksuite/affine-model';\nimport type { UserInfo } from '@blocksuite/store';\n\nimport { RemoteCursor } from '@blocksuite/affine-components/icons';\nimport { requestThrottledConnectedFrame } from '@blocksuite/affine-shared/utils';\nimport { WidgetComponent } from '@blocksuite/block-std';\nimport { assertExists, pickValues } from '@blocksuite/global/utils';\nimport { css, html } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { styleMap } from 'lit/directives/style-map.js';\n\nimport type { EdgelessRootBlockComponent } from '../../../root-block/edgeless/edgeless-root-block.js';\n\nimport {\n  getSelectedRect,\n  isTopLevelBlock,\n} from '../../../root-block/edgeless/utils/query.js';\nimport { RemoteColorManager } from '../../../root-block/remote-color-manager/remote-color-manager.js';\n\nexport const AFFINE_EDGELESS_REMOTE_SELECTION_WIDGET =\n  'affine-edgeless-remote-selection-widget';\n\n@customElement(AFFINE_EDGELESS_REMOTE_SELECTION_WIDGET)\nexport class EdgelessRemoteSelectionWidget extends WidgetComponent<\n  RootBlockModel,\n  EdgelessRootBlockComponent\n> {\n  static override styles = css`\n    :host {\n      pointer-events: none;\n      position: absolute;\n      left: 0;\n      top: 0;\n      transform-origin: left top;\n      contain: size layout;\n      z-index: 1;\n    }\n\n    .remote-rect {\n      position: absolute;\n      top: 0;\n      left: 0;\n      border-radius: 4px;\n      box-sizing: border-box;\n      border-width: 3px;\n      z-index: 1;\n      transform-origin: center center;\n    }\n\n    .remote-cursor {\n      position: absolute;\n      top: 0;\n      left: 0;\n      border-radius: 50%;\n      z-index: 1;\n    }\n\n    .remote-cursor > svg {\n      display: block;\n    }\n\n    .remote-username {\n      margin-left: 22px;\n      margin-top: -2px;\n\n      color: white;\n\n      max-width: 160px;\n      padding: 0px 3px;\n      border: 1px solid var(--affine-pure-black-20);\n\n      box-shadow: 0px 1px 6px 0px rgba(0, 0, 0, 0.16);\n      border-radius: 4px;\n\n      font-size: 12px;\n      line-height: 18px;\n\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n  `;\n\n  private _remoteColorManager: RemoteColorManager | null = null;\n\n  private _updateOnElementChange = (element: string | { id: string }) => {\n    const id = typeof element === 'string' ? element : element.id;\n\n    if (this.isConnected && this.selection.hasRemote(id))\n      this._updateRemoteRects();\n  };\n\n  private _updateRemoteCursor = () => {\n    const remoteCursors: EdgelessRemoteSelectionWidget['_remoteCursors'] =\n      new Map();\n    const status = this.doc.awarenessStore.getStates();\n\n    this.selection.remoteCursorSelectionMap.forEach(\n      (cursorSelection, clientId) => {\n        remoteCursors.set(clientId, {\n          x: cursorSelection.x,\n          y: cursorSelection.y,\n          user: status.get(clientId)?.user,\n        });\n      }\n    );\n\n    this._remoteCursors = remoteCursors;\n  };\n\n  private _updateRemoteRects = () => {\n    const { selection, block } = this;\n    const remoteSelectionsMap = selection.remoteSurfaceSelectionsMap;\n    const remoteRects: EdgelessRemoteSelectionWidget['_remoteRects'] =\n      new Map();\n\n    remoteSelectionsMap.forEach((selections, clientId) => {\n      selections.forEach(selection => {\n        if (selection.elements.length === 0) return;\n\n        const elements = selection.elements\n          .map(id => block.service.getElementById(id))\n          .filter(element => element) as BlockSuite.EdgelessModel[];\n        const rect = getSelectedRect(elements);\n\n        if (rect.width === 0 || rect.height === 0) return;\n\n        const { left, top } = rect;\n        const [width, height] = [rect.width, rect.height];\n\n        let rotate = 0;\n        if (elements.length === 1) {\n          const element = elements[0];\n          if (!isTopLevelBlock(element)) {\n            rotate = element.rotate ?? 0;\n          }\n        }\n\n        remoteRects.set(clientId, {\n          width,\n          height,\n          borderStyle: 'solid',\n          left,\n          top,\n          rotate,\n        });\n      });\n    });\n\n    this._remoteRects = remoteRects;\n  };\n\n  private _updateTransform = requestThrottledConnectedFrame(() => {\n    const { translateX, translateY } = this.edgeless.service.viewport;\n\n    this.style.setProperty(\n      'transform',\n      `translate(${translateX}px, ${translateY}px)`\n    );\n\n    this.requestUpdate();\n  }, this);\n\n  get edgeless() {\n    return this.block;\n  }\n\n  get selection() {\n    return this.edgeless.service.selection;\n  }\n\n  get surface() {\n    return this.edgeless.surface;\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n\n    const { _disposables, doc, edgeless } = this;\n\n    pickValues(edgeless.service.surface, [\n      'elementAdded',\n      'elementRemoved',\n      'elementUpdated',\n    ]).forEach(slot => {\n      _disposables.add(slot.on(this._updateOnElementChange));\n    });\n\n    _disposables.add(doc.slots.blockUpdated.on(this._updateOnElementChange));\n\n    _disposables.add(\n      this.selection.slots.remoteUpdated.on(this._updateRemoteRects)\n    );\n    _disposables.add(\n      this.selection.slots.remoteCursorUpdated.on(this._updateRemoteCursor)\n    );\n\n    _disposables.add(\n      edgeless.service.viewport.viewportUpdated.on(() => {\n        this._updateTransform();\n      })\n    );\n\n    this._updateTransform();\n    this._updateRemoteRects();\n\n    this._remoteColorManager = new RemoteColorManager(this.host);\n  }\n\n  override render() {\n    const { _remoteRects, _remoteCursors, _remoteColorManager } = this;\n    assertExists(_remoteColorManager);\n    const { zoom } = this.edgeless.service.viewport;\n\n    const rects = repeat(\n      _remoteRects.entries(),\n      value => value[0],\n      ([id, rect]) =>\n        html`<div\n          data-client-id=${id}\n          class=\"remote-rect\"\n          style=${styleMap({\n            pointerEvents: 'none',\n            width: `${zoom * rect.width}px`,\n            height: `${zoom * rect.height}px`,\n            borderStyle: rect.borderStyle,\n            borderColor: _remoteColorManager.get(id),\n            transform: `translate(${zoom * rect.left}px, ${\n              zoom * rect.top\n            }px) rotate(${rect.rotate}deg)`,\n          })}\n        ></div>`\n    );\n\n    const cursors = repeat(\n      _remoteCursors.entries(),\n      value => value[0],\n      ([id, cursor]) => {\n        return html`<div\n          data-client-id=${id}\n          class=\"remote-cursor\"\n          style=${styleMap({\n            pointerEvents: 'none',\n            transform: `translate(${zoom * cursor.x}px, ${zoom * cursor.y}px)`,\n            color: _remoteColorManager.get(id),\n          })}\n        >\n          ${RemoteCursor}\n          <div\n            class=\"remote-username\"\n            style=${styleMap({\n              backgroundColor: _remoteColorManager.get(id),\n            })}\n          >\n            ${cursor.user?.name ?? 'Unknown'}\n          </div>\n        </div>`;\n      }\n    );\n\n    return html`\n      <div class=\"affine-edgeless-remote-selection\">${rects}${cursors}</div>\n    `;\n  }\n\n  @state()\n  private accessor _remoteCursors: Map<\n    number,\n    {\n      x: number;\n      y: number;\n      user?: UserInfo | undefined;\n    }\n  > = new Map();\n\n  @state()\n  private accessor _remoteRects: Map<\n    number,\n    {\n      width: number;\n      height: number;\n      borderStyle: string;\n      left: number;\n      top: number;\n      rotate: number;\n    }\n  > = new Map();\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    [AFFINE_EDGELESS_REMOTE_SELECTION_WIDGET]: EdgelessRemoteSelectionWidget;\n  }\n}\n"]}