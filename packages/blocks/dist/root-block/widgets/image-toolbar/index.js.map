{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/root-block/widgets/image-toolbar/index.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  AdvancedMenuItem,\n  MenuItemGroup,\n} from '@blocksuite/affine-components/toolbar';\nimport type { ImageBlockModel } from '@blocksuite/affine-model';\n\nimport { HoverController } from '@blocksuite/affine-components/hover';\nimport { cloneGroups } from '@blocksuite/affine-components/toolbar';\nimport { WidgetComponent } from '@blocksuite/block-std';\nimport { limitShift, shift } from '@floating-ui/dom';\nimport { html } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\nimport type { ImageBlockComponent } from '../../../image-block/image-block.js';\n\nimport { PAGE_HEADER_HEIGHT } from '../../../_common/consts.js';\nimport { getMoreMenuConfig } from '../../configs/toolbar.js';\nimport './components/image-toolbar.js';\nimport { MORE_GROUPS, PRIMARY_GROUPS } from './config.js';\nimport { ImageToolbarContext } from './context.js';\n\nexport const AFFINE_IMAGE_TOOLBAR_WIDGET = 'affine-image-toolbar-widget';\n\n@customElement(AFFINE_IMAGE_TOOLBAR_WIDGET)\nexport class AffineImageToolbarWidget extends WidgetComponent<\n  ImageBlockModel,\n  ImageBlockComponent\n> {\n  private _hoverController: HoverController | null = null;\n\n  private _isActivated = false;\n\n  private _setHoverController = () => {\n    this._hoverController = null;\n    this._hoverController = new HoverController(\n      this,\n      ({ abortController }) => {\n        const imageBlock = this.block;\n        const selection = this.host.selection;\n\n        const textSelection = selection.find('text');\n        if (\n          !!textSelection &&\n          (!!textSelection.to || !!textSelection.from.length)\n        ) {\n          return null;\n        }\n\n        const blockSelections = selection.filter('block');\n        if (\n          blockSelections.length > 1 ||\n          (blockSelections.length === 1 &&\n            blockSelections[0].blockId !== imageBlock.blockId)\n        ) {\n          return null;\n        }\n\n        const imageContainer =\n          imageBlock.resizableImg ?? imageBlock.fallbackCard;\n        if (!imageContainer) {\n          return null;\n        }\n\n        const context = new ImageToolbarContext(imageBlock, abortController);\n\n        return {\n          template: html`<affine-image-toolbar\n            .context=${context}\n            .primaryGroups=${this.primaryGroups}\n            .moreGroups=${this.moreGroups}\n            .onActiveStatusChange=${(active: boolean) => {\n              this._isActivated = active;\n              if (!active && !this._hoverController?.isHovering) {\n                this._hoverController?.abort();\n              }\n            }}\n          ></affine-image-toolbar>`,\n          container: this.block,\n          // stacking-context(editor-host)\n          portalStyles: {\n            zIndex: 'var(--affine-z-index-popover)',\n          },\n          computePosition: {\n            referenceElement: imageContainer,\n            placement: 'right-start',\n            middleware: [\n              shift({\n                crossAxis: true,\n                padding: {\n                  top: PAGE_HEADER_HEIGHT + 12,\n                  bottom: 12,\n                  right: 12,\n                },\n                limiter: limitShift(),\n              }),\n            ],\n            autoUpdate: true,\n          },\n        };\n      },\n      { allowMultiple: true }\n    );\n\n    const imageBlock = this.block;\n    this._hoverController.setReference(imageBlock);\n    this._hoverController.onAbort = () => {\n      // If the more menu is opened, don't close it.\n      if (this._isActivated) return;\n      this._hoverController?.abort();\n      return;\n    };\n  };\n\n  addMoreItems = (\n    items: AdvancedMenuItem<ImageToolbarContext>[],\n    index?: number,\n    type?: string\n  ) => {\n    let group;\n    if (type) {\n      group = this.moreGroups.find(g => g.type === type);\n    }\n    if (!group) {\n      group = this.moreGroups[0];\n    }\n\n    if (index === undefined) {\n      group.items.push(...items);\n      return this;\n    }\n\n    group.items.splice(index, 0, ...items);\n    return this;\n  };\n\n  addPrimaryItems = (\n    items: AdvancedMenuItem<ImageToolbarContext>[],\n    index?: number\n  ) => {\n    if (index === undefined) {\n      this.primaryGroups[0].items.push(...items);\n      return this;\n    }\n\n    this.primaryGroups[0].items.splice(index, 0, ...items);\n    return this;\n  };\n\n  /*\n   * Caches the more menu items.\n   * Currently only supports configuring more menu.\n   */\n  moreGroups: MenuItemGroup<ImageToolbarContext>[] = cloneGroups(MORE_GROUPS);\n\n  primaryGroups: MenuItemGroup<ImageToolbarContext>[] =\n    cloneGroups(PRIMARY_GROUPS);\n\n  override firstUpdated() {\n    if (this.doc.getParent(this.model.id)?.flavour === 'affine:surface') {\n      return;\n    }\n\n    this.moreGroups = getMoreMenuConfig(this.std).configure(this.moreGroups);\n    this._setHoverController();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    [AFFINE_IMAGE_TOOLBAR_WIDGET]: AffineImageToolbarWidget;\n  }\n}\n"]}