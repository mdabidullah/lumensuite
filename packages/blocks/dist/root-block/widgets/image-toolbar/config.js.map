{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../../src/root-block/widgets/image-toolbar/config.ts"],"names":[],"mappings":"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","sourcesContent":["import type { MenuItemGroup } from '@lumensuite/affine-components/toolbar';\n\nimport {\n  BookmarkIcon,\n  CaptionIcon,\n  CopyIcon,\n  DeleteIcon,\n  DownloadIcon,\n  DuplicateIcon,\n} from '@lumensuite/affine-components/icons';\nimport { html } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\n\nimport type { ImageToolbarContext } from './context.js';\n\nimport { duplicate } from './utils.js';\n\nexport const PRIMARY_GROUPS: MenuItemGroup<ImageToolbarContext>[] = [\n  {\n    type: 'primary',\n    items: [\n      {\n        type: 'download',\n        label: 'Download',\n        icon: DownloadIcon,\n        generate: ({ blockComponent }) => {\n          return {\n            action: () => {\n              blockComponent.download();\n            },\n            render: item => html`\n              <editor-icon-button\n                class=\"image-toolbar-button download\"\n                aria-label=${ifDefined(item.label)}\n                .tooltip=${item.label}\n                .tooltipOffset=${4}\n                @click=${(e: MouseEvent) => {\n                  e.stopPropagation();\n                  item.action();\n                }}\n              >\n                ${item.icon}\n              </editor-icon-button>\n            `,\n          };\n        },\n      },\n      {\n        type: 'caption',\n        label: 'Caption',\n        icon: CaptionIcon,\n        when: ({ doc }) => !doc.readonly,\n        generate: ({ blockComponent }) => {\n          return {\n            action: () => {\n              blockComponent.captionEditor?.show();\n            },\n            render: item => html`\n              <editor-icon-button\n                class=\"image-toolbar-button caption\"\n                aria-label=${ifDefined(item.label)}\n                .tooltip=${item.label}\n                .tooltipOffset=${4}\n                @click=${(e: MouseEvent) => {\n                  e.stopPropagation();\n                  item.action();\n                }}\n              >\n                ${item.icon}\n              </editor-icon-button>\n            `,\n          };\n        },\n      },\n    ],\n  },\n];\n\n// Clipboard Group\nexport const clipboardGroup: MenuItemGroup<ImageToolbarContext> = {\n  type: 'clipboard',\n  items: [\n    {\n      type: 'copy',\n      label: 'Copy',\n      icon: CopyIcon,\n      action: ({ blockComponent, close }) => {\n        blockComponent.copy();\n        close();\n      },\n    },\n    {\n      type: 'duplicate',\n      label: 'Duplicate',\n      icon: DuplicateIcon,\n      when: ({ doc }) => !doc.readonly,\n      action: ({ blockComponent, abortController }) => {\n        duplicate(blockComponent, abortController);\n      },\n    },\n  ],\n};\n\n// Conversions Group\nexport const conversionsGroup: MenuItemGroup<ImageToolbarContext> = {\n  type: 'conversions',\n  items: [\n    {\n      label: 'Turn into card view',\n      type: 'turn-into-card-view',\n      icon: BookmarkIcon,\n      when: ({ doc, blockComponent }) => {\n        const supportAttachment =\n          doc.schema.flavourSchemaMap.has('affine:attachment');\n        const readonly = doc.readonly;\n        return supportAttachment && !readonly && !!blockComponent.blob;\n      },\n      action: ({ blockComponent, close }) => {\n        blockComponent.convertToCardView();\n        close();\n      },\n    },\n  ],\n};\n\n// Delete Group\nexport const deleteGroup: MenuItemGroup<ImageToolbarContext> = {\n  type: 'delete',\n  items: [\n    {\n      type: 'delete',\n      label: 'Delete',\n      icon: DeleteIcon,\n      when: ({ doc }) => !doc.readonly,\n      action: ({ doc, blockComponent, close }) => {\n        doc.deleteBlock(blockComponent.model);\n        close();\n      },\n    },\n  ],\n};\n\nexport const MORE_GROUPS: MenuItemGroup<ImageToolbarContext>[] = [\n  clipboardGroup,\n  conversionsGroup,\n  deleteGroup,\n];\n"]}