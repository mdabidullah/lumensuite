{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../src/root-block/widgets/slash-menu/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import type { AffineTextAttributes } from '@lumensuite/affine-components/rich-text';\nimport type { EditorHost } from '@lumensuite/block-std';\nimport type { BlockModel } from '@lumensuite/store';\n\nimport { getInlineEditorByModel } from '@lumensuite/affine-components/rich-text';\nimport { isInsideBlockByFlavour } from '@lumensuite/affine-shared/utils';\nimport { assertType } from '@lumensuite/global/utils';\n\nimport type { TextConversionConfig } from '../../../_common/configs/text-conversion.js';\nimport type {\n  SlashMenuActionItem,\n  SlashMenuContext,\n  SlashMenuGroupDivider,\n  SlashMenuItem,\n  SlashMenuItemGenerator,\n  SlashMenuStaticItem,\n  SlashSubMenu,\n} from './config.js';\n\nimport { slashMenuToolTips } from './tooltips/index.js';\n\nexport function isGroupDivider(\n  item: SlashMenuStaticItem\n): item is SlashMenuGroupDivider {\n  return 'groupName' in item;\n}\n\nexport function notGroupDivider(\n  item: SlashMenuStaticItem\n): item is Exclude<SlashMenuStaticItem, SlashMenuGroupDivider> {\n  return !isGroupDivider(item);\n}\n\nexport function isActionItem(\n  item: SlashMenuStaticItem\n): item is SlashMenuActionItem {\n  return 'action' in item;\n}\n\nexport function isSubMenuItem(item: SlashMenuStaticItem): item is SlashSubMenu {\n  return 'subMenu' in item;\n}\n\nexport function isMenuItemGenerator(\n  item: SlashMenuItem\n): item is SlashMenuItemGenerator {\n  return typeof item === 'function';\n}\n\nexport function slashItemClassName(item: SlashMenuStaticItem) {\n  const name = isGroupDivider(item) ? item.groupName : item.name;\n\n  return name.split(' ').join('-').toLocaleLowerCase();\n}\n\nexport function filterEnabledSlashMenuItems(\n  items: SlashMenuItem[],\n  context: SlashMenuContext\n): SlashMenuStaticItem[] {\n  const result = items\n    .map(item => (isMenuItemGenerator(item) ? item(context) : item))\n    .flat()\n    .filter(item => (item.showWhen ? item.showWhen(context) : true))\n    .map(item => {\n      if (isSubMenuItem(item)) {\n        return {\n          ...item,\n          subMenu: filterEnabledSlashMenuItems(item.subMenu, context),\n        };\n      } else {\n        return { ...item };\n      }\n    });\n  return result;\n}\n\nexport function getFirstNotDividerItem(\n  items: SlashMenuStaticItem[]\n): SlashMenuActionItem | SlashSubMenu | null {\n  const firstItem = items.find(item => !isGroupDivider(item));\n  assertType<SlashMenuActionItem | SlashSubMenu | undefined>(firstItem);\n  return firstItem ?? null;\n}\n\nexport function insertContent(\n  editorHost: EditorHost,\n  model: BlockModel,\n  text: string,\n  attributes?: AffineTextAttributes\n) {\n  if (!model.text) {\n    console.error(\"Can't insert text! Text not found\");\n    return;\n  }\n  const inlineEditor = getInlineEditorByModel(editorHost, model);\n  if (!inlineEditor) {\n    console.error(\"Can't insert text! Inline editor not found\");\n    return;\n  }\n  const inlineRange = inlineEditor.getInlineRange();\n  const index = inlineRange ? inlineRange.index : model.text.length;\n  model.text.insert(text, index, attributes as Record<string, unknown>);\n  // Update the caret to the end of the inserted text\n  inlineEditor.setInlineRange({\n    index: index + text.length,\n    length: 0,\n  });\n}\n\nexport function formatDate(date: Date) {\n  // yyyy-mm-dd\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  const strTime = `${year}-${month}-${day}`;\n  return strTime;\n}\n\nexport function formatTime(date: Date) {\n  // mm-dd hh:mm\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  const hours = date.getHours().toString().padStart(2, '0');\n  const minutes = date.getMinutes().toString().padStart(2, '0');\n  const strTime = `${month}-${day} ${hours}:${minutes}`;\n  return strTime;\n}\n\nexport function insideDatabase(model: BlockModel) {\n  return isInsideBlockByFlavour(model.doc, model, 'affine:database');\n}\n\nexport function insideEdgelessText(model: BlockModel) {\n  return isInsideBlockByFlavour(model.doc, model, 'affine:edgeless-text');\n}\n\nexport function createDatabaseBlockInNextLine(model: BlockModel) {\n  let parent = model.doc.getParent(model);\n  while (parent && parent.flavour !== 'affine:note') {\n    model = parent;\n    parent = model.doc.getParent(parent);\n  }\n  if (!parent) {\n    return;\n  }\n  const index = parent.children.indexOf(model);\n\n  return model.doc.addBlock('affine:database', {}, parent, index + 1);\n}\n\nexport function tryRemoveEmptyLine(model: BlockModel) {\n  if (!model.text?.length) {\n    model.doc.deleteBlock(model);\n  }\n}\n\nexport function createConversionItem(\n  config: TextConversionConfig\n): SlashMenuActionItem {\n  const { name, description, icon, flavour, type } = config;\n  return {\n    name,\n    description,\n    icon,\n    tooltip: slashMenuToolTips[name],\n    showWhen: ({ model }) => model.doc.schema.flavourSchemaMap.has(flavour),\n    action: ({ rootComponent }) => {\n      rootComponent.host.std.command\n        .chain()\n        .updateBlockType({\n          flavour,\n          props: { type },\n        })\n        .inline((ctx, next) => (ctx.updatedBlocks ? next() : false))\n        .run();\n    },\n  };\n}\n"]}