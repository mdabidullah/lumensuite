import type { AffineTextAttributes } from '@blocksuite/affine-components/rich-text';
import type { EditorHost } from '@blocksuite/block-std';
import type { BlockModel } from '@blocksuite/store';
import type { TextConversionConfig } from '../../../_common/configs/text-conversion.js';
import type { SlashMenuActionItem, SlashMenuContext, SlashMenuGroupDivider, SlashMenuItem, SlashMenuItemGenerator, SlashMenuStaticItem, SlashSubMenu } from './config.js';
export declare function isGroupDivider(item: SlashMenuStaticItem): item is SlashMenuGroupDivider;
export declare function notGroupDivider(item: SlashMenuStaticItem): item is Exclude<SlashMenuStaticItem, SlashMenuGroupDivider>;
export declare function isActionItem(item: SlashMenuStaticItem): item is SlashMenuActionItem;
export declare function isSubMenuItem(item: SlashMenuStaticItem): item is SlashSubMenu;
export declare function isMenuItemGenerator(item: SlashMenuItem): item is SlashMenuItemGenerator;
export declare function slashItemClassName(item: SlashMenuStaticItem): string;
export declare function filterEnabledSlashMenuItems(items: SlashMenuItem[], context: SlashMenuContext): SlashMenuStaticItem[];
export declare function getFirstNotDividerItem(items: SlashMenuStaticItem[]): SlashMenuActionItem | SlashSubMenu | null;
export declare function insertContent(editorHost: EditorHost, model: BlockModel, text: string, attributes?: AffineTextAttributes): void;
export declare function formatDate(date: Date): string;
export declare function formatTime(date: Date): string;
export declare function insideDatabase(model: BlockModel): boolean;
export declare function insideEdgelessText(model: BlockModel): boolean;
export declare function createDatabaseBlockInNextLine(model: BlockModel): string | undefined;
export declare function tryRemoveEmptyLine(model: BlockModel): void;
export declare function createConversionItem(config: TextConversionConfig): SlashMenuActionItem;
//# sourceMappingURL=utils.d.ts.map