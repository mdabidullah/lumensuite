{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../../src/root-block/widgets/slash-menu/config.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  FrameBlockModel,\n  ParagraphBlockModel,\n} from '@blocksuite/affine-model';\nimport type { BlockModel } from '@blocksuite/store';\nimport type { TemplateResult } from 'lit';\n\nimport { CanvasElementType } from '@blocksuite/affine-block-surface';\nimport {\n  ArrowDownBigIcon,\n  ArrowUpBigIcon,\n  CopyIcon,\n  DatabaseKanbanViewIcon20,\n  DatabaseTableViewIcon20,\n  DeleteIcon,\n  FileIcon,\n  FrameIcon,\n  HeadingIcon,\n  ImageIcon20,\n  LinkedDocIcon,\n  LinkIcon,\n  NewDocIcon,\n  NowIcon,\n  PasteIcon,\n  TodayIcon,\n  TomorrowIcon,\n  YesterdayIcon,\n} from '@blocksuite/affine-components/icons';\nimport {\n  clearMarksOnDiscontinuousInput,\n  getInlineEditorByModel,\n  REFERENCE_NODE,\n  textFormatConfigs,\n} from '@blocksuite/affine-components/rich-text';\nimport { toast } from '@blocksuite/affine-components/toast';\nimport {\n  createDefaultDoc,\n  getImageFilesFromLocal,\n  matchFlavours,\n  openFileOrFiles,\n} from '@blocksuite/affine-shared/utils';\nimport { viewPresets } from '@blocksuite/data-view/view-presets';\nimport { GroupingIcon, TeXIcon } from '@blocksuite/icons/lit';\nimport { Slice, Text } from '@blocksuite/store';\n\nimport type { DataViewBlockComponent } from '../../../data-view-block/index.js';\nimport type { RootBlockComponent } from '../../types.js';\nimport type { AffineLinkedDocWidget } from '../linked-doc/index.js';\n\nimport { toggleEmbedCardCreateModal } from '../../../_common/components/embed-card/modal/embed-card-create-modal.js';\nimport { textConversionConfigs } from '../../../_common/configs/text-conversion.js';\nimport { addSiblingAttachmentBlocks } from '../../../attachment-block/utils.js';\nimport { FigmaIcon } from '../../../embed-figma-block/styles.js';\nimport { GithubIcon } from '../../../embed-github-block/styles.js';\nimport { LoomIcon } from '../../../embed-loom-block/styles.js';\nimport { YoutubeIcon } from '../../../embed-youtube-block/styles.js';\nimport { addSiblingImageBlock } from '../../../image-block/utils.js';\nimport { LatexBlockComponent } from '../../../latex-block/latex-block.js';\nimport { onModelTextUpdated } from '../../../root-block/utils/index.js';\nimport { getSurfaceBlock } from '../../../surface-ref-block/utils.js';\nimport { type SlashMenuTooltip, slashMenuToolTips } from './tooltips/index.js';\nimport {\n  createConversionItem,\n  createDatabaseBlockInNextLine,\n  formatDate,\n  formatTime,\n  insertContent,\n  insideDatabase,\n  insideEdgelessText,\n  tryRemoveEmptyLine,\n} from './utils.js';\n\nexport type SlashMenuConfig = {\n  triggerKeys: string[];\n  ignoreBlockTypes: BlockSuite.Flavour[];\n  items: SlashMenuItem[];\n  maxHeight: number;\n  tooltipTimeout: number;\n};\n\nexport type SlashMenuStaticConfig = Omit<SlashMenuConfig, 'items'> & {\n  items: SlashMenuStaticItem[];\n};\n\nexport type SlashMenuItem = SlashMenuStaticItem | SlashMenuItemGenerator;\n\nexport type SlashMenuStaticItem =\n  | SlashMenuGroupDivider\n  | SlashMenuActionItem\n  | SlashSubMenu;\n\nexport type SlashMenuGroupDivider = {\n  groupName: string;\n  showWhen?: (ctx: SlashMenuContext) => boolean;\n};\n\nexport type SlashMenuActionItem = {\n  name: string;\n  description?: string;\n  icon?: TemplateResult;\n  tooltip?: SlashMenuTooltip;\n  alias?: string[];\n  showWhen?: (ctx: SlashMenuContext) => boolean;\n  action: (ctx: SlashMenuContext) => void | Promise<void>;\n\n  customTemplate?: TemplateResult<1>;\n};\n\nexport type SlashSubMenu = {\n  name: string;\n  description?: string;\n  icon?: TemplateResult;\n  alias?: string[];\n  showWhen?: (ctx: SlashMenuContext) => boolean;\n  subMenu: SlashMenuStaticItem[];\n};\n\nexport type SlashMenuItemGenerator = (\n  ctx: SlashMenuContext\n) => (SlashMenuGroupDivider | SlashMenuActionItem | SlashSubMenu)[];\n\nexport type SlashMenuContext = {\n  rootComponent: RootBlockComponent;\n  model: BlockModel;\n};\n\nexport const defaultSlashMenuConfig: SlashMenuConfig = {\n  triggerKeys: ['/', '、'],\n  ignoreBlockTypes: ['affine:code'],\n  maxHeight: 344,\n  tooltipTimeout: 800,\n  items: [\n    // ---------------------------------------------------------\n    { groupName: 'Basic' },\n    ...textConversionConfigs\n      .filter(i => i.type && ['h1', 'h2', 'h3', 'text'].includes(i.type))\n      .map(createConversionItem),\n    {\n      name: 'Other Headings',\n      icon: HeadingIcon,\n      subMenu: [\n        { groupName: 'Headings' },\n        ...textConversionConfigs\n          .filter(i => i.type && ['h4', 'h5', 'h6'].includes(i.type))\n          .map<SlashMenuActionItem>(createConversionItem),\n      ],\n    },\n    ...textConversionConfigs\n      .filter(i => i.flavour === 'affine:code')\n      .map<SlashMenuActionItem>(config => ({\n        ...createConversionItem(config),\n        showWhen: ({ model }) =>\n          model.doc.schema.flavourSchemaMap.has(config.flavour) &&\n          !insideDatabase(model),\n        action: ({ rootComponent }) => {\n          const { flavour, type } = config;\n          rootComponent.host.std.command\n            .chain()\n            .updateBlockType({\n              flavour,\n              props: { type },\n            })\n            .inline((ctx, next) => {\n              const newModels = ctx.updatedBlocks;\n              if (!newModels) return false;\n\n              // Reset selection if the target is code block\n              if (flavour === 'affine:code') {\n                if (newModels.length !== 1) {\n                  console.error(\n                    \"Failed to reset selection! New model length isn't 1\"\n                  );\n                  return false;\n                }\n                const codeModel = newModels[0];\n                onModelTextUpdated(rootComponent.host, codeModel, richText => {\n                  const inlineEditor = richText.inlineEditor;\n                  if (!inlineEditor) return;\n                  inlineEditor.focusEnd();\n                }).catch(console.error);\n              }\n\n              return next();\n            })\n            .run();\n        },\n      })),\n\n    ...textConversionConfigs\n      .filter(i => i.type && ['divider', 'quote'].includes(i.type))\n      .map<SlashMenuActionItem>(config => ({\n        ...createConversionItem(config),\n        showWhen: ({ model }) =>\n          model.doc.schema.flavourSchemaMap.has(config.flavour) &&\n          !insideDatabase(model) &&\n          !insideEdgelessText(model),\n      })),\n\n    {\n      name: 'Inline equation',\n      description: 'Create a equation block.',\n      icon: TeXIcon({\n        width: '20',\n        height: '20',\n      }),\n      alias: ['inlineMath, inlineEquation', 'inlineLatex'],\n      action: ({ rootComponent }) => {\n        const selectionManager = rootComponent.host.selection;\n        const textSelection = selectionManager.filter('text')[0];\n        if (!textSelection || !textSelection.isCollapsed()) return;\n\n        const blockComponent = rootComponent.std.view.getBlock(\n          textSelection.from.blockId\n        );\n        if (!blockComponent) return;\n\n        const richText = blockComponent.querySelector('rich-text');\n        if (!richText) return;\n        const inlineEditor = richText.inlineEditor;\n        if (!inlineEditor) return;\n\n        inlineEditor.insertText(\n          {\n            index: textSelection.from.index,\n            length: 0,\n          },\n          ' '\n        );\n        inlineEditor.formatText(\n          {\n            index: textSelection.from.index,\n            length: 1,\n          },\n          {\n            latex: '',\n          }\n        );\n        inlineEditor.setInlineRange({\n          index: textSelection.from.index,\n          length: 1,\n        });\n\n        inlineEditor\n          .waitForUpdate()\n          .then(async () => {\n            await inlineEditor.waitForUpdate();\n\n            const textPoint = inlineEditor.getTextPoint(\n              textSelection.from.index + 1\n            );\n            if (!textPoint) return;\n            const [text] = textPoint;\n            const latexNode = text.parentElement?.closest('affine-latex-node');\n            if (!latexNode) return;\n            latexNode.toggleEditor();\n          })\n          .catch(console.error);\n      },\n    },\n\n    // ---------------------------------------------------------\n    { groupName: 'List' },\n    ...textConversionConfigs\n      .filter(i => i.flavour === 'affine:list')\n      .map(createConversionItem),\n\n    // ---------------------------------------------------------\n    { groupName: 'Style' },\n    ...textFormatConfigs\n      .filter(i => !['Code', 'Link'].includes(i.name))\n      .map<SlashMenuActionItem>(({ name, icon, id }) => ({\n        name,\n        icon,\n        tooltip: slashMenuToolTips[name],\n        action: ({ rootComponent, model }) => {\n          if (!model.text) {\n            return;\n          }\n          const len = model.text.length;\n          if (!len) {\n            const inlineEditor = getInlineEditorByModel(\n              rootComponent.host,\n              model\n            );\n            if (!inlineEditor) return;\n            inlineEditor.setMarks({\n              [id]: true,\n            });\n            clearMarksOnDiscontinuousInput(inlineEditor);\n            return;\n          }\n          model.text.format(0, len, {\n            [id]: true,\n          });\n        },\n      })),\n\n    // ---------------------------------------------------------\n    {\n      groupName: 'Page',\n      showWhen: ({ model }) =>\n        model.doc.schema.flavourSchemaMap.has('affine:embed-linked-doc'),\n    },\n    {\n      name: 'New Doc',\n      description: 'Start a new document.',\n      icon: NewDocIcon,\n      tooltip: slashMenuToolTips['New Doc'],\n      showWhen: ({ model }) =>\n        model.doc.schema.flavourSchemaMap.has('affine:embed-linked-doc'),\n      action: ({ rootComponent, model }) => {\n        const newDoc = createDefaultDoc(rootComponent.doc.collection);\n        insertContent(rootComponent.host, model, REFERENCE_NODE, {\n          reference: {\n            type: 'LinkedPage',\n            pageId: newDoc.id,\n          },\n        });\n      },\n    },\n    {\n      name: 'Linked Doc',\n      description: 'Link to another document.',\n      icon: LinkedDocIcon,\n      tooltip: slashMenuToolTips['Linked Doc'],\n      alias: ['dual link'],\n      showWhen: ({ rootComponent, model }) => {\n        const linkedDocWidgetEle =\n          rootComponent.widgetComponents['affine-linked-doc-widget'];\n        if (!linkedDocWidgetEle) return false;\n\n        const hasLinkedDocSchema = model.doc.schema.flavourSchemaMap.has(\n          'affine:embed-linked-doc'\n        );\n        if (!hasLinkedDocSchema) return false;\n\n        if (!('showLinkedDocPopover' in linkedDocWidgetEle)) {\n          console.warn(\n            'You may not have correctly implemented the linkedDoc widget! \"showLinkedDoc(model)\" method not found on widget'\n          );\n          return false;\n        }\n        return true;\n      },\n      action: ({ model, rootComponent }) => {\n        const triggerKey = '@';\n        insertContent(rootComponent.host, model, triggerKey);\n        if (!model.doc.root) return;\n        const widgetEle =\n          rootComponent.widgetComponents['affine-linked-doc-widget'];\n        if (!widgetEle) return;\n        // We have checked the existence of showLinkedDoc method in the showWhen\n        const linkedDocWidget = widgetEle as AffineLinkedDocWidget;\n        // Wait for range to be updated\n        setTimeout(() => {\n          const inlineEditor = getInlineEditorByModel(\n            rootComponent.host,\n            model\n          );\n          if (!inlineEditor) return;\n          linkedDocWidget.showLinkedDocPopover(inlineEditor, triggerKey);\n        });\n      },\n    },\n\n    // ---------------------------------------------------------\n    { groupName: 'Content & Media' },\n    {\n      name: 'Image',\n      description: 'Insert an image.',\n      icon: ImageIcon20,\n      tooltip: slashMenuToolTips['Image'],\n      showWhen: ({ model }) =>\n        model.doc.schema.flavourSchemaMap.has('affine:image') &&\n        !insideDatabase(model),\n      action: async ({ rootComponent, model }) => {\n        const parent = rootComponent.doc.getParent(model);\n        if (!parent) {\n          return;\n        }\n\n        const imageFiles = await getImageFilesFromLocal();\n        if (!imageFiles.length) return;\n\n        const imageService = rootComponent.std.getService('affine:image');\n        const maxFileSize = imageService.maxFileSize;\n\n        addSiblingImageBlock(\n          rootComponent.host,\n          imageFiles,\n          maxFileSize,\n          model\n        );\n        tryRemoveEmptyLine(model);\n      },\n    },\n    {\n      name: 'Link',\n      description: 'Add a bookmark for reference.',\n      icon: LinkIcon,\n      tooltip: slashMenuToolTips['Link'],\n      showWhen: ({ model }) =>\n        model.doc.schema.flavourSchemaMap.has('affine:bookmark') &&\n        !insideDatabase(model),\n      action: async ({ rootComponent, model }) => {\n        const parentModel = rootComponent.doc.getParent(model);\n        if (!parentModel) {\n          return;\n        }\n        const index = parentModel.children.indexOf(model) + 1;\n        await toggleEmbedCardCreateModal(\n          rootComponent.host,\n          'Links',\n          'The added link will be displayed as a card view.',\n          { mode: 'page', parentModel, index }\n        );\n        tryRemoveEmptyLine(model);\n      },\n    },\n    {\n      name: 'Attachment',\n      description: 'Attach a file to document.',\n      icon: FileIcon,\n      tooltip: slashMenuToolTips['Attachment'],\n      alias: ['file'],\n      showWhen: ({ model }) =>\n        model.doc.schema.flavourSchemaMap.has('affine:attachment') &&\n        !insideDatabase(model),\n      action: async ({ rootComponent, model }) => {\n        const file = await openFileOrFiles();\n        if (!file) return;\n\n        const attachmentService =\n          rootComponent.std.getService('affine:attachment');\n        if (!attachmentService) return;\n        const maxFileSize = attachmentService.maxFileSize;\n\n        await addSiblingAttachmentBlocks(\n          rootComponent.host,\n          [file],\n          maxFileSize,\n          model\n        );\n        tryRemoveEmptyLine(model);\n      },\n    },\n    {\n      name: 'YouTube',\n      description: 'Embed a YouTube video.',\n      icon: YoutubeIcon,\n      tooltip: slashMenuToolTips['YouTube'],\n      showWhen: ({ model }) =>\n        model.doc.schema.flavourSchemaMap.has('affine:embed-youtube') &&\n        !insideDatabase(model),\n      action: async ({ rootComponent, model }) => {\n        const parentModel = rootComponent.doc.getParent(model);\n        if (!parentModel) {\n          return;\n        }\n        const index = parentModel.children.indexOf(model) + 1;\n        await toggleEmbedCardCreateModal(\n          rootComponent.host,\n          'YouTube',\n          'The added YouTube video link will be displayed as an embed view.',\n          { mode: 'page', parentModel, index }\n        );\n        tryRemoveEmptyLine(model);\n      },\n    },\n    {\n      name: 'GitHub',\n      description: 'Link to a GitHub repository.',\n      icon: GithubIcon,\n      tooltip: slashMenuToolTips['Github'],\n      showWhen: ({ model }) =>\n        model.doc.schema.flavourSchemaMap.has('affine:embed-github') &&\n        !insideDatabase(model),\n      action: async ({ rootComponent, model }) => {\n        const parentModel = rootComponent.doc.getParent(model);\n        if (!parentModel) {\n          return;\n        }\n        const index = parentModel.children.indexOf(model) + 1;\n        await toggleEmbedCardCreateModal(\n          rootComponent.host,\n          'GitHub',\n          'The added GitHub issue or pull request link will be displayed as a card view.',\n          { mode: 'page', parentModel, index }\n        );\n        tryRemoveEmptyLine(model);\n      },\n    },\n    // TODO: X Twitter\n\n    {\n      name: 'Figma',\n      description: 'Embed a Figma document.',\n      icon: FigmaIcon,\n      tooltip: slashMenuToolTips['Figma'],\n      showWhen: ({ model }) =>\n        model.doc.schema.flavourSchemaMap.has('affine:embed-figma') &&\n        !insideDatabase(model),\n      action: async ({ rootComponent, model }) => {\n        const parentModel = rootComponent.doc.getParent(model);\n        if (!parentModel) {\n          return;\n        }\n        const index = parentModel.children.indexOf(model) + 1;\n        await toggleEmbedCardCreateModal(\n          rootComponent.host,\n          'Figma',\n          'The added Figma link will be displayed as an embed view.',\n          { mode: 'page', parentModel, index }\n        );\n        tryRemoveEmptyLine(model);\n      },\n    },\n\n    {\n      name: 'Loom',\n      icon: LoomIcon,\n      showWhen: ({ model }) =>\n        model.doc.schema.flavourSchemaMap.has('affine:embed-loom') &&\n        !insideDatabase(model),\n      action: async ({ rootComponent, model }) => {\n        const parentModel = rootComponent.doc.getParent(model);\n        if (!parentModel) {\n          return;\n        }\n        const index = parentModel.children.indexOf(model) + 1;\n        await toggleEmbedCardCreateModal(\n          rootComponent.host,\n          'Loom',\n          'The added Loom video link will be displayed as an embed view.',\n          { mode: 'page', parentModel, index }\n        );\n        tryRemoveEmptyLine(model);\n      },\n    },\n\n    {\n      name: 'Equation',\n      description: 'Create a equation block.',\n      icon: TeXIcon({\n        width: '20',\n        height: '20',\n      }),\n      alias: ['mathBlock, equationBlock', 'latexBlock'],\n      action: ({ rootComponent, model }) => {\n        const doc = rootComponent.doc;\n        const parent = doc.getParent(model);\n        if (!parent) return;\n\n        const index = parent.children.indexOf(model);\n        if (index === -1) return;\n\n        const id = doc.addBlock(\n          'affine:latex',\n          {\n            latex: '',\n          },\n          parent,\n          index + 1\n        );\n        rootComponent.host.updateComplete\n          .then(async () => {\n            const blockComponent = rootComponent.std.view.getBlock(id);\n            if (!(blockComponent instanceof LatexBlockComponent)) return;\n\n            await blockComponent.updateComplete;\n\n            blockComponent.toggleEditor();\n          })\n          .catch(console.error);\n      },\n    },\n\n    // TODO-slash: Linear\n\n    // TODO-slash: Group & Frame explorer\n\n    // ---------------------------------------------------------\n    ({ model, rootComponent }) => {\n      const { doc } = rootComponent;\n\n      const surfaceModel = getSurfaceBlock(doc);\n      if (!surfaceModel) return [];\n\n      const parent = doc.getParent(model);\n      if (!parent) return [];\n\n      const frameModels = doc\n        .getBlocksByFlavour('affine:frame')\n        .map(block => block.model) as FrameBlockModel[];\n      const frameItems = frameModels.map<SlashMenuActionItem>(frameModel => ({\n        name: 'Frame: ' + frameModel.title,\n        icon: FrameIcon,\n        showWhen: () => !insideDatabase(model),\n        action: () => {\n          const insertIdx = parent.children.indexOf(model);\n          const surfaceRefProps = {\n            flavour: 'affine:surface-ref',\n            reference: frameModel.id,\n            refFlavour: 'affine:frame',\n          };\n\n          doc.addSiblingBlocks(\n            model,\n            [surfaceRefProps],\n            insertIdx === 0 ? 'before' : 'after'\n          );\n\n          if (\n            matchFlavours(model, ['affine:paragraph', 'affine:list']) &&\n            model.text.length === 0\n          ) {\n            doc.deleteBlock(model);\n          }\n        },\n      }));\n\n      const groupElements = Array.from(\n        surfaceModel.elements.getValue()?.values() ?? []\n      ).filter(element => element.get('type') === CanvasElementType.GROUP);\n\n      const groupItems = groupElements.map(element => ({\n        name: 'Group: ' + element.get('title'),\n        icon: GroupingIcon(),\n        action: () => {\n          const { doc } = rootComponent;\n          const insertIdx = parent.children.indexOf(model);\n          const surfaceRefProps = {\n            flavour: 'affine:surface-ref',\n            reference: element.get('id'),\n            refFlavour: 'group',\n          };\n\n          doc.addSiblingBlocks(\n            model,\n            [surfaceRefProps],\n            insertIdx === 0 ? 'before' : 'after'\n          );\n\n          if (\n            matchFlavours(model, ['affine:paragraph', 'affine:list']) &&\n            model.text.length === 0\n          ) {\n            doc.deleteBlock(model);\n          }\n        },\n      }));\n\n      const items = [...frameItems, ...groupItems];\n      if (items.length !== 0) {\n        return [\n          {\n            groupName: 'Document Group & Frame',\n          },\n          ...items,\n        ];\n      } else {\n        return [];\n      }\n    },\n\n    // ---------------------------------------------------------\n    { groupName: 'Date' },\n    () => {\n      const now = new Date();\n      const tomorrow = new Date();\n      const yesterday = new Date();\n\n      yesterday.setDate(yesterday.getDate() - 1);\n      tomorrow.setDate(tomorrow.getDate() + 1);\n\n      return [\n        {\n          name: 'Today',\n          icon: TodayIcon,\n          tooltip: slashMenuToolTips['Today'],\n          description: formatDate(now),\n          action: ({ rootComponent, model }) => {\n            insertContent(rootComponent.host, model, formatDate(now));\n          },\n        },\n        {\n          name: 'Tomorrow',\n          icon: TomorrowIcon,\n          tooltip: slashMenuToolTips['Tomorrow'],\n          description: formatDate(tomorrow),\n          action: ({ rootComponent, model }) => {\n            const tomorrow = new Date();\n            tomorrow.setDate(tomorrow.getDate() + 1);\n            insertContent(rootComponent.host, model, formatDate(tomorrow));\n          },\n        },\n        {\n          name: 'Yesterday',\n          icon: YesterdayIcon,\n          tooltip: slashMenuToolTips['Yesterday'],\n          description: formatDate(yesterday),\n          action: ({ rootComponent, model }) => {\n            const yesterday = new Date();\n            yesterday.setDate(yesterday.getDate() - 1);\n            insertContent(rootComponent.host, model, formatDate(yesterday));\n          },\n        },\n        {\n          name: 'Now',\n          icon: NowIcon,\n          tooltip: slashMenuToolTips['Now'],\n          description: formatTime(now),\n          action: ({ rootComponent, model }) => {\n            insertContent(rootComponent.host, model, formatTime(now));\n          },\n        },\n      ];\n    },\n\n    // ---------------------------------------------------------\n    { groupName: 'Database' },\n    {\n      name: 'Table View',\n      description: 'Display items in a table format.',\n      alias: ['database'],\n      icon: DatabaseTableViewIcon20,\n      tooltip: slashMenuToolTips['Table View'],\n      showWhen: ({ model }) =>\n        model.doc.schema.flavourSchemaMap.has('affine:database') &&\n        !insideDatabase(model) &&\n        !insideEdgelessText(model),\n      action: ({ rootComponent, model }) => {\n        const id = createDatabaseBlockInNextLine(model);\n        if (!id) {\n          return;\n        }\n        const service = rootComponent.std.getService('affine:database');\n        service.initDatabaseBlock(\n          rootComponent.doc,\n          model,\n          id,\n          viewPresets.tableViewConfig,\n          false\n        );\n        tryRemoveEmptyLine(model);\n      },\n    },\n    {\n      name: 'Todo',\n      alias: ['todo view'],\n      icon: DatabaseTableViewIcon20,\n      tooltip: slashMenuToolTips['Todo'],\n      showWhen: ({ model }) =>\n        model.doc.schema.flavourSchemaMap.has('affine:database') &&\n        !insideDatabase(model) &&\n        !insideEdgelessText(model) &&\n        !!model.doc.awarenessStore.getFlag('enable_block_query'),\n\n      action: ({ model, rootComponent }) => {\n        const parent = rootComponent.doc.getParent(model);\n        if (!parent) return;\n        const index = parent.children.indexOf(model);\n        const id = rootComponent.doc.addBlock(\n          'affine:data-view',\n          {},\n          rootComponent.doc.getParent(model),\n          index + 1\n        );\n        const dataViewModel = rootComponent.doc.getBlock(id)!;\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        Promise.resolve().then(() => {\n          const dataView = rootComponent.std.view.getBlock(\n            dataViewModel.id\n          ) as DataViewBlockComponent | null;\n          dataView?.dataSource.viewDataAdd('table');\n        });\n        tryRemoveEmptyLine(model);\n      },\n    },\n    {\n      name: 'Kanban View',\n      description: 'Visualize data in a dashboard.',\n      alias: ['database'],\n      icon: DatabaseKanbanViewIcon20,\n      tooltip: slashMenuToolTips['Kanban View'],\n      showWhen: ({ model }) =>\n        model.doc.schema.flavourSchemaMap.has('affine:database') &&\n        !insideDatabase(model) &&\n        !insideEdgelessText(model),\n      action: ({ model, rootComponent }) => {\n        const id = createDatabaseBlockInNextLine(model);\n        if (!id) {\n          return;\n        }\n        const service = rootComponent.std.getService('affine:database');\n        service.initDatabaseBlock(\n          rootComponent.doc,\n          model,\n          id,\n          viewPresets.kanbanViewConfig,\n          false\n        );\n        tryRemoveEmptyLine(model);\n      },\n    },\n\n    // ---------------------------------------------------------\n    { groupName: 'Actions' },\n    {\n      name: 'Move Up',\n      description: 'Shift this line up.',\n      icon: ArrowUpBigIcon,\n      tooltip: slashMenuToolTips['Move Up'],\n      action: ({ rootComponent, model }) => {\n        const doc = rootComponent.doc;\n        const previousSiblingModel = doc.getPrev(model);\n        if (!previousSiblingModel) return;\n\n        const parentModel = doc.getParent(previousSiblingModel);\n        if (!parentModel) return;\n\n        doc.moveBlocks([model], parentModel, previousSiblingModel, true);\n      },\n    },\n    {\n      name: 'Move Down',\n      description: 'Shift this line down.',\n      icon: ArrowDownBigIcon,\n      tooltip: slashMenuToolTips['Move Down'],\n      action: ({ rootComponent, model }) => {\n        const doc = rootComponent.doc;\n        const nextSiblingModel = doc.getNext(model);\n        if (!nextSiblingModel) return;\n\n        const parentModel = doc.getParent(nextSiblingModel);\n        if (!parentModel) return;\n\n        doc.moveBlocks([model], parentModel, nextSiblingModel, false);\n      },\n    },\n    {\n      name: 'Copy',\n      description: 'Copy this line to clipboard.',\n      icon: PasteIcon,\n      tooltip: slashMenuToolTips['Copy'],\n      action: ({ rootComponent, model }) => {\n        const slice = Slice.fromModels(rootComponent.std.doc, [model]);\n\n        rootComponent.std.clipboard\n          .copy(slice)\n          .then(() => {\n            toast(rootComponent.host, 'Copied to clipboard');\n          })\n          .catch(e => {\n            console.error(e);\n          });\n      },\n    },\n    {\n      name: 'Duplicate',\n      description: 'Create a duplicate of this line.',\n      icon: CopyIcon,\n      tooltip: slashMenuToolTips['Copy'],\n      action: ({ rootComponent, model }) => {\n        if (!model.text || !(model.text instanceof Text)) {\n          console.error(\"Can't duplicate a block without text\");\n          return;\n        }\n        const parent = rootComponent.doc.getParent(model);\n        if (!parent) {\n          console.error(\n            'Failed to duplicate block! Parent not found: ' +\n              model.id +\n              '|' +\n              model.flavour\n          );\n          return;\n        }\n        const index = parent.children.indexOf(model);\n\n        // TODO add clone model util\n        rootComponent.doc.addBlock(\n          model.flavour as never,\n          {\n            type: (model as ParagraphBlockModel).type,\n            text: rootComponent.doc.Text.fromDelta(model.text.toDelta()),\n            // @ts-expect-error\n            checked: model.checked,\n          },\n          rootComponent.doc.getParent(model),\n          index\n        );\n      },\n    },\n    {\n      name: 'Delete',\n      description: 'Remove this line permanently.',\n      alias: ['remove'],\n      icon: DeleteIcon,\n      tooltip: slashMenuToolTips['Delete'],\n      action: ({ rootComponent, model }) => {\n        rootComponent.doc.deleteBlock(model);\n      },\n    },\n  ],\n};\n"]}