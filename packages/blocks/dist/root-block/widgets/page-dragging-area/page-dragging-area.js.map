{"version":3,"file":"page-dragging-area.js","sourceRoot":"","sources":["../../../../src/root-block/widgets/page-dragging-area/page-dragging-area.ts"],"names":[],"mappings":"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","sourcesContent":["import type { RootBlockModel } from '@lumensuite/affine-model';\n\nimport {\n  getScrollContainer,\n  matchFlavours,\n} from '@lumensuite/affine-shared/utils';\nimport { BLOCK_ID_ATTR, type PointerEventState } from '@lumensuite/block-std';\nimport { BlockComponent, WidgetComponent } from '@lumensuite/block-std';\nimport { assertInstanceOf } from '@lumensuite/global/utils';\nimport { html, nothing } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\n\nimport type { PageRootBlockComponent } from '../../index.js';\n\nimport { autoScroll } from '../../text-selection/utils.js';\n\ntype Rect = {\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n};\n\ntype BlockInfo = {\n  element: BlockComponent;\n  rect: Rect;\n};\n\nexport const AFFINE_PAGE_DRAGGING_AREA_WIDGET =\n  'affine-page-dragging-area-widget';\n\n@customElement(AFFINE_PAGE_DRAGGING_AREA_WIDGET)\nexport class AffinePageDraggingAreaWidget extends WidgetComponent<\n  RootBlockModel,\n  PageRootBlockComponent\n> {\n  static excludeFlavours: string[] = ['affine:note', 'affine:surface'];\n\n  private _dragging = false;\n\n  private _initialContainerOffset: {\n    x: number;\n    y: number;\n  } = {\n    x: 0,\n    y: 0,\n  };\n\n  private _initialScrollOffset: {\n    top: number;\n    left: number;\n  } = {\n    top: 0,\n    left: 0,\n  };\n\n  private _lastPointerState: PointerEventState | null = null;\n\n  private _rafID = 0;\n\n  private _updateDraggingArea = (\n    state: PointerEventState,\n    shouldAutoScroll: boolean\n  ) => {\n    const { x, y } = state;\n    const { x: startX, y: startY } = state.start;\n\n    const { left: initScrollX, top: initScrollY } = this._initialScrollOffset;\n    if (!this._viewport) {\n      return;\n    }\n    const { scrollLeft, scrollTop, scrollWidth, scrollHeight } = this._viewport;\n\n    const { x: initConX, y: initConY } = this._initialContainerOffset;\n    const { x: conX, y: conY } = state.containerOffset;\n\n    const { left: viewportLeft, top: viewportTop } = this._viewport;\n    let left = Math.min(\n      startX + initScrollX + initConX - viewportLeft,\n      x + scrollLeft + conX - viewportLeft\n    );\n    let right = Math.max(\n      startX + initScrollX + initConX - viewportLeft,\n      x + scrollLeft + conX - viewportLeft\n    );\n    let top = Math.min(\n      startY + initScrollY + initConY - viewportTop,\n      y + scrollTop + conY - viewportTop\n    );\n    let bottom = Math.max(\n      startY + initScrollY + initConY - viewportTop,\n      y + scrollTop + conY - viewportTop\n    );\n\n    left = Math.max(left, conX - viewportLeft);\n    right = Math.min(right, scrollWidth);\n    top = Math.max(top, conY - viewportTop);\n    bottom = Math.min(bottom, scrollHeight);\n\n    const userRect = {\n      left,\n      top,\n      width: right - left,\n      height: bottom - top,\n    };\n    this.rect = userRect;\n    this._selectBlocksByRect({\n      left: userRect.left + viewportLeft,\n      top: userRect.top + viewportTop,\n      width: userRect.width,\n      height: userRect.height,\n    });\n    this._lastPointerState = state;\n\n    if (shouldAutoScroll) {\n      const rect = this.scrollContainer.getBoundingClientRect();\n      const result = autoScroll(this.scrollContainer, state.raw.y - rect.top);\n      if (!result) {\n        this._clearRaf();\n        return;\n      }\n    }\n  };\n\n  private get _allBlocksWithRect(): BlockInfo[] {\n    if (!this._viewport) {\n      return [];\n    }\n    const { scrollLeft, scrollTop } = this._viewport;\n\n    const getAllNodeFromTree = (): BlockComponent[] => {\n      const blocks: BlockComponent[] = [];\n      this.host.view.walkThrough(node => {\n        const view = node;\n        if (!(view instanceof BlockComponent)) {\n          return true;\n        }\n        if (\n          view.model.role !== 'root' &&\n          !AffinePageDraggingAreaWidget.excludeFlavours.includes(\n            view.model.flavour\n          )\n        ) {\n          blocks.push(view);\n        }\n        return;\n      });\n      return blocks;\n    };\n\n    const elements = getAllNodeFromTree();\n\n    return elements.map(element => {\n      const bounding = element.getBoundingClientRect();\n      return {\n        element,\n        rect: {\n          left: bounding.left + scrollLeft,\n          top: bounding.top + scrollTop,\n          width: bounding.width,\n          height: bounding.height,\n        },\n      };\n    });\n  }\n\n  private get _viewport() {\n    const rootComponent = this.block;\n    if (!rootComponent) return;\n    return rootComponent.viewport;\n  }\n\n  private get scrollContainer() {\n    return getScrollContainer(this.block);\n  }\n\n  private _clearRaf() {\n    if (this._rafID) {\n      cancelAnimationFrame(this._rafID);\n      this._rafID = 0;\n    }\n  }\n\n  private _selectBlocksByRect(userRect: Rect) {\n    const selections = getSelectingBlockPaths(\n      this._allBlocksWithRect,\n      userRect\n    ).map(blockPath => {\n      return this.host.selection.create('block', {\n        blockId: blockPath,\n      });\n    });\n\n    this.host.selection.setGroup('note', selections);\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this.handleEvent(\n      'dragStart',\n      ctx => {\n        const state = ctx.get('pointerState');\n        const { button } = state.raw;\n        if (button !== 0) return;\n        if (isDragArea(state)) {\n          if (!this._viewport) {\n            return;\n          }\n          this._dragging = true;\n          const { scrollLeft, scrollTop } = this._viewport;\n          this._initialScrollOffset = {\n            left: scrollLeft,\n            top: scrollTop,\n          };\n          this._initialContainerOffset = {\n            x: state.containerOffset.x,\n            y: state.containerOffset.y,\n          };\n          return true;\n        }\n        return;\n      },\n      { global: true }\n    );\n\n    this.handleEvent(\n      'dragMove',\n      ctx => {\n        this._clearRaf();\n        if (!this._dragging) {\n          return;\n        }\n\n        const state = ctx.get('pointerState');\n        // TODO(@L-Sun) support drag area for touch device\n        if (state.raw.pointerType === 'touch') return;\n\n        ctx.get('defaultState').event.preventDefault();\n\n        this._rafID = requestAnimationFrame(() => {\n          this._updateDraggingArea(state, true);\n        });\n\n        return true;\n      },\n      { global: true }\n    );\n\n    this.handleEvent(\n      'dragEnd',\n      () => {\n        this._clearRaf();\n        this._dragging = false;\n        this.rect = null;\n        this._initialScrollOffset = {\n          top: 0,\n          left: 0,\n        };\n        this._initialContainerOffset = {\n          x: 0,\n          y: 0,\n        };\n        this._lastPointerState = null;\n      },\n      {\n        global: true,\n      }\n    );\n\n    this.handleEvent(\n      'pointerMove',\n      ctx => {\n        if (this._dragging) {\n          const state = ctx.get('pointerState');\n          state.raw.preventDefault();\n        }\n      },\n      {\n        global: true,\n      }\n    );\n  }\n\n  override disconnectedCallback() {\n    this._clearRaf();\n    this._disposables.dispose();\n    super.disconnectedCallback();\n  }\n\n  override firstUpdated() {\n    this._disposables.addFromEvent(this.scrollContainer, 'scroll', () => {\n      if (!this._dragging || !this._lastPointerState) return;\n\n      const state = this._lastPointerState;\n      this._rafID = requestAnimationFrame(() => {\n        this._updateDraggingArea(state, false);\n      });\n    });\n  }\n\n  override render() {\n    const rect = this.rect;\n    if (!rect) return nothing;\n\n    const style = {\n      left: rect.left + 'px',\n      top: rect.top + 'px',\n      width: rect.width + 'px',\n      height: rect.height + 'px',\n    };\n    return html`\n      <style>\n        .affine-page-dragging-area {\n          position: absolute;\n          background: var(--affine-hover-color);\n          z-index: 1;\n          pointer-events: none;\n        }\n      </style>\n      <div class=\"affine-page-dragging-area\" style=${styleMap(style)}></div>\n    `;\n  }\n\n  @state()\n  accessor rect: Rect | null = null;\n}\n\nfunction rectIntersects(a: Rect, b: Rect) {\n  return (\n    a.left < b.left + b.width &&\n    a.left + a.width > b.left &&\n    a.top < b.top + b.height &&\n    a.top + a.height > b.top\n  );\n}\n\nfunction rectIncludesTopAndBottom(a: Rect, b: Rect) {\n  return a.top <= b.top && a.top + a.height >= b.top + b.height;\n}\n\nfunction filterBlockInfos(blockInfos: BlockInfo[], userRect: Rect) {\n  const results: BlockInfo[] = [];\n  for (const blockInfo of blockInfos) {\n    const rect = blockInfo.rect;\n    if (userRect.top + userRect.height < rect.top) break;\n\n    results.push(blockInfo);\n  }\n\n  return results;\n}\n\nfunction filterBlockInfosByParent(\n  parentInfos: BlockInfo,\n  userRect: Rect,\n  filteredBlockInfos: BlockInfo[]\n) {\n  const targetBlock = parentInfos.element;\n  let results = [parentInfos];\n  if (targetBlock.childElementCount > 0) {\n    const childBlockInfos = targetBlock.childBlocks\n      .map(el =>\n        filteredBlockInfos.find(\n          blockInfo => blockInfo.element.model.id === el.model.id\n        )\n      )\n      .filter(block => block) as BlockInfo[];\n    const firstIndex = childBlockInfos.findIndex(\n      bl => rectIntersects(bl.rect, userRect) && bl.rect.top < userRect.top\n    );\n    const lastIndex = childBlockInfos.findIndex(\n      bl =>\n        rectIntersects(bl.rect, userRect) &&\n        bl.rect.top + bl.rect.height > userRect.top + userRect.height\n    );\n\n    if (firstIndex !== -1 && lastIndex !== -1) {\n      results = childBlockInfos.slice(firstIndex, lastIndex + 1);\n    }\n  }\n\n  return results;\n}\n\nfunction getSelectingBlockPaths(blockInfos: BlockInfo[], userRect: Rect) {\n  const filteredBlockInfos = filterBlockInfos(blockInfos, userRect);\n  const len = filteredBlockInfos.length;\n  const blockPaths: string[] = [];\n  let singleTargetParentBlock: BlockInfo | null = null;\n  let blocks: BlockInfo[] = [];\n  if (len === 0) return blockPaths;\n\n  // To get the single target parent block info\n  for (const block of filteredBlockInfos) {\n    const rect = block.rect;\n\n    if (\n      rectIntersects(userRect, rect) &&\n      rectIncludesTopAndBottom(rect, userRect)\n    ) {\n      singleTargetParentBlock = block;\n    }\n  }\n\n  if (singleTargetParentBlock) {\n    blocks = filterBlockInfosByParent(\n      singleTargetParentBlock,\n      userRect,\n      filteredBlockInfos\n    );\n  } else {\n    // If there is no block contains the top and bottom of the userRect\n    // Then get all the blocks that intersect with the userRect\n    for (const block of filteredBlockInfos) {\n      if (rectIntersects(userRect, block.rect)) {\n        blocks.push(block);\n      }\n    }\n  }\n\n  // Filter out the blocks which parent is in the blocks\n  for (let i = 0; i < blocks.length; i++) {\n    const block = blocks[i];\n    const parent = blocks[i].element.doc.getParent(block.element.model);\n    const parentId = parent?.id;\n    if (parentId) {\n      const isParentInBlocks = blocks.some(\n        block => block.element.model.id === parentId\n      );\n      if (!isParentInBlocks) {\n        blockPaths.push(blocks[i].element.blockId);\n      }\n    }\n  }\n\n  return blockPaths;\n}\n\nfunction isDragArea(e: PointerEventState) {\n  const el = e.raw.target;\n  assertInstanceOf(el, Element);\n  const block = el.closest<BlockComponent>(`[${BLOCK_ID_ATTR}]`);\n  return block && matchFlavours(block.model, ['affine:page', 'affine:note']);\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    [AFFINE_PAGE_DRAGGING_AREA_WIDGET]: AffinePageDraggingAreaWidget;\n  }\n}\n"]}