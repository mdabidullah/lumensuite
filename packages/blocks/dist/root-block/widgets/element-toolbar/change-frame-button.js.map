{"version":3,"file":"change-frame-button.js","sourceRoot":"","sources":["../../../../src/root-block/widgets/element-toolbar/change-frame-button.ts"],"names":[],"mappings":"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","sourcesContent":["import { NoteIcon, RenameIcon } from '@lumensuite/affine-components/icons';\nimport { toast } from '@lumensuite/affine-components/toast';\nimport { renderToolbarSeparator } from '@lumensuite/affine-components/toolbar';\nimport {\n  type ColorScheme,\n  type FrameBlockModel,\n  NoteDisplayMode,\n} from '@lumensuite/affine-model';\nimport { matchFlavours } from '@lumensuite/affine-shared/utils';\nimport { WithDisposable } from '@lumensuite/block-std';\nimport {\n  countBy,\n  deserializeXYWH,\n  maxBy,\n  serializeXYWH,\n} from '@lumensuite/global/utils';\nimport { html, LitElement, nothing } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\nimport { join } from 'lit/directives/join.js';\nimport { when } from 'lit/directives/when.js';\n\nimport type { EdgelessColorPickerButton } from '../../edgeless/components/color-picker/button.js';\nimport type { PickColorEvent } from '../../edgeless/components/color-picker/types.js';\nimport type { ColorEvent } from '../../edgeless/components/panel/color-panel.js';\nimport type { EdgelessRootBlockComponent } from '../../edgeless/edgeless-root-block.js';\n\nimport {\n  packColor,\n  packColorsWithColorScheme,\n} from '../../edgeless/components/color-picker/utils.js';\nimport { DEFAULT_NOTE_HEIGHT } from '../../edgeless/utils/consts.js';\nimport { mountFrameTitleEditor } from '../../edgeless/utils/text.js';\n\nconst FRAME_BACKGROUND = [\n  '--affine-tag-gray',\n  '--affine-tag-red',\n  '--affine-tag-orange',\n  '--affine-tag-yellow',\n  '--affine-tag-green',\n  '--affine-tag-teal',\n  '--affine-tag-blue',\n  '--affine-tag-purple',\n  '--affine-tag-pink',\n] as const;\n\nfunction getMostCommonColor(\n  elements: FrameBlockModel[],\n  colorScheme: ColorScheme\n): string | null {\n  const colors = countBy(elements, (ele: FrameBlockModel) => {\n    return typeof ele.background === 'object'\n      ? (ele.background[colorScheme] ?? ele.background.normal ?? null)\n      : ele.background;\n  });\n  const max = maxBy(Object.entries(colors), ([_k, count]) => count);\n  return max ? (max[0] as string) : null;\n}\n\n@customElement('edgeless-change-frame-button')\nexport class EdgelessChangeFrameButton extends WithDisposable(LitElement) {\n  pickColor = (event: PickColorEvent) => {\n    if (event.type === 'pick') {\n      this.frames.forEach(ele =>\n        this.service.updateElement(\n          ele.id,\n          packColor('background', { ...event.detail })\n        )\n      );\n      return;\n    }\n\n    this.frames.forEach(ele =>\n      ele[event.type === 'start' ? 'stash' : 'pop']('background')\n    );\n  };\n\n  get service() {\n    return this.edgeless.service;\n  }\n\n  private _insertIntoPage() {\n    if (!this.edgeless.doc.root) return;\n\n    const rootModel = this.edgeless.doc.root;\n    const notes = rootModel.children.filter(\n      model =>\n        matchFlavours(model, ['affine:note']) &&\n        model.displayMode !== NoteDisplayMode.EdgelessOnly\n    );\n    const lastNote = notes[notes.length - 1];\n    const referenceFrame = this.frames[0];\n\n    let targetParent = lastNote?.id;\n\n    if (!lastNote) {\n      const targetXYWH = deserializeXYWH(referenceFrame.xywh);\n\n      targetXYWH[1] = targetXYWH[1] + targetXYWH[3];\n      targetXYWH[3] = DEFAULT_NOTE_HEIGHT;\n\n      const newAddedNote = this.edgeless.doc.addBlock(\n        'affine:note',\n        {\n          xywh: serializeXYWH(...targetXYWH),\n        },\n        rootModel.id\n      );\n\n      targetParent = newAddedNote;\n    }\n\n    this.edgeless.doc.addBlock(\n      'affine:surface-ref',\n      {\n        reference: this.frames[0].id,\n        refFlavour: 'affine:frame',\n      },\n      targetParent\n    );\n\n    toast(this.edgeless.host, 'Frame has been inserted into doc');\n  }\n\n  private _setFrameBackground(color: string) {\n    this.frames.forEach(frame => {\n      this.service.updateElement(frame.id, { background: color });\n    });\n  }\n\n  protected override render() {\n    const { frames } = this;\n    const len = frames.length;\n    const onlyOne = len === 1;\n    const colorScheme = this.edgeless.surface.renderer.getColorScheme();\n    const background =\n      getMostCommonColor(frames, colorScheme) ?? '--affine-palette-transparent';\n\n    return join(\n      [\n        onlyOne\n          ? html`\n              <editor-icon-button\n                aria-label=${'Insert into Page'}\n                .tooltip=${'Insert into Page'}\n                .iconSize=${'20px'}\n                .labelHeight=${'20px'}\n                @click=${this._insertIntoPage}\n              >\n                ${NoteIcon}\n                <span class=\"label\">Insert into Page</span>\n              </editor-icon-button>\n            `\n          : nothing,\n\n        onlyOne\n          ? html`\n              <editor-icon-button\n                aria-label=\"Rename\"\n                .tooltip=${'Rename'}\n                .iconSize=${'20px'}\n                @click=${() =>\n                  mountFrameTitleEditor(this.frames[0], this.edgeless)}\n              >\n                ${RenameIcon}\n              </editor-icon-button>\n            `\n          : nothing,\n\n        when(\n          this.edgeless.doc.awarenessStore.getFlag('enable_color_picker'),\n          () => {\n            const { type, colors } = packColorsWithColorScheme(\n              colorScheme,\n              background,\n              this.frames[0].background\n            );\n\n            return html`\n              <edgeless-color-picker-button\n                class=\"background\"\n                .label=${'Background'}\n                .pick=${this.pickColor}\n                .color=${background}\n                .colors=${colors}\n                .colorType=${type}\n                .palettes=${FRAME_BACKGROUND}\n              >\n              </edgeless-color-picker-button>\n            `;\n          },\n          () => html`\n            <editor-menu-button\n              .contentPadding=${'8px'}\n              .button=${html`\n                <editor-icon-button\n                  aria-label=\"Background\"\n                  .tooltip=${'Background'}\n                >\n                  <edgeless-color-button\n                    .color=${background}\n                  ></edgeless-color-button>\n                </editor-icon-button>\n              `}\n            >\n              <edgeless-color-panel\n                .value=${background}\n                .options=${FRAME_BACKGROUND}\n                @select=${(e: ColorEvent) => this._setFrameBackground(e.detail)}\n              >\n              </edgeless-color-panel>\n            </editor-menu-button>\n          `\n        ),\n      ].filter(button => button !== nothing),\n      renderToolbarSeparator\n    );\n  }\n\n  @query('edgeless-color-picker-button.background')\n  accessor backgroundButton!: EdgelessColorPickerButton;\n\n  @property({ attribute: false })\n  accessor edgeless!: EdgelessRootBlockComponent;\n\n  @property({ attribute: false })\n  accessor frames: FrameBlockModel[] = [];\n}\n\nexport function renderFrameButton(\n  edgeless: EdgelessRootBlockComponent,\n  frames?: FrameBlockModel[]\n) {\n  if (!frames?.length) return nothing;\n\n  return html`\n    <edgeless-change-frame-button\n      .edgeless=${edgeless}\n      .frames=${frames}\n    ></edgeless-change-frame-button>\n  `;\n}\n"]}