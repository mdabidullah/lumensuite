{"version":3,"file":"change-note-button.js","sourceRoot":"","sources":["../../../../src/root-block/widgets/element-toolbar/change-note-button.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ExpandIcon,\n  LineStyleIcon,\n  NoteCornerIcon,\n  NoteShadowIcon,\n  ScissorsIcon,\n  ShrinkIcon,\n  SmallArrowDownIcon,\n} from '@lumensuite/affine-components/icons';\nimport {\n  type EditorMenuButton,\n  renderToolbarSeparator,\n} from '@lumensuite/affine-components/toolbar';\nimport {\n  type ColorScheme,\n  DEFAULT_NOTE_BACKGROUND_COLOR,\n  NOTE_BACKGROUND_COLORS,\n  type NoteBlockModel,\n  NoteDisplayMode,\n  type StrokeStyle,\n} from '@lumensuite/affine-model';\nimport { matchFlavours } from '@lumensuite/affine-shared/utils';\nimport { WithDisposable } from '@lumensuite/block-std';\nimport { assertExists, Bound, countBy, maxBy } from '@lumensuite/global/utils';\nimport { html, LitElement, nothing, type TemplateResult } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\nimport { join } from 'lit/directives/join.js';\nimport { createRef, type Ref, ref } from 'lit/directives/ref.js';\nimport { when } from 'lit/directives/when.js';\n\nimport type {\n  EdgelessColorPickerButton,\n  PickColorEvent,\n} from '../../edgeless/components/color-picker/index.js';\nimport type { ColorEvent } from '../../edgeless/components/panel/color-panel.js';\nimport type { EdgelessRootBlockComponent } from '../../edgeless/edgeless-root-block.js';\n\nimport '../../edgeless/components/color-picker/index.js';\nimport {\n  packColor,\n  packColorsWithColorScheme,\n} from '../../edgeless/components/color-picker/utils.js';\nimport '../../edgeless/components/panel/color-panel.js';\nimport {\n  type LineStyleEvent,\n  LineStylesPanel,\n} from '../../edgeless/components/panel/line-styles-panel.js';\nimport '../../edgeless/components/panel/note-display-mode-panel.js';\nimport '../../edgeless/components/panel/note-shadow-panel.js';\nimport '../../edgeless/components/panel/scale-panel.js';\nimport '../../edgeless/components/panel/size-panel.js';\nimport { getTooltipWithShortcut } from '../../edgeless/components/utils.js';\n\nconst SIZE_LIST = [\n  { name: 'None', value: 0 },\n  { name: 'Small', value: 8 },\n  { name: 'Medium', value: 16 },\n  { name: 'Large', value: 24 },\n  { name: 'Huge', value: 32 },\n] as const;\n\nconst DisplayModeMap = {\n  [NoteDisplayMode.DocAndEdgeless]: 'Both',\n  [NoteDisplayMode.EdgelessOnly]: 'Edgeless',\n  [NoteDisplayMode.DocOnly]: 'Page',\n} as const satisfies Record<NoteDisplayMode, string>;\n\nfunction getMostCommonBackground(\n  elements: NoteBlockModel[],\n  colorScheme: ColorScheme\n): string | null {\n  const colors = countBy(elements, (ele: NoteBlockModel) => {\n    return typeof ele.background === 'object'\n      ? (ele.background[colorScheme] ?? ele.background.normal ?? null)\n      : ele.background;\n  });\n  const max = maxBy(Object.entries(colors), ([_k, count]) => count);\n  return max ? (max[0] as string) : null;\n}\n\n@customElement('edgeless-change-note-button')\nexport class EdgelessChangeNoteButton extends WithDisposable(LitElement) {\n  private _setBorderRadius = (size: number) => {\n    this.notes.forEach(note => {\n      this.doc.updateBlock(note, () => {\n        note.edgeless.style.borderRadius = size;\n      });\n    });\n  };\n\n  private _setNoteScale = (scale: number) => {\n    this.notes.forEach(note => {\n      this.doc.updateBlock(note, () => {\n        const bound = Bound.deserialize(note.xywh);\n        const oldScale = note.edgeless.scale ?? 1;\n        const ratio = scale / oldScale;\n        bound.w *= ratio;\n        bound.h *= ratio;\n        const xywh = bound.serialize();\n        note.xywh = xywh;\n        note.edgeless.scale = scale;\n      });\n    });\n  };\n\n  pickColor = (event: PickColorEvent) => {\n    if (event.type === 'pick') {\n      this.notes.forEach(ele =>\n        this.doc.updateBlock(ele, packColor('background', { ...event.detail }))\n      );\n      this.edgeless.service.editPropsStore.recordLastProps(\n        'affine:note',\n        packColor('background', event.detail)\n      );\n      return;\n    }\n\n    this.notes.forEach(ele =>\n      ele[event.type === 'start' ? 'stash' : 'pop']('background')\n    );\n  };\n\n  private get doc() {\n    return this.edgeless.doc;\n  }\n\n  private _getScaleLabel(scale: number) {\n    return Math.round(scale * 100) + '%';\n  }\n\n  private _handleNoteSlicerButtonClick() {\n    const surfaceService = this.edgeless.service;\n    if (!surfaceService) return;\n\n    this.edgeless.slots.toggleNoteSlicer.emit();\n  }\n\n  private _setBackground(background: string) {\n    this.notes.forEach(note => {\n      this.doc.updateBlock(note, { background });\n    });\n    this.edgeless.service.editPropsStore.recordLastProps('affine:note', {\n      background,\n    } as Record<string, unknown>);\n  }\n\n  private _setCollapse() {\n    this.notes.forEach(note => {\n      const { collapse, collapsedHeight } = note.edgeless;\n\n      if (collapse) {\n        this.doc.updateBlock(note, () => {\n          note.edgeless.collapse = false;\n        });\n      } else if (collapsedHeight) {\n        const { xywh, edgeless } = note;\n        const bound = Bound.deserialize(xywh);\n        bound.h = collapsedHeight * (edgeless.scale ?? 1);\n        this.doc.updateBlock(note, () => {\n          note.edgeless.collapse = true;\n          note.xywh = bound.serialize();\n        });\n      }\n    });\n    this.requestUpdate();\n  }\n\n  private _setDisplayMode(note: NoteBlockModel, newMode: NoteDisplayMode) {\n    const { displayMode: currentMode } = note;\n    if (newMode === currentMode) {\n      return;\n    }\n\n    this.doc.updateBlock(note, { displayMode: newMode });\n\n    const noteParent = this.doc.getParent(note);\n    assertExists(noteParent);\n    const noteParentChildNotes = noteParent.children.filter(block =>\n      matchFlavours(block, ['affine:note'])\n    ) as NoteBlockModel[];\n    const noteParentLastNote =\n      noteParentChildNotes[noteParentChildNotes.length - 1];\n\n    if (\n      currentMode === NoteDisplayMode.EdgelessOnly &&\n      newMode !== NoteDisplayMode.EdgelessOnly &&\n      note !== noteParentLastNote\n    ) {\n      // move to the end\n      this.doc.moveBlocks([note], noteParent, noteParentLastNote, false);\n    }\n\n    // if change note to page only, should clear the selection\n    if (newMode === NoteDisplayMode.DocOnly) {\n      this.edgeless.service.selection.clear();\n    }\n  }\n\n  private _setShadowType(shadowType: string) {\n    this.notes.forEach(note => {\n      this.doc.updateBlock(note, () => {\n        note.edgeless.style.shadowType = shadowType;\n      });\n    });\n  }\n\n  private _setStrokeStyle(borderStyle: StrokeStyle) {\n    this.notes.forEach(note => {\n      this.doc.updateBlock(note, () => {\n        note.edgeless.style.borderStyle = borderStyle;\n      });\n    });\n  }\n\n  private _setStrokeWidth(borderSize: number) {\n    this.notes.forEach(note => {\n      this.doc.updateBlock(note, () => {\n        note.edgeless.style.borderSize = borderSize;\n      });\n    });\n  }\n\n  private _setStyles({ type, value }: LineStyleEvent) {\n    if (type === 'size') {\n      this._setStrokeWidth(value);\n      return;\n    }\n    if (type === 'lineStyle') {\n      this._setStrokeStyle(value);\n    }\n  }\n\n  override render() {\n    const len = this.notes.length;\n    const note = this.notes[0];\n    const { edgeless, displayMode } = note;\n    const { shadowType, borderRadius, borderSize, borderStyle } =\n      edgeless.style;\n    const colorScheme = this.edgeless.surface.renderer.getColorScheme();\n    const background =\n      getMostCommonBackground(this.notes, colorScheme) ??\n      DEFAULT_NOTE_BACKGROUND_COLOR;\n\n    const { collapse } = edgeless;\n    const scale = edgeless.scale ?? 1;\n    const currentMode = DisplayModeMap[displayMode];\n    const onlyOne = len === 1;\n    const isDocOnly = displayMode === NoteDisplayMode.DocOnly;\n\n    const buttons = [\n      onlyOne\n        ? html`\n            <span class=\"display-mode-button-label\">Show in</span>\n            <editor-menu-button\n              .contentPadding=${'8px'}\n              .button=${html`\n                <editor-icon-button\n                  aria-label=\"Mode\"\n                  .tooltip=${'Display mode'}\n                  .justify=${'space-between'}\n                  .labelHeight=${'20px'}\n                >\n                  <span class=\"label\">${currentMode}</span>\n                  ${SmallArrowDownIcon}\n                </editor-icon-button>\n              `}\n            >\n              <note-display-mode-panel\n                .displayMode=${displayMode}\n                .onSelect=${(newMode: NoteDisplayMode) =>\n                  this._setDisplayMode(note, newMode)}\n              >\n              </note-display-mode-panel>\n            </editor-menu-button>\n          `\n        : nothing,\n\n      isDocOnly\n        ? nothing\n        : when(\n            this.edgeless.doc.awarenessStore.getFlag('enable_color_picker'),\n            () => {\n              const { type, colors } = packColorsWithColorScheme(\n                colorScheme,\n                background,\n                note.background\n              );\n\n              return html`\n                <edgeless-color-picker-button\n                  class=\"background\"\n                  .label=${'Background'}\n                  .pick=${this.pickColor}\n                  .color=${background}\n                  .colorType=${type}\n                  .colors=${colors}\n                  .palettes=${NOTE_BACKGROUND_COLORS}\n                >\n                </edgeless-color-picker-button>\n              `;\n            },\n            () => html`\n              <editor-menu-button\n                .contentPadding=${'8px'}\n                .button=${html`\n                  <editor-icon-button\n                    aria-label=\"Background\"\n                    .tooltip=${'Background'}\n                  >\n                    <edgeless-color-button\n                      .color=${background}\n                    ></edgeless-color-button>\n                  </editor-icon-button>\n                `}\n              >\n                <edgeless-color-panel\n                  .value=${background}\n                  .options=${NOTE_BACKGROUND_COLORS}\n                  @select=${(e: ColorEvent) => this._setBackground(e.detail)}\n                >\n                </edgeless-color-panel>\n              </editor-menu-button>\n            `\n          ),\n\n      isDocOnly\n        ? nothing\n        : html`\n            <editor-menu-button\n              .contentPadding=${'6px'}\n              .button=${html`\n                <editor-icon-button\n                  aria-label=\"Shadow style\"\n                  .tooltip=${'Shadow style'}\n                >\n                  ${NoteShadowIcon}${SmallArrowDownIcon}\n                </editor-icon-button>\n              `}\n            >\n              <edgeless-note-shadow-panel\n                .value=${shadowType}\n                .background=${background}\n                .onSelect=${(value: string) => this._setShadowType(value)}\n              >\n              </edgeless-note-shadow-panel>\n            </editor-menu-button>\n\n            <editor-menu-button\n              .button=${html`\n                <editor-icon-button\n                  aria-label=\"Border style\"\n                  .tooltip=${'Border style'}\n                >\n                  ${LineStyleIcon}${SmallArrowDownIcon}\n                </editor-icon-button>\n              `}\n            >\n              <div data-orientation=\"horizontal\">\n                ${LineStylesPanel({\n                  selectedLineSize: borderSize,\n                  selectedLineStyle: borderStyle,\n                  onClick: event => this._setStyles(event),\n                })}\n              </div>\n            </editor-menu-button>\n\n            <editor-menu-button\n              ${ref(this._cornersPanelRef)}\n              .contentPadding=${'8px'}\n              .button=${html`\n                <editor-icon-button aria-label=\"Corners\" .tooltip=${'Corners'}>\n                  ${NoteCornerIcon}${SmallArrowDownIcon}\n                </editor-icon-button>\n              `}\n            >\n              <edgeless-size-panel\n                .size=${borderRadius}\n                .sizeList=${SIZE_LIST}\n                .minSize=${0}\n                .onSelect=${(size: number) => this._setBorderRadius(size)}\n                .onPopperCose=${() => this._cornersPanelRef.value?.hide()}\n              >\n              </edgeless-size-panel>\n            </editor-menu-button>\n          `,\n\n      onlyOne\n        ? html`\n            <editor-icon-button\n              aria-label=\"Slicer\"\n              .tooltip=${getTooltipWithShortcut('Cutting mode', '-')}\n              .active=${this.enableNoteSlicer}\n              @click=${() => this._handleNoteSlicerButtonClick()}\n            >\n              ${ScissorsIcon}\n            </editor-icon-button>\n          `\n        : nothing,\n\n      onlyOne ? this.quickConnectButton : nothing,\n\n      html`\n        <editor-icon-button\n          aria-label=\"Size\"\n          .tooltip=${collapse ? 'Auto height' : 'Customized height'}\n          @click=${() => this._setCollapse()}\n        >\n          ${collapse ? ExpandIcon : ShrinkIcon}\n        </editor-icon-button>\n\n        <editor-menu-button\n          ${ref(this._scalePanelRef)}\n          .contentPadding=${'8px'}\n          .button=${html`\n            <editor-icon-button\n              aria-label=\"Scale\"\n              .tooltip=${'Scale'}\n              .justify=${'space-between'}\n              .labelHeight=${'20px'}\n              .iconContainerWidth=${'65px'}\n            >\n              <span class=\"label\">${this._getScaleLabel(scale)}</span\n              >${SmallArrowDownIcon}\n            </editor-icon-button>\n          `}\n        >\n          <edgeless-scale-panel\n            .scale=${Math.round(scale * 100)}\n            .onSelect=${(scale: number) => this._setNoteScale(scale)}\n            .onPopperCose=${() => this._scalePanelRef.value?.hide()}\n          ></edgeless-scale-panel>\n        </editor-menu-button>\n      `,\n    ];\n\n    return join(\n      buttons.filter(button => button !== nothing),\n      renderToolbarSeparator\n    );\n  }\n\n  private accessor _cornersPanelRef: Ref<EditorMenuButton> = createRef();\n\n  private accessor _scalePanelRef: Ref<EditorMenuButton> = createRef();\n\n  @query('edgeless-color-picker-button.background')\n  accessor backgroundButton!: EdgelessColorPickerButton;\n\n  @property({ attribute: false })\n  accessor edgeless!: EdgelessRootBlockComponent;\n\n  @property({ attribute: false })\n  accessor enableNoteSlicer!: boolean;\n\n  @property({ attribute: false })\n  accessor notes: NoteBlockModel[] = [];\n\n  @property({ attribute: false })\n  accessor quickConnectButton!: TemplateResult<1> | typeof nothing;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'edgeless-change-note-button': EdgelessChangeNoteButton;\n  }\n}\n\nexport function renderNoteButton(\n  edgeless: EdgelessRootBlockComponent,\n  notes?: NoteBlockModel[],\n  quickConnectButton?: TemplateResult<1>[]\n) {\n  if (!notes?.length) return nothing;\n\n  return html`\n    <edgeless-change-note-button\n      .notes=${notes}\n      .edgeless=${edgeless}\n      .enableNoteSlicer=${false}\n      .quickConnectButton=${quickConnectButton?.pop() ?? nothing}\n    >\n    </edgeless-change-note-button>\n  `;\n}\n"]}