{"version":3,"file":"add-group-button.js","sourceRoot":"","sources":["../../../../src/root-block/widgets/element-toolbar/add-group-button.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,kCAAkC,CAAC;AACvE,OAAO,EAAE,SAAS,EAAE,MAAM,qCAAqC,CAAC;AAChE,OAAO,EAAE,iBAAiB,EAAE,MAAM,0BAA0B,CAAC;AAC7D,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACvD,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AACrD,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;IAK/C,sBAAsB;4BADlC,aAAa,CAAC,2BAA2B,CAAC;;;;sBACC,cAAc,CAAC,UAAU,CAAC;;;;sCAAlC,SAAQ,WAA0B;;;;oCAwBnE,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;YAC/B,6KAAS,QAAQ,6BAAR,QAAQ,2FAA8B;YAzBjD,6KA0BC;;;;iBAzBiB,WAAM,GAAG,GAAG,CAAA;;;;GAI3B,AAJqB,CAIpB;QAMiB,MAAM;YACvB,OAAO,IAAI,CAAA;;;mBAGI,OAAO;uBACH,MAAM;iBACZ,IAAI,CAAC,YAAY;;UAExB,SAAS;;KAEd,CAAC;QACJ,CAAC;QAGD,2BAA+C;QAA/C,IAAS,QAAQ,8CAA8B;QAA/C,IAAS,QAAQ,oDAA8B;;;YAlBvC,iBAAY,GAAG,GAAG,EAAE;gBAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,uBAAuB,EAAE,CAAC;YAClD,CAAC,CAAC;YAgBO,0FAAsC;;;;YAzBpC,uDAAsB;;;;;SAAtB,sBAAsB;AAkCnC,MAAM,UAAU,oBAAoB,CAClC,QAAoC,EACpC,QAAoC;IAEpC,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC;QAAE,OAAO,OAAO,CAAC;IACxC,IAAI,QAAQ,CAAC,CAAC,CAAC,YAAY,iBAAiB;QAAE,OAAO,OAAO,CAAC;IAC7D,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,YAAY,mBAAmB,CAAC;QAC5D,OAAO,OAAO,CAAC;IAEjB,OAAO,IAAI,CAAA;;kBAEK,QAAQ;;GAEvB,CAAC;AACJ,CAAC","sourcesContent":["import { MindmapElementModel } from '@lumensuite/affine-block-surface';\nimport { GroupIcon } from '@lumensuite/affine-components/icons';\nimport { GroupElementModel } from '@lumensuite/affine-model';\nimport { WithDisposable } from '@lumensuite/block-std';\nimport { css, html, LitElement, nothing } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport type { EdgelessRootBlockComponent } from '../../edgeless/edgeless-root-block.js';\n\n@customElement('edgeless-add-group-button')\nexport class EdgelessAddGroupButton extends WithDisposable(LitElement) {\n  static override styles = css`\n    .label {\n      padding-left: 4px;\n    }\n  `;\n\n  private _createGroup = () => {\n    this.edgeless.service.createGroupFromSelected();\n  };\n\n  protected override render() {\n    return html`\n      <editor-icon-button\n        aria-label=\"Group\"\n        .tooltip=${'Group'}\n        .labelHeight=${'20px'}\n        @click=${this._createGroup}\n      >\n        ${GroupIcon}<span class=\"label medium\">Group</span>\n      </editor-icon-button>\n    `;\n  }\n\n  @property({ attribute: false })\n  accessor edgeless!: EdgelessRootBlockComponent;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'edgeless-add-group-button': EdgelessAddGroupButton;\n  }\n}\n\nexport function renderAddGroupButton(\n  edgeless: EdgelessRootBlockComponent,\n  elements: LumenSuite.EdgelessModel[]\n) {\n  if (elements.length < 2) return nothing;\n  if (elements[0] instanceof GroupElementModel) return nothing;\n  if (elements.some(e => e.group instanceof MindmapElementModel))\n    return nothing;\n\n  return html`\n    <edgeless-add-group-button\n      .edgeless=${edgeless}\n    ></edgeless-add-group-button>\n  `;\n}\n"]}