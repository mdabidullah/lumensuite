{"version":3,"file":"change-image-button.js","sourceRoot":"","sources":["../../../../src/root-block/widgets/element-toolbar/change-image-button.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,qCAAqC,CAAC;AAChF,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACvD,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AAChD,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAK5D,OAAO,EAAE,iBAAiB,EAAE,MAAM,+BAA+B,CAAC;IAGrD,yBAAyB;4BADrC,aAAa,CAAC,8BAA8B,CAAC;;;;sBACC,cAAc,CAAC,UAAU,CAAC;;;;;;;yCAAlC,SAAQ,WAA0B;;;;oCAuDtE,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;iCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;YAF/B,6KAAS,QAAQ,6BAAR,QAAQ,2FAA8B;YAG/C,oKAAS,KAAK,6BAAL,KAAK,qFAAmB;YA3DnC,6KA4DC;;;YA5DY,uDAAyB;;QAUpC,IAAY,eAAe;YACzB,MAAM,cAAc,GAClB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAC7D,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CACrC,CAAC;YACJ,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBAChC,OAAO;YACT,CAAC;YAED,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAC3C,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CACI,CAAC;YAEhC,OAAO,KAAK,CAAC;QACf,CAAC;QAED,IAAY,IAAI;YACd,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QACxB,CAAC;QAEQ,MAAM;YACb,OAAO,IAAI,CAAA;;;mBAGI,UAAU;oBACT,IAAI,CAAC,IAAI,CAAC,QAAQ;iBACrB,IAAI,CAAC,SAAS;;UAErB,YAAY;;;;;;;mBAOH,aAAa;;oBAEZ,IAAI,CAAC,IAAI,CAAC,QAAQ;iBACrB,IAAI,CAAC,YAAY;;UAExB,WAAW;;KAEhB,CAAC;QACJ,CAAC;QAGD,2BAA+C;QAA/C,IAAS,QAAQ,8CAA8B;QAA/C,IAAS,QAAQ,oDAA8B;QAG/C,wBAAiC;QAAjC,IAAS,KAAK,2CAAmB;QAAjC,IAAS,KAAK,iDAAmB;;;YA1DzB,cAAS,GAAG,GAAG,EAAE;gBACvB,IAAI,CAAC,IAAI,CAAC,eAAe;oBAAE,OAAO;gBAClC,iBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC/D,CAAC,CAAC;YAEM,iBAAY,GAAG,GAAG,EAAE;gBAC1B,IAAI,CAAC,eAAe,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC;YAC9C,CAAC,CAAC;YAgDO,0FAAsC;YAGtC,4IAAwB;;;;;;SA3DtB,yBAAyB;AAoEtC,MAAM,UAAU,uBAAuB,CACrC,QAAoC,EACpC,MAA0B;IAE1B,IAAI,MAAM,EAAE,MAAM,KAAK,CAAC;QAAE,OAAO,OAAO,CAAC;IAEzC,OAAO,IAAI,CAAA;;eAEE,MAAM,CAAC,CAAC,CAAC;kBACN,QAAQ;;GAEvB,CAAC;AACJ,CAAC","sourcesContent":["import type { ImageBlockModel } from '@blocksuite/affine-model';\n\nimport { CaptionIcon, DownloadIcon } from '@blocksuite/affine-components/icons';\nimport { WithDisposable } from '@blocksuite/block-std';\nimport { html, LitElement, nothing } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport type { ImageBlockComponent } from '../../../image-block/image-block.js';\nimport type { EdgelessRootBlockComponent } from '../../edgeless/edgeless-root-block.js';\n\nimport { downloadImageBlob } from '../../../image-block/utils.js';\n\n@customElement('edgeless-change-image-button')\nexport class EdgelessChangeImageButton extends WithDisposable(LitElement) {\n  private _download = () => {\n    if (!this._blockComponent) return;\n    downloadImageBlob(this._blockComponent).catch(console.error);\n  };\n\n  private _showCaption = () => {\n    this._blockComponent?.captionEditor?.show();\n  };\n\n  private get _blockComponent() {\n    const blockSelection =\n      this.edgeless.service.selection.surfaceSelections.filter(sel =>\n        sel.elements.includes(this.model.id)\n      );\n    if (blockSelection.length !== 1) {\n      return;\n    }\n\n    const block = this.edgeless.std.view.getBlock(\n      blockSelection[0].blockId\n    ) as ImageBlockComponent | null;\n\n    return block;\n  }\n\n  private get _doc() {\n    return this.model.doc;\n  }\n\n  override render() {\n    return html`\n      <editor-icon-button\n        aria-label=\"Download\"\n        .tooltip=${'Download'}\n        ?disabled=${this._doc.readonly}\n        @click=${this._download}\n      >\n        ${DownloadIcon}\n      </editor-icon-button>\n\n      <editor-toolbar-separator></editor-toolbar-separator>\n\n      <editor-icon-button\n        aria-label=\"Add caption\"\n        .tooltip=${'Add caption'}\n        class=\"change-image-button caption\"\n        ?disabled=${this._doc.readonly}\n        @click=${this._showCaption}\n      >\n        ${CaptionIcon}\n      </editor-icon-button>\n    `;\n  }\n\n  @property({ attribute: false })\n  accessor edgeless!: EdgelessRootBlockComponent;\n\n  @property({ attribute: false })\n  accessor model!: ImageBlockModel;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'edgeless-change-image-button': EdgelessChangeImageButton;\n  }\n}\n\nexport function renderChangeImageButton(\n  edgeless: EdgelessRootBlockComponent,\n  images?: ImageBlockModel[]\n) {\n  if (images?.length !== 1) return nothing;\n\n  return html`\n    <edgeless-change-image-button\n      .model=${images[0]}\n      .edgeless=${edgeless}\n    ></edgeless-change-image-button>\n  `;\n}\n"]}