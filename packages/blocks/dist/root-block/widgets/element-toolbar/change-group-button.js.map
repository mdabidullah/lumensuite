{"version":3,"file":"change-group-button.js","sourceRoot":"","sources":["../../../../src/root-block/widgets/element-toolbar/change-group-button.ts"],"names":[],"mappings":"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","sourcesContent":["import type { GroupElementModel } from '@lumensuite/affine-model';\n\nimport {\n  NoteIcon,\n  RenameIcon,\n  UngroupButtonIcon,\n} from '@lumensuite/affine-components/icons';\nimport { toast } from '@lumensuite/affine-components/toast';\nimport { renderToolbarSeparator } from '@lumensuite/affine-components/toolbar';\nimport { NoteDisplayMode } from '@lumensuite/affine-model';\nimport { matchFlavours } from '@lumensuite/affine-shared/utils';\nimport { WithDisposable } from '@lumensuite/block-std';\nimport { deserializeXYWH, serializeXYWH } from '@lumensuite/global/utils';\nimport { html, LitElement, nothing } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { join } from 'lit/directives/join.js';\n\nimport type { EdgelessRootBlockComponent } from '../../edgeless/edgeless-root-block.js';\n\nimport { DEFAULT_NOTE_HEIGHT } from '../../edgeless/utils/consts.js';\nimport { mountGroupTitleEditor } from '../../edgeless/utils/text.js';\n\n@customElement('edgeless-change-group-button')\nexport class EdgelessChangeGroupButton extends WithDisposable(LitElement) {\n  private _insertIntoPage() {\n    if (!this.edgeless.doc.root) return;\n\n    const rootModel = this.edgeless.doc.root;\n    const notes = rootModel.children.filter(\n      model =>\n        matchFlavours(model, ['affine:note']) &&\n        model.displayMode !== NoteDisplayMode.EdgelessOnly\n    );\n    const lastNote = notes[notes.length - 1];\n    const referenceGroup = this.groups[0];\n\n    let targetParent = lastNote?.id;\n\n    if (!lastNote) {\n      const targetXYWH = deserializeXYWH(referenceGroup.xywh);\n\n      targetXYWH[1] = targetXYWH[1] + targetXYWH[3];\n      targetXYWH[3] = DEFAULT_NOTE_HEIGHT;\n\n      const newAddedNote = this.edgeless.doc.addBlock(\n        'affine:note',\n        {\n          xywh: serializeXYWH(...targetXYWH),\n        },\n        rootModel.id\n      );\n\n      targetParent = newAddedNote;\n    }\n\n    this.edgeless.doc.addBlock(\n      'affine:surface-ref',\n      {\n        reference: this.groups[0].id,\n        refFlavour: 'group',\n      },\n      targetParent\n    );\n\n    toast(this.edgeless.host, 'Group has been inserted into page');\n  }\n\n  protected override render() {\n    const { groups } = this;\n    const onlyOne = groups.length === 1;\n\n    return join(\n      [\n        onlyOne\n          ? html`\n              <editor-icon-button\n                aria-label=\"Insert into Page\"\n                .tooltip=${'Insert into Page'}\n                .iconSize=${'20px'}\n                .labelHeight=${'20px'}\n                @click=${this._insertIntoPage}\n              >\n                ${NoteIcon}\n                <span class=\"label\">Insert into Page</span>\n              </editor-icon-button>\n            `\n          : nothing,\n\n        onlyOne\n          ? html`\n              <editor-icon-button\n                aria-label=\"Rename\"\n                .tooltip=${'Rename'}\n                .iconSize=${'20px'}\n                @click=${() => mountGroupTitleEditor(groups[0], this.edgeless)}\n              >\n                ${RenameIcon}\n              </editor-icon-button>\n            `\n          : nothing,\n\n        html`\n          <editor-icon-button\n            aria-label=\"Ungroup\"\n            .tooltip=${'Ungroup'}\n            .iconSize=${'20px'}\n            @click=${() =>\n              groups.forEach(group => this.edgeless.service.ungroup(group))}\n          >\n            ${UngroupButtonIcon}\n          </editor-icon-button>\n        `,\n      ].filter(button => button !== nothing),\n      renderToolbarSeparator\n    );\n  }\n\n  @property({ attribute: false })\n  accessor edgeless!: EdgelessRootBlockComponent;\n\n  @property({ attribute: false })\n  accessor groups!: GroupElementModel[];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'edgeless-change-group-button': EdgelessChangeGroupButton;\n  }\n}\n\nexport function renderGroupButton(\n  edgeless: EdgelessRootBlockComponent,\n  groups?: GroupElementModel[]\n) {\n  if (!groups?.length) return nothing;\n\n  return html`\n    <edgeless-change-group-button .edgeless=${edgeless} .groups=${groups}>\n    </edgeless-change-group-button>\n  `;\n}\n"]}