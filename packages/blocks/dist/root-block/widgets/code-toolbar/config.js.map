{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../../src/root-block/widgets/code-toolbar/config.ts"],"names":[],"mappings":"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","sourcesContent":["import type { MenuItemGroup } from '@lumensuite/affine-components/toolbar';\n\nimport {\n  CancelWrapIcon,\n  CaptionIcon,\n  CopyIcon,\n  DeleteIcon,\n  DuplicateIcon,\n  WrapIcon,\n} from '@lumensuite/affine-components/icons';\nimport { isInsidePageEditor } from '@lumensuite/affine-shared/utils';\nimport { html } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\n\nimport type { CodeBlockToolbarContext } from './context.js';\n\nimport { duplicateCodeBlock } from './utils.js';\n\nexport const PRIMARY_GROUPS: MenuItemGroup<CodeBlockToolbarContext>[] = [\n  {\n    type: 'primary',\n    items: [\n      {\n        type: 'copy-code',\n        label: 'Copy code',\n        icon: CopyIcon,\n        generate: ({ blockComponent }) => {\n          return {\n            action: () => {\n              blockComponent.copyCode();\n            },\n            render: item => html`\n              <editor-icon-button\n                class=\"code-toolbar-button copy-code\"\n                aria-label=${ifDefined(item.label)}\n                .tooltip=${item.label}\n                .tooltipOffset=${4}\n                @click=${(e: MouseEvent) => {\n                  e.stopPropagation();\n                  item.action();\n                }}\n              >\n                ${item.icon}\n              </editor-icon-button>\n            `,\n          };\n        },\n      },\n      {\n        type: 'caption',\n        label: 'Caption',\n        icon: CaptionIcon,\n        when: ({ doc }) => !doc.readonly,\n        generate: ({ blockComponent }) => {\n          return {\n            action: () => {\n              blockComponent.captionEditor?.show();\n            },\n            render: item => html`\n              <editor-icon-button\n                class=\"code-toolbar-button caption\"\n                aria-label=${ifDefined(item.label)}\n                .tooltip=${item.label}\n                .tooltipOffset=${4}\n                @click=${(e: MouseEvent) => {\n                  e.stopPropagation();\n                  item.action();\n                }}\n              >\n                ${item.icon}\n              </editor-icon-button>\n            `,\n          };\n        },\n      },\n    ],\n  },\n];\n\n// Clipboard Group\nexport const clipboardGroup: MenuItemGroup<CodeBlockToolbarContext> = {\n  type: 'clipboard',\n  items: [\n    {\n      type: 'wrap',\n      generate: ({ blockComponent, close }) => {\n        const wrapped = blockComponent.model.wrap;\n        const label = wrapped ? 'Cancel wrap' : 'Wrap';\n        const icon = wrapped ? CancelWrapIcon : WrapIcon;\n\n        return {\n          label,\n          icon,\n          action: () => {\n            blockComponent.setWrap(!wrapped);\n            close();\n          },\n        };\n      },\n    },\n    {\n      type: 'duplicate',\n      label: 'Duplicate',\n      icon: DuplicateIcon,\n      when: ({ doc }) => !doc.readonly,\n      action: ({ host, blockComponent, close }) => {\n        const codeId = duplicateCodeBlock(blockComponent.model);\n\n        host.updateComplete\n          .then(() => {\n            host.selection.setGroup('note', [\n              host.selection.create('block', {\n                blockId: codeId,\n              }),\n            ]);\n\n            if (isInsidePageEditor(host)) {\n              const duplicateElement = host.view.getBlock(codeId);\n              if (duplicateElement) {\n                duplicateElement.scrollIntoView({ block: 'nearest' });\n              }\n            }\n          })\n          .catch(console.error);\n\n        close();\n      },\n    },\n  ],\n};\n\n// Delete Group\nexport const deleteGroup: MenuItemGroup<CodeBlockToolbarContext> = {\n  type: 'delete',\n  items: [\n    {\n      type: 'delete',\n      label: 'Delete',\n      icon: DeleteIcon,\n      when: ({ doc }) => !doc.readonly,\n      action: ({ doc, blockComponent, close }) => {\n        doc.deleteBlock(blockComponent.model);\n        close();\n      },\n    },\n  ],\n};\n\nexport const MORE_GROUPS: MenuItemGroup<CodeBlockToolbarContext>[] = [\n  clipboardGroup,\n  deleteGroup,\n];\n"]}