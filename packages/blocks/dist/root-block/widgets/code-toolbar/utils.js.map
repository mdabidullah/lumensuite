{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../src/root-block/widgets/code-toolbar/utils.ts"],"names":[],"mappings":"AAEA,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,KAAqB,EAAE,EAAE;IAC1D,MAAM,IAAI,GAAG,KAAK,CAAC,IAA8B,CAAC;IAClD,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3C,MAAM,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9E,MAAM,EAAE,IAAI,EAAE,GAAG,cAAc,EAAE,GAAG,UAAU,CAAC;IAE/C,MAAM,QAAQ,GAAG;QACf,OAAO,EAAE,KAAK,CAAC,OAAO;QACtB,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE;QACxB,GAAG,cAAc;KAClB,CAAC;IAEF,OAAO,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC","sourcesContent":["import type { CodeBlockModel } from '@lumensuite/affine-model';\n\nexport const duplicateCodeBlock = (model: CodeBlockModel) => {\n  const keys = model.keys as (keyof typeof model)[];\n  const values = keys.map(key => model[key]);\n  const blockProps = Object.fromEntries(keys.map((key, i) => [key, values[i]]));\n  const { text, ...duplicateProps } = blockProps;\n\n  const newProps = {\n    flavour: model.flavour,\n    text: model.text.clone(),\n    ...duplicateProps,\n  };\n\n  return model.doc.addSiblingBlocks(model, [newProps])[0];\n};\n"]}