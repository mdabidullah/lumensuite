{"version":3,"file":"toolbar-entry.js","sourceRoot":"","sources":["../../../../src/root-block/widgets/edgeless-copilot-panel/toolbar-entry.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,qCAAqC,CAAC;AACjE,OAAO,EAAmB,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACxE,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAM5D,OAAO,EAAE,wBAAwB,EAAE,MAAM,8BAA8B,CAAC;IAG3D,2BAA2B;4BADvC,aAAa,CAAC,gCAAgC,CAAC;;;;sBACC,cAAc,CAAC,UAAU,CAAC;;;;;;;;;;2CAAlC,SAAQ,WAA0B;;;;oCAsCxE,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;kCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;gCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;YAL/B,6KAAS,QAAQ,6BAAR,QAAQ,2FAA8B;YAG/C,uKAAS,MAAM,6BAAN,MAAM,uFAAuB;YAGtC,iKAAS,IAAI,6BAAJ,IAAI,mFAAc;YA7C7B,6KA8CC;;;;iBA7CiB,WAAM,GAAG,GAAG,CAAA;;;;;;;;GAQ3B,AARqB,CAQpB;QAEM,iBAAiB;YACvB,MAAM,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,gBAAgB,CAAC;YAC1E,MAAM,YAAY,GAAG,IAAI,GAAG,CAAC,gBAAgB,CAAC,CAAC;YAC/C,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACjC,wBAAwB,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;oBACrD,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAC/B,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC;gBACzC,IAAI,EAAE,SAAS;aAChB,CAAC,CAAC;YAED,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAC1C,CAAC,mBAAmB,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC;QACtD,CAAC;QAEQ,MAAM;YACb,OAAO,IAAI,CAAA;;;eAGA,IAAI,CAAC,iBAAiB;;QAE7B,UAAU;iCACe,CAAC;QAChC,CAAC;QAGD,qFAA+C;QAA/C,IAAS,QAAQ,8CAA8B;QAA/C,IAAS,QAAQ,oDAA8B;QAG/C,yIAAsC;QAAtC,IAAS,MAAM,4CAAuB;QAAtC,IAAS,MAAM,kDAAuB;QAGtC,mIAA2B;QAA3B,IAAS,IAAI,0CAAc;QAA3B,IAAS,IAAI,gDAAc;;;;;;YA7ChB,uDAA2B;;;;;SAA3B,2BAA2B","sourcesContent":["import { AIStarIcon } from '@lumensuite/affine-components/icons';\nimport { type EditorHost, WithDisposable } from '@lumensuite/block-std';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport type { AIItemGroupConfig } from '../../../_common/components/ai-item/types.js';\nimport type { EdgelessRootBlockComponent } from '../../edgeless/edgeless-root-block.js';\nimport type { CopilotSelectionController } from '../../edgeless/tools/copilot-tool.js';\n\nimport { getAllDescendantElements } from '../../edgeless/utils/tree.js';\n\n@customElement('edgeless-copilot-toolbar-entry')\nexport class EdgelessCopilotToolbarEntry extends WithDisposable(LitElement) {\n  static override styles = css`\n    .copilot-icon-button {\n      line-height: 20px;\n\n      .label.medium {\n        color: var(--affine-brand-color);\n      }\n    }\n  `;\n\n  private _showCopilotPanel() {\n    const selectedElements = this.edgeless.service.selection.selectedElements;\n    const toBeSelected = new Set(selectedElements);\n    selectedElements.forEach(element => {\n      getAllDescendantElements(element).forEach(descendant => {\n        toBeSelected.add(descendant);\n      });\n    });\n\n    this.edgeless.service.tool.setEdgelessTool({\n      type: 'copilot',\n    });\n    (\n      this.edgeless.tools.controllers['copilot'] as CopilotSelectionController\n    ).updateSelectionWith(Array.from(toBeSelected), 10);\n  }\n\n  override render() {\n    return html`<edgeless-tool-icon-button\n      aria-label=\"Ask AI\"\n      class=\"copilot-icon-button\"\n      @click=${this._showCopilotPanel}\n    >\n      ${AIStarIcon} <span class=\"label medium\">Ask AI</span>\n    </edgeless-tool-icon-button>`;\n  }\n\n  @property({ attribute: false })\n  accessor edgeless!: EdgelessRootBlockComponent;\n\n  @property({ attribute: false })\n  accessor groups!: AIItemGroupConfig[];\n\n  @property({ attribute: false })\n  accessor host!: EditorHost;\n}\n"]}