{"version":3,"file":"import-doc.js","sourceRoot":"","sources":["../../../../../src/root-block/widgets/linked-doc/import-doc/import-doc.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  CloseIcon,\n  ExportToHTMLIcon,\n  ExportToMarkdownIcon,\n  HelpIcon,\n  NewIcon,\n  NotionIcon,\n} from '@lumensuite/affine-components/icons';\nimport { WithDisposable } from '@lumensuite/block-std';\nimport { sha } from '@lumensuite/global/utils';\nimport {\n  type DocCollection,\n  extMimeMap,\n  type JobMiddleware,\n} from '@lumensuite/store';\nimport { Job } from '@lumensuite/store';\nimport { html, LitElement, type PropertyValues } from 'lit';\nimport { customElement, query, state } from 'lit/decorators.js';\n\nimport { MarkdownAdapter } from '../../../../_common/adapters/markdown.js';\nimport { NotionHtmlAdapter } from '../../../../_common/adapters/notion-html.js';\nimport '../../../../_common/components/loader.js';\nimport { defaultImageProxyMiddleware } from '../../../../_common/transformers/middlewares.js';\nimport { Unzip } from '../../../../_common/transformers/utils.js';\nimport { openFileOrFiles } from '../../../../_common/utils/index.js';\nimport { styles } from './styles.js';\n\nexport type OnSuccessHandler = (\n  pageIds: string[],\n  options: { isWorkspaceFile: boolean; importedCount: number }\n) => void;\n\nexport type OnFailHandler = (message: string) => void;\n\nconst SHOW_LOADING_SIZE = 1024 * 200;\n\nexport async function importMarkDown(\n  collection: DocCollection,\n  text: string,\n  fileName?: string\n) {\n  const fileNameMiddleware: JobMiddleware = ({ slots }) => {\n    slots.beforeImport.on(payload => {\n      if (payload.type !== 'page') {\n        return;\n      }\n      if (!fileName) {\n        return;\n      }\n      payload.snapshot.meta.title = fileName;\n      payload.snapshot.blocks.props.title = {\n        '$lumensuite:internal:text$': true,\n        delta: [\n          {\n            insert: fileName,\n          },\n        ],\n      };\n    });\n  };\n  const job = new Job({\n    collection,\n    middlewares: [defaultImageProxyMiddleware, fileNameMiddleware],\n  });\n  const mdAdapter = new MarkdownAdapter(job);\n  const page = await mdAdapter.toDoc({\n    file: text,\n    assets: job.assetsManager,\n  });\n  if (!page) {\n    return;\n  }\n  return page.id;\n}\n\nexport async function importHtml(collection: DocCollection, text: string) {\n  const job = new Job({\n    collection,\n    middlewares: [defaultImageProxyMiddleware],\n  });\n  const htmlAdapter = new NotionHtmlAdapter(job);\n  const snapshot = await htmlAdapter.toDocSnapshot({\n    file: text,\n    assets: job.assetsManager,\n  });\n  const page = await job.snapshotToDoc(snapshot);\n  if (!page) {\n    return;\n  }\n  return page.id;\n}\n\nexport async function importNotion(collection: DocCollection, file: File) {\n  const pageIds: string[] = [];\n  let isWorkspaceFile = false;\n  let hasMarkdown = false;\n  let entryId: string | undefined;\n  const parseZipFile = async (path: File | Blob) => {\n    const unzip = new Unzip();\n    await unzip.load(path);\n    const zipFile = new Map<string, Blob>();\n    const pageMap = new Map<string, string>();\n    const pagePaths: string[] = [];\n    const promises: Promise<void>[] = [];\n    const pendingAssets = new Map<string, Blob>();\n    const pendingPathBlobIdMap = new Map<string, string>();\n    for (const { path, content, index } of unzip) {\n      if (path.startsWith('__MACOSX/')) continue;\n\n      zipFile.set(path, content);\n\n      const lastSplitIndex = path.lastIndexOf('/');\n\n      const fileName = path.substring(lastSplitIndex + 1);\n      if (fileName.endsWith('.md')) {\n        hasMarkdown = true;\n        continue;\n      }\n      if (fileName.endsWith('.html')) {\n        if (path.endsWith('/index.html')) {\n          isWorkspaceFile = true;\n          continue;\n        }\n        if (lastSplitIndex !== -1) {\n          const text = await content.text();\n          const doc = new DOMParser().parseFromString(text, 'text/html');\n          const pageBody = doc.querySelector('.page-body');\n          if (pageBody && pageBody.children.length == 0) {\n            // Skip empty pages\n            continue;\n          }\n        }\n        const id = collection.idGenerator();\n        const splitPath = path.split('/');\n        while (splitPath.length > 0) {\n          pageMap.set(splitPath.join('/'), id);\n          splitPath.shift();\n        }\n        pagePaths.push(path);\n        if (entryId === undefined && lastSplitIndex === -1) {\n          entryId = id;\n        }\n        continue;\n      }\n      if (index === 0 && fileName.endsWith('.csv')) {\n        window.open(\n          'https://affine.pro/blog/import-your-data-from-notion-into-affine',\n          '_blank'\n        );\n        continue;\n      }\n      if (fileName.endsWith('.zip')) {\n        const innerZipFile = content;\n        if (innerZipFile) {\n          promises.push(...(await parseZipFile(innerZipFile)));\n        }\n        continue;\n      }\n      const blob = content;\n      const ext = path.split('.').at(-1) ?? '';\n      const mime = extMimeMap.get(ext) ?? '';\n      const key = await sha(await blob.arrayBuffer());\n      const filePathSplit = path.split('/');\n      while (filePathSplit.length > 1) {\n        pendingPathBlobIdMap.set(filePathSplit.join('/'), key);\n        filePathSplit.shift();\n      }\n      pendingAssets.set(key, new File([blob], fileName, { type: mime }));\n    }\n    const pagePromises = Array.from(pagePaths).map(async path => {\n      const job = new Job({\n        collection: collection,\n        middlewares: [defaultImageProxyMiddleware],\n      });\n      const htmlAdapter = new NotionHtmlAdapter(job);\n      const assets = job.assetsManager.getAssets();\n      const pathBlobIdMap = job.assetsManager.getPathBlobIdMap();\n      for (const [key, value] of pendingAssets.entries()) {\n        if (!assets.has(key)) {\n          assets.set(key, value);\n        }\n      }\n      for (const [key, value] of pendingPathBlobIdMap.entries()) {\n        if (!pathBlobIdMap.has(key)) {\n          pathBlobIdMap.set(key, value);\n        }\n      }\n      const page = await htmlAdapter.toDoc({\n        file: await zipFile.get(path)!.text(),\n        pageId: pageMap.get(path),\n        pageMap,\n        assets: job.assetsManager,\n      });\n      if (page) {\n        pageIds.push(page.id);\n      }\n    });\n    promises.push(...pagePromises);\n    return promises;\n  };\n  const allPromises = await parseZipFile(file);\n  await Promise.all(allPromises.flat());\n  entryId = entryId ?? pageIds[0];\n  return { entryId, pageIds, isWorkspaceFile, hasMarkdown };\n}\n\n@customElement('import-doc')\nexport class ImportDoc extends WithDisposable(LitElement) {\n  static override styles = styles;\n\n  constructor(\n    private collection: DocCollection,\n    private onSuccess?: OnSuccessHandler,\n    private onFail?: OnFailHandler,\n    private abortController = new AbortController()\n  ) {\n    super();\n\n    this._loading = false;\n\n    this.x = 0;\n    this.y = 0;\n    this._startX = 0;\n    this._startY = 0;\n\n    this._onMouseMove = this._onMouseMove.bind(this);\n  }\n\n  private async _importHtml() {\n    const files = await openFileOrFiles({ acceptType: 'Html', multiple: true });\n    if (!files) return;\n    const pageIds: string[] = [];\n    for (const file of files) {\n      const text = await file.text();\n      const needLoading = file.size > SHOW_LOADING_SIZE;\n      if (needLoading) {\n        this.hidden = false;\n        this._loading = true;\n      } else {\n        this.abortController.abort();\n      }\n      const pageId = await importHtml(this.collection, text);\n      needLoading && this.abortController.abort();\n      if (pageId) {\n        pageIds.push(pageId);\n      }\n    }\n    this._onImportSuccess(pageIds);\n  }\n\n  private async _importMarkDown() {\n    const files = await openFileOrFiles({\n      acceptType: 'Markdown',\n      multiple: true,\n    });\n    if (!files) return;\n    const pageIds: string[] = [];\n    for (const file of files) {\n      const text = await file.text();\n      const fileName = file.name.split('.').slice(0, -1).join('.');\n      const needLoading = file.size > SHOW_LOADING_SIZE;\n      if (needLoading) {\n        this.hidden = false;\n        this._loading = true;\n      } else {\n        this.abortController.abort();\n      }\n      const pageId = await importMarkDown(this.collection, text, fileName);\n      needLoading && this.abortController.abort();\n      if (pageId) {\n        pageIds.push(pageId);\n      }\n    }\n    this._onImportSuccess(pageIds);\n  }\n\n  private async _importNotion() {\n    const file = await openFileOrFiles({ acceptType: 'Zip' });\n    if (!file) return;\n    const needLoading = file.size > SHOW_LOADING_SIZE;\n    if (needLoading) {\n      this.hidden = false;\n      this._loading = true;\n    } else {\n      this.abortController.abort();\n    }\n    const { entryId, pageIds, isWorkspaceFile, hasMarkdown } =\n      await importNotion(this.collection, file);\n    needLoading && this.abortController.abort();\n    if (hasMarkdown) {\n      this._onFail(\n        'Importing markdown files from Notion is deprecated. Please export your Notion pages as HTML.'\n      );\n      return;\n    }\n    this._onImportSuccess([entryId], {\n      isWorkspaceFile,\n      importedCount: pageIds.length,\n    });\n  }\n\n  private _onCloseClick(event: MouseEvent) {\n    event.stopPropagation();\n    this.abortController.abort();\n  }\n\n  private _onFail(message: string) {\n    this.onFail?.(message);\n  }\n\n  private _onImportSuccess(\n    pageIds: string[],\n    options: { isWorkspaceFile?: boolean; importedCount?: number } = {}\n  ) {\n    const {\n      isWorkspaceFile = false,\n      importedCount: pagesImportedCount = pageIds.length,\n    } = options;\n    this.onSuccess?.(pageIds, {\n      isWorkspaceFile,\n      importedCount: pagesImportedCount,\n    });\n  }\n\n  private _onMouseDown(event: MouseEvent) {\n    this._startX = event.clientX - this.x;\n    this._startY = event.clientY - this.y;\n    window.addEventListener('mousemove', this._onMouseMove);\n  }\n\n  private _onMouseMove(event: MouseEvent) {\n    this.x = event.clientX - this._startX;\n    this.y = event.clientY - this._startY;\n  }\n\n  private _onMouseUp() {\n    window.removeEventListener('mousemove', this._onMouseMove);\n  }\n\n  private _openLearnImportLink(event: MouseEvent) {\n    event.stopPropagation();\n    window.open(\n      'https://affine.pro/blog/import-your-data-from-notion-into-affine',\n      '_blank'\n    );\n  }\n\n  override render() {\n    if (this._loading) {\n      return html`\n        <div class=\"overlay-mask\"></div>\n        <div class=\"container\">\n          <header\n            class=\"loading-header\"\n            @mousedown=\"${this._onMouseDown}\"\n            @mouseup=\"${this._onMouseUp}\"\n          >\n            <div>Import</div>\n            <loader-element .width=${'50px'}></loader-element>\n          </header>\n          <div>\n            Importing the file may take some time. It depends on document size\n            and complexity.\n          </div>\n        </div>\n      `;\n    }\n    return html`\n      <div\n        class=\"overlay-mask\"\n        @click=\"${() => this.abortController.abort()}\"\n      ></div>\n      <div class=\"container\">\n        <header @mousedown=\"${this._onMouseDown}\" @mouseup=\"${this._onMouseUp}\">\n          <icon-button height=\"28px\" @click=\"${this._onCloseClick}\">\n            ${CloseIcon}\n          </icon-button>\n          <div>Import</div>\n        </header>\n        <div>\n          AFFiNE will gradually support more file formats for import.\n          <a\n            href=\"https://community.affine.pro/c/feature-requests/import-export\"\n            target=\"_blank\"\n            >Provide feedback.</a\n          >\n        </div>\n        <div class=\"button-container\">\n          <icon-button\n            class=\"button-item\"\n            text=\"Markdown\"\n            @click=\"${this._importMarkDown}\"\n          >\n            ${ExportToMarkdownIcon}\n          </icon-button>\n          <icon-button\n            class=\"button-item\"\n            text=\"HTML\"\n            @click=\"${this._importHtml}\"\n          >\n            ${ExportToHTMLIcon}\n          </icon-button>\n        </div>\n        <div class=\"button-container\">\n          <icon-button\n            class=\"button-item\"\n            text=\"Notion\"\n            @click=\"${this._importNotion}\"\n          >\n            ${NotionIcon}\n            <div\n              slot=\"suffix\"\n              class=\"button-suffix\"\n              @click=\"${this._openLearnImportLink}\"\n            >\n              ${HelpIcon}\n              <affine-tooltip>\n                Learn how to Import your Notion pages into AFFiNE.\n              </affine-tooltip>\n            </div>\n          </icon-button>\n          <icon-button class=\"button-item\" text=\"Coming soon...\" disabled>\n            ${NewIcon}\n          </icon-button>\n        </div>\n        <!-- <div class=\"footer\">\n        <div>Migrate from other versions of AFFiNE?</div>\n      </div> -->\n      </div>\n    `;\n  }\n\n  override updated(changedProps: PropertyValues) {\n    if (changedProps.has('x') || changedProps.has('y')) {\n      this.containerEl.style.transform = `translate(${this.x}px, ${this.y}px)`;\n    }\n  }\n\n  @state()\n  accessor _loading = false;\n\n  @state()\n  accessor _startX = 0;\n\n  @state()\n  accessor _startY = 0;\n\n  @query('.container')\n  accessor containerEl!: HTMLElement;\n\n  @state()\n  accessor x = 0;\n\n  @state()\n  accessor y = 0;\n}\n"]}