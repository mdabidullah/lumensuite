{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/root-block/widgets/linked-doc/index.ts"],"names":[],"mappings":"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","sourcesContent":["import type { AffineInlineEditor } from '@blocksuite/affine-components/rich-text';\nimport type { EditorHost, UIEventStateContext } from '@blocksuite/block-std';\n\nimport { getInlineEditorByModel } from '@blocksuite/affine-components/rich-text';\nimport {\n  getCurrentNativeRange,\n  getViewportElement,\n  matchFlavours,\n} from '@blocksuite/affine-shared/utils';\nimport { WidgetComponent } from '@blocksuite/block-std';\nimport { DisposableGroup, throttle } from '@blocksuite/global/utils';\nimport { InlineEditor } from '@blocksuite/inline';\nimport { customElement } from 'lit/decorators.js';\n\nimport { getPopperPosition } from '../../../root-block/utils/position.js';\nimport { getMenus, type LinkedMenuGroup } from './config.js';\nimport { LinkedDocPopover } from './linked-doc-popover.js';\n\nexport const AFFINE_LINKED_DOC_WIDGET = 'affine-linked-doc-widget';\n\nexport interface LinkedWidgetConfig {\n  /**\n   * The first item of the trigger keys will be the primary key\n   * e.g. @, [[\n   */\n  triggerKeys: [string, ...string[]];\n  /**\n   * Convert trigger key to primary key (the first item of the trigger keys)\n   * [[ -> @\n   */\n  convertTriggerKey: boolean;\n  ignoreBlockTypes: (keyof BlockSuite.BlockModels)[];\n  getMenus: (\n    query: string,\n    abort: () => void,\n    editorHost: EditorHost,\n    inlineEditor: AffineInlineEditor\n  ) => Promise<LinkedMenuGroup[]>;\n}\n\n@customElement(AFFINE_LINKED_DOC_WIDGET)\nexport class AffineLinkedDocWidget extends WidgetComponent {\n  private _abortController: AbortController | null = null;\n\n  private _onCompositionEnd = (ctx: UIEventStateContext) => {\n    const event = ctx.get('defaultState').event as CompositionEvent;\n\n    if (\n      !this.config.triggerKeys.some(triggerKey =>\n        triggerKey.includes(event.data)\n      )\n    )\n      return;\n\n    const inlineEditor = this.getInlineEditor(event);\n    if (!inlineEditor) return;\n\n    this._handleInput(inlineEditor, true);\n  };\n\n  private _onKeyDown = (ctx: UIEventStateContext) => {\n    const eventState = ctx.get('keyboardState');\n    const event = eventState.raw;\n\n    const key = event.key;\n    if (\n      key === undefined || // in mac os, the key may be undefined\n      key === 'Process' ||\n      event.isComposing\n    )\n      return;\n\n    const inlineEditor = this.getInlineEditor(event);\n    if (!inlineEditor) return;\n    const inlineRange = inlineEditor.getInlineRange();\n    if (!inlineRange) return;\n    if (inlineRange.length > 0) {\n      // When select text and press `[[` should not trigger transform,\n      // since it will break the bracket complete.\n      // Expected `[[selected text]]` instead of `@selected text]]`\n      return;\n    }\n\n    this._handleInput(inlineEditor, false);\n  };\n\n  private getInlineEditor = (evt: KeyboardEvent | CompositionEvent) => {\n    if (evt.target instanceof HTMLElement) {\n      const editor = (\n        evt.target.closest('.can-link-doc > .inline-editor') as {\n          inlineEditor?: AffineInlineEditor;\n        }\n      )?.inlineEditor;\n      if (editor instanceof InlineEditor) {\n        return editor;\n      }\n    }\n\n    const text = this.host.selection.value.find(selection =>\n      selection.is('text')\n    );\n    if (!text) return;\n\n    const model = this.host.doc.getBlockById(text.blockId);\n    if (!model) return;\n\n    if (matchFlavours(model, this.config.ignoreBlockTypes)) {\n      return;\n    }\n\n    return getInlineEditorByModel(this.host, model);\n  };\n\n  showLinkedDocPopover = (\n    inlineEditor: AffineInlineEditor,\n    triggerKey: string\n  ) => {\n    const curRange = getCurrentNativeRange();\n    if (!curRange) return;\n\n    this._abortController?.abort();\n    this._abortController = new AbortController();\n    const disposables = new DisposableGroup();\n    this._abortController.signal.addEventListener('abort', () =>\n      disposables.dispose()\n    );\n\n    const linkedDoc = new LinkedDocPopover(\n      triggerKey,\n      this.config.getMenus,\n      this.host,\n      inlineEditor,\n      this._abortController\n    );\n\n    // Mount\n    document.body.append(linkedDoc);\n    disposables.add(() => linkedDoc.remove());\n\n    // Handle position\n    const updatePosition = throttle(() => {\n      const linkedDocElement = linkedDoc.linkedDocElement;\n      if (!linkedDocElement) return;\n      const position = getPopperPosition(linkedDocElement, curRange);\n      linkedDoc.updatePosition(position);\n    }, 10);\n    disposables.addFromEvent(window, 'resize', updatePosition);\n    const scrollContainer = getViewportElement(this.host);\n    if (scrollContainer) {\n      // Note: in edgeless mode, the scroll container is not exist!\n      disposables.addFromEvent(scrollContainer, 'scroll', updatePosition, {\n        passive: true,\n      });\n    }\n\n    // Wait for node to be mounted\n    setTimeout(updatePosition);\n\n    disposables.addFromEvent(window, 'mousedown', (e: Event) => {\n      if (e.target === linkedDoc) return;\n      this._abortController?.abort();\n    });\n\n    return linkedDoc;\n  };\n\n  get config(): LinkedWidgetConfig {\n    return {\n      triggerKeys: ['@', '[[', '【【'],\n      ignoreBlockTypes: ['affine:code'],\n      convertTriggerKey: true,\n      getMenus,\n      ...this.std.getConfig('affine:page')?.linkedWidget,\n    };\n  }\n\n  private _handleInput(inlineEditor: InlineEditor, isCompositionEnd: boolean) {\n    const primaryTriggerKey = this.config.triggerKeys[0];\n\n    const inlineRangeApplyCallback = (callback: () => void) => {\n      // the inline ranged updated in compositionEnd event before this event callback\n      if (isCompositionEnd) callback();\n      else inlineEditor.slots.inlineRangeApply.once(callback);\n    };\n\n    inlineRangeApplyCallback(() => {\n      const inlineRange = inlineEditor.getInlineRange();\n      if (!inlineRange) return;\n      const textPoint = inlineEditor.getTextPoint(inlineRange.index);\n      if (!textPoint) return;\n      const [leafStart, offsetStart] = textPoint;\n\n      const text = leafStart.textContent\n        ? leafStart.textContent.slice(0, offsetStart)\n        : '';\n\n      const matchedKey = this.config.triggerKeys.find(triggerKey =>\n        text.endsWith(triggerKey)\n      );\n      if (!matchedKey) return;\n\n      if (this.config.convertTriggerKey && primaryTriggerKey !== matchedKey) {\n        const inlineRange = inlineEditor.getInlineRange();\n        if (!inlineRange) return;\n\n        // Convert to the primary trigger key\n        // e.g. [[ -> @\n        const startIdxBeforeMatchKey = inlineRange.index - matchedKey.length;\n        inlineEditor.deleteText({\n          index: startIdxBeforeMatchKey,\n          length: matchedKey.length,\n        });\n        inlineEditor.insertText(\n          { index: startIdxBeforeMatchKey, length: 0 },\n          primaryTriggerKey\n        );\n        inlineEditor.setInlineRange({\n          index: startIdxBeforeMatchKey + primaryTriggerKey.length,\n          length: 0,\n        });\n        inlineRangeApplyCallback(() => {\n          this.showLinkedDocPopover(inlineEditor, primaryTriggerKey);\n        });\n        return;\n      }\n      this.showLinkedDocPopover(inlineEditor, matchedKey);\n    });\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this.handleEvent('keyDown', this._onKeyDown);\n    this.handleEvent('compositionEnd', this._onCompositionEnd);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    [AFFINE_LINKED_DOC_WIDGET]: AffineLinkedDocWidget;\n  }\n}\n"]}