{"version":3,"file":"surface-ref-toolbar.js","sourceRoot":"","sources":["../../../../src/root-block/widgets/surface-ref-toolbar/surface-ref-toolbar.ts"],"names":[],"mappings":"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","sourcesContent":["import type { SurfaceRefBlockModel } from '@lumensuite/affine-model';\n\nimport { HoverController } from '@lumensuite/affine-components/hover';\nimport {\n  CaptionIcon,\n  CenterPeekIcon,\n  EdgelessModeIcon,\n  MoreVerticalIcon,\n  OpenIcon,\n  SmallArrowDownIcon,\n} from '@lumensuite/affine-components/icons';\nimport { isPeekable, peek } from '@lumensuite/affine-components/peek';\nimport {\n  cloneGroups,\n  type MenuItem,\n  type MenuItemGroup,\n  renderGroups,\n  renderToolbarSeparator,\n} from '@lumensuite/affine-components/toolbar';\nimport { WidgetComponent } from '@lumensuite/block-std';\nimport { offset, shift } from '@floating-ui/dom';\nimport { html, nothing } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { join } from 'lit/directives/join.js';\nimport { repeat } from 'lit/directives/repeat.js';\n\nimport type { SurfaceRefBlockComponent } from '../../../surface-ref-block/index.js';\n\nimport { PAGE_HEADER_HEIGHT } from '../../../_common/consts.js';\nimport { getMoreMenuConfig } from '../../configs/toolbar.js';\nimport { BUILT_IN_GROUPS } from './config.js';\nimport { SurfaceRefToolbarContext } from './context.js';\n\nexport const AFFINE_SURFACE_REF_TOOLBAR = 'affine-surface-ref-toolbar';\n\n@customElement(AFFINE_SURFACE_REF_TOOLBAR)\nexport class AffineSurfaceRefToolbar extends WidgetComponent<\n  SurfaceRefBlockModel,\n  SurfaceRefBlockComponent\n> {\n  private _hoverController = new HoverController(\n    this,\n    ({ abortController }) => {\n      const surfaceRefBlock = this.block;\n      const selection = this.host.selection;\n\n      const textSelection = selection.find('text');\n      if (\n        !!textSelection &&\n        (!!textSelection.to || !!textSelection.from.length)\n      ) {\n        return null;\n      }\n\n      const blockSelections = selection.filter('block');\n      if (\n        blockSelections.length > 1 ||\n        (blockSelections.length === 1 &&\n          blockSelections[0].blockId !== surfaceRefBlock.blockId)\n      ) {\n        return null;\n      }\n\n      return {\n        template: SurfaceRefToolbarOptions({\n          context: new SurfaceRefToolbarContext(this.block, abortController),\n          groups: this.moreGroups,\n        }),\n        computePosition: {\n          referenceElement: this.block,\n          placement: 'top-start',\n          middleware: [\n            offset({\n              mainAxis: 12,\n              crossAxis: 10,\n            }),\n            shift({\n              crossAxis: true,\n              padding: {\n                top: PAGE_HEADER_HEIGHT + 12,\n                bottom: 12,\n                right: 12,\n              },\n            }),\n          ],\n          autoUpdate: true,\n        },\n      };\n    }\n  );\n\n  /*\n   * Caches the more menu items.\n   * Currently only supports configuring more menu.\n   */\n  moreGroups: MenuItemGroup<SurfaceRefToolbarContext>[] =\n    cloneGroups(BUILT_IN_GROUPS);\n\n  override connectedCallback() {\n    super.connectedCallback();\n\n    this.moreGroups = getMoreMenuConfig(this.std).configure(this.moreGroups);\n    this._hoverController.setReference(this.block);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    [AFFINE_SURFACE_REF_TOOLBAR]: AffineSurfaceRefToolbar;\n  }\n}\n\nfunction SurfaceRefToolbarOptions({\n  context,\n  groups,\n}: {\n  context: SurfaceRefToolbarContext;\n  groups: MenuItemGroup<SurfaceRefToolbarContext>[];\n}) {\n  const { blockComponent, abortController } = context;\n  const readonly = blockComponent.model.doc.readonly;\n  const hasValidReference = !!blockComponent.referenceModel;\n\n  const openMenuActions: MenuItem[] = [];\n  if (hasValidReference) {\n    openMenuActions.push({\n      type: 'open-in-edgeless',\n      label: 'Open in edgeless',\n      icon: EdgelessModeIcon,\n      action: () => blockComponent.viewInEdgeless(),\n      disabled: readonly,\n    });\n\n    if (isPeekable(blockComponent)) {\n      openMenuActions.push({\n        type: 'open-in-center-peek',\n        label: 'Open in center peek',\n        icon: CenterPeekIcon,\n        action: () => peek(blockComponent),\n      });\n    }\n  }\n\n  const moreMenuActions = renderGroups(groups, context);\n\n  const buttons = [\n    openMenuActions.length\n      ? html`\n          <editor-menu-button\n            .contentPadding=${'8px'}\n            .button=${html`\n              <editor-icon-button\n                aria-label=\"Open doc\"\n                .justify=${'space-between'}\n                .labelHeight=${'20px'}\n              >\n                ${OpenIcon}${SmallArrowDownIcon}\n              </editor-icon-button>\n            `}\n          >\n            <div data-size=\"large\" data-orientation=\"vertical\">\n              ${repeat(\n                openMenuActions,\n                button => button.label,\n                ({ label, icon, action, disabled }) => html`\n                  <editor-menu-action\n                    aria-label=${ifDefined(label)}\n                    ?disabled=${disabled}\n                    @click=${action}\n                  >\n                    ${icon}<span class=\"label\">${label}</span>\n                  </editor-menu-action>\n                `\n              )}\n            </div>\n          </editor-menu-button>\n        `\n      : nothing,\n\n    readonly\n      ? nothing\n      : html`\n          <editor-icon-button\n            aria-label=\"Caption\"\n            @click=${() => {\n              abortController.abort();\n              blockComponent.captionElement.show();\n            }}\n          >\n            ${CaptionIcon}\n          </editor-icon-button>\n        `,\n\n    html`\n      <editor-menu-button\n        .contentPadding=${'8px'}\n        .button=${html`\n          <editor-icon-button aria-label=\"More\" .tooltip=${'More'}>\n            ${MoreVerticalIcon}\n          </editor-icon-button>\n        `}\n      >\n        <div data-size=\"large\" data-orientation=\"vertical\">\n          ${moreMenuActions}\n        </div>\n      </editor-menu-button>\n    `,\n  ];\n\n  return html`\n    <editor-toolbar class=\"surface-ref-toolbar-container\">\n      ${join(\n        buttons.filter(button => button !== nothing),\n        renderToolbarSeparator\n      )}\n    </editor-toolbar>\n  `;\n}\n"]}