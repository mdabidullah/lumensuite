{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../../src/root-block/widgets/surface-ref-toolbar/config.ts"],"names":[],"mappings":"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","sourcesContent":["import type { MenuItemGroup } from '@blocksuite/affine-components/toolbar';\n\nimport {\n  CopyIcon,\n  DeleteIcon,\n  DownloadIcon,\n} from '@blocksuite/affine-components/icons';\nimport { toast } from '@blocksuite/affine-components/toast';\nimport { downloadBlob } from '@blocksuite/affine-shared/utils';\n\nimport type { EdgelessRootPreviewBlockComponent } from '../../edgeless/edgeless-root-preview-block.js';\nimport type { SurfaceRefToolbarContext } from './context.js';\n\nimport { edgelessToBlob, writeImageBlobToClipboard } from './utils.js';\n\nexport const BUILT_IN_GROUPS: MenuItemGroup<SurfaceRefToolbarContext>[] = [\n  {\n    type: 'clipboard',\n    when: ctx => !!(ctx.blockComponent.referenceModel && ctx.doc.root),\n    items: [\n      {\n        type: 'copy',\n        label: 'Copy',\n        icon: CopyIcon,\n        action: ctx => {\n          if (!(ctx.blockComponent.referenceModel && ctx.doc.root?.id)) {\n            ctx.close();\n            return;\n          }\n\n          const referencedModel = ctx.blockComponent.referenceModel;\n          const editor = ctx.blockComponent.previewEditor;\n          const edgelessRootElement = editor?.view.getBlock(ctx.doc.root.id);\n          const surfaceRenderer = (\n            edgelessRootElement as EdgelessRootPreviewBlockComponent\n          )?.surface?.renderer;\n\n          if (!surfaceRenderer) {\n            ctx.close();\n            return;\n          }\n\n          edgelessToBlob(ctx.host, {\n            surfaceRefBlock: ctx.blockComponent,\n            surfaceRenderer,\n            edgelessElement: referencedModel,\n          })\n            .then(blob => writeImageBlobToClipboard(blob))\n            .then(() => toast(ctx.host, 'Copied image to clipboard'))\n            .catch(console.error);\n\n          ctx.close();\n        },\n      },\n      {\n        type: 'download',\n        label: 'Download',\n        icon: DownloadIcon,\n        action: ctx => {\n          if (!(ctx.blockComponent.referenceModel && ctx.doc.root?.id)) {\n            ctx.close();\n            return;\n          }\n\n          const referencedModel = ctx.blockComponent.referenceModel;\n          const editor = ctx.blockComponent.previewEditor;\n          const edgelessRootElement = editor?.view.getBlock(ctx.doc.root.id);\n          const surfaceRenderer = (\n            edgelessRootElement as EdgelessRootPreviewBlockComponent\n          )?.surface?.renderer;\n\n          if (!surfaceRenderer) {\n            ctx.close();\n            return;\n          }\n\n          edgelessToBlob(ctx.host, {\n            surfaceRefBlock: ctx.blockComponent,\n            surfaceRenderer,\n            edgelessElement: referencedModel,\n          })\n            .then(blob => {\n              const fileName =\n                'title' in referencedModel\n                  ? (referencedModel.title?.toString() ?? 'Edgeless Content')\n                  : 'Edgeless Content';\n\n              downloadBlob(blob, fileName);\n            })\n            .catch(console.error);\n\n          ctx.close();\n        },\n      },\n    ],\n  },\n  {\n    type: 'delete',\n    items: [\n      {\n        type: 'delete',\n        label: 'Delete',\n        icon: DeleteIcon,\n        disabled: ({ doc }) => doc.readonly,\n        action: ({ blockComponent, doc, close }) => {\n          doc.deleteBlock(blockComponent.model);\n          close();\n        },\n      },\n    ],\n  },\n];\n"]}