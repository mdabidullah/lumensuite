{"version":3,"file":"divider.js","sourceRoot":"","sources":["../../../../../src/root-block/widgets/ai-panel/components/divider.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACvD,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;IAGrC,cAAc;4BAD1B,aAAa,CAAC,kBAAkB,CAAC;;;;sBACE,cAAc,CAAC,UAAU,CAAC;8BAAlC,SAAQ,WAA0B;;;;YAA9D,6KAmBC;;;;iBAlBiB,WAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;GAa3B,AAbqB,CAapB;QAEO,MAAM;YACb,OAAO,IAAI,CAAA,6BAA6B,CAAC;QAC3C,CAAC;;YAlBU,uDAAc;;;;;SAAd,cAAc","sourcesContent":["import { WithDisposable } from '@lumensuite/block-std';\nimport { css, html, LitElement } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\n@customElement('ai-panel-divider')\nexport class AIPanelDivider extends WithDisposable(LitElement) {\n  static override styles = css`\n    :host {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-start;\n      align-self: stretch;\n      width: 100%;\n    }\n    .divider {\n      height: 0.5px;\n      background: var(--affine-border-color);\n      width: 100%;\n    }\n  `;\n\n  override render() {\n    return html`<div class=\"divider\"></div>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'ai-panel-divider': AIPanelDivider;\n  }\n}\n"]}