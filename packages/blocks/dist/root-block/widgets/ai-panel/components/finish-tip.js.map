{"version":3,"file":"finish-tip.js","sourceRoot":"","sources":["../../../../../src/root-block/widgets/ai-panel/components/finish-tip.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAO,EACL,UAAU,EACV,QAAQ,EACR,WAAW,GACZ,MAAM,qCAAqC,CAAC;AAC7C,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACvD,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AACrD,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;IAKtD,WAAW;4BADvB,aAAa,CAAC,eAAe,CAAC;;;;sBACE,cAAc,CAAC,UAAU,CAAC;;;;;;;;;;2BAAlC,SAAQ,WAA0B;;;;kCAgFxD,KAAK,EAAE;gCAGP,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;gCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;YAL/B,uKAAS,MAAM,6BAAN,MAAM,uFAAS;YAGxB,iKAAS,IAAI,6BAAJ,IAAI,mFAAqC;YAGlD,iKAAS,IAAI,6BAAJ,IAAI,mFAAc;YAvF7B,6KAwFC;;;;iBAvFiB,WAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAiD3B,AAjDqB,CAiDpB;QAEO,MAAM;YACb,OAAO,IAAI,CAAA;QACP,WAAW;;QAEX,IAAI,CAAC,IAAI,EAAE,OAAO;gBAClB,CAAC,CAAC,IAAI,CAAA;cACA,IAAI,CAAC,MAAM;oBACX,CAAC,CAAC,IAAI,CAAA,uBAAuB,UAAU,QAAQ;oBAC/C,CAAC,CAAC,IAAI,CAAA;;2BAEO,KAAK,IAAI,EAAE;wBAClB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;wBAC5C,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;4BAChB,MAAM,WAAW,GACf,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;4BAC1C,MAAM,EAAE,mBAAmB,EAAE,GAAG,WAAW,CAAC;4BAC5C,mBAAmB,EAAE,KAAK,CAAC,qBAAqB,CAAC,CAAC;wBACpD,CAAC;oBACH,CAAC;;oBAEC,QAAQ;;uBAEL;iBACN;gBACT,CAAC,CAAC,OAAO;WACN,CAAC;QACV,CAAC;QAGD,yEAAkB,KAAK,EAAC;QAAxB,IAAS,MAAM,4CAAS;QAAxB,IAAS,MAAM,kDAAS;QAGxB,0HAAwC,SAAS,GAAC;QAAlD,IAAS,IAAI,0CAAqC;QAAlD,IAAS,IAAI,gDAAqC;QAGlD,iIAA2B;QAA3B,IAAS,IAAI,0CAAc;QAA3B,IAAS,IAAI,gDAAc;;;;;;YAvFhB,uDAAW;;;;;SAAX,WAAW","sourcesContent":["import type { EditorHost } from '@lumensuite/block-std';\n\nimport {\n  AIDoneIcon,\n  CopyIcon,\n  WarningIcon,\n} from '@lumensuite/affine-components/icons';\nimport { WithDisposable } from '@lumensuite/block-std';\nimport { css, html, LitElement, nothing } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\n\nimport type { CopyConfig } from '../type.js';\n\n@customElement('ai-finish-tip')\nexport class AIFinishTip extends WithDisposable(LitElement) {\n  static override styles = css`\n    .finish-tip {\n      display: flex;\n      box-sizing: border-box;\n      width: 100%;\n      height: 22px;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0 12px;\n      gap: 4px;\n\n      color: var(--affine-text-secondary-color);\n\n      .text {\n        display: flex;\n        align-items: flex-start;\n        flex: 1 0 0;\n\n        /* light/xs */\n        font-size: var(--affine-font-xs);\n        font-style: normal;\n        font-weight: 400;\n        line-height: 20px; /* 166.667% */\n      }\n\n      .right {\n        display: flex;\n        align-items: center;\n\n        .copy,\n        .copied {\n          display: flex;\n          width: 20px;\n          height: 20px;\n          justify-content: center;\n          align-items: center;\n          border-radius: 8px;\n          user-select: none;\n        }\n        .copy:hover {\n          color: var(--affine-icon-color);\n          background: var(--affine-hover-color);\n          cursor: pointer;\n        }\n        .copied {\n          color: var(--affine-brand-color);\n        }\n      }\n    }\n  `;\n\n  override render() {\n    return html`<div class=\"finish-tip\">\n      ${WarningIcon}\n      <div class=\"text\">AI outputs can be misleading or wrong</div>\n      ${this.copy?.allowed\n        ? html`<div class=\"right\">\n            ${this.copied\n              ? html`<div class=\"copied\">${AIDoneIcon}</div>`\n              : html`<div\n                  class=\"copy\"\n                  @click=${async () => {\n                    this.copied = !!(await this.copy?.onCopy());\n                    if (this.copied) {\n                      const rootService =\n                        this.host.std.getService('affine:page');\n                      const { notificationService } = rootService;\n                      notificationService?.toast('Copied to clipboard');\n                    }\n                  }}\n                >\n                  ${CopyIcon}\n                  <affine-tooltip>Copy</affine-tooltip>\n                </div>`}\n          </div>`\n        : nothing}\n    </div>`;\n  }\n\n  @state()\n  accessor copied = false;\n\n  @property({ attribute: false })\n  accessor copy: CopyConfig | undefined = undefined;\n\n  @property({ attribute: false })\n  accessor host!: EditorHost;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'ai-finish-tip': AIFinishTip;\n  }\n}\n"]}