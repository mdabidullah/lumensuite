{"version":3,"file":"input.js","sourceRoot":"","sources":["../../../../../../src/root-block/widgets/ai-panel/components/state/input.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AIStarIcon,\n  ArrowUpBigIcon,\n} from '@blocksuite/affine-components/icons';\nimport { stopPropagation } from '@blocksuite/affine-shared/utils';\nimport { WithDisposable } from '@blocksuite/block-std';\nimport { css, html, LitElement, nothing } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\n\n@customElement('ai-panel-input')\nexport class AIPanelInput extends WithDisposable(LitElement) {\n  static override styles = css`\n    :host {\n      width: 100%;\n      padding: 0 12px;\n      box-sizing: border-box;\n    }\n\n    .root {\n      display: flex;\n      align-items: flex-start;\n      gap: 8px;\n      background: var(--affine-background-overlay-panel-color);\n    }\n\n    .icon {\n      display: flex;\n      align-items: center;\n    }\n\n    .textarea-container {\n      display: flex;\n      align-items: flex-end;\n      gap: 8px;\n      flex: 1 0 0;\n\n      textarea {\n        flex: 1 0 0;\n        border: none;\n        outline: none;\n        -webkit-box-shadow: none;\n        -moz-box-shadow: none;\n        box-shadow: none;\n        background-color: transparent;\n        resize: none;\n        overflow: hidden;\n        padding: 0px;\n\n        color: var(--affine-text-primary-color);\n\n        /* light/sm */\n        font-family: var(--affine-font-family);\n        font-size: var(--affine-font-sm);\n        font-style: normal;\n        font-weight: 400;\n        line-height: 22px; /* 157.143% */\n      }\n\n      textarea::placeholder {\n        color: var(--affine-placeholder-color);\n      }\n\n      textarea::-moz-placeholder {\n        color: var(--affine-placeholder-color);\n      }\n    }\n\n    .arrow {\n      display: flex;\n      align-items: center;\n      padding: 2px;\n      gap: 10px;\n      border-radius: 4px;\n      background: var(--affine-black-10, rgba(0, 0, 0, 0.1));\n\n      svg {\n        width: 16px;\n        height: 16px;\n        color: var(--affine-pure-white, #fff);\n      }\n    }\n    .arrow[data-active] {\n      background: var(--affine-brand-color, #1e96eb);\n    }\n    .arrow[data-active]:hover {\n      cursor: pointer;\n    }\n  `;\n\n  private _onInput = () => {\n    this._textarea.style.height = 'auto';\n    this._textarea.style.height = this._textarea.scrollHeight + 'px';\n\n    this.onInput?.(this._textarea.value);\n    const value = this._textarea.value.trim();\n    if (value.length > 0) {\n      this._arrow.dataset.active = '';\n      this._hasContent = true;\n    } else {\n      delete this._arrow.dataset.active;\n      this._hasContent = false;\n    }\n  };\n\n  private _onKeyDown = (e: KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey && !e.isComposing) {\n      e.preventDefault();\n      this._sendToAI();\n    }\n  };\n\n  private _sendToAI = () => {\n    const value = this._textarea.value.trim();\n    if (value.length === 0) return;\n\n    this.onFinish?.(value);\n    this.remove();\n  };\n\n  override render() {\n    this.updateComplete\n      .then(() => {\n        requestAnimationFrame(() => {\n          this._textarea.focus();\n        });\n      })\n      .catch(console.error);\n\n    return html`<div class=\"root\">\n      <div class=\"icon\">${AIStarIcon}</div>\n      <div class=\"textarea-container\">\n        <textarea\n          placeholder=\"Ask AI to edit or generate...\"\n          rows=\"1\"\n          @keydown=${this._onKeyDown}\n          @input=${this._onInput}\n          @pointerdown=${stopPropagation}\n          @click=${stopPropagation}\n          @dblclick=${stopPropagation}\n          @cut=${stopPropagation}\n          @copy=${stopPropagation}\n          @paste=${stopPropagation}\n          @keyup=${stopPropagation}\n        ></textarea>\n        <div\n          class=\"arrow\"\n          @click=${this._sendToAI}\n          @pointerdown=${stopPropagation}\n        >\n          ${ArrowUpBigIcon}\n          ${this._hasContent\n            ? html`<affine-tooltip .offset=${12}>Send to AI</affine-tooltip>`\n            : nothing}\n        </div>\n      </div>\n    </div>`;\n  }\n\n  override updated(_changedProperties: Map<PropertyKey, unknown>): void {\n    const result = super.updated(_changedProperties);\n    this._textarea.style.height = this._textarea.scrollHeight + 'px';\n    return result;\n  }\n\n  @query('.arrow')\n  private accessor _arrow!: HTMLDivElement;\n\n  @state()\n  private accessor _hasContent = false;\n\n  @query('textarea')\n  private accessor _textarea!: HTMLTextAreaElement;\n\n  @property({ attribute: false })\n  accessor onFinish: ((input: string) => void) | undefined = undefined;\n\n  @property({ attribute: false })\n  accessor onInput: ((input: string) => void) | undefined = undefined;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'ai-panel-input': AIPanelInput;\n  }\n}\n"]}