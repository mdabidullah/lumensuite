{"version":3,"file":"answer.js","sourceRoot":"","sources":["../../../../../../src/root-block/widgets/ai-panel/components/state/answer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACvD,OAAO,EAAE,SAAS,EAAE,MAAM,qBAAqB,CAAC;AAChD,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,KAAK,CAAC;AAChE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAI5D,OAAO,EAAE,iBAAiB,EAAE,MAAM,gBAAgB,CAAC;AACnD,OAAO,kBAAkB,CAAC;IAGb,aAAa;4BADzB,aAAa,CAAC,iBAAiB,CAAC;;;;sBACE,cAAc,CAAC,UAAU,CAAC;;;;;;;;;;;;;6BAAlC,SAAQ,WAA0B;;;;kCA6H1D,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;gCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;kCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;gCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;YAR/B,uKAAS,MAAM,6BAAN,MAAM,uFAAuB;YAGtC,iKAAS,IAAI,6BAAJ,IAAI,mFAAqC;YAGlD,uKAAS,MAAM,6BAAN,MAAM,uFAAQ;YAGvB,iKAAS,IAAI,6BAAJ,IAAI,mFAAc;YAvI7B,6KAwIC;;;;iBAvIiB,WAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;qBAiBT,SAAS,CAAC,SAAS,CAAC,cAAc,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAsDrD,AAvEqB,CAuEpB;QAEO,MAAM;YACb,MAAM,aAAa,GAAG,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAC1E,OAAO,IAAI,CAAA;;;;;;;QAOP,IAAI,CAAC,MAAM;gBACX,CAAC,CAAC,IAAI,CAAA;;sBAEQ,IAAI,CAAC,IAAI;sBACT,IAAI,CAAC,IAAI;;cAEjB,aAAa,CAAC,MAAM,GAAG,CAAC;oBACxB,CAAC,CAAC,IAAI,CAAA;;oBAEA,aAAa,CAAC,GAAG,CACjB,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,IAAI,CAAA;wBAClB,KAAK,KAAK,CAAC;wBACX,CAAC,CAAC,IAAI,CAAA,uCAAuC;wBAC7C,CAAC,CAAC,OAAO;;;kCAGC,IAAI,CAAC,IAAI;oCACP,CAAC,KAAK,CAAC;;;qBAGtB,CACF;iBACF;oBACH,CAAC,CAAC,OAAO;cACT,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC;oBAC1D,CAAC,CAAC,IAAI,CAAA,uCAAuC;oBAC7C,CAAC,CAAC,OAAO;cACT,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC;oBAC9B,CAAC,CAAC,IAAI,CAAA;;;8BAGU,IAAI,CAAC,IAAI;gCACP,IAAI,CAAC,MAAM,CAAC,OAAO;;;iBAGlC;oBACH,CAAC,CAAC,OAAO;WACZ;gBACH,CAAC,CAAC,OAAO;KACZ,CAAC;QACJ,CAAC;QAGD,iFAAsC;QAAtC,IAAS,MAAM,4CAAuB;QAAtC,IAAS,MAAM,kDAAuB;QAGtC,0HAAwC,SAAS,GAAC;QAAlD,IAAS,IAAI,0CAAqC;QAAlD,IAAS,IAAI,gDAAqC;QAGlD,4HAAkB,IAAI,GAAC;QAAvB,IAAS,MAAM,4CAAQ;QAAvB,IAAS,MAAM,kDAAQ;QAGvB,mIAA2B;QAA3B,IAAS,IAAI,0CAAc;QAA3B,IAAS,IAAI,gDAAc;;;;;;YAvIhB,uDAAa;;;;;SAAb,aAAa","sourcesContent":["import type { EditorHost } from '@lumensuite/block-std';\n\nimport { WithDisposable } from '@lumensuite/block-std';\nimport { baseTheme } from '@toeverything/theme';\nimport { css, html, LitElement, nothing, unsafeCSS } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport type { AIPanelAnswerConfig, CopyConfig } from '../../type.js';\n\nimport { filterAIItemGroup } from '../../utils.js';\nimport '../finish-tip.js';\n\n@customElement('ai-panel-answer')\nexport class AIPanelAnswer extends WithDisposable(LitElement) {\n  static override styles = css`\n    :host {\n      width: 100%;\n      display: flex;\n      box-sizing: border-box;\n      flex-direction: column;\n      gap: 8px;\n      padding: 0;\n    }\n\n    .answer {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: flex-start;\n      gap: 4px;\n      align-self: stretch;\n      font-family: ${unsafeCSS(baseTheme.fontSansFamily)};\n      padding: 0 12px;\n    }\n\n    .answer-head {\n      align-self: stretch;\n\n      color: var(--affine-text-secondary-color);\n\n      /* light/xsMedium */\n      font-size: var(--affine-font-xs);\n      font-style: normal;\n      font-weight: 500;\n      line-height: 20px; /* 166.667% */\n      height: 20px;\n    }\n\n    .answer-body {\n      align-self: stretch;\n\n      color: var(--affine-text-primary-color);\n      font-feature-settings:\n        'clig' off,\n        'liga' off;\n\n      /* light/sm */\n      font-size: var(--affine-font-xs);\n      font-style: normal;\n      font-weight: 400;\n      line-height: 22px; /* 157.143% */\n    }\n\n    .response-list-container {\n      display: flex;\n      flex-direction: column;\n      gap: 4px;\n    }\n\n    .response-list-container,\n    .action-list-container {\n      padding: 0 8px;\n      user-select: none;\n    }\n\n    /* set item style outside ai-item */\n    .response-list-container ai-item-list,\n    .action-list-container ai-item-list {\n      --item-padding: 4px;\n    }\n\n    .response-list-container ai-item-list {\n      --item-icon-color: var(--affine-icon-secondary);\n      --item-icon-hover-color: var(--affine-icon-color);\n    }\n  `;\n\n  override render() {\n    const responseGroup = filterAIItemGroup(this.host, this.config.responses);\n    return html`\n      <div class=\"answer\">\n        <div class=\"answer-head\">Answer</div>\n        <div class=\"answer-body\">\n          <slot></slot>\n        </div>\n      </div>\n      ${this.finish\n        ? html`\n            <ai-finish-tip\n              .copy=${this.copy}\n              .host=${this.host}\n            ></ai-finish-tip>\n            ${responseGroup.length > 0\n              ? html`\n                  <ai-panel-divider></ai-panel-divider>\n                  ${responseGroup.map(\n                    (group, index) => html`\n                      ${index !== 0\n                        ? html`<ai-panel-divider></ai-panel-divider>`\n                        : nothing}\n                      <div class=\"response-list-container\">\n                        <ai-item-list\n                          .host=${this.host}\n                          .groups=${[group]}\n                        ></ai-item-list>\n                      </div>\n                    `\n                  )}\n                `\n              : nothing}\n            ${responseGroup.length > 0 && this.config.actions.length > 0\n              ? html`<ai-panel-divider></ai-panel-divider>`\n              : nothing}\n            ${this.config.actions.length > 0\n              ? html`\n                  <div class=\"action-list-container\">\n                    <ai-item-list\n                      .host=${this.host}\n                      .groups=${this.config.actions}\n                    ></ai-item-list>\n                  </div>\n                `\n              : nothing}\n          `\n        : nothing}\n    `;\n  }\n\n  @property({ attribute: false })\n  accessor config!: AIPanelAnswerConfig;\n\n  @property({ attribute: false })\n  accessor copy: CopyConfig | undefined = undefined;\n\n  @property({ attribute: false })\n  accessor finish = true;\n\n  @property({ attribute: false })\n  accessor host!: EditorHost;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'ai-panel-answer': AIPanelAnswer;\n  }\n}\n"]}