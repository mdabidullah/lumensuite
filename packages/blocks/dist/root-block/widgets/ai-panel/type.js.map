{"version":3,"file":"type.js","sourceRoot":"","sources":["../../../../src/root-block/widgets/ai-panel/type.ts"],"names":[],"mappings":"","sourcesContent":["import type { nothing, TemplateResult } from 'lit';\n\nimport type {\n  AIError,\n  AIItemGroupConfig,\n} from '../../../_common/components/ai-item/types.js';\n\nexport interface CopyConfig {\n  allowed: boolean;\n  onCopy: () => boolean | Promise<boolean>;\n}\n\nexport interface AIPanelAnswerConfig {\n  responses: AIItemGroupConfig[];\n  actions: AIItemGroupConfig[];\n}\n\nexport interface AIPanelErrorConfig {\n  login: () => void;\n  upgrade: () => void;\n  cancel: () => void;\n  responses: AIItemGroupConfig[];\n  error?: AIError;\n}\n\nexport interface AIPanelGeneratingConfig {\n  generatingIcon: TemplateResult<1>;\n  height?: number;\n  stages?: string[];\n}\n\nexport interface AffineAIPanelWidgetConfig {\n  answerRenderer: (\n    answer: string,\n    state?: AffineAIPanelState\n  ) => TemplateResult<1> | typeof nothing;\n  generateAnswer?: (props: {\n    input: string;\n    update: (answer: string) => void;\n    finish: (type: 'success' | 'error' | 'aborted', err?: AIError) => void;\n    // Used to allow users to stop actively when generating\n    signal: AbortSignal;\n  }) => void;\n\n  finishStateConfig: AIPanelAnswerConfig;\n  generatingStateConfig: AIPanelGeneratingConfig;\n  errorStateConfig: AIPanelErrorConfig;\n  hideCallback?: () => void;\n  discardCallback?: () => void;\n\n  copy?: CopyConfig;\n}\n\nexport type AffineAIPanelState =\n  | 'hidden'\n  | 'input'\n  | 'generating'\n  | 'finished'\n  | 'error';\n"]}