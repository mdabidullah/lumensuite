{"version":3,"file":"drag-handle.js","sourceRoot":"","sources":["../../../../src/root-block/widgets/drag-handle/drag-handle.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,OAAO,EACL,kBAAkB,EAClB,iCAAiC,EACjC,qBAAqB,EACrB,kBAAkB,EAClB,sBAAsB,EACtB,kBAAkB,EAClB,aAAa,GACd,MAAM,iCAAiC,CAAC;AACzC,OAAO,EACL,aAAa,EAEb,aAAa,EAGb,eAAe,GAChB,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EACL,KAAK,EACL,eAAe,EACf,KAAK,EACL,IAAI,EACJ,QAAQ,GACT,MAAM,0BAA0B,CAAC;AAClC,OAAO,EAAmB,aAAa,EAAc,MAAM,mBAAmB,CAAC;AAC/E,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAChE,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAQvD,OAAO,EAAE,YAAY,EAAE,MAAM,wCAAwC,CAAC;AACtE,OAAO,EACL,eAAe,EACf,eAAe,GAChB,MAAM,6CAA6C,CAAC;AACrD,OAAO,EAAE,sBAAsB,EAAE,MAAM,6CAA6C,CAAC;AACrF,OAAO,EAAE,UAAU,EAAE,MAAM,6CAA6C,CAAC;AACzE,OAAO,EAAE,WAAW,EAAE,MAAM,8BAA8B,CAAC;AAC3D,OAAO,EAAE,aAAa,EAAE,MAAM,gCAAgC,CAAC;AAC/D,OAAO,EACL,2CAA2C,EAC3C,6BAA6B,EAC7B,2BAA2B,EAC3B,qCAAqC,EACrC,iCAAiC,EACjC,0BAA0B,EAC1B,yBAAyB,EACzB,iCAAiC,EACjC,uBAAuB,EACvB,uBAAuB,EACvB,iCAAiC,GAClC,MAAM,aAAa,CAAC;AACrB,OAAO,EAAE,MAAM,EAAE,MAAM,aAAa,CAAC;AACrC,OAAO,EACL,cAAc,EACd,kBAAkB,EAClB,YAAY,EACZ,iBAAiB,EACjB,sBAAsB,EACtB,mBAAmB,EACnB,4BAA4B,EAC5B,wBAAwB,EACxB,kBAAkB,EAClB,oBAAoB,EACpB,mBAAmB,EACnB,cAAc,EACd,gBAAgB,EAChB,yBAAyB,GAC1B,MAAM,YAAY,CAAC;AAEpB,MAAM,CAAC,MAAM,yBAAyB,GAAG,2BAA2B,CAAC;IAGxD,sBAAsB;4BADlC,aAAa,CAAC,yBAAyB,CAAC;;;;sBACG,eAAe;;;;;;;;;;sCAAvB,SAAQ,WAG3C;;;;gDAqiDE,KAAK,CAAC,+BAA+B,CAAC;8CAGtC,KAAK,CAAC,6BAA6B,CAAC;0CAGpC,KAAK,EAAE;YALR,iNAAiB,oBAAoB,6BAApB,oBAAoB,mHAAkB;YAGvD,2MAAiB,kBAAkB,6BAAlB,kBAAkB,+GAAkB;YAGrD,+LAAiB,cAAc,6BAAd,cAAc,uGAKf;YApjDlB,6KAqjDC;;;;iBAjjDQ,uBAAkB,GAAG,IAAI,uBAAuB,EAAE,AAAhC,CAAiC;iBAE1C,WAAM,GAAG,MAAM,AAAT,CAAU;QAi0ChC,IAAY,aAAa;YACvB,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;QACxB,CAAC;QAED,IAAI,oBAAoB;YACtB,IAAI,CAAC,IAAI,CAAC,cAAc;gBAAE,OAAO,IAAI,CAAC;YACtC,OAAO,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACnE,CAAC;QAED,IAAI,qBAAqB;YACvB,IAAI,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc;gBAAE,OAAO,IAAI,CAAC;YACvE,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,aAA2C,CAAC;YACrE,MAAM,eAAe,GAAG,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACpE,OAAO,eAAe,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC;QACnE,CAAC;QAED,IAAY,+BAA+B;YACzC,OAAO,IAAI,CAAC,oBAAoB,CAAC,aAAc,CAAC;QAClD,CAAC;QAED,IAAI,YAAY;YACd,OAAO,sBAAsB,CAAC,kBAAkB,CAAC;QACnD,CAAC;QAED,IAAI,aAAa;YACf,OAAO,IAAI,CAAC,KAA4D,CAAC;QAC3E,CAAC;QAED,IAAY,eAAe;YACzB,OAAO,kBAAkB,CAAC,IAAI,CAAC,aAAc,CAAC,CAAC;QACjD,CAAC;QAED,IAAI,cAAc;YAChB,qDAAqD;YACrD,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;gBACrC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC;gBACpC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC;QAED,MAAM,CAAC,cAAc,CAAC,MAAwB;YAC5C,OAAO,sBAAsB,CAAC,kBAAkB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACpE,CAAC;QAEO,SAAS;YACf,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACjC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACjB,CAAC;QACH,CAAC;QAEO,8BAA8B,CACpC,eAA8B;YAE9B,IAAI,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;gBAAE,OAAO,IAAI,CAAC;YAC/C,MAAM,YAAY,GAAG,IAAI,CAAC,aAA2C,CAAC;YAEtE,MAAM,IAAI,GAAG,eAAe,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;YAChD,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CACzD,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,GAAG,CACT,CAAC;YACF,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACtC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;YAExC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,GAAG,KAAK,EAAE,GAAG,GAAG,MAAM,CAAC,CAAC;YAEnD,MAAM,UAAU,GAAG,2CAA2C,GAAG,IAAI,CAAC,KAAK,CAAC;YAC5E,MAAM,OAAO,GAAG,iCAAiC,GAAG,IAAI,CAAC,KAAK,CAAC;YAE/D,IAAI,IAAI,qCAAqC,GAAG,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;YACxE,GAAG,IAAI,OAAO,CAAC;YACf,KAAK,IAAI,OAAO,CAAC;YACjB,MAAM,IAAI,OAAO,CAAC;YAElB,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QAC5C,CAAC;QAEQ,iBAAiB;YACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;YAE1B,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,EAAE,aAAa,EAAE,CAAC,CAAC,EAAE;gBACrD,CAAC,CAAC,cAAc,EAAE,CAAC;YACrB,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,CAAC,4BAA4B,CAAC,CAAC;YACnE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YAC9C,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;YACtD,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACpD,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;YACpE,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACxD,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;YACpD,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;YACrE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QACrE,CAAC;QAEQ,oBAAoB;YAC3B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACjB,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;YAC5B,IAAI,CAAC,uBAAuB,EAAE,OAAO,EAAE,CAAC;YACxC,KAAK,CAAC,oBAAoB,EAAE,CAAC;QAC/B,CAAC;QAEQ,YAAY;YACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAEjB,yCAAyC;YACzC,gEAAgE;YAChE,IAAI,CAAC,YAAY,CAAC,YAAY,CAC5B,IAAI,CAAC,oBAAoB,EACzB,cAAc,EACd,IAAI,CAAC,yBAAyB,CAC/B,CAAC;YAEF,IAAI,CAAC,YAAY,CAAC,YAAY,CAC5B,IAAI,CAAC,oBAAoB,EACzB,aAAa,EACb,IAAI,CAAC,wBAAwB,CAC9B,CAAC;YAEF,IAAI,CAAC,YAAY,CAAC,YAAY,CAC5B,IAAI,CAAC,oBAAoB,EACzB,WAAW,EACX,IAAI,CAAC,sBAAsB,CAC5B,CAAC;YAEF,iFAAiF;YACjF,IAAI,CAAC,YAAY,CAAC,YAAY,CAC5B,IAAI,CAAC,oBAAoB,EACzB,cAAc,EACd,IAAI,CAAC,yBAAyB,CAC/B,CAAC;YAEF,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,EAAE,GAAG,EAAE;gBAC7D,IAAI,CAAC,KAAK,EAAE,CAAC;YACf,CAAC,CAAC,CAAC;YAEH,IAAI,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;gBAClC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAE1E,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAuC,CAAC;gBAC9D,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,QAAQ,CAAC,KAAK,CAAC,eAAe,CAAC,EAAE,CAAC,GAAG,EAAE;oBACrC,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;wBACvB,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC;oBACjC,CAAC;gBACH,CAAC,CAAC,CACH,CAAC;gBAEF,IAAI,CAAC,YAAY,CAAC,YAAY,CAC5B,IAAI,CAAC,eAAe,EACpB,WAAW,EACX,IAAI,CAAC,4BAA4B,CAClC,CAAC;YACJ,CAAC;iBAAM,IAAI,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;gBAC7C,MAAM,YAAY,GAAG,IAAI,CAAC,aAA2C,CAAC;gBAEtE,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,YAAY,CAAC,KAAK,CAAC,mBAAmB,CAAC,EAAE,CACvC,IAAI,CAAC,0BAA0B,CAChC,CACF,CAAC;gBAEF,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,CAC9C,IAAI,CAAC,8BAA8B,CACpC,CACF,CAAC;gBAEF,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE;oBACnD,IAAI,CAAC,4BAA4B,EAAE,CAAC;gBACtC,CAAC,CAAC,CACH,CAAC;gBAEF,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,YAAY,CAAC,KAAK,CAAC,eAAe,CAAC,EAAE,CAAC,GAAG,EAAE;oBACzC,IAAI,CAAC,4BAA4B,EAAE,CAAC;gBACtC,CAAC,CAAC,CACH,CAAC;gBAEF,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,YAAY,CAAC,KAAK,CAAC,mBAAmB,CAAC,EAAE,CAAC,GAAG,EAAE;oBAC7C,IAAI,CAAC,4BAA4B,EAAE,CAAC;gBACtC,CAAC,CAAC,CACH,CAAC;gBAEF,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,YAAY,CAAC,KAAK,CAAC,kBAAkB,CAAC,EAAE,CAAC,GAAG,EAAE;oBAC5C,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,CAAC,CAAC,CACH,CAAC;gBAEF,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,YAAY,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAAE,CAAC,GAAG,EAAE;oBAC1C,IAAI,CAAC,4BAA4B,EAAE,CAAC;gBACtC,CAAC,CAAC,CACH,CAAC;YACJ,CAAC;QACH,CAAC;QAEQ,MAAM;YACb,MAAM,cAAc,GAAG,QAAQ,CAC7B,IAAI,CAAC,cAAc;gBACjB,CAAC,CAAC;oBACE,KAAK,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,IAAI;oBACvC,MAAM,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,IAAI;oBACzC,GAAG,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI;oBACnC,IAAI,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,IAAI;iBACtC;gBACH,CAAC,CAAC;oBACE,OAAO,EAAE,MAAM;iBAChB,CACN,CAAC;YAEF,OAAO,IAAI,CAAA;;;;;oDAKqC,cAAc;;KAE7D,CAAC;QACJ,CAAC;QAGD,uCAAuD;QAAvD,IAAiB,oBAAoB,0DAAkB;QAAvD,IAAiB,oBAAoB,gEAAkB;QAGvD,qCAAqD;QAArD,IAAiB,kBAAkB,wDAAkB;QAArD,IAAiB,kBAAkB,8DAAkB;QAGrD,iCAKgB;QALhB,IAAiB,cAAc,oDAKf;QALhB,IAAiB,cAAc,0DAKf;;;YA5iDR,mBAAc,GAAkB,IAAI,CAAC;YAErC,4BAAuB,GAA2B,IAAI,CAAC;YAEvD,4BAAuB,GAAG,CAChC,MAAwB,EACxB,KAAwB,EACxB,EAAE;gBACF,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,qBAAqB,EAAE,CAAC;gBACxD,MAAM,aAAa,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;gBACvE,OAAO,aAAa,CAAC;YACvB,CAAC,CAAC;YAEM,oBAAe,GAAG,CAAC,WAAqB,EAAS,EAAE;gBACzD,MAAM,GAAG,GAAmD,WAAW,CAAC,GAAG,CACzE,EAAE,CAAC,EAAE,CAAC,CAAC;oBACL,EAAE;oBACF,QAAQ,EAAE,aAAa,CAAC,OAAO;iBAChC,CAAC,CACH,CAAC;gBAEF,oEAAoE;gBACpE,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;oBACtB,IAAI,MAAM,GAAkB,KAAK,CAAC;oBAClC,GAAG,CAAC;wBACF,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;4BAClC,GAAG,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,aAAa,CAAC,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC;wBAC3D,CAAC;wBACD,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;oBAC3D,CAAC,QAAQ,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;gBAChE,CAAC,CAAC,CAAC;gBAEH,oEAAoE;gBACpE,MAAM,WAAW,GAAG,CAAC,EAAU,EAAE,EAAE;oBACjC,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,QAAQ,IAAI,EAAE,CAAC;oBAC7D,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;wBACvB,GAAG,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,aAAa,CAAC,OAAO,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;wBAC5D,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;oBACxB,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC;gBACF,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;gBAEjC,OAAO;oBACL,KAAK,EAAE,GAAG;oBACV,IAAI,EAAE,QAAQ;iBACf,CAAC;YACJ,CAAC,CAAC;YAEM,gBAAW,GAAG,CAAC,SAAyB,EAAE,EAAE;gBAClD,IAAI,SAAS,CAAC,GAAG,CAAC,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE;oBAAE,OAAO,KAAK,CAAC;gBAEnD,IAAI,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;oBAAE,OAAO,IAAI,CAAC;gBAC/C,MAAM,YAAY,GAAG,IAAI,CAAC,aAA2C,CAAC;gBAEtE,MAAM,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC;gBACvC,OAAO,CACL,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO;oBACtC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,WAAW,CAC9D,CAAC;YACJ,CAAC,CAAC;YAEM,4BAAuB,GAAG,GAAG,EAAE;gBACrC,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;YACzE,CAAC,CAAC;YAEM,iCAA4B,GAAG,GAAG,EAAE;gBAC1C,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;oBACtB,OAAO;gBACT,CAAC;gBAED,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,IAAI,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;oBACvD,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,OAAO;gBACT,CAAC;gBAED,MAAM,YAAY,GAAG,IAAI,CAAC,aAA2C,CAAC;gBACtE,MAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC;gBACvD,MAAM,gBAAgB,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,gBAAgB,CAAC;gBACzE,IAAI,OAAO,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;oBAC7C,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,OAAO;gBACT,CAAC;gBAED,MAAM,eAAe,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;gBAC5C,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,EAAE,CAAC;oBACtC,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,OAAO;gBACT,CAAC;gBAED,MAAM,OAAO,GAAG,eAAe,CAAC,OAAO,CAAC;gBACxC,MAAM,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;gBAC/D,IAAI,CAAC,iBAAiB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;oBACtD,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,OAAO;gBACT,CAAC;gBAED,IAAI,CAAC,cAAc,GAAG,eAAe,CAAC,EAAE,CAAC;gBAEzC,IAAI,CAAC,+BAA+B,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC9D,CAAC,CAAC;YAEF;;;;eAIG;YACK,kBAAa,GAAmB,GAAG,CAAC,EAAE;gBAC5C,IAAI,CAAC,IAAI,CAAC,yBAAyB;oBAAE,OAAO;gBAE5C,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;gBACtC,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC;gBAC7B,MAAM,OAAO,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC;gBAC3C,MAAM,gBAAgB,GAAG,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,yBAAyB,CAAC,CAAC;gBACvE,IAAI,CAAC,gBAAgB;oBAAE,OAAO;gBAE9B,IAAI,CAAC,IAAI,CAAC,cAAc;oBAAE,OAAO;gBAEjC,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;gBAChC,MAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;gBAE3C,sEAAsE;gBACtE,IACE,cAAc,CAAC,MAAM,GAAG,CAAC;oBACzB,CAAC,oBAAoB,CAAC,cAAc,CAAC;oBACrC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,cAAc,EACjD,CAAC;oBACD,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBAC3B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBACtD,OAAO;gBACT,CAAC;gBAED,2DAA2D;gBAC3D,MAAM,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC;gBACzC,IAAI,CAAC,MAAM;oBAAE,OAAO;gBAEpB,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBAC9B,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBACxD,CAAC;gBAED,IAAI,CAAC,kBAAkB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACpC,CAAC,CAAC;YAEM,uBAAkB,GAAG,CAC3B,MAAwB,EACxB,KAAwB,EACxB,aAA2B,EAC3B,iBAAyB,EACZ,EAAE;gBACf,IAAI,WAAwB,CAAC;gBAC7B,IAAI,aAAa,EAAE,CAAC;oBAClB,WAAW,GAAG,IAAI,WAAW,CAAC,iBAAiB,CAAC,CAAC;oBACjD,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBACpC,CAAC;qBAAM,CAAC;oBACN,IAAI,KAAK,GAAG,CAAC,CAAC;oBACd,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;wBACvB,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,qBAAqB,EAAE,CAAC,KAAK,CAAC,CAAC;oBACjE,CAAC,CAAC,CAAC;oBAEH,MAAM,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;oBAExD,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;oBAEhD,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;oBAEvD,MAAM,WAAW,GAAG,YAAY,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;oBACvE,MAAM,UAAU,GAAG,IAAI,aAAa,CAAC;wBACnC,GAAG;wBACH,UAAU,EAAE,WAAW,CAAC,KAAK;qBAC9B,CAAC,CAAC;oBACH,MAAM,eAAe,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC;oBAE5C,MAAM,MAAM,GAAG,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;oBAC3D,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;oBACpC,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;oBACpC,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC;oBAEhC,WAAW,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC;oBACtC,WAAW,CAAC,QAAQ,GAAG,eAAe,CAAC;oBACvC,WAAW,CAAC,QAAQ,GAAG,GAAG,EAAE;wBAC1B,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;oBAC7C,CAAC,CAAC;oBACF,WAAW,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,qBAAqB,IAAI,CAAC;oBAClG,WAAW,CAAC,KAAK,CAAC,SAAS,GAAG,aAAa,IAAI,OAAO,IAAI,aACxD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SACpB,GAAG,CAAC;oBAEJ,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;gBACnD,CAAC;gBACD,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;gBACvC,OAAO,WAAW,CAAC;YACrB,CAAC,CAAC;YAEM,yBAAoB,GAAG,GAAG,EAAE;gBAClC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;oBACxB,IAAI,CAAC,aAAa,GAAG,IAAI,aAAa,EAAE,CAAC;oBACzC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAChD,CAAC;YACH,CAAC,CAAC;YAEF;;;eAGG;YACK,oBAAe,GAAmB,GAAG,CAAC,EAAE;gBAC9C,IAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW;oBAAE,OAAO,KAAK,CAAC;gBACtD,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;oBAC5D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBACjB,OAAO,KAAK,CAAC;gBACf,CAAC;gBAED,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;gBACtC,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC;gBAC7B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAc,CAAC,EAAE,CAAC;oBACxC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBACjB,OAAO,IAAI,CAAC;gBACd,CAAC;gBAED,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;oBAC/C,IACE,MAAM,CAAC,SAAS,EAAE,CAAC;wBACjB,KAAK;wBACL,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;wBACvC,WAAW,EAAE,IAAI,CAAC,WAAW;wBAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ;wBACvB,WAAW,EAAE,IAAI,CAAC,WAAW;wBAC7B,SAAS,EAAE,IAAI,CAAC,SAAS;wBACzB,UAAU,EAAE,IAAI,CAAC,IAAI;qBACtB,CAAC,EACF,CAAC;wBACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;wBACjB,IAAI,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;4BACtC,IAAI,CAAC,4BAA4B,EAAE,CAAC;wBACtC,CAAC;wBACD,OAAO,IAAI,CAAC;oBACd,CAAC;gBACH,CAAC;gBAED,yDAAyD;gBACzD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAEvB,IAAI,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;oBACtC,IAAI,CAAC,4BAA4B,EAAE,CAAC;gBACtC,CAAC;gBAED,OAAO,IAAI,CAAC;YACd,CAAC,CAAC;YAEF;;;;;eAKG;YACK,qBAAgB,GAAmB,GAAG,CAAC,EAAE;gBAC/C,IAAI,IAAI,CAAC,yBAAyB,IAAI,IAAI,CAAC,4BAA4B,EAAE,CAAC;oBACxE,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,CAAC;gBAED,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;oBACzD,OAAO,KAAK,CAAC;gBACf,CAAC;gBAED,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;gBAC/C,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;gBAEtC,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;oBAC/C,IAAI,MAAM,CAAC,UAAU,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC;wBACtD,OAAO,IAAI,CAAC;oBACd,CAAC;gBACH,CAAC;gBAED,0DAA0D;gBAC1D,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACjC,CAAC,CAAC;YAEF;;eAEG;YACK,sBAAiB,GAAmB,GAAG,CAAC,EAAE;gBAChD,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;gBACtC,gEAAgE;gBAChE,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC;gBAC7B,IAAI,MAAM,KAAK,CAAC,EAAE,CAAC;oBACjB,OAAO,KAAK,CAAC;gBACf,CAAC;gBAED,2DAA2D;gBAC3D,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;oBAC/C,IACE,MAAM,CAAC,WAAW,EAAE,CAAC;wBACnB,KAAK;wBACL,aAAa,EAAE,IAAI,CAAC,cAAc;wBAClC,aAAa,EAAE,IAAI,CAAC,cAAc,IAAI,EAAE;wBACxC,UAAU,EAAE,IAAI,CAAC,IAAI;qBACtB,CAAC,EACF,CAAC;wBACD,OAAO,IAAI,CAAC;oBACd,CAAC;gBACH,CAAC;gBACD,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAClC,CAAC,CAAC;YAEM,oCAA+B,GAAG,CAAC,OAAe,EAAE,EAAE;gBAC5D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAC1C,CAAC,CAAC;YAEM,yBAAoB,GAAG,CAAC,KAAqB,EAAQ,EAAE;gBAC7D,wFAAwF;gBACxF,2CAA2C;gBAC3C,6CAA6C;gBAC7C,kDAAkD;gBAClD,gDAAgD;gBAChD,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC,qBAAqB,EAAE,CAAC;gBAEjE,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBAExC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBACrB,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC,CAAC;oBAC1D,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,qBAAqB,EAAE,CAAC,GAAG,CAAC,CAAC;oBACvD,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,qBAAqB,EAAE,CAAC,KAAK,CAAC,CAAC;oBAC7D,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,qBAAqB,EAAE,CAAC,MAAM,CAAC,CAAC;gBAClE,CAAC,CAAC,CAAC;gBAEH,MAAM,UAAU,GAAG,wBAAwB,CAAC,MAAM,CAAC,CAAC;gBAEpD,MAAM,gBAAgB,GACpB,IAAI,CAAC,+BAA+B,CAAC,qBAAqB,EAAE,CAAC;gBAC/D,IAAI,CAAC,gBAAgB;oBAAE,OAAO,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAEnD,IAAI,IAAI,gBAAgB,CAAC,IAAI,CAAC;gBAC9B,KAAK,IAAI,gBAAgB,CAAC,IAAI,CAAC;gBAC/B,GAAG,IAAI,gBAAgB,CAAC,GAAG,CAAC;gBAC5B,MAAM,IAAI,gBAAgB,CAAC,GAAG,CAAC;gBAE/B,IAAI,IAAI,IAAI,CAAC,qBAAqB,CAAC;gBACnC,KAAK,IAAI,IAAI,CAAC,qBAAqB,CAAC;gBACpC,GAAG,IAAI,IAAI,CAAC,qBAAqB,CAAC;gBAClC,MAAM,IAAI,IAAI,CAAC,qBAAqB,CAAC;gBAErC,4BAA4B;gBAC5B,IAAI;oBACF,CAAC,2BAA2B,GAAG,UAAU,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;gBAC3E,GAAG,IAAI,uBAAuB,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC5C,KAAK,IAAI,uBAAuB,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC9C,MAAM,IAAI,uBAAuB,GAAG,IAAI,CAAC,KAAK,CAAC;gBAE/C,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;YAC5C,CAAC,CAAC;YAEF;;eAEG;YACK,mBAAc,GAAG,CAAC,KAAwB,EAAqB,EAAE;gBACvE,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAClD,MAAM,YAAY,GAAG,sBAAsB,CACzC,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,aAAa,EAClB,KAAK,CACN,CAAC;gBACF,IAAI,CAAC,YAAY;oBAAE,OAAO,IAAI,CAAC;gBAE/B,MAAM,OAAO,GAAG,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC;gBACtC,MAAM,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC;gBAEjC,MAAM,UAAU,GAAG,aAAa,CAAC,KAAK,EAAE,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBAC7D,IAAI,UAAU;oBAAE,OAAO,IAAI,CAAC;gBAE5B,yDAAyD;gBACzD,0DAA0D;gBAC1D,MAAM,oBAAoB,GACxB,IAAI,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC;oBAClC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;gBAEjE,IAAI,oBAAoB,EAAE,CAAC;oBACzB,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;oBAC1D,IAAI,CAAC,MAAM;wBAAE,OAAO,IAAI,CAAC;oBACzB,MAAM,aAAa,GAAG,IAAI,CAAC,+BAA+B,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;oBACtE,IAAI,CAAC,aAAa;wBAAE,OAAO,IAAI,CAAC;oBAChC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,aAAa,CAAC,CAAC;wBAAE,OAAO,IAAI,CAAC;gBACxE,CAAC;gBAED,6CAA6C;gBAC7C,uCAAuC;gBACvC,6CAA6C;gBAC7C,IACE,YAAY,CACV,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAClD,OAAO,CACR;oBACD,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,EAAE,KAAK,CAAC,EAC/C,CAAC;oBACD,OAAO,IAAI,CAAC;gBACd,CAAC;gBAED,IAAI,IAAI,GAAG,IAAI,CAAC;gBAChB,IAAI,QAAQ,GAAa,QAAQ,CAAC;gBAElC,MAAM,MAAM,GAAG,cAAc,CAC3B,KAAK,EACL,KAAK,EACL,YAAY,EACZ,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,qBAAqB,EACvC,oBAAoB,KAAK,KAAK,CAC/B,CAAC;gBAEF,IAAI,MAAM,EAAE,CAAC;oBACX,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;oBACnB,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;gBAC7B,CAAC;gBAED,IAAI,oBAAoB,IAAI,QAAQ,KAAK,IAAI;oBAAE,OAAO,IAAI,CAAC;gBAE3D,MAAM,aAAa,GAAG;oBACpB,IAAI;oBACJ,WAAW,EAAE,OAAO;oBACpB,QAAQ;iBACT,CAAC;gBAEF,OAAO,aAAa,CAAC;YACvB,CAAC,CAAC;YAEM,sBAAiB,GAAG,GAAqB,EAAE;gBACjD,IAAI,CAAC,IAAI,CAAC,yBAAyB,IAAI,CAAC,IAAI,CAAC,cAAc;oBAAE,OAAO,EAAE,CAAC;gBAEvE,MAAM,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAAC;gBAC7C,IAAI,CAAC,UAAU;oBAAE,OAAO,EAAE,CAAC;gBAE3B,MAAM,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC;gBACvC,IAAI,MAAM,GAAqB,EAAE,CAAC;gBAElC,uFAAuF;gBACvF,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,IAAI,oBAAoB,CAAC,UAAU,CAAC,EAAE,CAAC;oBAC9D,MAAM,KAAK,GAAG,qBAAqB,EAAE,CAAC;oBACtC,IAAI,CAAC,KAAK;wBAAE,OAAO,EAAE,CAAC;oBACtB,IAAI,CAAC,IAAI,CAAC,aAAa;wBAAE,OAAO,EAAE,CAAC;oBACnC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,iCAAiC,CAAC,KAAK,EAAE;wBACnE,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,SAAS;wBACxC,IAAI,EAAE,SAAS;qBAChB,CAAC,CAAC;gBACL,CAAC;qBAAM,CAAC;oBACN,MAAM,GAAG,IAAI,CAAC,cAAc;yBACzB,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,+BAA+B,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;yBACjE,MAAM,CAAC,CAAC,KAAK,EAA2B,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;gBACzD,CAAC;gBAED,IACE,YAAY,CACV,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,EAClC,IAAI,CAAC,cAAc,CACpB,EACD,CAAC;oBACD,OAAO,MAAM,CAAC;gBAChB,CAAC;gBAED,OAAO,CAAC,UAAU,CAAC,CAAC;YACtB,CAAC,CAAC;YAEF,2CAA2C;YACnC,8BAAyB,GAAG,CAAC,KAAqB,EAAE,EAAE;gBAC5D,MAAM,aAAa,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;gBAC9C,MAAM,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC,qBAAqB,EAAE,CAAC;gBAC9C,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;gBACnE,OAAO,CACL,CAAC,GAAG;oBACF,UAAU;oBACV,IAAI,CAAC,+BAA+B,CAAC,qBAAqB,EAAE,CAAC,GAAG,CAAC;oBACnE,IAAI,CAAC,qBAAqB,CAC3B,CAAC;YACJ,CAAC,CAAC;YAEM,kCAA6B,GAAG,CAAC,UAAsB,EAAE,EAAE;gBACjE,IAAI,IAAI,CAAC,uBAAuB,EAAE,CAAC;oBACjC,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,CAAC;oBACvC,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;gBACtC,CAAC;gBAED,IAAI,CAAC,uBAAuB,GAAG,IAAI,eAAe,EAAE,CAAC;gBACrD,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAC9B,UAAU,CAAC,YAAY,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAC/C,CAAC;gBAEF,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC9E,CAAC,CAAC;YAEM,+BAA0B,GAAG,CAAC,OAAqB,EAAE,EAAE;gBAC7D,IAAI,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;oBAC/B,IAAI,CAAC,4BAA4B,EAAE,CAAC;gBACtC,CAAC;qBAAM,CAAC;oBACN,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,CAAC;YACH,CAAC,CAAC;YAEM,mCAA8B,GAAG,CAAC,EACxC,IAAI,EACJ,MAAM,GAIP,EAAE,EAAE;gBACH,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE,CAAC;oBACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;oBAClB,IAAI,CAAC,kCAAkC,EAAE,CAAC;gBAC5C,CAAC;gBAED,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;oBACjE,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC;oBAC1B,IAAI,CAAC,4BAA4B,EAAE,CAAC;gBACtC,CAAC;gBAED,IAAI,IAAI,CAAC,4BAA4B,EAAE,CAAC;oBACtC,IAAI,CAAC,+BAA+B,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;oBAC5D,IAAI,CAAC,iCAAiC,EAAE,CAAC;gBAC3C,CAAC;qBAAM,CAAC;oBACN,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,CAAC;YACH,CAAC,CAAC;YAEM,UAAK,GAAG,CAAC,KAAK,GAAG,KAAK,EAAE,EAAE;gBAChC,yBAAyB,EAAE,CAAC;gBAE5B,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;gBACvC,IAAI,CAAC,4BAA4B,GAAG,KAAK,CAAC;gBAC1C,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAElC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAE3B,IAAI,IAAI,CAAC,oBAAoB,EAAE,CAAC;oBAC9B,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;gBACnD,CAAC;gBAED,IAAI,KAAK,EAAE,CAAC;oBACV,IAAI,CAAC,MAAM,EAAE,CAAC;gBAChB,CAAC;YACH,CAAC,CAAC;YAEF,iDAAiD;YACzC,qBAAgB,GAAG,CAAC,KAAsB,EAAE,EAAE;gBACpD,IAAI,CAAC,KAAK;oBAAE,OAAO,KAAK,CAAC;gBACzB,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAC7B,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,OAAO,KAAK,KAAK,CAAC,KAAK,CAAC,EAAE,CAClD,CAAC;YACJ,CAAC,CAAC;YAEM,yBAAoB,GAAG,KAAK,CAAC;YAE7B,8BAAyB,GAAG,KAAK,CAAC;YAElC,iCAA4B,GAAG,KAAK,CAAC;YAErC,qBAAgB,GAAmB,GAAG,CAAC,EAAE;gBAC/C,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;oBACxC,OAAO;gBACT,CAAC;gBAED,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;gBACtC,MAAM,KAAK,GAAG,KAAK,CAAC,KAAsB,CAAC;gBAC3C,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;gBAExB,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,KAAK,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC;gBACnD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;YACxD,CAAC,CAAC;YAEM,wBAAmB,GAAkB,IAAI,CAAC;YAE1C,qBAAgB,GAA8C,IAAI,CAAC;YAEnE,eAAU,GAAG,CAAC,KAAwB,EAAE,EAAE;gBAChD,MAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC;gBACvC,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAC/B,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;gBAC/C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAEjB,0DAA0D;gBAC1D,IAAI,CAAC,aAAa,EAAE,CAAC;oBACnB,MAAM,MAAM,GAAG,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oBACpD,IAAI,CAAC,MAAM;wBAAE,OAAO,KAAK,CAAC;oBAE1B,MAAM,yBAAyB,GAC7B,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC;oBAClD,IAAI,CAAC,yBAAyB;wBAAE,OAAO,KAAK,CAAC;oBAE7C,MAAM,cAAc,GAAG,iCAAiC,CAAC,gBAAgB,CAAC;yBACvE,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;yBAC7B,MAAM,CAAC,CAAC,CAAC,EAAmB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvC,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC;wBAAE,OAAO,KAAK,CAAC;oBAE9C,MAAM,kBAAkB,GAAG,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;wBACrD,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;wBAC5C,OAAO,aAAa,CAAC,MAAM,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBACnD,CAAC,CAAC,CAAC;oBACH,IAAI,kBAAkB;wBAAE,OAAO,IAAI,CAAC;oBAEpC,MAAM,YAAY,GAAG,IAAI,CAAC,aAA2C,CAAC;oBAEtE,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,GAAG,EAAE,WAAW,EAAE,GAAG,YAAY,CAAC,QAAQ,CAAC;oBAEvE,MAAM,SAAS,GAAG,YAAY,CAAC,gBAAgB,CAC7C,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,YAAY,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC,EAChE;wBACE,KAAK,EAAE,IAAI,CAAC,SAAS;qBACtB,CACF,CAAC;oBACF,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,SAAS,CAAmB,CAAC;oBACxE,IAAI,CAAC,YAAY;wBAAE,OAAO;oBAE1B,MAAM,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;oBACnD,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC;oBAC1B,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC;oBAC1B,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,YAAY,EAAE;wBACjC,IAAI,EAAE,KAAK,CAAC,SAAS,EAAE;wBACvB,QAAQ,EAAE;4BACR,GAAG,YAAY,CAAC,QAAQ;4BACxB,KAAK,EAAE,IAAI,CAAC,SAAS;yBACtB;qBACF,CAAC,CAAC;oBAEH,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC;oBAChC,IAAI,MAAM,EAAE,CAAC;wBACX,MAAM,eAAe,GAAG,kBAAkB,CAAC,cAAc,CAAC,CAAC;wBAE3D,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;oBACpD,CAAC;yBAAM,CAAC;wBACN,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;oBACpD,CAAC;oBAED,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;wBACjC,QAAQ,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC;wBAC3B,OAAO,EAAE,IAAI;qBACd,CAAC,CAAC;oBAEH,OAAO,IAAI,CAAC;gBACd,CAAC;gBAED,2DAA2D;gBAC3D,IACE,YAAY,CACV,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,EACvD,aAAa,CACd,EACD,CAAC;oBACD,OAAO,KAAK,CAAC;gBACf,CAAC;gBAED,MAAM,cAAc,GAAG,iCAAiC,CAAC,gBAAgB,CAAC;qBACvE,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;qBAC7B,MAAM,CAAC,CAAC,CAAC,EAAmB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;oBAC3B,OAAO,KAAK,CAAC;gBACf,CAAC;gBAED,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;gBACzD,IAAI,CAAC,WAAW;oBAAE,OAAO;gBAEzB,MAAM,cAAc,GAAG,QAAQ,KAAK,IAAI,CAAC;gBAEzC,MAAM,MAAM,GAAG,cAAc;oBAC3B,CAAC,CAAC,WAAW;oBACb,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;gBACtC,IAAI,CAAC,MAAM;oBAAE,OAAO;gBAEpB,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC;gBAEhC,IAAI,cAAc,EAAE,CAAC;oBACnB,IAAI,MAAM,EAAE,CAAC;wBACX,MAAM,eAAe,GAAG,kBAAkB,CAAC,cAAc,CAAC,CAAC;wBAE3D,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC;oBACnD,CAAC;yBAAM,CAAC;wBACN,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;oBACnD,CAAC;gBACH,CAAC;qBAAM,CAAC;oBACN,IAAI,MAAM,EAAE,CAAC;wBACX,MAAM,eAAe,GAAG,kBAAkB,CAAC,cAAc,CAAC,CAAC;wBAE3D,MAAM,WAAW,GACf,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAExE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,eAAe,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;oBAC3D,CAAC;yBAAM,CAAC;wBACN,IAAI,CAAC,GAAG,CAAC,UAAU,CACjB,cAAc,EACd,MAAM,EACN,WAAW,EACX,QAAQ,KAAK,QAAQ,CACtB,CAAC;oBACJ,CAAC;gBACH,CAAC;gBAED,8CAA8C;gBAC9C,8CAA8C;gBAC9C,2CAA2C;gBAC3C,6CAA6C;gBAC7C,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,MAAM;wBAAE,OAAO;oBACpB,2DAA2D;oBAC3D,qDAAqD;oBACrD,MAAM,aAAa,GAAG,IAAI,CAAC,+BAA+B,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;oBACtE,IAAI,aAAa,EAAE,CAAC;wBAClB,MAAM,iBAAiB,GAAG,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;4BACnD,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;wBAC1C,CAAC,CAAC,CAAC;wBACH,IAAI,CAAC,iBAAiB;4BAAE,OAAO;wBAE/B,MAAM,IAAI,GAAG,kBAAkB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;wBACrD,IAAI,CAAC,IAAI;4BAAE,OAAO;wBAClB,IAAI,CAAC,kBAAkB,CAAC,iBAAqC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;oBAC1E,CAAC;gBACH,CAAC,EAAE,CAAC,CAAC,CAAC;gBAEN,OAAO,IAAI,CAAC;YACd,CAAC,CAAC;YAEM,6BAAwB,GAAG,GAAG,EAAE;gBACtC,IAAI,CAAC,IAAI,CAAC,yBAAyB,IAAI,CAAC,IAAI,CAAC,cAAc;oBAAE,OAAO;gBAEpE,MAAM,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC;gBACxC,IAAI,CAAC,KAAK;oBAAE,OAAO;gBAEnB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC;YACjE,CAAC,CAAC;YAEM,8BAAyB,GAAG,GAAG,EAAE;gBACvC,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC;gBAC5C,MAAM,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC;gBACxC,IAAI,CAAC,SAAS,IAAI,CAAC,OAAO;oBAAE,OAAO;gBAEnC,IAAI,IAAI,CAAC,yBAAyB,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;oBAC1D,MAAM,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC;oBACxC,IAAI,CAAC,KAAK;wBAAE,OAAO;oBAEnB,MAAM,OAAO,GAAG,6BAA6B,GAAG,IAAI,CAAC,KAAK,CAAC;oBAC3D,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,GAAG,OAAO,IAAI,CAAC;oBAC5C,SAAS,CAAC,KAAK,CAAC,aAAa,GAAG,GAAG,OAAO,IAAI,CAAC;oBAC/C,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,oBAAoB,CAAC;oBAElD,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,GACpB,iCAAiC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SACxD,IAAI,CAAC;oBACL,OAAO,CAAC,KAAK,CAAC,YAAY,GAAG,GAC3B,iCAAiC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SACxD,IAAI,CAAC;oBAEL,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;gBACnC,CAAC;qBAAM,IAAI,IAAI,CAAC,4BAA4B,EAAE,CAAC;oBAC7C,MAAM,eAAe,GAAG,IAAI,CAAC,qBAAqB,CAAC;oBACnD,IAAI,CAAC,eAAe;wBAAE,OAAO;oBAE7B,IAAI,CAAC,cAAc;wBACjB,IAAI,CAAC,8BAA8B,CAAC,eAAe,CAAC,CAAC;oBACvD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;gBACnC,CAAC;YACH,CAAC,CAAC;YAEM,8BAAyB,GAAG,GAAG,EAAE;gBACvC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAE3B,IAAI,IAAI,CAAC,4BAA4B;oBAAE,OAAO;gBAE9C,IAAI,IAAI,CAAC,QAAQ;oBAAE,OAAO;gBAE1B,IAAI,CAAC,IAAI,CAAC,cAAc;oBAAE,OAAO;gBACjC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACxD,CAAC,CAAC;YAEM,2BAAsB,GAAG,GAAG,EAAE;gBACpC,IAAI,CAAC,IAAI,CAAC,yBAAyB;oBAAE,OAAO;gBAC5C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC7B,CAAC,CAAC;YAEM,gBAAW,GAAG,CAAC,KAAwB,EAAE,EAAE;gBACjD,IAAI,CAAC,SAAS,EAAE,CAAC;gBAEjB,IAAI,CAAC,KAAK,GAAG,qBAAqB,CAAC,GAAG,EAAE;oBACtC,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;oBACvC,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBACzC,CAAC,CAAC,CAAC;gBACH,OAAO,IAAI,CAAC;YACd,CAAC,CAAC;YAEM,iBAAY,GAAG,CAAC,KAAwB,EAAE,EAAE;gBAClD,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC;gBACxB,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;gBACzB,MAAM,OAAO,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC;gBAC3C,MAAM,gBAAgB,GAAG,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,yBAAyB,CAAC,CAAC;gBACvE,8DAA8D;gBAC9D,0CAA0C;gBAC1C,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACtB,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,OAAO,KAAK,CAAC;gBACf,CAAC;gBAED,IAAI,CAAC,IAAI,CAAC,yBAAyB,IAAI,CAAC,IAAI,CAAC,cAAc;oBAAE,OAAO;gBACpE,0CAA0C;gBAC1C,MAAM,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAAC;gBAC7C,IAAI,CAAC,UAAU;oBAAE,OAAO,KAAK,CAAC;gBAE9B,IAAI,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC;gBAErC,0CAA0C;gBAC1C,2DAA2D;gBAC3D,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,IAAI,oBAAoB,CAAC,UAAU,CAAC,EAAE,CAAC;oBAC9D,MAAM,eAAe,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;oBAChD,IACE,eAAe;wBACf,eAAe,CAAC,UAAU,GAAG,CAAC;wBAC9B,IAAI,CAAC,aAAa,EAClB,CAAC;wBACD,MAAM,KAAK,GAAG,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;wBAC5C,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,iCAAiC,CACjE,KAAK,EACL;4BACE,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,SAAS;4BACxC,IAAI,EAAE,SAAS;yBAChB,CACF,CAAC;wBACF,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;wBAChC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC;oBACnC,CAAC;gBACH,CAAC;gBAED,mCAAmC;gBACnC,uDAAuD;gBACvD,sCAAsC;gBACtC,IACE,UAAU,CAAC,MAAM,KAAK,CAAC;oBACvB,CAAC,YAAY,CACX,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,EAC9C,IAAI,CAAC,cAAc,CACpB,EACD,CAAC;oBACD,MAAM,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC;oBACxC,IAAI,KAAK,EAAE,CAAC;wBACV,IAAI,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACnC,CAAC;gBACH,CAAC;gBAED,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc;qBAC/B,GAAG,CAAC,SAAS,CAAC,EAAE;oBACf,OAAO,IAAI,CAAC,+BAA+B,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;gBACjE,CAAC,CAAC;qBACD,MAAM,CAAC,CAAC,OAAO,EAAyC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;gBAEzE,qFAAqF;gBACrF,0EAA0E;gBAC1E,MAAM,uBAAuB,GAAG,iCAAiC,CAC/D,MAAM,CACa,CAAC;gBAEtB,IAAI,uBAAuB,CAAC,MAAM,KAAK,CAAC;oBAAE,OAAO,KAAK,CAAC;gBAEvD,IAAI,CAAC,cAAc,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;gBACpD,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,OAAO,IAAI,CAAC;YACd,CAAC,CAAC;YAEF;;;eAGG;YACK,wBAAmB,GAAG,CAAC,KAAwB,EAAE,EAAE;gBACzD,IAAI,IAAI,CAAC,4BAA4B;oBAAE,OAAO;gBAE9C,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAClD,MAAM,YAAY,GAAG,sBAAsB,CACzC,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,aAAa,EAClB,KAAK,CACN,CAAC;gBACF,IAAI,CAAC,YAAY,EAAE,CAAC;oBAClB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;oBAC3B,OAAO;gBACT,CAAC;gBAED,MAAM,OAAO,GAAG,YAAY,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;gBACzD,IAAI,CAAC,OAAO;oBAAE,OAAO;gBAErB,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;gBAE9B,IAAI,mBAAmB,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;oBAC3D,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,OAAO;gBACT,CAAC;gBAED,4FAA4F;gBAC5F,IACE,CAAC,CAAC,IAAI,CAAC,mBAAmB;oBACxB,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,mBAAmB,CAAC;oBAC9D,CAAC,IAAI,CAAC,yBAAyB,CAAC;oBAClC,CAAC,IAAI,CAAC,oBAAoB,EAC1B,CAAC;oBACD,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBACtD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,cAAc,CAAC;gBACjD,CAAC;YACH,CAAC,CAAC;YAEM,uBAAkB,GAAmB,GAAG,CAAC,EAAE;gBACjD,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;gBACtC,KAAK,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC;gBAE3B,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC;gBAC7B,MAAM,OAAO,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC;gBAC3C,IAAI,CAAC,OAAO;oBAAE,OAAO;gBAErB,MAAM,EAAE,aAAa,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC;gBACpC,mEAAmE;gBACnE,+CAA+C;gBAC/C,uBAAuB;gBACvB,MAAM,cAAc,GAAG,kBAAkB,CAAC,aAAa,CAAC,CAAC;gBACzD,MAAM,iBAAiB,GAAG,OAAO,CAAC,SAAS,CAAC,QAAQ,CAClD,sBAAsB,CACvB,CAAC;gBACF,MAAM,MAAM,GAAG,CAAC,CAAC,cAAc,EAAE,OAAO,CAAC,uBAAuB,CAAC,CAAC;gBAElE,MAAM,YAAY,GAAG,CAAC,CAAC,cAAc,EAAE,OAAO,CAAC,yBAAyB,CAAC,CAAC;gBAC1E,IAAI,iBAAiB,IAAI,CAAC,YAAY,IAAI,CAAC,MAAM,EAAE,CAAC;oBAClD,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,CAAC;YACH,CAAC,CAAC;YAEM,uBAAkB,GAAG,GAAG,EAAE;gBAChC,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;oBACrB,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBAC1B,CAAC;YACH,CAAC,CAAC;YAEM,yBAAoB,GAAG,GAAG,EAAE;gBAClC,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;oBACvB,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;oBAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC5B,CAAC;YACH,CAAC,CAAC;YAEM,WAAM,GAAG,GAAG,EAAE;gBACpB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;gBAC3B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;gBACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;gBACjC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;gBACf,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBAEtB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;gBAChC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBAC7B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;gBACvC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,IAAI,CAAC,4BAA4B,GAAG,KAAK,CAAC;gBAE1C,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC5B,IAAI,CAAC,YAAY,EAAE,CAAC;YACtB,CAAC,CAAC;YAEM,iBAAY,GAAG,GAAG,EAAE;gBAC1B,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,8BAA8B,CAAC,CAAC;YAC5E,CAAC,CAAC;YAEM,qBAAgB,GAAG,GAAG,EAAE;gBAC9B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;gBACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,IAAI,CAAC,aAAa;oBAAE,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC;YACzD,CAAC,CAAC;YAEM,uBAAkB,GAAG,CAAC,MAAwB,EAAE,MAAe,EAAE,EAAE;gBACzE,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;gBAChC,MAAM,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CACpC,SAAS,CAAC,MAAM,CAAC,OAAO,EAAE;oBACxB,OAAO,EAAE,KAAK,CAAC,OAAO;iBACvB,CAAC,CACH,CAAC;gBAEF,qCAAqC;gBACrC,8DAA8D;gBAC9D,IAAI,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;oBACtC,MAAM,gBAAgB,GAAG,MAAM;wBAC7B,CAAC,CAAC,MAAM;wBACR,CAAC,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC;oBAC5C,IAAI,CAAC,gBAAgB;wBAAE,OAAO;oBAC9B,MAAM,gBAAgB,GAAG,SAAS,CAAC,MAAM,CACvC,SAAS,EACT,MAAM,CAAC,CAAC,CAAE,CAAC,OAAO,EAClB,CAAC,gBAAgB,CAAC,EAClB,IAAI,CACL,CAAC;oBAEF,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACpC,CAAC;gBAED,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC5B,CAAC,CAAC;YAEF,gFAAgF;YACxE,gCAA2B,GAAG,CAAC,OAAe,EAAE,EAAE;gBACxD,MAAM,KAAK,GAAG,IAAI,CAAC,+BAA+B,CAAC,OAAO,CAAC,CAAC;gBAC5D,IAAI,CAAC,KAAK;oBAAE,OAAO;gBAEnB,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC;gBAC5C,MAAM,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC;gBACxC,IAAI,CAAC,SAAS,IAAI,CAAC,OAAO;oBAAE,OAAO;gBAEnC,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;gBAEtC,MAAM,gBAAgB,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;gBAE1D,8EAA8E;gBAE9E,MAAM,eAAe,GAAG,4BAA4B,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAElE,4CAA4C;gBAC5C,yBAAyB,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACnC,yBAAyB;gBAEzB,MAAM,MAAM,GAAG,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;gBAErD,MAAM,WAAW,GACf,CAAC,CAAC,eAAe,GAAG,0BAA0B,CAAC,GAAG,CAAC,CAAC;oBACpD,IAAI,CAAC,KAAK;oBACV,IAAI,CAAC,SAAS,CAAC;gBAEjB,0CAA0C;gBAC1C,MAAM,UAAU,GAAG,WAAW,GAAG,MAAM,GAAG,gBAAgB,CAAC,GAAG,CAAC;gBAC/D,MAAM,aAAa,GACjB,gBAAgB,CAAC,MAAM;oBACvB,UAAU;oBACV,0BAA0B,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;gBAE3D,MAAM,UAAU,GAAG,CAAC,UAAoB,EAAE,EAAE;oBAC1C,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,MAAM,CAAC;oBACxE,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,GAAG,UAAU,IAAI,CAAC;oBAC/C,SAAS,CAAC,KAAK,CAAC,aAAa,GAAG,GAAG,aAAa,IAAI,CAAC;oBACrD,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,GACtB,2BAA2B,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAClD,IAAI,CAAC;oBACL,SAAS,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,gBAAgB,CAAC,IAAI,IAAI,CAAC;oBACpD,SAAS,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,gBAAgB,CAAC,GAAG,IAAI,CAAC;oBAClD,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;oBACjC,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,gBAAgB,CAAC,MAAM,IAAI,CAAC;gBAC1D,CAAC,CAAC;gBAEF,IAAI,cAAc,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC,EAAE,CAAC;oBAC7D,UAAU,CAAC,IAAI,CAAC,CAAC;gBACnB,CAAC;qBAAM,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;oBACtC,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;wBAC9B,UAAU,CACR,IAAI,CAAC,oBAAoB;4BACvB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC,CACnD,CAAC;;wBACC,UAAU,CAAC,KAAK,CAAC,CAAC;gBACzB,CAAC;qBAAM,CAAC;oBACN,UAAU,CAAC,KAAK,CAAC,CAAC;gBACpB,CAAC;gBAED,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,GACpB,yBAAyB,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAChD,IAAI,CAAC;gBACL,OAAO,CAAC,KAAK,CAAC,YAAY,GAAG,GAC3B,iCAAiC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SACxD,IAAI,CAAC;gBAEL,IAAI,CAAC,6BAA6B,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAChD,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE,CAAC,EAAE,CAAC;oBAC9D,IAAI,CAAC,gBAAgB,GAAG;wBACtB,EAAE,EAAE,KAAK,CAAC,OAAO;wBACjB,EAAE,EAAE,KAAK;qBACV,CAAC;gBACJ,CAAC;YACH,CAAC,CAAC;YAEM,oCAA+B,GAAG,KAAK,IAAI,EAAE;gBACnD,IAAI,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;oBAAE,OAAO;gBAC1C,MAAM,YAAY,GAAG,IAAI,CAAC,aAA2C,CAAC;gBACtE,MAAM,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC;gBAE1C,IAAI,CAAC,IAAI,CAAC,cAAc;oBAAE,OAAO;gBACjC,MAAM,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC;gBACxC,IAAI,CAAC,KAAK;oBAAE,OAAO;gBAEnB,MAAM,eAAe,GAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;gBAC5E,IAAI,CAAC,eAAe;oBAAE,OAAO;gBAE7B,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC;gBAC5C,MAAM,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC;gBACxC,IAAI,CAAC,SAAS,IAAI,CAAC,OAAO;oBAAE,OAAO;gBAEnC,MAAM,IAAI,GAAG,eAAe,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;gBAChD,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAC3D,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,GAAG,CACT,CAAC;gBACF,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;gBAExC,MAAM,OAAO,GACX,IAAI;oBACJ,CAAC,qCAAqC;wBACpC,2CAA2C,CAAC;wBAC5C,IAAI,CAAC,KAAK,CAAC;gBAEf,MAAM,MAAM,GAAG,GAAG,CAAC;gBAEnB,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC;gBACpC,SAAS,CAAC,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC;gBACnC,SAAS,CAAC,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC;gBACtC,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,GACtB,qCAAqC,GAAG,IAAI,CAAC,KAC/C,IAAI,CAAC;gBACL,SAAS,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,OAAO,IAAI,CAAC;gBACtC,SAAS,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,MAAM,IAAI,CAAC;gBACpC,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;gBACjC,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC;gBAEvC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,iCAAiC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC;gBAC5E,OAAO,CAAC,KAAK,CAAC,YAAY,GAAG,GAC3B,iCAAiC,GAAG,IAAI,CAAC,KAC3C,IAAI,CAAC;gBAEL,IAAI,CAAC,6BAA6B,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAEhD,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;YAC3C,CAAC,CAAC;YAEM,mBAAc,GAAG,CACvB,MAAwB,EACxB,KAAwB,EACxB,aAA2B,EAC3B,iBAAyB,EACzB,EAAE;gBACF,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;oBACnB,OAAO;gBACT,CAAC;gBAED,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC;gBAE/B,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;oBACrB,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC5B,CAAC;gBAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CACxC,MAAM,EACN,KAAK,EACL,aAAa,EACb,iBAAiB,CAClB,CAAC;gBAEF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBAC/B,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC5B,IAAI,CAAC,KAAK,EAAE,CAAC;YACf,CAAC,CAAC;YAEM,iCAA4B,GAAG,QAAQ,CAAiB,GAAG,CAAC,EAAE;gBACpE,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;oBAC5D,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,OAAO;gBACT,CAAC;gBACD,IAAI,IAAI,CAAC,4BAA4B;oBAAE,OAAO;gBAE9C,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;gBACtC,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC;gBAC7B,MAAM,OAAO,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC;gBAC3C,8DAA8D;gBAC9D,IAAI,CAAC,OAAO;oBAAE,OAAO;gBAErB,iDAAiD;gBACjD,IAAI,OAAO,CAAC,OAAO,CAAC,+BAA+B,CAAC;oBAAE,OAAO;gBAE7D,yBAAyB;gBACzB,wFAAwF;gBACxF,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAElD,MAAM,gBAAgB,GAAG,mBAAmB,CAC1C,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,aAAa,EAClB,KAAK,CACuB,CAAC;gBAE/B,IAAI,CAAC,SAAS,GAAG,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC;oBAC5C,CAAC,CAAC,CAAC;oBACH,CAAC,CAAC,CAAC,gBAAgB,EAAE,KAAK,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;gBAElD,IACE,gBAAgB;oBAChB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC;oBAClC,CAAC,gBAAgB,CACf,IAAI,CAAC,IAAI,EACT,gBAAgB,EAChB,KAAK,EACL,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAC5B,EACD,CAAC;oBACD,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;oBAChC,OAAO,IAAI,CAAC;gBACd,CAAC;gBAED,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,OAAO,KAAK,CAAC;YACf,CAAC,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;YAEN,sCAAiC,GAAG,GAAG,EAAE;gBAC/C,IAAI,CAAC,IAAI,CAAC,cAAc;oBAAE,OAAO;gBAEjC,MAAM,eAAe,GAAG,IAAI,CAAC,qBAAqB,CAAC;gBAEnD,IAAI,eAAe,EAAE,CAAC;oBACpB,IAAI,CAAC,cAAc;wBACjB,IAAI,CAAC,8BAA8B,CAAC,eAAe,CAAC,CAAC;gBACzD,CAAC;YACH,CAAC,CAAC;YAEM,uCAAkC,GAAG,GAAG,EAAE;gBAChD,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,oBAAoB,EAAE,CAAC;oBAClD,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;gBAC7D,CAAC;YACH,CAAC,CAAC;YAEM,+BAA0B,GAAG,CAAC,KAAwB,EAAE,EAAE;gBAChE,IAAI,CAAC,IAAI,CAAC,WAAW;oBAAE,OAAO;gBAE9B,MAAM,gBAAgB,GACpB,IAAI,CAAC,+BAA+B,CAAC,qBAAqB,EAAE,CAAC;gBAE/D,MAAM,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gBAElD,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC,GAAG,gBAAgB,CAAC,IAAI,CAAC;gBACrE,IAAI,IAAI,IAAI,CAAC,qBAAqB,CAAC;gBAEnC,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC,GAAG,gBAAgB,CAAC,GAAG,CAAC;gBACpE,IAAI,IAAI,IAAI,CAAC,qBAAqB,CAAC;gBAEnC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,GAAG,aAAa,IAAI,OAAO,IAAI,aAC7D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SACpB,GAAG,CAAC;gBAEJ,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC;gBAChC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;YACxD,CAAC,CAAC;YAEM,yBAAoB,GAAG,CAC7B,KAAwB,EACxB,mBAA4B,KAAK,EACjC,EAAE;gBACF,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAClD,MAAM,gBAAgB,GAAG,mBAAmB,CAC1C,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,aAAa,EAClB,KAAK,CACN,CAAC;gBACF,IACE,CAAC,gBAAgB;oBACjB,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,gBAAgB,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,EAChE,CAAC;oBACD,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBAC1B,CAAC;qBAAM,CAAC;oBACN,MAAM,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;oBAC9C,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;gBACrC,CAAC;gBAED,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,IAAI,IAAI,CAAC,aAAa,YAAY,sBAAsB,EAAE,CAAC;oBACzD,IAAI,CAAC,gBAAgB;wBAAE,OAAO;oBAE9B,MAAM,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC7D,IAAI,CAAC,MAAM,EAAE,CAAC;wBACZ,IAAI,CAAC,SAAS,EAAE,CAAC;wBACjB,OAAO;oBACT,CAAC;oBACD,IAAI,CAAC,KAAK,GAAG,qBAAqB,CAAC,GAAG,EAAE,CACtC,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,IAAI,CAAC,CACvC,CAAC;gBACJ,CAAC;qBAAM,CAAC;oBACN,IAAI,CAAC,SAAS,EAAE,CAAC;gBACnB,CAAC;YACH,CAAC,CAAC;YAEM,iCAA4B,GAAG,GAAG,EAAE;gBAC1C,IACE,CAAC,IAAI,CAAC,QAAQ;oBACd,IAAI,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC;oBAClC,CAAC,IAAI,CAAC,oBAAoB;oBAE1B,OAAO;gBAET,MAAM,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC;gBACxC,IAAI,CAAC,KAAK,GAAG,qBAAqB,CAAC,GAAG,EAAE,CACtC,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,KAAK,CAAC,CACxC,CAAC;YACJ,CAAC,CAAC;YAEM,sBAAiB,GAAG,CAAC,UAA6B,EAAE,EAAE;gBAC5D,IAAI,CAAC,IAAI,CAAC,aAAa;oBAAE,OAAO;gBAChC,IAAI,CAAC,WAAW,GAAG,UAAU,EAAE,WAAW,IAAI,EAAE,CAAC;gBACjD,IAAI,CAAC,QAAQ,GAAG,UAAU,EAAE,QAAQ,IAAI,IAAI,CAAC;gBAC7C,IAAI,UAAU,EAAE,IAAI,EAAE,CAAC;oBACrB,MAAM,gBAAgB,GACpB,IAAI,CAAC,+BAA+B,CAAC,qBAAqB,EAAE,CAAC;oBAC/D,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,UAAU,CAAC,IAAI,CAAC;oBACpC,IAAI,IAAI,gBAAgB,CAAC,IAAI,CAAC;oBAC9B,GAAG,IAAI,gBAAgB,CAAC,GAAG,CAAC;oBAE5B,IAAI,IAAI,IAAI,CAAC,qBAAqB,CAAC;oBACnC,GAAG,IAAI,IAAI,CAAC,qBAAqB,CAAC;oBAElC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,UAAU,CAAC,IAAI,CAAC;oBACxC,KAAK,IAAI,IAAI,CAAC,qBAAqB,CAAC;oBACpC,MAAM,IAAI,IAAI,CAAC,qBAAqB,CAAC;oBAErC,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;oBACrD,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjC,CAAC;qBAAM,CAAC;oBACN,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,UAAU,EAAE,IAAI,IAAI,IAAI,CAAC;gBACrD,CAAC;YACH,CAAC,CAAC;YAEF,4FAA4F;YAC5F,WAAM,GAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAEtB,0BAAqB,GAAG,CAAC,CAAC;YAE1B,aAAQ,GAAG,KAAK,CAAC;YAEjB,qBAAgB,GAAqB,EAAE,CAAC;YAExC,gBAAW,GAAuB,IAAI,CAAC;YAEvC,gBAAW,GAAG,EAAE,CAAC;YAEjB,kBAAa,GAAyB,IAAI,CAAC;YAE3C,aAAQ,GAAoB,IAAI,CAAC;YAEjC,yBAAoB,GAA6B,IAAI,CAAC;YAEtD,cAAS,GAAG,CAAC,CAAC;YAEd,UAAK,GAAG,CAAC,CAAC;YAEV,UAAK,GAAG,CAAC,CAAC;YAoOO,kHAAsC;YAGtC,kLAAoC;YAGpC,+JAKN,IAAI,GAAC;;;;YApjDL,uDAAsB;;;;;SAAtB,sBAAsB","sourcesContent":["import type { NoteBlockModel, RootBlockModel } from '@lumensuite/affine-model';\nimport type { IVec } from '@lumensuite/global/utils';\n\nimport {\n  findNoteBlockModel,\n  getBlockComponentsExcludeSubtrees,\n  getCurrentNativeRange,\n  getScrollContainer,\n  isInsideEdgelessEditor,\n  isInsidePageEditor,\n  matchFlavours,\n} from '@lumensuite/affine-shared/utils';\nimport {\n  BLOCK_ID_ATTR,\n  type BlockComponent,\n  BlockStdScope,\n  type PointerEventState,\n  type UIEventHandler,\n  WidgetComponent,\n} from '@lumensuite/block-std';\nimport {\n  Bound,\n  DisposableGroup,\n  Point,\n  Rect,\n  throttle,\n} from '@lumensuite/global/utils';\nimport { type BlockModel, BlockViewType, type Query } from '@lumensuite/store';\nimport { html } from 'lit';\nimport { customElement, query, state } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\n\nimport type { NoteBlockComponent } from '../../../note-block/index.js';\nimport type { EdgelessRootBlockComponent } from '../../../root-block/edgeless/edgeless-root-block.js';\nimport type { GfxBlockModel } from '../../edgeless/block-model.js';\nimport type { EdgelessTool } from '../../edgeless/types.js';\nimport type { DragHandleOption, DropResult, DropType } from './config.js';\n\nimport { SpecProvider } from '../../../_specs/utils/spec-provider.js';\nimport {\n  getSelectedRect,\n  isTopLevelBlock,\n} from '../../../root-block/edgeless/utils/query.js';\nimport { PageRootBlockComponent } from '../../../root-block/page/page-root-block.js';\nimport { autoScroll } from '../../../root-block/text-selection/utils.js';\nimport { DragPreview } from './components/drag-preview.js';\nimport { DropIndicator } from './components/drop-indicator.js';\nimport {\n  DRAG_HANDLE_CONTAINER_OFFSET_LEFT_TOP_LEVEL,\n  DRAG_HANDLE_CONTAINER_PADDING,\n  DRAG_HANDLE_CONTAINER_WIDTH,\n  DRAG_HANDLE_CONTAINER_WIDTH_TOP_LEVEL,\n  DRAG_HANDLE_GRABBER_BORDER_RADIUS,\n  DRAG_HANDLE_GRABBER_HEIGHT,\n  DRAG_HANDLE_GRABBER_WIDTH,\n  DRAG_HANDLE_GRABBER_WIDTH_HOVERED,\n  DRAG_HOVER_RECT_PADDING,\n  DragHandleOptionsRunner,\n  HOVER_AREA_RECT_PADDING_TOP_LEVEL,\n} from './config.js';\nimport { styles } from './styles.js';\nimport {\n  calcDropTarget,\n  captureEventTarget,\n  containBlock,\n  containChildBlock,\n  getClosestBlockByPoint,\n  getClosestNoteBlock,\n  getDragHandleContainerHeight,\n  getDragHandleLeftPadding,\n  getDuplicateBlocks,\n  includeTextSelection,\n  insideDatabaseTable,\n  isBlockIdEqual,\n  isOutOfNoteBlock,\n  updateDragHandleClassName,\n} from './utils.js';\n\nexport const AFFINE_DRAG_HANDLE_WIDGET = 'affine-drag-handle-widget';\n\n@customElement(AFFINE_DRAG_HANDLE_WIDGET)\nexport class AffineDragHandleWidget extends WidgetComponent<\n  RootBlockModel,\n  EdgelessRootBlockComponent | PageRootBlockComponent\n> {\n  static staticOptionRunner = new DragHandleOptionsRunner();\n\n  static override styles = styles;\n\n  private _anchorBlockId: string | null = null;\n\n  private _anchorModelDisposables: DisposableGroup | null = null;\n\n  private _calculatePreviewOffset = (\n    blocks: BlockComponent[],\n    state: PointerEventState\n  ) => {\n    const { top, left } = blocks[0].getBoundingClientRect();\n    const previewOffset = new Point(state.raw.x - left, state.raw.y - top);\n    return previewOffset;\n  };\n\n  private _calculateQuery = (selectedIds: string[]): Query => {\n    const ids: Array<{ id: string; viewType: BlockViewType }> = selectedIds.map(\n      id => ({\n        id,\n        viewType: BlockViewType.Display,\n      })\n    );\n\n    // The ancestors of the selected blocks should be rendered as Bypass\n    selectedIds.map(block => {\n      let parent: string | null = block;\n      do {\n        if (!selectedIds.includes(parent)) {\n          ids.push({ viewType: BlockViewType.Bypass, id: parent });\n        }\n        parent = this.doc.blockCollection.crud.getParent(parent);\n      } while (parent && !ids.map(({ id }) => id).includes(parent));\n    });\n\n    // The children of the selected blocks should be rendered as Display\n    const addChildren = (id: string) => {\n      const children = this.doc.getBlock(id)?.model.children ?? [];\n      children.forEach(child => {\n        ids.push({ viewType: BlockViewType.Display, id: child.id });\n        addChildren(child.id);\n      });\n    };\n    selectedIds.forEach(addChildren);\n\n    return {\n      match: ids,\n      mode: 'strict',\n    };\n  };\n\n  private _canEditing = (noteBlock: BlockComponent) => {\n    if (noteBlock.doc.id !== this.doc.id) return false;\n\n    if (isInsidePageEditor(this.host)) return true;\n    const edgelessRoot = this.rootComponent as EdgelessRootBlockComponent;\n\n    const noteBlockId = noteBlock.model.id;\n    return (\n      edgelessRoot.service.selection.editing &&\n      edgelessRoot.service.selection.selectedIds[0] === noteBlockId\n    );\n  };\n\n  private _changeCursorToGrabbing = () => {\n    document.documentElement.classList.add('affine-drag-preview-grabbing');\n  };\n\n  private _checkTopLevelBlockSelection = () => {\n    if (!this.isConnected) {\n      return;\n    }\n\n    if (this.doc.readonly || isInsidePageEditor(this.host)) {\n      this._hide();\n      return;\n    }\n\n    const edgelessRoot = this.rootComponent as EdgelessRootBlockComponent;\n    const editing = edgelessRoot.service.selection.editing;\n    const selectedElements = edgelessRoot.service.selection.selectedElements;\n    if (editing || selectedElements.length !== 1) {\n      this._hide();\n      return;\n    }\n\n    const selectedElement = selectedElements[0];\n    if (!isTopLevelBlock(selectedElement)) {\n      this._hide();\n      return;\n    }\n\n    const flavour = selectedElement.flavour;\n    const dragHandleOptions = this.optionRunner.getOption(flavour);\n    if (!dragHandleOptions || !dragHandleOptions.edgeless) {\n      this._hide();\n      return;\n    }\n\n    this._anchorBlockId = selectedElement.id;\n\n    this._showDragHandleOnTopLevelBlocks().catch(console.error);\n  };\n\n  /**\n   * When click on drag handle\n   * Should select the block and show slash menu if current block is not selected\n   * Should clear selection if current block is the first selected block\n   */\n  private _clickHandler: UIEventHandler = ctx => {\n    if (!this._isHoverDragHandleVisible) return;\n\n    const state = ctx.get('pointerState');\n    const { target } = state.raw;\n    const element = captureEventTarget(target);\n    const insideDragHandle = !!element?.closest(AFFINE_DRAG_HANDLE_WIDGET);\n    if (!insideDragHandle) return;\n\n    if (!this._anchorBlockId) return;\n\n    const { selection } = this.host;\n    const selectedBlocks = this.selectedBlocks;\n\n    // Should clear selection if current block is the first selected block\n    if (\n      selectedBlocks.length > 0 &&\n      !includeTextSelection(selectedBlocks) &&\n      selectedBlocks[0].blockId === this._anchorBlockId\n    ) {\n      selection.clear(['block']);\n      this._dragHoverRect = null;\n      this._showDragHandleOnHoverBlock(this._anchorBlockId);\n      return;\n    }\n\n    // Should select the block if current block is not selected\n    const blocks = this.anchorBlockComponent;\n    if (!blocks) return;\n\n    if (selectedBlocks.length > 1) {\n      this._showDragHandleOnHoverBlock(this._anchorBlockId);\n    }\n\n    this._setSelectedBlocks([blocks]);\n  };\n\n  private _createDragPreview = (\n    blocks: BlockComponent[],\n    state: PointerEventState,\n    dragPreviewEl?: HTMLElement,\n    dragPreviewOffset?: Point\n  ): DragPreview => {\n    let dragPreview: DragPreview;\n    if (dragPreviewEl) {\n      dragPreview = new DragPreview(dragPreviewOffset);\n      dragPreview.append(dragPreviewEl);\n    } else {\n      let width = 0;\n      blocks.forEach(element => {\n        width = Math.max(width, element.getBoundingClientRect().width);\n      });\n\n      const selectedIds = blocks.map(block => block.model.id);\n\n      const query = this._calculateQuery(selectedIds);\n\n      const doc = this.doc.blockCollection.getDoc({ query });\n\n      const previewSpec = SpecProvider.getInstance().getSpec('page:preview');\n      const previewStd = new BlockStdScope({\n        doc,\n        extensions: previewSpec.value,\n      });\n      const previewTemplate = previewStd.render();\n\n      const offset = this._calculatePreviewOffset(blocks, state);\n      const posX = state.raw.x - offset.x;\n      const posY = state.raw.y - offset.y;\n      const altKey = state.raw.altKey;\n\n      dragPreview = new DragPreview(offset);\n      dragPreview.template = previewTemplate;\n      dragPreview.onRemove = () => {\n        this.doc.blockCollection.clearQuery(query);\n      };\n      dragPreview.style.width = `${width / this.scale / this.noteScale / this.cumulativeParentScale}px`;\n      dragPreview.style.transform = `translate(${posX}px, ${posY}px) scale(${\n        this.scale * this.noteScale\n      })`;\n\n      dragPreview.style.opacity = altKey ? '1' : '0.5';\n    }\n    this.rootComponent.append(dragPreview);\n    return dragPreview;\n  };\n\n  private _createDropIndicator = () => {\n    if (!this.dropIndicator) {\n      this.dropIndicator = new DropIndicator();\n      this.rootComponent.append(this.dropIndicator);\n    }\n  };\n\n  /**\n   * When drag end, should move blocks to drop position\n   * @returns\n   */\n  private _dragEndHandler: UIEventHandler = ctx => {\n    this._clearRaf();\n    if (!this.dragging || !this.dragPreview) return false;\n    if (this.draggingElements.length === 0 || this.doc.readonly) {\n      this._hide(true);\n      return false;\n    }\n\n    const state = ctx.get('pointerState');\n    const { target } = state.raw;\n    if (!this.host.contains(target as Node)) {\n      this._hide(true);\n      return true;\n    }\n\n    for (const option of this.optionRunner.options) {\n      if (\n        option.onDragEnd?.({\n          state,\n          draggingElements: this.draggingElements,\n          dropBlockId: this.dropBlockId,\n          dropType: this.dropType,\n          dragPreview: this.dragPreview,\n          noteScale: this.noteScale,\n          editorHost: this.host,\n        })\n      ) {\n        this._hide(true);\n        if (isInsideEdgelessEditor(this.host)) {\n          this._checkTopLevelBlockSelection();\n        }\n        return true;\n      }\n    }\n\n    // call default drag end handler if no option return true\n    this._onDragEnd(state);\n\n    if (isInsideEdgelessEditor(this.host)) {\n      this._checkTopLevelBlockSelection();\n    }\n\n    return true;\n  };\n\n  /**\n   * When dragging, should:\n   * Update drag preview position\n   * Update indicator position\n   * Update drop block id\n   */\n  private _dragMoveHandler: UIEventHandler = ctx => {\n    if (this._isHoverDragHandleVisible || this._isTopLevelDragHandleVisible) {\n      this._hide();\n    }\n\n    if (!this.dragging || this.draggingElements.length === 0) {\n      return false;\n    }\n\n    ctx.get('defaultState').event.preventDefault();\n    const state = ctx.get('pointerState');\n\n    for (const option of this.optionRunner.options) {\n      if (option.onDragMove?.(state, this.draggingElements)) {\n        return true;\n      }\n    }\n\n    // call default drag move handler if no option return true\n    return this._onDragMove(state);\n  };\n\n  /**\n   * When start dragging, should set dragging elements and create drag preview\n   */\n  private _dragStartHandler: UIEventHandler = ctx => {\n    const state = ctx.get('pointerState');\n    // If not click left button to start dragging, should do nothing\n    const { button } = state.raw;\n    if (button !== 0) {\n      return false;\n    }\n\n    // call default drag start handler if no option return true\n    for (const option of this.optionRunner.options) {\n      if (\n        option.onDragStart?.({\n          state,\n          startDragging: this._startDragging,\n          anchorBlockId: this._anchorBlockId ?? '',\n          editorHost: this.host,\n        })\n      ) {\n        return true;\n      }\n    }\n    return this._onDragStart(state);\n  };\n\n  private _getBlockComponentFromViewStore = (blockId: string) => {\n    return this.host.view.getBlock(blockId);\n  };\n\n  private _getDraggingAreaRect = (block: BlockComponent): Rect => {\n    // When hover block is in selected blocks, should show hover rect on the selected blocks\n    // Top: the top of the first selected block\n    // Left: the left of the first selected block\n    // Right: the largest right of the selected blocks\n    // Bottom: the bottom of the last selected block\n    let { left, top, right, bottom } = block.getBoundingClientRect();\n\n    const blocks = this._getHoveredBlocks();\n\n    blocks.forEach(block => {\n      left = Math.min(left, block.getBoundingClientRect().left);\n      top = Math.min(top, block.getBoundingClientRect().top);\n      right = Math.max(right, block.getBoundingClientRect().right);\n      bottom = Math.max(bottom, block.getBoundingClientRect().bottom);\n    });\n\n    const offsetLeft = getDragHandleLeftPadding(blocks);\n\n    const offsetParentRect =\n      this.dragHandleContainerOffsetParent.getBoundingClientRect();\n    if (!offsetParentRect) return new Rect(0, 0, 0, 0);\n\n    left -= offsetParentRect.left;\n    right -= offsetParentRect.left;\n    top -= offsetParentRect.top;\n    bottom -= offsetParentRect.top;\n\n    left /= this.cumulativeParentScale;\n    right /= this.cumulativeParentScale;\n    top /= this.cumulativeParentScale;\n    bottom /= this.cumulativeParentScale;\n\n    // Add padding to hover rect\n    left -=\n      (DRAG_HANDLE_CONTAINER_WIDTH + offsetLeft) * this.scale * this.noteScale;\n    top -= DRAG_HOVER_RECT_PADDING * this.scale;\n    right += DRAG_HOVER_RECT_PADDING * this.scale;\n    bottom += DRAG_HOVER_RECT_PADDING * this.scale;\n\n    return new Rect(left, top, right, bottom);\n  };\n\n  /**\n   * When dragging, should update indicator position and target drop block id\n   */\n  private _getDropResult = (state: PointerEventState): DropResult | null => {\n    const point = new Point(state.raw.x, state.raw.y);\n    const closestBlock = getClosestBlockByPoint(\n      this.host,\n      this.rootComponent,\n      point\n    );\n    if (!closestBlock) return null;\n\n    const blockId = closestBlock.model.id;\n    const model = closestBlock.model;\n\n    const isDatabase = matchFlavours(model, ['affine:database']);\n    if (isDatabase) return null;\n\n    // note block can only be dropped into another note block\n    // prevent note block from being dropped into other blocks\n    const isDraggedElementNote =\n      this.draggingElements.length === 1 &&\n      matchFlavours(this.draggingElements[0].model, ['affine:note']);\n\n    if (isDraggedElementNote) {\n      const parent = this.std.doc.getParent(closestBlock.model);\n      if (!parent) return null;\n      const parentElement = this._getBlockComponentFromViewStore(parent.id);\n      if (!parentElement) return null;\n      if (!matchFlavours(parentElement.model, ['affine:note'])) return null;\n    }\n\n    // Should make sure that target drop block is\n    // neither within the dragging elements\n    // nor a child-block of any dragging elements\n    if (\n      containBlock(\n        this.draggingElements.map(block => block.model.id),\n        blockId\n      ) ||\n      containChildBlock(this.draggingElements, model)\n    ) {\n      return null;\n    }\n\n    let rect = null;\n    let dropType: DropType = 'before';\n\n    const result = calcDropTarget(\n      point,\n      model,\n      closestBlock,\n      this.draggingElements,\n      this.scale * this.cumulativeParentScale,\n      isDraggedElementNote === false\n    );\n\n    if (result) {\n      rect = result.rect;\n      dropType = result.dropType;\n    }\n\n    if (isDraggedElementNote && dropType === 'in') return null;\n\n    const dropIndicator = {\n      rect,\n      dropBlockId: blockId,\n      dropType,\n    };\n\n    return dropIndicator;\n  };\n\n  private _getHoveredBlocks = (): BlockComponent[] => {\n    if (!this._isHoverDragHandleVisible || !this._anchorBlockId) return [];\n\n    const hoverBlock = this.anchorBlockComponent;\n    if (!hoverBlock) return [];\n\n    const selections = this.selectedBlocks;\n    let blocks: BlockComponent[] = [];\n\n    // When current selection is TextSelection, should cover all the blocks in native range\n    if (selections.length > 0 && includeTextSelection(selections)) {\n      const range = getCurrentNativeRange();\n      if (!range) return [];\n      if (!this._rangeManager) return [];\n      blocks = this._rangeManager.getSelectedBlockComponentsByRange(range, {\n        match: el => el.model.role === 'content',\n        mode: 'highest',\n      });\n    } else {\n      blocks = this.selectedBlocks\n        .map(block => this._getBlockComponentFromViewStore(block.blockId))\n        .filter((block): block is BlockComponent => !!block);\n    }\n\n    if (\n      containBlock(\n        blocks.map(block => block.blockId),\n        this._anchorBlockId\n      )\n    ) {\n      return blocks;\n    }\n\n    return [hoverBlock];\n  };\n\n  // Need to consider block padding and scale\n  private _getTopWithBlockComponent = (block: BlockComponent) => {\n    const computedStyle = getComputedStyle(block);\n    const { top } = block.getBoundingClientRect();\n    const paddingTop = parseInt(computedStyle.paddingTop) * this.scale;\n    return (\n      (top +\n        paddingTop -\n        this.dragHandleContainerOffsetParent.getBoundingClientRect().top) /\n      this.cumulativeParentScale\n    );\n  };\n\n  private _handleAnchorModelDisposables = (blockModel: BlockModel) => {\n    if (this._anchorModelDisposables) {\n      this._anchorModelDisposables.dispose();\n      this._anchorModelDisposables = null;\n    }\n\n    this._anchorModelDisposables = new DisposableGroup();\n    this._anchorModelDisposables.add(\n      blockModel.propsUpdated.on(() => this._hide())\n    );\n\n    this._anchorModelDisposables.add(blockModel.deleted.on(() => this._hide()));\n  };\n\n  private _handleEdgelessToolUpdated = (newTool: EdgelessTool) => {\n    if (newTool.type === 'default') {\n      this._checkTopLevelBlockSelection();\n    } else {\n      this._hide();\n    }\n  };\n\n  private _handleEdgelessViewPortUpdated = ({\n    zoom,\n    center,\n  }: {\n    zoom: number;\n    center: IVec;\n  }) => {\n    if (this.scale !== zoom) {\n      this.scale = zoom;\n      this._updateDragPreviewOnViewportUpdate();\n    }\n\n    if (this.center[0] !== center[0] && this.center[1] !== center[1]) {\n      this.center = [...center];\n      this._updateDropIndicatorOnScroll();\n    }\n\n    if (this._isTopLevelDragHandleVisible) {\n      this._showDragHandleOnTopLevelBlocks().catch(console.error);\n      this._updateDragHoverRectTopLevelBlock();\n    } else {\n      this._hide();\n    }\n  };\n\n  private _hide = (force = false) => {\n    updateDragHandleClassName();\n\n    this._isHoverDragHandleVisible = false;\n    this._isTopLevelDragHandleVisible = false;\n    this._isDragHandleHovered = false;\n\n    this._anchorBlockId = null;\n\n    if (this._dragHandleContainer) {\n      this._dragHandleContainer.style.display = 'none';\n    }\n\n    if (force) {\n      this._reset();\n    }\n  };\n\n  /** Check if given block component is selected */\n  private _isBlockSelected = (block?: BlockComponent) => {\n    if (!block) return false;\n    return this.selectedBlocks.some(\n      selection => selection.blockId === block.model.id\n    );\n  };\n\n  private _isDragHandleHovered = false;\n\n  private _isHoverDragHandleVisible = false;\n\n  private _isTopLevelDragHandleVisible = false;\n\n  private _keyboardHandler: UIEventHandler = ctx => {\n    if (!this.dragging || !this.dragPreview) {\n      return;\n    }\n\n    const state = ctx.get('defaultState');\n    const event = state.event as KeyboardEvent;\n    event.preventDefault();\n    event.stopPropagation();\n\n    const altKey = event.key === 'Alt' && event.altKey;\n    this.dragPreview.style.opacity = altKey ? '1' : '0.5';\n  };\n\n  private _lastHoveredBlockId: string | null = null;\n\n  private _lastShowedBlock: { id: string; el: BlockComponent } | null = null;\n\n  private _onDragEnd = (state: PointerEventState) => {\n    const targetBlockId = this.dropBlockId;\n    const dropType = this.dropType;\n    const draggingElements = this.draggingElements;\n    this._hide(true);\n\n    // handle drop of blocks from note onto edgeless container\n    if (!targetBlockId) {\n      const target = captureEventTarget(state.raw.target);\n      if (!target) return false;\n\n      const isTargetEdgelessContainer =\n        target.classList.contains('edgeless-container');\n      if (!isTargetEdgelessContainer) return false;\n\n      const selectedBlocks = getBlockComponentsExcludeSubtrees(draggingElements)\n        .map(element => element.model)\n        .filter((x): x is BlockModel => !!x);\n      if (selectedBlocks.length === 0) return false;\n\n      const isSurfaceComponent = selectedBlocks.some(block => {\n        const parent = this.doc.getParent(block.id);\n        return matchFlavours(parent, ['affine:surface']);\n      });\n      if (isSurfaceComponent) return true;\n\n      const edgelessRoot = this.rootComponent as EdgelessRootBlockComponent;\n\n      const { left: viewportLeft, top: viewportTop } = edgelessRoot.viewport;\n\n      const newNoteId = edgelessRoot.addNoteWithPoint(\n        new Point(state.raw.x - viewportLeft, state.raw.y - viewportTop),\n        {\n          scale: this.noteScale,\n        }\n      );\n      const newNoteBlock = this.doc.getBlockById(newNoteId) as NoteBlockModel;\n      if (!newNoteBlock) return;\n\n      const bound = Bound.deserialize(newNoteBlock.xywh);\n      bound.h *= this.noteScale;\n      bound.w *= this.noteScale;\n      this.doc.updateBlock(newNoteBlock, {\n        xywh: bound.serialize(),\n        edgeless: {\n          ...newNoteBlock.edgeless,\n          scale: this.noteScale,\n        },\n      });\n\n      const altKey = state.raw.altKey;\n      if (altKey) {\n        const duplicateBlocks = getDuplicateBlocks(selectedBlocks);\n\n        this.doc.addBlocks(duplicateBlocks, newNoteBlock);\n      } else {\n        this.doc.moveBlocks(selectedBlocks, newNoteBlock);\n      }\n\n      edgelessRoot.service.selection.set({\n        elements: [newNoteBlock.id],\n        editing: true,\n      });\n\n      return true;\n    }\n\n    // Should make sure drop block id is not in selected blocks\n    if (\n      containBlock(\n        this.selectedBlocks.map(selection => selection.blockId),\n        targetBlockId\n      )\n    ) {\n      return false;\n    }\n\n    const selectedBlocks = getBlockComponentsExcludeSubtrees(draggingElements)\n      .map(element => element.model)\n      .filter((x): x is BlockModel => !!x);\n    if (!selectedBlocks.length) {\n      return false;\n    }\n\n    const targetBlock = this.doc.getBlockById(targetBlockId);\n    if (!targetBlock) return;\n\n    const shouldInsertIn = dropType === 'in';\n\n    const parent = shouldInsertIn\n      ? targetBlock\n      : this.doc.getParent(targetBlockId);\n    if (!parent) return;\n\n    const altKey = state.raw.altKey;\n\n    if (shouldInsertIn) {\n      if (altKey) {\n        const duplicateBlocks = getDuplicateBlocks(selectedBlocks);\n\n        this.doc.addBlocks(duplicateBlocks, targetBlock);\n      } else {\n        this.doc.moveBlocks(selectedBlocks, targetBlock);\n      }\n    } else {\n      if (altKey) {\n        const duplicateBlocks = getDuplicateBlocks(selectedBlocks);\n\n        const parentIndex =\n          parent.children.indexOf(targetBlock) + (dropType === 'after' ? 1 : 0);\n\n        this.doc.addBlocks(duplicateBlocks, parent, parentIndex);\n      } else {\n        this.doc.moveBlocks(\n          selectedBlocks,\n          parent,\n          targetBlock,\n          dropType === 'before'\n        );\n      }\n    }\n\n    // TODO: need a better way to update selection\n    // Should update selection after moving blocks\n    // In doc page mode, update selected blocks\n    // In edgeless mode, focus on the first block\n    setTimeout(() => {\n      if (!parent) return;\n      // Need to update selection when moving blocks successfully\n      // Because the block path may be changed after moving\n      const parentElement = this._getBlockComponentFromViewStore(parent.id);\n      if (parentElement) {\n        const newSelectedBlocks = selectedBlocks.map(block => {\n          return this.std.view.getBlock(block.id);\n        });\n        if (!newSelectedBlocks) return;\n\n        const note = findNoteBlockModel(parentElement.model);\n        if (!note) return;\n        this._setSelectedBlocks(newSelectedBlocks as BlockComponent[], note.id);\n      }\n    }, 0);\n\n    return true;\n  };\n\n  private _onDragHandlePointerDown = () => {\n    if (!this._isHoverDragHandleVisible || !this._anchorBlockId) return;\n\n    const block = this.anchorBlockComponent;\n    if (!block) return;\n\n    this._dragHoverRect = this._getDraggingAreaRect(block) ?? null;\n  };\n\n  private _onDragHandlePointerEnter = () => {\n    const container = this._dragHandleContainer;\n    const grabber = this._dragHandleGrabber;\n    if (!container || !grabber) return;\n\n    if (this._isHoverDragHandleVisible && this._anchorBlockId) {\n      const block = this.anchorBlockComponent;\n      if (!block) return;\n\n      const padding = DRAG_HANDLE_CONTAINER_PADDING * this.scale;\n      container.style.paddingTop = `${padding}px`;\n      container.style.paddingBottom = `${padding}px`;\n      container.style.transition = `padding 0.25s ease`;\n\n      grabber.style.width = `${\n        DRAG_HANDLE_GRABBER_WIDTH_HOVERED * this.scale * this.noteScale\n      }px`;\n      grabber.style.borderRadius = `${\n        DRAG_HANDLE_GRABBER_BORDER_RADIUS * this.scale * this.noteScale\n      }px`;\n\n      this._isDragHandleHovered = true;\n    } else if (this._isTopLevelDragHandleVisible) {\n      const edgelessElement = this.anchorEdgelessElement;\n      if (!edgelessElement) return;\n\n      this._dragHoverRect =\n        this._getHoverAreaRectTopLevelBlock(edgelessElement);\n      this._isDragHandleHovered = true;\n    }\n  };\n\n  private _onDragHandlePointerLeave = () => {\n    this._isDragHandleHovered = false;\n    this._dragHoverRect = null;\n\n    if (this._isTopLevelDragHandleVisible) return;\n\n    if (this.dragging) return;\n\n    if (!this._anchorBlockId) return;\n    this._showDragHandleOnHoverBlock(this._anchorBlockId);\n  };\n\n  private _onDragHandlePointerUp = () => {\n    if (!this._isHoverDragHandleVisible) return;\n    this._dragHoverRect = null;\n  };\n\n  private _onDragMove = (state: PointerEventState) => {\n    this._clearRaf();\n\n    this.rafID = requestAnimationFrame(() => {\n      this._updateDragPreviewPosition(state);\n      this._updateDropIndicator(state, true);\n    });\n    return true;\n  };\n\n  private _onDragStart = (state: PointerEventState) => {\n    const event = state.raw;\n    const { target } = event;\n    const element = captureEventTarget(target);\n    const insideDragHandle = !!element?.closest(AFFINE_DRAG_HANDLE_WIDGET);\n    // Should only start dragging when pointer down on drag handle\n    // And current mouse button is left button\n    if (!insideDragHandle) {\n      this._hide();\n      return false;\n    }\n\n    if (!this._isHoverDragHandleVisible || !this._anchorBlockId) return;\n    // Get current hover block element by path\n    const hoverBlock = this.anchorBlockComponent;\n    if (!hoverBlock) return false;\n\n    let selections = this.selectedBlocks;\n\n    // When current selection is TextSelection\n    // Should set BlockSelection for the blocks in native range\n    if (selections.length > 0 && includeTextSelection(selections)) {\n      const nativeSelection = document.getSelection();\n      if (\n        nativeSelection &&\n        nativeSelection.rangeCount > 0 &&\n        this._rangeManager\n      ) {\n        const range = nativeSelection.getRangeAt(0);\n        const blocks = this._rangeManager.getSelectedBlockComponentsByRange(\n          range,\n          {\n            match: el => el.model.role === 'content',\n            mode: 'highest',\n          }\n        );\n        this._setSelectedBlocks(blocks);\n        selections = this.selectedBlocks;\n      }\n    }\n\n    // When there is no selected blocks\n    // Or selected blocks not including current hover block\n    // Set current hover block as selected\n    if (\n      selections.length === 0 ||\n      !containBlock(\n        selections.map(selection => selection.blockId),\n        this._anchorBlockId\n      )\n    ) {\n      const block = this.anchorBlockComponent;\n      if (block) {\n        this._setSelectedBlocks([block]);\n      }\n    }\n\n    const blocks = this.selectedBlocks\n      .map(selection => {\n        return this._getBlockComponentFromViewStore(selection.blockId);\n      })\n      .filter((element): element is BlockComponent<BlockModel> => !!element);\n\n    // This could be skip if we can ensure that all selected blocks are on the same level\n    // Which means not selecting parent block and child block at the same time\n    const blocksExcludingChildren = getBlockComponentsExcludeSubtrees(\n      blocks\n    ) as BlockComponent[];\n\n    if (blocksExcludingChildren.length === 0) return false;\n\n    this._startDragging(blocksExcludingChildren, state);\n    this._hide();\n    return true;\n  };\n\n  /**\n   * When pointer move on block, should show drag handle\n   * And update hover block id and path\n   */\n  private _pointerMoveOnBlock = (state: PointerEventState) => {\n    if (this._isTopLevelDragHandleVisible) return;\n\n    const point = new Point(state.raw.x, state.raw.y);\n    const closestBlock = getClosestBlockByPoint(\n      this.host,\n      this.rootComponent,\n      point\n    );\n    if (!closestBlock) {\n      this._anchorBlockId = null;\n      return;\n    }\n\n    const blockId = closestBlock.getAttribute(BLOCK_ID_ATTR);\n    if (!blockId) return;\n\n    this._anchorBlockId = blockId;\n\n    if (insideDatabaseTable(closestBlock) || this.doc.readonly) {\n      this._hide();\n      return;\n    }\n\n    // If current block is not the last hovered block, show drag handle beside the hovered block\n    if (\n      (!this._lastHoveredBlockId ||\n        !isBlockIdEqual(this._anchorBlockId, this._lastHoveredBlockId) ||\n        !this._isHoverDragHandleVisible) &&\n      !this._isDragHandleHovered\n    ) {\n      this._showDragHandleOnHoverBlock(this._anchorBlockId);\n      this._lastHoveredBlockId = this._anchorBlockId;\n    }\n  };\n\n  private _pointerOutHandler: UIEventHandler = ctx => {\n    const state = ctx.get('pointerState');\n    state.raw.preventDefault();\n\n    const { target } = state.raw;\n    const element = captureEventTarget(target);\n    if (!element) return;\n\n    const { relatedTarget } = state.raw;\n    // TODO: when pointer out of page viewport, should hide drag handle\n    // But the pointer out event is not as expected\n    // Need to be optimized\n    const relatedElement = captureEventTarget(relatedTarget);\n    const outOfPageViewPort = element.classList.contains(\n      'affine-page-viewport'\n    );\n    const inPage = !!relatedElement?.closest('.affine-page-viewport');\n\n    const inDragHandle = !!relatedElement?.closest(AFFINE_DRAG_HANDLE_WIDGET);\n    if (outOfPageViewPort && !inDragHandle && !inPage) {\n      this._hide();\n    }\n  };\n\n  private _removeDragPreview = () => {\n    if (this.dragPreview) {\n      this.dragPreview.remove();\n      this.dragPreview = null;\n    }\n  };\n\n  private _removeDropIndicator = () => {\n    if (this.dropIndicator) {\n      this.dropIndicator.remove();\n      this.dropIndicator = null;\n    }\n  };\n\n  private _reset = () => {\n    this.draggingElements = [];\n    this.dropBlockId = '';\n    this.dropType = null;\n    this.lastDragPointerState = null;\n    this.rafID = 0;\n    this.dragging = false;\n\n    this._dragHoverRect = null;\n    this._lastHoveredBlockId = null;\n    this._lastShowedBlock = null;\n    this._anchorBlockId = null;\n    this._isHoverDragHandleVisible = false;\n    this._isDragHandleHovered = false;\n    this._isTopLevelDragHandleVisible = false;\n\n    this._removeDragPreview();\n    this._removeDropIndicator();\n    this._resetCursor();\n  };\n\n  private _resetCursor = () => {\n    document.documentElement.classList.remove('affine-drag-preview-grabbing');\n  };\n\n  private _resetDropResult = () => {\n    this.dropBlockId = '';\n    this.dropType = null;\n    if (this.dropIndicator) this.dropIndicator.rect = null;\n  };\n\n  private _setSelectedBlocks = (blocks: BlockComponent[], noteId?: string) => {\n    const { selection } = this.host;\n    const selections = blocks.map(block =>\n      selection.create('block', {\n        blockId: block.blockId,\n      })\n    );\n\n    // When current page is edgeless page\n    // We need to remain surface selection and set editing as true\n    if (isInsideEdgelessEditor(this.host)) {\n      const surfaceElementId = noteId\n        ? noteId\n        : findNoteBlockModel(blocks[0].model)?.id;\n      if (!surfaceElementId) return;\n      const surfaceSelection = selection.create(\n        'surface',\n        blocks[0]!.blockId,\n        [surfaceElementId],\n        true\n      );\n\n      selections.push(surfaceSelection);\n    }\n\n    selection.set(selections);\n  };\n\n  // Multiple blocks: drag handle should show on the vertical middle of all blocks\n  private _showDragHandleOnHoverBlock = (blockId: string) => {\n    const block = this._getBlockComponentFromViewStore(blockId);\n    if (!block) return;\n\n    const container = this._dragHandleContainer;\n    const grabber = this._dragHandleGrabber;\n    if (!container || !grabber) return;\n\n    this._isHoverDragHandleVisible = true;\n\n    const draggingAreaRect = this._getDraggingAreaRect(block);\n\n    // Some blocks have padding, should consider padding when calculating position\n\n    const containerHeight = getDragHandleContainerHeight(block.model);\n\n    // Ad-hoc solution for list with toggle icon\n    updateDragHandleClassName([block]);\n    // End of ad-hoc solution\n\n    const posTop = this._getTopWithBlockComponent(block);\n\n    const rowPaddingY =\n      ((containerHeight - DRAG_HANDLE_GRABBER_HEIGHT) / 2) *\n      this.scale *\n      this.noteScale;\n\n    // use padding to control grabber's height\n    const paddingTop = rowPaddingY + posTop - draggingAreaRect.top;\n    const paddingBottom =\n      draggingAreaRect.height -\n      paddingTop -\n      DRAG_HANDLE_GRABBER_HEIGHT * this.scale * this.noteScale;\n\n    const applyStyle = (transition?: boolean) => {\n      container.style.transition = transition ? 'padding 0.25s ease' : 'none';\n      container.style.paddingTop = `${paddingTop}px`;\n      container.style.paddingBottom = `${paddingBottom}px`;\n      container.style.width = `${\n        DRAG_HANDLE_CONTAINER_WIDTH * this.scale * this.noteScale\n      }px`;\n      container.style.left = `${draggingAreaRect.left}px`;\n      container.style.top = `${draggingAreaRect.top}px`;\n      container.style.display = 'flex';\n      container.style.height = `${draggingAreaRect.height}px`;\n    };\n\n    if (isBlockIdEqual(block.blockId, this._lastShowedBlock?.id)) {\n      applyStyle(true);\n    } else if (this.selectedBlocks.length) {\n      if (this._isBlockSelected(block))\n        applyStyle(\n          this._isDragHandleHovered &&\n            this._isBlockSelected(this._lastShowedBlock?.el)\n        );\n      else applyStyle(false);\n    } else {\n      applyStyle(false);\n    }\n\n    grabber.style.width = `${\n      DRAG_HANDLE_GRABBER_WIDTH * this.scale * this.noteScale\n    }px`;\n    grabber.style.borderRadius = `${\n      DRAG_HANDLE_GRABBER_BORDER_RADIUS * this.scale * this.noteScale\n    }px`;\n\n    this._handleAnchorModelDisposables(block.model);\n    if (!isBlockIdEqual(block.blockId, this._lastShowedBlock?.id)) {\n      this._lastShowedBlock = {\n        id: block.blockId,\n        el: block,\n      };\n    }\n  };\n\n  private _showDragHandleOnTopLevelBlocks = async () => {\n    if (isInsidePageEditor(this.host)) return;\n    const edgelessRoot = this.rootComponent as EdgelessRootBlockComponent;\n    await edgelessRoot.surface.updateComplete;\n\n    if (!this._anchorBlockId) return;\n    const block = this.anchorBlockComponent;\n    if (!block) return;\n\n    const edgelessElement = edgelessRoot.service.getElementById(block.model.id);\n    if (!edgelessElement) return;\n\n    const container = this._dragHandleContainer;\n    const grabber = this._dragHandleGrabber;\n    if (!container || !grabber) return;\n\n    const rect = getSelectedRect([edgelessElement]);\n    const [left, top] = edgelessRoot.service.viewport.toViewCoord(\n      rect.left,\n      rect.top\n    );\n    const height = rect.height * this.scale;\n\n    const posLeft =\n      left -\n      (DRAG_HANDLE_CONTAINER_WIDTH_TOP_LEVEL +\n        DRAG_HANDLE_CONTAINER_OFFSET_LEFT_TOP_LEVEL) *\n        this.scale;\n\n    const posTop = top;\n\n    container.style.transition = 'none';\n    container.style.paddingTop = `0px`;\n    container.style.paddingBottom = `0px`;\n    container.style.width = `${\n      DRAG_HANDLE_CONTAINER_WIDTH_TOP_LEVEL * this.scale\n    }px`;\n    container.style.left = `${posLeft}px`;\n    container.style.top = `${posTop}px`;\n    container.style.display = 'flex';\n    container.style.height = `${height}px`;\n\n    grabber.style.width = `${DRAG_HANDLE_GRABBER_WIDTH_HOVERED * this.scale}px`;\n    grabber.style.borderRadius = `${\n      DRAG_HANDLE_GRABBER_BORDER_RADIUS * this.scale\n    }px`;\n\n    this._handleAnchorModelDisposables(block.model);\n\n    this._isTopLevelDragHandleVisible = true;\n  };\n\n  private _startDragging = (\n    blocks: BlockComponent[],\n    state: PointerEventState,\n    dragPreviewEl?: HTMLElement,\n    dragPreviewOffset?: Point\n  ) => {\n    if (!blocks.length) {\n      return;\n    }\n\n    this.draggingElements = blocks;\n\n    if (this.dragPreview) {\n      this._removeDragPreview();\n    }\n\n    this.dragPreview = this._createDragPreview(\n      blocks,\n      state,\n      dragPreviewEl,\n      dragPreviewOffset\n    );\n\n    this.dragging = true;\n    this._changeCursorToGrabbing();\n    this._createDropIndicator();\n    this._hide();\n  };\n\n  private _throttledPointerMoveHandler = throttle<UIEventHandler>(ctx => {\n    if (this.doc.readonly || this.dragging || !this.isConnected) {\n      this._hide();\n      return;\n    }\n    if (this._isTopLevelDragHandleVisible) return;\n\n    const state = ctx.get('pointerState');\n    const { target } = state.raw;\n    const element = captureEventTarget(target);\n    // When pointer not on block or on dragging, should do nothing\n    if (!element) return;\n\n    // When pointer on drag handle, should do nothing\n    if (element.closest('.affine-drag-handle-container')) return;\n\n    // TODO: need to optimize\n    // When pointer out of note block hover area or inside database, should hide drag handle\n    const point = new Point(state.raw.x, state.raw.y);\n\n    const closestNoteBlock = getClosestNoteBlock(\n      this.host,\n      this.rootComponent,\n      point\n    ) as NoteBlockComponent | null;\n\n    this.noteScale = isInsidePageEditor(this.host)\n      ? 1\n      : (closestNoteBlock?.model.edgeless.scale ?? 1);\n\n    if (\n      closestNoteBlock &&\n      this._canEditing(closestNoteBlock) &&\n      !isOutOfNoteBlock(\n        this.host,\n        closestNoteBlock,\n        point,\n        this.scale * this.noteScale\n      )\n    ) {\n      this._pointerMoveOnBlock(state);\n      return true;\n    }\n\n    this._hide();\n    return false;\n  }, 1000 / 60);\n\n  private _updateDragHoverRectTopLevelBlock = () => {\n    if (!this._dragHoverRect) return;\n\n    const edgelessElement = this.anchorEdgelessElement;\n\n    if (edgelessElement) {\n      this._dragHoverRect =\n        this._getHoverAreaRectTopLevelBlock(edgelessElement);\n    }\n  };\n\n  private _updateDragPreviewOnViewportUpdate = () => {\n    if (this.dragPreview && this.lastDragPointerState) {\n      this._updateDragPreviewPosition(this.lastDragPointerState);\n    }\n  };\n\n  private _updateDragPreviewPosition = (state: PointerEventState) => {\n    if (!this.dragPreview) return;\n\n    const offsetParentRect =\n      this.dragHandleContainerOffsetParent.getBoundingClientRect();\n\n    const dragPreviewOffset = this.dragPreview.offset;\n\n    let posX = state.raw.x - dragPreviewOffset.x - offsetParentRect.left;\n    posX /= this.cumulativeParentScale;\n\n    let posY = state.raw.y - dragPreviewOffset.y - offsetParentRect.top;\n    posY /= this.cumulativeParentScale;\n\n    this.dragPreview.style.transform = `translate(${posX}px, ${posY}px) scale(${\n      this.scale * this.noteScale\n    })`;\n\n    const altKey = state.raw.altKey;\n    this.dragPreview.style.opacity = altKey ? '1' : '0.5';\n  };\n\n  private _updateDropIndicator = (\n    state: PointerEventState,\n    shouldAutoScroll: boolean = false\n  ) => {\n    const point = new Point(state.raw.x, state.raw.y);\n    const closestNoteBlock = getClosestNoteBlock(\n      this.host,\n      this.rootComponent,\n      point\n    );\n    if (\n      !closestNoteBlock ||\n      isOutOfNoteBlock(this.host, closestNoteBlock, point, this.scale)\n    ) {\n      this._resetDropResult();\n    } else {\n      const dropResult = this._getDropResult(state);\n      this._updateDropResult(dropResult);\n    }\n\n    this.lastDragPointerState = state;\n    if (this.rootComponent instanceof PageRootBlockComponent) {\n      if (!shouldAutoScroll) return;\n\n      const result = autoScroll(this.scrollContainer, state.raw.y);\n      if (!result) {\n        this._clearRaf();\n        return;\n      }\n      this.rafID = requestAnimationFrame(() =>\n        this._updateDropIndicator(state, true)\n      );\n    } else {\n      this._clearRaf();\n    }\n  };\n\n  private _updateDropIndicatorOnScroll = () => {\n    if (\n      !this.dragging ||\n      this.draggingElements.length === 0 ||\n      !this.lastDragPointerState\n    )\n      return;\n\n    const state = this.lastDragPointerState;\n    this.rafID = requestAnimationFrame(() =>\n      this._updateDropIndicator(state, false)\n    );\n  };\n\n  private _updateDropResult = (dropResult: DropResult | null) => {\n    if (!this.dropIndicator) return;\n    this.dropBlockId = dropResult?.dropBlockId ?? '';\n    this.dropType = dropResult?.dropType ?? null;\n    if (dropResult?.rect) {\n      const offsetParentRect =\n        this.dragHandleContainerOffsetParent.getBoundingClientRect();\n      let { left, top } = dropResult.rect;\n      left -= offsetParentRect.left;\n      top -= offsetParentRect.top;\n\n      left /= this.cumulativeParentScale;\n      top /= this.cumulativeParentScale;\n\n      let { width, height } = dropResult.rect;\n      width /= this.cumulativeParentScale;\n      height /= this.cumulativeParentScale;\n\n      const rect = Rect.fromLWTH(left, width, top, height);\n      this.dropIndicator.rect = rect;\n    } else {\n      this.dropIndicator.rect = dropResult?.rect ?? null;\n    }\n  };\n\n  // Single block: drag handle should show on the vertical middle of the first line of element\n  center: IVec = [0, 0];\n\n  cumulativeParentScale = 1;\n\n  dragging = false;\n\n  draggingElements: BlockComponent[] = [];\n\n  dragPreview: DragPreview | null = null;\n\n  dropBlockId = '';\n\n  dropIndicator: DropIndicator | null = null;\n\n  dropType: DropType | null = null;\n\n  lastDragPointerState: PointerEventState | null = null;\n\n  noteScale = 1;\n\n  rafID = 0;\n\n  scale = 1;\n\n  private get _rangeManager() {\n    return this.std.range;\n  }\n\n  get anchorBlockComponent(): BlockComponent | null {\n    if (!this._anchorBlockId) return null;\n    return this._getBlockComponentFromViewStore(this._anchorBlockId);\n  }\n\n  get anchorEdgelessElement(): GfxBlockModel | null {\n    if (isInsidePageEditor(this.host) || !this._anchorBlockId) return null;\n    const { service } = this.rootComponent as EdgelessRootBlockComponent;\n    const edgelessElement = service.getElementById(this._anchorBlockId);\n    return isTopLevelBlock(edgelessElement) ? edgelessElement : null;\n  }\n\n  private get dragHandleContainerOffsetParent() {\n    return this._dragHandleContainer.parentElement!;\n  }\n\n  get optionRunner() {\n    return AffineDragHandleWidget.staticOptionRunner;\n  }\n\n  get rootComponent() {\n    return this.block as PageRootBlockComponent | EdgelessRootBlockComponent;\n  }\n\n  private get scrollContainer() {\n    return getScrollContainer(this.rootComponent!);\n  }\n\n  get selectedBlocks() {\n    // eslint-disable-next-line unicorn/prefer-array-some\n    return this.host.selection.find('text')\n      ? this.host.selection.filter('text')\n      : this.host.selection.filter('block');\n  }\n\n  static registerOption(option: DragHandleOption) {\n    return AffineDragHandleWidget.staticOptionRunner.register(option);\n  }\n\n  private _clearRaf() {\n    if (this.rafID) {\n      cancelAnimationFrame(this.rafID);\n      this.rafID = 0;\n    }\n  }\n\n  private _getHoverAreaRectTopLevelBlock(\n    edgelessElement: GfxBlockModel\n  ): Rect | null {\n    if (isInsidePageEditor(this.host)) return null;\n    const edgelessRoot = this.rootComponent as EdgelessRootBlockComponent;\n\n    const rect = getSelectedRect([edgelessElement]);\n    let [left, top] = edgelessRoot.service.viewport.toViewCoord(\n      rect.left,\n      rect.top\n    );\n    const width = rect.width * this.scale;\n    const height = rect.height * this.scale;\n\n    let [right, bottom] = [left + width, top + height];\n\n    const offsetLeft = DRAG_HANDLE_CONTAINER_OFFSET_LEFT_TOP_LEVEL * this.scale;\n    const padding = HOVER_AREA_RECT_PADDING_TOP_LEVEL * this.scale;\n\n    left -= DRAG_HANDLE_CONTAINER_WIDTH_TOP_LEVEL * this.scale + offsetLeft;\n    top -= padding;\n    right += padding;\n    bottom += padding;\n\n    return new Rect(left, top, right, bottom);\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n\n    this.disposables.addFromEvent(this, 'pointerdown', e => {\n      e.preventDefault();\n    });\n\n    this.handleEvent('pointerMove', this._throttledPointerMoveHandler);\n    this.handleEvent('click', this._clickHandler);\n    this.handleEvent('dragStart', this._dragStartHandler);\n    this.handleEvent('dragMove', this._dragMoveHandler);\n    this.handleEvent('dragEnd', this._dragEndHandler, { global: true });\n    this.handleEvent('pointerOut', this._pointerOutHandler);\n    this.handleEvent('beforeInput', () => this._hide());\n    this.handleEvent('keyDown', this._keyboardHandler, { global: true });\n    this.handleEvent('keyUp', this._keyboardHandler, { global: true });\n  }\n\n  override disconnectedCallback() {\n    this._hide(true);\n    this._disposables.dispose();\n    this._anchorModelDisposables?.dispose();\n    super.disconnectedCallback();\n  }\n\n  override firstUpdated() {\n    this._hide(true);\n\n    // When pointer enter drag handle grabber\n    // Extend drag handle grabber to the height of the hovered block\n    this._disposables.addFromEvent(\n      this._dragHandleContainer,\n      'pointerenter',\n      this._onDragHandlePointerEnter\n    );\n\n    this._disposables.addFromEvent(\n      this._dragHandleContainer,\n      'pointerdown',\n      this._onDragHandlePointerDown\n    );\n\n    this._disposables.addFromEvent(\n      this._dragHandleContainer,\n      'pointerup',\n      this._onDragHandlePointerUp\n    );\n\n    // When pointer leave drag handle grabber, should reset drag handle grabber style\n    this._disposables.addFromEvent(\n      this._dragHandleContainer,\n      'pointerleave',\n      this._onDragHandlePointerLeave\n    );\n\n    this._disposables.addFromEvent(this.host, 'pointerleave', () => {\n      this._hide();\n    });\n\n    if (isInsidePageEditor(this.host)) {\n      this._disposables.add(this.doc.slots.blockUpdated.on(() => this._hide()));\n\n      const pageRoot = this.rootComponent as PageRootBlockComponent;\n      this._disposables.add(\n        pageRoot.slots.viewportUpdated.on(() => {\n          this._hide();\n          if (this.dropIndicator) {\n            this.dropIndicator.rect = null;\n          }\n        })\n      );\n\n      this._disposables.addFromEvent(\n        this.scrollContainer,\n        'scrollend',\n        this._updateDropIndicatorOnScroll\n      );\n    } else if (isInsideEdgelessEditor(this.host)) {\n      const edgelessRoot = this.rootComponent as EdgelessRootBlockComponent;\n\n      this._disposables.add(\n        edgelessRoot.slots.edgelessToolUpdated.on(\n          this._handleEdgelessToolUpdated\n        )\n      );\n\n      this._disposables.add(\n        edgelessRoot.service.viewport.viewportUpdated.on(\n          this._handleEdgelessViewPortUpdated\n        )\n      );\n\n      this._disposables.add(\n        edgelessRoot.service.selection.slots.updated.on(() => {\n          this._checkTopLevelBlockSelection();\n        })\n      );\n\n      this._disposables.add(\n        edgelessRoot.slots.readonlyUpdated.on(() => {\n          this._checkTopLevelBlockSelection();\n        })\n      );\n\n      this._disposables.add(\n        edgelessRoot.slots.draggingAreaUpdated.on(() => {\n          this._checkTopLevelBlockSelection();\n        })\n      );\n\n      this._disposables.add(\n        edgelessRoot.slots.elementResizeStart.on(() => {\n          this._hide();\n        })\n      );\n\n      this._disposables.add(\n        edgelessRoot.slots.elementResizeEnd.on(() => {\n          this._checkTopLevelBlockSelection();\n        })\n      );\n    }\n  }\n\n  override render() {\n    const hoverRectStyle = styleMap(\n      this._dragHoverRect\n        ? {\n            width: `${this._dragHoverRect.width}px`,\n            height: `${this._dragHoverRect.height}px`,\n            top: `${this._dragHoverRect.top}px`,\n            left: `${this._dragHoverRect.left}px`,\n          }\n        : {\n            display: 'none',\n          }\n    );\n\n    return html`\n      <div class=\"affine-drag-handle-widget\">\n        <div class=\"affine-drag-handle-container\">\n          <div class=\"affine-drag-handle-grabber\"></div>\n        </div>\n        <div class=\"affine-drag-hover-rect\" style=${hoverRectStyle}></div>\n      </div>\n    `;\n  }\n\n  @query('.affine-drag-handle-container')\n  private accessor _dragHandleContainer!: HTMLDivElement;\n\n  @query('.affine-drag-handle-grabber')\n  private accessor _dragHandleGrabber!: HTMLDivElement;\n\n  @state()\n  private accessor _dragHoverRect: {\n    width: number;\n    height: number;\n    left: number;\n    top: number;\n  } | null = null;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    [AFFINE_DRAG_HANDLE_WIDGET]: AffineDragHandleWidget;\n  }\n}\n"]}