{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../src/root-block/widgets/drag-handle/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  EmbedCardStyle,\n  ParagraphBlockModel,\n} from '@blocksuite/affine-model';\nimport type {\n  BaseSelection,\n  BlockComponent,\n  EditorHost,\n} from '@blocksuite/block-std';\nimport type { BlockModel } from '@blocksuite/store';\n\nimport { BLOCK_CHILDREN_CONTAINER_PADDING_LEFT } from '@blocksuite/affine-shared/consts';\nimport {\n  findClosestBlockComponent,\n  getBlockProps,\n  getClosestBlockComponentByElement,\n  getClosestBlockComponentByPoint,\n  isInsidePageEditor,\n  matchFlavours,\n} from '@blocksuite/affine-shared/utils';\nimport { assertExists, Bound, Point, Rect } from '@blocksuite/global/utils';\n\nimport type { EdgelessRootBlockComponent } from '../../edgeless/edgeless-root-block.js';\n\nimport {\n  getDropRectByPoint,\n  getHoveringNote,\n  getRectByBlockComponent,\n} from '../../../_common/utils/index.js';\nimport { isEmbedSyncedDocBlock } from '../../edgeless/utils/query.js';\nimport {\n  DRAG_HANDLE_CONTAINER_HEIGHT,\n  DRAG_HANDLE_CONTAINER_OFFSET_LEFT,\n  DRAG_HANDLE_CONTAINER_OFFSET_LEFT_LIST,\n  type DropResult,\n  type DropType,\n  EDGELESS_NOTE_EXTRA_PADDING,\n  NOTE_CONTAINER_PADDING,\n  type OnDragEndProps,\n} from './config.js';\n\nconst heightMap: Record<string, number> = {\n  text: 23,\n  h1: 40,\n  h2: 36,\n  h3: 32,\n  h4: 32,\n  h5: 28,\n  h6: 26,\n  quote: 46,\n  list: 24,\n  database: 28,\n  image: 28,\n  divider: 36,\n};\n\nexport const getDragHandleContainerHeight = (model: BlockModel) => {\n  const flavour = model.flavour;\n  const index = flavour.indexOf(':');\n  let key = flavour.slice(index + 1);\n  if (key === 'paragraph' && (model as ParagraphBlockModel).type) {\n    key = (model as ParagraphBlockModel).type;\n  }\n\n  const height = heightMap[key] ?? DRAG_HANDLE_CONTAINER_HEIGHT;\n\n  return height;\n};\n\n// To check if the block is a child block of the selected blocks\nexport const containChildBlock = (\n  blocks: BlockComponent[],\n  childModel: BlockModel\n) => {\n  return blocks.some(block => {\n    let currentBlock: BlockModel | null = childModel;\n    while (currentBlock) {\n      if (currentBlock.id === block.model.id) {\n        return true;\n      }\n      currentBlock = block.doc.getParent(currentBlock.id);\n    }\n    return false;\n  });\n};\n\nexport const containBlock = (blockIDs: string[], targetID: string) => {\n  return blockIDs.some(blockID => blockID === targetID);\n};\n\n// TODO: this is a hack, need to find a better way\nexport const insideDatabaseTable = (element: Element) => {\n  return !!element.closest('.affine-database-block-table');\n};\n\nexport const captureEventTarget = (target: EventTarget | null) => {\n  const isElementOrNode = target instanceof Element || target instanceof Node;\n  return isElementOrNode\n    ? target instanceof Element\n      ? target\n      : target.parentElement\n    : null;\n};\n\nexport const includeTextSelection = (selections: BaseSelection[]) => {\n  return selections.some(selection => selection.type === 'text');\n};\n\n/**\n * Check if the path of two blocks are equal\n */\nexport const isBlockIdEqual = (\n  id1: string | null | undefined,\n  id2: string | null | undefined\n) => {\n  if (!id1 || !id2) {\n    return false;\n  }\n  return id1 === id2;\n};\n\nexport const isOutOfNoteBlock = (\n  editorHost: EditorHost,\n  noteBlock: Element,\n  point: Point,\n  scale: number\n) => {\n  // TODO: need to find a better way to check if the point is out of note block\n  const rect = noteBlock.getBoundingClientRect();\n  const insidePageEditor = isInsidePageEditor(editorHost);\n  const padding =\n    (NOTE_CONTAINER_PADDING +\n      (insidePageEditor ? 0 : EDGELESS_NOTE_EXTRA_PADDING)) *\n    scale;\n  return rect\n    ? insidePageEditor\n      ? point.y < rect.top ||\n        point.y > rect.bottom ||\n        point.x > rect.right + padding\n      : point.y < rect.top ||\n        point.y > rect.bottom ||\n        point.x < rect.left - padding ||\n        point.x > rect.right + padding\n    : true;\n};\n\nexport const getClosestNoteBlock = (\n  editorHost: EditorHost,\n  rootComponent: BlockComponent,\n  point: Point\n) => {\n  return isInsidePageEditor(editorHost)\n    ? findClosestBlockComponent(rootComponent, point, 'affine-note')\n    : getHoveringNote(point)?.closest('affine-edgeless-note');\n};\n\nexport const getClosestBlockByPoint = (\n  editorHost: EditorHost,\n  rootComponent: BlockComponent,\n  point: Point\n) => {\n  const closestNoteBlock = getClosestNoteBlock(\n    editorHost,\n    rootComponent,\n    point\n  );\n  if (!closestNoteBlock || closestNoteBlock.closest('.affine-surface-ref')) {\n    return null;\n  }\n\n  const noteRect = Rect.fromDOM(closestNoteBlock);\n\n  const block = getClosestBlockComponentByPoint(point, {\n    container: closestNoteBlock,\n    rect: noteRect,\n  }) as BlockComponent | null;\n\n  const blockSelector =\n    '.affine-note-block-container > .affine-block-children-container > [data-block-id]';\n\n  const closestBlock = (\n    block && containChildBlock([closestNoteBlock], block.model)\n      ? block\n      : findClosestBlockComponent(\n          closestNoteBlock as BlockComponent,\n          point.clone(),\n          blockSelector\n        )\n  ) as BlockComponent;\n\n  if (!closestBlock || !!closestBlock.closest('.surface-ref-note-portal')) {\n    return null;\n  }\n\n  return closestBlock;\n};\n\nexport function calcDropTarget(\n  point: Point,\n  model: BlockModel,\n  element: Element,\n  draggingElements: BlockComponent[],\n  scale: number,\n  /**\n   * Allow the dragging block to be dropped as sublist\n   */\n  allowSublist: boolean = true\n): DropResult | null {\n  let type: DropType | 'none' = 'none';\n  const height = 3 * scale;\n  const { rect: domRect } = getDropRectByPoint(point, model, element);\n\n  const distanceToTop = Math.abs(domRect.top - point.y);\n  const distanceToBottom = Math.abs(domRect.bottom - point.y);\n  const before = distanceToTop < distanceToBottom;\n\n  type = before ? 'before' : 'after';\n  let offsetY = 4;\n\n  if (type === 'before') {\n    // before\n    let prev;\n    let prevRect;\n\n    prev = element.previousElementSibling;\n    if (prev) {\n      if (\n        draggingElements.length &&\n        prev === draggingElements[draggingElements.length - 1]\n      ) {\n        type = 'none';\n      } else {\n        prevRect = getRectByBlockComponent(prev);\n      }\n    } else {\n      prev = element.parentElement?.previousElementSibling;\n      if (prev) {\n        prevRect = prev.getBoundingClientRect();\n      }\n    }\n\n    if (prevRect) {\n      offsetY = (domRect.top - prevRect.bottom) / 2;\n    }\n  } else {\n    // Only consider drop as children when target block is list block.\n    // To drop in, the position must after the target first\n    // If drop in target has children, we can use insert before or after of that children\n    // to achieve the same effect.\n    const hasChild = (element as BlockComponent).childBlocks.length;\n    if (\n      allowSublist &&\n      matchFlavours(model, ['affine:list']) &&\n      !hasChild &&\n      point.x > domRect.x + BLOCK_CHILDREN_CONTAINER_PADDING_LEFT\n    ) {\n      type = 'in';\n    }\n    // after\n    let next;\n    let nextRect;\n\n    next = element.nextElementSibling;\n    if (next) {\n      if (\n        type === 'after' &&\n        draggingElements.length &&\n        next === draggingElements[0]\n      ) {\n        type = 'none';\n        next = null;\n      }\n    } else {\n      next = getClosestBlockComponentByElement(\n        element.parentElement\n      )?.nextElementSibling;\n    }\n\n    if (next) {\n      nextRect = getRectByBlockComponent(next);\n      offsetY = (nextRect.top - domRect.bottom) / 2;\n    }\n  }\n\n  if (type === 'none') return null;\n\n  let top = domRect.top;\n  if (type === 'before') {\n    top -= offsetY;\n  } else {\n    top += domRect.height + offsetY;\n  }\n\n  if (type === 'in') {\n    domRect.x += BLOCK_CHILDREN_CONTAINER_PADDING_LEFT;\n    domRect.width -= BLOCK_CHILDREN_CONTAINER_PADDING_LEFT;\n  }\n\n  return {\n    rect: Rect.fromLWTH(domRect.left, domRect.width, top - height / 2, height),\n    dropBlockId: model.id,\n    dropType: type,\n  };\n}\n\nexport const getDropResult = (\n  event: MouseEvent,\n  scale: number = 1\n): DropResult | null => {\n  let dropIndicator = null;\n  const point = new Point(event.x, event.y);\n  const closestBlock = getClosestBlockComponentByPoint(point) as BlockComponent;\n  if (!closestBlock) {\n    return dropIndicator;\n  }\n\n  const model = closestBlock.model;\n\n  const isDatabase = matchFlavours(model, ['affine:database']);\n  if (isDatabase) {\n    return dropIndicator;\n  }\n\n  const result = calcDropTarget(point, model, closestBlock, [], scale);\n  if (result) {\n    dropIndicator = result;\n  }\n\n  return dropIndicator;\n};\n\nexport function getDragHandleLeftPadding(blocks: BlockComponent[]) {\n  const hasToggleList = blocks.some(\n    block =>\n      matchFlavours(block.model, ['affine:list']) &&\n      block.model.children.length > 0\n  );\n  const offsetLeft = hasToggleList\n    ? DRAG_HANDLE_CONTAINER_OFFSET_LEFT_LIST\n    : DRAG_HANDLE_CONTAINER_OFFSET_LEFT;\n  return offsetLeft;\n}\n\nlet previousEle: BlockComponent[] = [];\nexport function updateDragHandleClassName(blocks: BlockComponent[] = []) {\n  const className = 'with-drag-handle';\n  previousEle.forEach(block => block.classList.remove(className));\n  previousEle = blocks;\n  blocks.forEach(block => block.classList.add(className));\n}\n\nexport function getDuplicateBlocks(blocks: BlockModel[]) {\n  const duplicateBlocks = blocks.map(block => ({\n    flavour: block.flavour,\n    blockProps: getBlockProps(block),\n  }));\n  return duplicateBlocks;\n}\n\nexport function convertDragPreviewDocToEdgeless({\n  blockComponent,\n  dragPreview,\n  cssSelector,\n  width,\n  height,\n  noteScale,\n  state,\n}: OnDragEndProps & {\n  blockComponent: BlockComponent;\n  cssSelector: string;\n  width?: number;\n  height?: number;\n  style?: EmbedCardStyle;\n}): boolean {\n  const edgelessRoot = blockComponent.closest(\n    'affine-edgeless-root'\n  ) as EdgelessRootBlockComponent;\n  if (!edgelessRoot) {\n    return false;\n  }\n\n  const previewEl = dragPreview.querySelector(cssSelector);\n  if (!previewEl) {\n    return false;\n  }\n  const rect = previewEl.getBoundingClientRect();\n  const border = 2;\n  const { left: viewportLeft, top: viewportTop } = edgelessRoot.viewport;\n  const currentViewBound = new Bound(\n    rect.x - viewportLeft,\n    rect.y - viewportTop,\n    rect.width + border / noteScale,\n    rect.height + border / noteScale\n  );\n  const currentModelBound =\n    edgelessRoot.service.viewport.toModelBound(currentViewBound);\n\n  // Except for embed synced doc block\n  // The width and height of other card style should be fixed\n  const newBound = isEmbedSyncedDocBlock(blockComponent.model)\n    ? new Bound(\n        currentModelBound.x,\n        currentModelBound.y,\n        (currentModelBound.w ?? width) * noteScale,\n        (currentModelBound.h ?? height) * noteScale\n      )\n    : new Bound(\n        currentModelBound.x,\n        currentModelBound.y,\n        (width ?? currentModelBound.w) * noteScale,\n        (height ?? currentModelBound.h) * noteScale\n      );\n\n  const blockModel = blockComponent.model;\n  const blockProps = getBlockProps(blockModel);\n\n  const blockId = edgelessRoot.service.addBlock(\n    blockComponent.flavour,\n    {\n      ...blockProps,\n      xywh: newBound.serialize(),\n    },\n    edgelessRoot.surfaceBlockModel\n  );\n\n  // Embed synced doc block should extend the note scale\n  const newBlock = edgelessRoot.service.getElementById(blockId);\n  if (isEmbedSyncedDocBlock(newBlock)) {\n    edgelessRoot.service.updateElement(newBlock.id, {\n      scale: noteScale,\n    });\n  }\n\n  const doc = blockComponent.doc;\n  const host = blockComponent.host;\n  const altKey = state.raw.altKey;\n  if (!altKey) {\n    doc.deleteBlock(blockModel);\n    host.selection.setGroup('note', []);\n  }\n\n  edgelessRoot.service.selection.set({\n    elements: [blockId],\n    editing: false,\n  });\n\n  return true;\n}\n\nexport function convertDragPreviewEdgelessToDoc({\n  blockComponent,\n  dropBlockId,\n  dropType,\n  state,\n  style,\n}: OnDragEndProps & {\n  blockComponent: BlockComponent;\n  style?: EmbedCardStyle;\n}): boolean {\n  const doc = blockComponent.doc;\n  const host = blockComponent.host;\n  const targetBlock = doc.getBlockById(dropBlockId);\n  if (!targetBlock) return false;\n\n  const shouldInsertIn = dropType === 'in';\n  const parentBlock = shouldInsertIn ? targetBlock : doc.getParent(targetBlock);\n  assertExists(parentBlock);\n  const parentIndex = shouldInsertIn\n    ? 0\n    : parentBlock.children.indexOf(targetBlock) +\n      (dropType === 'after' ? 1 : 0);\n\n  const blockModel = blockComponent.model;\n\n  const { width, height, xywh, rotate, zIndex, ...blockProps } =\n    getBlockProps(blockModel);\n  if (style) {\n    blockProps.style = style;\n  }\n\n  doc.addBlock(\n    blockModel.flavour as never,\n    blockProps,\n    parentBlock,\n    parentIndex\n  );\n\n  const altKey = state.raw.altKey;\n  if (!altKey) {\n    doc.deleteBlock(blockModel);\n    host.selection.setGroup('gfx', []);\n  }\n\n  return true;\n}\n"]}