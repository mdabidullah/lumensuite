{"version":3,"file":"custom-modal.js","sourceRoot":"","sources":["../../../../src/root-block/widgets/modal/custom-modal.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AACrD,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAClD,OAAO,EAAE,GAAG,EAAE,MAAM,uBAAuB,CAAC;AAC5C,OAAO,EAAE,MAAM,EAAE,MAAM,0BAA0B,CAAC;IAarC,iBAAiB;4BAD7B,aAAa,CAAC,qBAAqB,CAAC;;;;sBACE,UAAU;iCAAlB,SAAQ,WAAU;;;;YAAjD,6KA+GC;;;;iBA9GiB,WAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAuE3B,AAvEqB,CAuEpB;QAMF,KAAK;YACH,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC;QAED,QAAQ,CAAC,KAA0B;YACjC,IAAI,KAAK;gBAAE,IAAI,CAAC,MAAM,EAAE,CAAC,KAAuB,CAAC,CAAC;QACpD,CAAC;QAEQ,MAAM;YACb,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC;YAEzB,OAAO,IAAI,CAAA;;kCAEmB,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;;YAExC,OAAO,CAAC,MAAM;gBACd,CAAC,CAAC,MAAM,CACJ,OAAO,CAAC,MAAM,EACd,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EACrB,MAAM,CAAC,EAAE,CAAC,IAAI,CAAA;;oCAEM,MAAM,CAAC,IAAI,IAAI,EAAE;6BACxB,MAAM,CAAC,OAAO;;sBAErB,MAAM,CAAC,IAAI;;iBAEhB,CACF;gBACH,CAAC,CAAC,OAAO;;;WAGV,CAAC;QACV,CAAC;;YA9GU,uDAAiB;;;;;SAAjB,iBAAiB;AAqH9B,MAAM,UAAU,iBAAiB,CAC/B,OAA0B,EAC1B,YAAyB,QAAQ,CAAC,IAAI;IAEtC,MAAM,KAAK,GAAG,IAAI,iBAAiB,EAAE,CAAC;IAEtC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC;IAC7B,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;IAExB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAExB,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import { css, html, LitElement, nothing } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport { ref } from 'lit/directives/ref.js';\nimport { repeat } from 'lit/directives/repeat.js';\n\ntype ModalButton = {\n  text: string;\n  type?: 'primary';\n  onClick: () => Promise<void> | void;\n};\n\ntype ModalOptions = {\n  footer: null | ModalButton[];\n};\n\n@customElement('affine-custom-modal')\nexport class AffineCustomModal extends LitElement {\n  static override styles = css`\n    :host {\n      z-index: calc(var(--affine-z-index-modal) + 3);\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100vw;\n      height: 100vh;\n    }\n\n    .modal-background {\n      width: 100%;\n      height: 100%;\n      box-sizing: border-box;\n      align-items: center;\n      background-color: var(--affine-background-modal-color);\n      justify-content: center;\n      display: flex;\n    }\n\n    .modal-window {\n      width: 70%;\n      min-width: 500px;\n      height: 80%;\n      overflow-y: scroll;\n      background-color: var(--affine-background-overlay-panel-color);\n      border-radius: 12px;\n      box-shadow: var(--affine-shadow-3);\n      position: relative;\n    }\n\n    .modal-main {\n      height: 100%;\n    }\n\n    .modal-footer {\n      display: flex;\n      justify-content: flex-end;\n      gap: 20px;\n      padding: 24px;\n      position: absolute;\n      box-sizing: border-box;\n      bottom: 0;\n      right: 0;\n    }\n\n    .modal-footer .button {\n      align-items: center;\n      background: var(--affine-white);\n      border: 1px solid;\n      border-color: var(--affine-border-color);\n      border-radius: 8px;\n      color: var(--affine-text-primary-color);\n      cursor: pointer;\n      display: inline-flex;\n      font-size: var(--affine-font-sm);\n      font-weight: 500;\n      justify-content: center;\n      outline: 0;\n      padding: 12px 18px;\n      touch-action: manipulation;\n      transition: all 0.3s;\n      user-select: none;\n    }\n\n    .modal-footer .primary {\n      background: var(--affine-primary-color);\n      border-color: var(--affine-black-10);\n      box-shadow: var(--affine-button-inner-shadow);\n      color: var(--affine-pure-white);\n    }\n  `;\n\n  onOpen!: (div: HTMLDivElement) => void;\n\n  options!: ModalOptions;\n\n  close() {\n    this.remove();\n  }\n\n  modalRef(modal: Element | undefined) {\n    if (modal) this.onOpen?.(modal as HTMLDivElement);\n  }\n\n  override render() {\n    const { options } = this;\n\n    return html`<div class=\"modal-background\">\n      <div class=\"modal-window\">\n        <div class=\"modal-main\" ${ref(this.modalRef)}></div>\n        <div class=\"modal-footer\">\n          ${options.footer\n            ? repeat(\n                options.footer,\n                button => button.text,\n                button => html`\n                  <button\n                    class=\"button ${button.type ?? ''}\"\n                    @click=${button.onClick}\n                  >\n                    ${button.text}\n                  </button>\n                `\n              )\n            : nothing}\n        </div>\n      </div>\n    </div>`;\n  }\n}\n\ntype CreateModalOption = ModalOptions & {\n  entry: (div: HTMLDivElement) => void;\n};\n\nexport function createCustomModal(\n  options: CreateModalOption,\n  container: HTMLElement = document.body\n) {\n  const modal = new AffineCustomModal();\n\n  modal.onOpen = options.entry;\n  modal.options = options;\n\n  container.append(modal);\n\n  return modal;\n}\n"]}