{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../../src/root-block/widgets/embed-card-toolbar/config.ts"],"names":[],"mappings":"AAEA,OAAO,EACL,QAAQ,EACR,UAAU,EACV,aAAa,EACb,WAAW,GACZ,MAAM,qCAAqC,CAAC;AAC7C,OAAO,EAAE,KAAK,EAAE,MAAM,qCAAqC,CAAC;AAC5D,OAAO,EAAE,aAAa,EAAE,MAAM,iCAAiC,CAAC;AAChE,OAAO,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAI1C,OAAO,EACL,iBAAiB,EACjB,eAAe,EACf,mBAAmB,EACnB,YAAY,GACb,MAAM,+BAA+B,CAAC;AAEvC,MAAM,CAAC,MAAM,eAAe,GAA6C;IACvE;QACE,IAAI,EAAE,WAAW;QACjB,KAAK,EAAE;YACL;gBACE,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,MAAM;gBACb,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ;gBACnC,MAAM,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,cAAc,EAAE,KAAK,EAAE,EAAE,EAAE;oBAC1D,MAAM,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC5D,MAAM,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;oBACrC,KAAK,CAAC,IAAI,EAAE,0BAA0B,CAAC,CAAC;oBACxC,KAAK,EAAE,CAAC;gBACV,CAAC;aACF;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,KAAK,EAAE,WAAW;gBAClB,IAAI,EAAE,aAAa;gBACnB,QAAQ,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ;gBACnC,MAAM,EAAE,CAAC,EAAE,GAAG,EAAE,cAAc,EAAE,KAAK,EAAE,EAAE,EAAE;oBACzC,MAAM,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC;oBACnC,MAAM,UAAU,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;oBACxC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,cAAc,EAAE,GAC9D,UAAU,CAAC;oBAEb,MAAM,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;oBACpC,MAAM,KAAK,GAAG,MAAM,EAAE,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;oBAC9C,GAAG,CAAC,QAAQ,CACV,KAAK,CAAC,OAA6B,EACnC,cAAc,EACd,MAAM,EACN,KAAK,CACN,CAAC;oBACF,KAAK,EAAE,CAAC;gBACV,CAAC;aACF;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE,QAAQ;gBACf,IAAI,EAAE,WAAW;gBACjB,QAAQ,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ;gBACnC,MAAM,EAAE,CAAC,EAAE,cAAc,EAAE,KAAK,EAAE,EAAE,EAAE;oBACpC,cAAc,EAAE,WAAW,EAAE,CAAC;oBAC9B,KAAK,EAAE,CAAC;gBACV,CAAC;gBACD,IAAI,EAAE,CAAC,EAAE,cAAc,EAAE,EAAE,EAAE;oBAC3B,MAAM,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC;oBAEnC,OAAO,CACL,CAAC,CAAC,KAAK;wBACP,CAAC,YAAY,CAAC,KAAK,CAAC;4BAClB,eAAe,CAAC,KAAK,CAAC;4BACtB,iBAAiB,CAAC,KAAK,CAAC;4BACxB,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAC9B,CAAC;gBACJ,CAAC;aACF;SACF;KACF;IACD;QACE,IAAI,EAAE,QAAQ;QACd,KAAK,EAAE;YACL;gBACE,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE,QAAQ;gBACf,IAAI,EAAE,UAAU;gBAChB,QAAQ,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ;gBACnC,MAAM,EAAE,CAAC,EAAE,GAAG,EAAE,cAAc,EAAE,KAAK,EAAE,EAAE,EAAE;oBACzC,GAAG,CAAC,WAAW,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;oBACtC,KAAK,EAAE,CAAC;gBACV,CAAC;aACF;SACF;KACF;CACF,CAAC","sourcesContent":["import type { MenuItemGroup } from '@blocksuite/affine-components/toolbar';\n\nimport {\n  CopyIcon,\n  DeleteIcon,\n  DuplicateIcon,\n  RefreshIcon,\n} from '@blocksuite/affine-components/icons';\nimport { toast } from '@blocksuite/affine-components/toast';\nimport { getBlockProps } from '@blocksuite/affine-shared/utils';\nimport { Slice } from '@blocksuite/store';\n\nimport type { EmbedCardToolbarContext } from './context.js';\n\nimport {\n  isAttachmentBlock,\n  isBookmarkBlock,\n  isEmbeddedLinkBlock,\n  isImageBlock,\n} from '../../edgeless/utils/query.js';\n\nexport const BUILT_IN_GROUPS: MenuItemGroup<EmbedCardToolbarContext>[] = [\n  {\n    type: 'clipboard',\n    items: [\n      {\n        type: 'copy',\n        label: 'Copy',\n        icon: CopyIcon,\n        disabled: ({ doc }) => doc.readonly,\n        action: async ({ host, doc, std, blockComponent, close }) => {\n          const slice = Slice.fromModels(doc, [blockComponent.model]);\n          await std.clipboard.copySlice(slice);\n          toast(host, 'Copied link to clipboard');\n          close();\n        },\n      },\n      {\n        type: 'duplicate',\n        label: 'Duplicate',\n        icon: DuplicateIcon,\n        disabled: ({ doc }) => doc.readonly,\n        action: ({ doc, blockComponent, close }) => {\n          const model = blockComponent.model;\n          const blockProps = getBlockProps(model);\n          const { width, height, xywh, rotate, zIndex, ...duplicateProps } =\n            blockProps;\n\n          const parent = doc.getParent(model);\n          const index = parent?.children.indexOf(model);\n          doc.addBlock(\n            model.flavour as BlockSuite.Flavour,\n            duplicateProps,\n            parent,\n            index\n          );\n          close();\n        },\n      },\n      {\n        type: 'reload',\n        label: 'Reload',\n        icon: RefreshIcon,\n        disabled: ({ doc }) => doc.readonly,\n        action: ({ blockComponent, close }) => {\n          blockComponent?.refreshData();\n          close();\n        },\n        when: ({ blockComponent }) => {\n          const model = blockComponent.model;\n\n          return (\n            !!model &&\n            (isImageBlock(model) ||\n              isBookmarkBlock(model) ||\n              isAttachmentBlock(model) ||\n              isEmbeddedLinkBlock(model))\n          );\n        },\n      },\n    ],\n  },\n  {\n    type: 'delete',\n    items: [\n      {\n        type: 'delete',\n        label: 'Delete',\n        icon: DeleteIcon,\n        disabled: ({ doc }) => doc.readonly,\n        action: ({ doc, blockComponent, close }) => {\n          doc.deleteBlock(blockComponent.model);\n          close();\n        },\n      },\n    ],\n  },\n];\n"]}