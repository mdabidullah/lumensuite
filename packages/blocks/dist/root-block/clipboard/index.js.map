{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/root-block/clipboard/index.ts"],"names":[],"mappings":"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","sourcesContent":["import type { BlockComponent, UIEventHandler } from '@lumensuite/block-std';\nimport type { BlockSnapshot, Doc } from '@lumensuite/store';\n\nimport { assertExists, DisposableGroup } from '@lumensuite/global/utils';\n\nimport {\n  AttachmentAdapter,\n  HtmlAdapter,\n  ImageAdapter,\n  MixTextAdapter,\n} from '../../_common/adapters/index.js';\nimport {\n  defaultImageProxyMiddleware,\n  replaceIdMiddleware,\n  titleMiddleware,\n} from '../../_common/transformers/middlewares.js';\nimport { ClipboardAdapter } from './adapter.js';\nimport { copyMiddleware, pasteMiddleware } from './middlewares/index.js';\n\nexport class PageClipboard {\n  private _copySelected = (onCopy?: () => void) => {\n    return this._std.command\n      .chain()\n      .with({ onCopy })\n      .getSelectedModels()\n      .draftSelectedModels()\n      .copySelectedModels();\n  };\n\n  protected _disposables = new DisposableGroup();\n\n  protected _init = () => {\n    this._std.clipboard.registerAdapter(\n      ClipboardAdapter.MIME,\n      ClipboardAdapter,\n      100\n    );\n    this._std.clipboard.registerAdapter('text/html', HtmlAdapter, 90);\n    [\n      'image/apng',\n      'image/avif',\n      'image/gif',\n      'image/jpeg',\n      'image/png',\n      'image/svg+xml',\n      'image/webp',\n    ].map(type => this._std.clipboard.registerAdapter(type, ImageAdapter, 80));\n    this._std.clipboard.registerAdapter('text/plain', MixTextAdapter, 70);\n    this._std.clipboard.registerAdapter('*/*', AttachmentAdapter, 60);\n    const copy = copyMiddleware(this._std);\n    const paste = pasteMiddleware(this._std);\n    this._std.clipboard.use(copy);\n    this._std.clipboard.use(paste);\n    this._std.clipboard.use(replaceIdMiddleware);\n    this._std.clipboard.use(titleMiddleware);\n    this._std.clipboard.use(defaultImageProxyMiddleware);\n\n    this._disposables.add({\n      dispose: () => {\n        this._std.clipboard.unregisterAdapter(ClipboardAdapter.MIME);\n        this._std.clipboard.unregisterAdapter('text/plain');\n        [\n          'image/apng',\n          'image/avif',\n          'image/gif',\n          'image/jpeg',\n          'image/png',\n          'image/svg+xml',\n          'image/webp',\n        ].map(type => this._std.clipboard.unregisterAdapter(type));\n        this._std.clipboard.unregisterAdapter('text/html');\n        this._std.clipboard.unregisterAdapter('*/*');\n        this._std.clipboard.unuse(copy);\n        this._std.clipboard.unuse(paste);\n        this._std.clipboard.unuse(replaceIdMiddleware);\n        this._std.clipboard.unuse(titleMiddleware);\n        this._std.clipboard.unuse(defaultImageProxyMiddleware);\n      },\n    });\n  };\n\n  host: BlockComponent;\n\n  onBlockSnapshotPaste = async (\n    snapshot: BlockSnapshot,\n    doc: Doc,\n    parent?: string,\n    index?: number\n  ) => {\n    const block = await this._std.clipboard.pasteBlockSnapshot(\n      snapshot,\n      doc,\n      parent,\n      index\n    );\n    return block?.id ?? null;\n  };\n\n  onPageCopy: UIEventHandler = ctx => {\n    const e = ctx.get('clipboardState').raw;\n    e.preventDefault();\n\n    this._copySelected().run();\n  };\n\n  onPageCut: UIEventHandler = ctx => {\n    const e = ctx.get('clipboardState').raw;\n    e.preventDefault();\n\n    this._copySelected(() => {\n      this._std.command\n        .chain()\n        .try(cmd => [\n          cmd.getTextSelection().deleteText(),\n          cmd.getSelectedModels().deleteSelectedModels(),\n        ])\n        .run();\n    }).run();\n  };\n\n  onPagePaste: UIEventHandler = ctx => {\n    const e = ctx.get('clipboardState').raw;\n    e.preventDefault();\n\n    this._std.doc.captureSync();\n    this._std.command\n      .chain()\n      .try(cmd => [\n        cmd.getTextSelection().inline<'currentSelectionPath'>((ctx, next) => {\n          const textSelection = ctx.currentTextSelection;\n          if (!textSelection) {\n            return;\n          }\n          const end = textSelection.to ?? textSelection.from;\n          next({ currentSelectionPath: end.blockId });\n        }),\n        cmd.getBlockSelections().inline<'currentSelectionPath'>((ctx, next) => {\n          const currentBlockSelections = ctx.currentBlockSelections;\n          if (!currentBlockSelections) {\n            return;\n          }\n          const blockSelection = currentBlockSelections.at(-1);\n          if (!blockSelection) {\n            return;\n          }\n          next({ currentSelectionPath: blockSelection.blockId });\n        }),\n        cmd.getImageSelections().inline<'currentSelectionPath'>((ctx, next) => {\n          const currentImageSelections = ctx.currentImageSelections;\n          if (!currentImageSelections) {\n            return;\n          }\n          const imageSelection = currentImageSelections.at(-1);\n          if (!imageSelection) {\n            return;\n          }\n          next({ currentSelectionPath: imageSelection.blockId });\n        }),\n      ])\n      .getBlockIndex()\n      .inline((ctx, next) => {\n        assertExists(ctx.parentBlock);\n        this._std.clipboard\n          .paste(\n            e,\n            this._std.doc,\n            ctx.parentBlock.model.id,\n            ctx.blockIndex ? ctx.blockIndex + 1 : 1\n          )\n          .catch(console.error);\n\n        return next();\n      })\n      .run();\n  };\n\n  private get _std() {\n    return this.host.std;\n  }\n\n  constructor(host: BlockComponent) {\n    this.host = host;\n  }\n\n  hostConnected() {\n    if (this._disposables.disposed) {\n      this._disposables = new DisposableGroup();\n    }\n    this.host.handleEvent('copy', this.onPageCopy);\n    this.host.handleEvent('paste', this.onPagePaste);\n    this.host.handleEvent('cut', this.onPageCut);\n    this._init();\n  }\n\n  hostDisconnected() {\n    this._disposables.dispose();\n  }\n}\n\nexport { copyMiddleware, pasteMiddleware };\n"]}