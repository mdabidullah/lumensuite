{"version":3,"file":"embed-youtube-service.js","sourceRoot":"","sources":["../../src/embed-youtube-block/embed-youtube-service.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,uBAAuB,EAEvB,kBAAkB,GACnB,MAAM,0BAA0B,CAAC;AAClC,OAAO,EAAE,mBAAmB,EAAE,MAAM,oCAAoC,CAAC;AACzE,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AAErD,OAAO,EAAE,aAAa,EAAE,MAAM,wCAAwC,CAAC;AACvE,OAAO,EAAE,eAAe,EAAE,MAAM,0BAA0B,CAAC;AAC3D,OAAO,EAAE,qBAAqB,EAAE,MAAM,YAAY,CAAC;AAEnD,MAAM,OAAO,wBAAyB,SAAQ,YAAY;IAA1D;;QAQE,iBAAY,GAAG,CACb,iBAAoC,EACpC,MAAoB,EACpB,EAAE;YACF,OAAO,qBAAqB,CAC1B,iBAAiB,EACjB,wBAAwB,CAAC,aAAa,EACtC,MAAM,CACP,CAAC;QACJ,CAAC,CAAC;IAYJ,CAAC;aA5B0B,YAAO,GAAG,uBAAuB,CAAC,KAAK,CAAC,OAAO,AAAxC,CAAyC;aAEjD,kBAAa,GAAG,IAAI,aAAa,EAAE,AAAtB,CAAuB;aAErD,2BAAsB,GAC3B,wBAAwB,CAAC,aAAa,CAAC,WAAW,AADvB,CACwB;IAa5C,OAAO;QACd,KAAK,CAAC,OAAO,EAAE,CAAC;QAEhB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,yBAAyB,CAAC;YAC1D,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,eAAe;YACzB,MAAM,EAAE,kBAAkB;YAC1B,QAAQ,EAAE,OAAO;SAClB,CAAC,CAAC;IACL,CAAC","sourcesContent":["import {\n  EmbedYoutubeBlockSchema,\n  type EmbedYoutubeModel,\n  EmbedYoutubeStyles,\n} from '@blocksuite/affine-model';\nimport { EmbedOptionProvider } from '@blocksuite/affine-shared/services';\nimport { BlockService } from '@blocksuite/block-std';\n\nimport { LinkPreviewer } from '../_common/embed-block-helper/index.js';\nimport { youtubeUrlRegex } from './embed-youtube-model.js';\nimport { queryEmbedYoutubeData } from './utils.js';\n\nexport class EmbedYoutubeBlockService extends BlockService {\n  static override readonly flavour = EmbedYoutubeBlockSchema.model.flavour;\n\n  private static readonly linkPreviewer = new LinkPreviewer();\n\n  static setLinkPreviewEndpoint =\n    EmbedYoutubeBlockService.linkPreviewer.setEndpoint;\n\n  queryUrlData = (\n    embedYoutubeModel: EmbedYoutubeModel,\n    signal?: AbortSignal\n  ) => {\n    return queryEmbedYoutubeData(\n      embedYoutubeModel,\n      EmbedYoutubeBlockService.linkPreviewer,\n      signal\n    );\n  };\n\n  override mounted() {\n    super.mounted();\n\n    this.std.get(EmbedOptionProvider).registerEmbedBlockOptions({\n      flavour: this.flavour,\n      urlRegex: youtubeUrlRegex,\n      styles: EmbedYoutubeStyles,\n      viewType: 'embed',\n    });\n  }\n}\n"]}