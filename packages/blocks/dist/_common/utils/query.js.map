{"version":3,"file":"query.js","sourceRoot":"","sources":["../../../src/_common/utils/query.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Point } from '@blocksuite/global/utils';\nimport type { BlockModel } from '@blocksuite/store';\n\nimport { matchFlavours } from '@blocksuite/affine-shared/utils';\nimport {\n  BLOCK_ID_ATTR,\n  type BlockComponent,\n  type EditorHost,\n} from '@blocksuite/block-std';\nimport { assertExists } from '@blocksuite/global/utils';\n\nimport type { RootBlockComponent } from '../../index.js';\n\nconst ATTR_SELECTOR = `[${BLOCK_ID_ATTR}]`;\n\n/**\n * This function is used to build model's \"normal\" block path.\n * If this function does not meet your needs, you may need to build path manually to satisfy your needs.\n * You should not modify this function.\n */\nexport function buildPath(model: BlockModel | null): string[] {\n  const path: string[] = [];\n  let current = model;\n  while (current) {\n    path.unshift(current.id);\n    current = current.doc.getParent(current);\n  }\n  return path;\n}\n\nexport function getRootByEditorHost(\n  editorHost: EditorHost\n): RootBlockComponent | null {\n  return (\n    getPageRootByEditorHost(editorHost) ??\n    getEdgelessRootByEditorHost(editorHost)\n  );\n}\n\n/** If it's not in the page mode, it will return `null` directly */\nexport function getPageRootByEditorHost(editorHost: EditorHost) {\n  return editorHost.querySelector('affine-page-root');\n}\n\n/** If it's not in the edgeless mode, it will return `null` directly */\nexport function getEdgelessRootByEditorHost(editorHost: EditorHost) {\n  return editorHost.querySelector('affine-edgeless-root');\n}\n\n/**\n * Get block component by model.\n * Note that this function is used for compatibility only, and may be removed in the future.\n *\n * Use `root.view.viewFromPath` instead.\n * @deprecated\n */\nexport function getBlockComponentByModel(\n  editorHost: EditorHost,\n  model: BlockModel | null\n) {\n  if (!model) return null;\n  return editorHost.view.getBlock(model.id);\n}\n\nfunction isDatabase({ tagName }: Element) {\n  return tagName === 'AFFINE-DATABASE-TABLE' || tagName === 'AFFINE-DATABASE';\n}\n\nfunction isEdgelessChildNote({ classList }: Element) {\n  return classList.contains('note-background');\n}\n\n/**\n * Returns rect of the block element.\n *\n * Compatible with Safari!\n * https://github.com/toeverything/blocksuite/issues/902\n * https://github.com/toeverything/blocksuite/pull/1121\n */\nexport function getRectByBlockComponent(element: Element | BlockComponent) {\n  if (isDatabase(element)) return element.getBoundingClientRect();\n  return (element.firstElementChild ?? element).getBoundingClientRect();\n}\n\n/**\n * Get hovering note with given a point in edgeless mode.\n */\nexport function getHoveringNote(point: Point) {\n  return (\n    document.elementsFromPoint(point.x, point.y).find(isEdgelessChildNote) ||\n    null\n  );\n}\n\n/**\n * Gets the table of the database.\n */\nfunction getDatabaseBlockTableElement(element: Element) {\n  return element.querySelector('.affine-database-block-table');\n}\n\n/**\n * Gets the column header of the database.\n */\nfunction getDatabaseBlockColumnHeaderElement(element: Element) {\n  return element.querySelector('.affine-database-column-header');\n}\n\n/**\n * Gets the rows of the database.\n */\nfunction getDatabaseBlockRowsElement(element: Element) {\n  return element.querySelector('.affine-database-block-rows');\n}\n\n/**\n * Returns a flag for the drop target.\n */\nexport enum DropFlags {\n  Normal,\n  Database,\n  EmptyDatabase,\n}\n\n/**\n * Gets the drop rect by block and point.\n */\nexport function getDropRectByPoint(\n  point: Point,\n  model: BlockModel,\n  element: Element\n): {\n  rect: DOMRect;\n  flag: DropFlags;\n} {\n  const result = {\n    rect: getRectByBlockComponent(element),\n    flag: DropFlags.Normal,\n  };\n\n  const isDatabase = matchFlavours(model, ['affine:database']);\n\n  if (isDatabase) {\n    const table = getDatabaseBlockTableElement(element);\n    if (!table) {\n      return result;\n    }\n    let bounds = table.getBoundingClientRect();\n    if (model.isEmpty.value) {\n      result.flag = DropFlags.EmptyDatabase;\n\n      if (point.y < bounds.top) return result;\n\n      const header = getDatabaseBlockColumnHeaderElement(element);\n      assertExists(header);\n      bounds = header.getBoundingClientRect();\n      result.rect = new DOMRect(\n        result.rect.left,\n        bounds.bottom,\n        result.rect.width,\n        1\n      );\n    } else {\n      result.flag = DropFlags.Database;\n      const rows = getDatabaseBlockRowsElement(element);\n      assertExists(rows);\n      const rowsBounds = rows.getBoundingClientRect();\n\n      if (point.y < rowsBounds.top || point.y > rowsBounds.bottom)\n        return result;\n\n      const elements = document.elementsFromPoint(point.x, point.y);\n      const len = elements.length;\n      let e;\n      let i = 0;\n      for (; i < len; i++) {\n        e = elements[i];\n\n        if (e.classList.contains('affine-database-block-row-cell-content')) {\n          result.rect = getCellRect(e, bounds);\n          return result;\n        }\n\n        if (e.classList.contains('affine-database-block-row')) {\n          e = e.querySelector(ATTR_SELECTOR);\n          assertExists(e);\n          result.rect = getCellRect(e, bounds);\n          return result;\n        }\n      }\n    }\n  } else {\n    const parent = element.parentElement;\n    if (parent?.classList.contains('affine-database-block-row-cell-content')) {\n      result.flag = DropFlags.Database;\n      result.rect = getCellRect(parent);\n      return result;\n    }\n  }\n\n  return result;\n}\n\nfunction getCellRect(element: Element, bounds?: DOMRect) {\n  if (!bounds) {\n    const table = element.closest('.affine-database-block-table');\n    assertExists(table);\n    bounds = table.getBoundingClientRect();\n  }\n  // affine-database-block-row-cell\n  const col = element.parentElement;\n  assertExists(col);\n  // affine-database-block-row\n  const row = col.parentElement;\n  assertExists(row);\n  const colRect = col.getBoundingClientRect();\n  return new DOMRect(\n    bounds.left,\n    colRect.top,\n    colRect.right - bounds.left,\n    colRect.height\n  );\n}\n\n/**\n * Return `true` if the element has class name in the class list.\n */\nexport function hasClassNameInList(element: Element, classList: string[]) {\n  return classList.some(className => element.classList.contains(className));\n}\n"]}