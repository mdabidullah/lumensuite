{"version":3,"file":"render-linked-doc.js","sourceRoot":"","sources":["../../../src/_common/utils/render-linked-doc.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  DocMode,\n  FrameBlockModel,\n  ImageBlockModel,\n  NoteBlockModel,\n} from '@blocksuite/affine-model';\n\nimport { NoteDisplayMode } from '@blocksuite/affine-model';\nimport { DocModeProvider } from '@blocksuite/affine-shared/services';\nimport { getBlockProps, matchFlavours } from '@blocksuite/affine-shared/utils';\nimport { BlockStdScope, type EditorHost } from '@blocksuite/block-std';\nimport { assertExists, Bound, getCommonBound } from '@blocksuite/global/utils';\nimport {\n  type BlockModel,\n  BlockViewType,\n  type Doc,\n  type Query,\n} from '@blocksuite/store';\nimport { css, render, type TemplateResult } from 'lit';\n\nimport type { EmbedLinkedDocBlockComponent } from '../../embed-linked-doc-block/embed-linked-doc-block.js';\nimport type { EmbedSyncedDocCard } from '../../embed-synced-doc-block/components/embed-synced-doc-card.js';\n\nimport { SpecProvider } from '../../_specs/utils/spec-provider.js';\nimport { GfxBlockModel } from '../../root-block/edgeless/block-model.js';\nimport {\n  getElementProps,\n  mapFrameIds,\n  sortEdgelessElements,\n} from '../../root-block/edgeless/utils/clone-utils.js';\nimport {\n  isFrameBlock,\n  isNoteBlock,\n} from '../../root-block/edgeless/utils/query.js';\nimport { getSurfaceBlock } from '../../surface-ref-block/utils.js';\nimport { EMBED_CARD_HEIGHT } from '../consts.js';\n\nexport const embedNoteContentStyles = css`\n  .affine-embed-doc-content-note-blocks affine-divider,\n  .affine-embed-doc-content-note-blocks affine-divider > * {\n    margin-top: 0px !important;\n    margin-bottom: 0px !important;\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n  .affine-embed-doc-content-note-blocks affine-paragraph,\n  .affine-embed-doc-content-note-blocks affine-list {\n    margin-top: 4px !important;\n    margin-bottom: 4px !important;\n    padding: 0 2px;\n  }\n  .affine-embed-doc-content-note-blocks affine-paragraph *,\n  .affine-embed-doc-content-note-blocks affine-list * {\n    margin-top: 0px !important;\n    margin-bottom: 0px !important;\n    padding-top: 0;\n    padding-bottom: 0;\n    line-height: 20px;\n    font-size: var(--affine-font-xs);\n    font-weight: 400;\n  }\n  .affine-embed-doc-content-note-blocks affine-list .affine-list-block__prefix {\n    height: 20px;\n  }\n  .affine-embed-doc-content-note-blocks affine-paragraph .quote {\n    padding-left: 15px;\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n  .affine-embed-doc-content-note-blocks affine-paragraph:has(.h1),\n  .affine-embed-doc-content-note-blocks affine-paragraph:has(.h2),\n  .affine-embed-doc-content-note-blocks affine-paragraph:has(.h3),\n  .affine-embed-doc-content-note-blocks affine-paragraph:has(.h4),\n  .affine-embed-doc-content-note-blocks affine-paragraph:has(.h5),\n  .affine-embed-doc-content-note-blocks affine-paragraph:has(.h6) {\n    margin-top: 6px !important;\n    margin-bottom: 4px !important;\n    padding: 0 2px;\n  }\n  .affine-embed-doc-content-note-blocks affine-paragraph:has(.h1) *,\n  .affine-embed-doc-content-note-blocks affine-paragraph:has(.h2) *,\n  .affine-embed-doc-content-note-blocks affine-paragraph:has(.h3) *,\n  .affine-embed-doc-content-note-blocks affine-paragraph:has(.h4) *,\n  .affine-embed-doc-content-note-blocks affine-paragraph:has(.h5) *,\n  .affine-embed-doc-content-note-blocks affine-paragraph:has(.h6) * {\n    margin-top: 0px !important;\n    margin-bottom: 0px !important;\n    padding-top: 0;\n    padding-bottom: 0;\n    line-height: 20px;\n    font-size: var(--affine-font-xs);\n    font-weight: 600;\n  }\n\n  .affine-embed-linked-doc-block.horizontal {\n    affine-paragraph,\n    affine-list {\n      margin-top: 0 !important;\n      margin-bottom: 0 !important;\n      max-height: 40px;\n      overflow: hidden;\n      display: flex;\n    }\n    affine-paragraph .quote {\n      padding-top: 4px;\n      padding-bottom: 4px;\n      height: 28px;\n    }\n    affine-paragraph .quote::after {\n      height: 20px;\n      margin-top: 4px !important;\n      margin-bottom: 4px !important;\n    }\n  }\n`;\n\nexport function promptDocTitle(host: EditorHost, autofill?: string) {\n  const notification = host.std.getService('affine:page').notificationService;\n  if (!notification) return Promise.resolve(undefined);\n\n  return notification.prompt({\n    title: 'Create linked doc',\n    message: 'Enter a title for the new doc.',\n    placeholder: 'Untitled',\n    autofill,\n    confirmText: 'Confirm',\n    cancelText: 'Cancel',\n  });\n}\n\nexport function getTitleFromSelectedModels(selectedModels: BlockModel[]) {\n  const firstBlock = selectedModels[0];\n  if (\n    matchFlavours(firstBlock, ['affine:paragraph']) &&\n    firstBlock.type.startsWith('h')\n  ) {\n    return firstBlock.text.toString();\n  }\n  return undefined;\n}\n\nexport function notifyDocCreated(host: EditorHost, doc: Doc) {\n  const notification = host.std.getService('affine:page').notificationService;\n  if (!notification) return;\n\n  const abortController = new AbortController();\n  const clear = () => {\n    doc.history.off('stack-item-added', addHandler);\n    doc.history.off('stack-item-popped', popHandler);\n    disposable.dispose();\n  };\n  const closeNotify = () => {\n    abortController.abort();\n    clear();\n  };\n\n  // edit or undo or switch doc, close notify toast\n  const addHandler = doc.history.on('stack-item-added', closeNotify);\n  const popHandler = doc.history.on('stack-item-popped', closeNotify);\n  const disposable = host.slots.unmounted.on(closeNotify);\n\n  notification.notify({\n    title: 'Linked doc created',\n    message: 'You can click undo to recovery block content',\n    accent: 'info',\n    duration: 10 * 1000,\n    action: {\n      label: 'Undo',\n      onClick: () => {\n        doc.undo();\n        clear();\n      },\n    },\n    abort: abortController.signal,\n    onClose: clear,\n  });\n}\n\nexport function renderLinkedDocInCard(\n  card: EmbedLinkedDocBlockComponent | EmbedSyncedDocCard\n) {\n  const linkedDoc = card.linkedDoc;\n  assertExists(\n    linkedDoc,\n    `Trying to load page ${card.model.pageId} in linked page block, but the page is not found.`\n  );\n\n  renderSurfaceRef(card);\n\n  renderNoteContent(card).catch(e => {\n    console.error(e);\n    card.isError = true;\n  });\n}\n\nexport function getNotesFromDoc(doc: Doc) {\n  const notes = doc.root?.children.filter(\n    child =>\n      matchFlavours(child, ['affine:note']) &&\n      child.displayMode !== NoteDisplayMode.EdgelessOnly\n  );\n\n  if (!notes || !notes.length) {\n    return null;\n  }\n\n  return notes;\n}\n\nexport function isEmptyDoc(doc: Doc | null, mode: DocMode) {\n  if (!doc) {\n    return true;\n  }\n\n  if (mode === 'page') {\n    const notes = getNotesFromDoc(doc);\n    if (!notes || !notes.length) {\n      return true;\n    }\n    return notes.every(note => isEmptyNote(note));\n  } else {\n    const surface = getSurfaceBlock(doc);\n    if (surface?.elementModels.length || doc.blockSize > 2) {\n      return false;\n    }\n    return true;\n  }\n}\n\nexport function isEmptyNote(note: BlockModel) {\n  return note.children.every(block => {\n    return (\n      block.flavour === 'affine:paragraph' &&\n      (!block.text || block.text.length === 0)\n    );\n  });\n}\n\nfunction filterTextModel(model: BlockModel) {\n  if (matchFlavours(model, ['affine:divider'])) {\n    return true;\n  }\n  if (!matchFlavours(model, ['affine:paragraph', 'affine:list'])) {\n    return false;\n  }\n  return !!model.text?.toString().length;\n}\n\nasync function renderNoteContent(\n  card: EmbedLinkedDocBlockComponent | EmbedSyncedDocCard\n) {\n  card.isNoteContentEmpty = true;\n\n  const doc = card.linkedDoc;\n  assertExists(\n    doc,\n    `Trying to load page ${card.model.pageId} in linked page block, but the page is not found.`\n  );\n\n  const notes = getNotesFromDoc(doc);\n  if (!notes) {\n    return;\n  }\n\n  const noteChildren = notes.flatMap(note =>\n    note.children.filter(filterTextModel)\n  );\n\n  if (!noteChildren.length) {\n    return;\n  }\n\n  card.isNoteContentEmpty = false;\n\n  const cardStyle = card.model.style;\n\n  const noteContainer = await card.noteContainer;\n  while (noteContainer.firstChild) {\n    noteContainer.firstChild.remove();\n  }\n\n  const noteBlocksContainer = document.createElement('div');\n  noteBlocksContainer.classList.add('affine-embed-doc-content-note-blocks');\n  noteBlocksContainer.contentEditable = 'false';\n  noteContainer.append(noteBlocksContainer);\n\n  if (cardStyle === 'horizontal') {\n    // When the card is horizontal, we only render the first block\n    noteChildren.splice(1);\n  } else {\n    // Before rendering, we can not know the height of each block\n    // But we can limit the number of blocks to render simply by the height of the card\n    const cardHeight = EMBED_CARD_HEIGHT[cardStyle];\n    const minSingleBlockHeight = 20;\n    const maxBlockCount = Math.floor(cardHeight / minSingleBlockHeight);\n    if (noteChildren.length > maxBlockCount) {\n      noteChildren.splice(maxBlockCount);\n    }\n  }\n  const childIds = noteChildren.map(child => child.id);\n  const ids: string[] = [];\n  childIds.map(block => {\n    let parent: string | null = block;\n    while (parent && !ids.includes(parent)) {\n      ids.push(parent);\n      parent = doc.blockCollection.crud.getParent(parent);\n    }\n  });\n  const query: Query = {\n    mode: 'strict',\n    match: ids.map(id => ({ id, viewType: BlockViewType.Display })),\n  };\n  const previewDoc = doc.blockCollection.getDoc({ query });\n  const previewSpec = SpecProvider.getInstance().getSpec('page:preview');\n  const previewStd = new BlockStdScope({\n    doc: previewDoc,\n    extensions: previewSpec.value,\n  });\n  const previewTemplate = previewStd.render();\n  const fragment = document.createDocumentFragment();\n  render(previewTemplate, fragment);\n  noteBlocksContainer.append(fragment);\n  const contentEditableElements = noteBlocksContainer.querySelectorAll(\n    '[contenteditable=\"true\"]'\n  );\n  contentEditableElements.forEach(element => {\n    (element as HTMLElement).contentEditable = 'false';\n  });\n}\n\nasync function addCover(\n  card: EmbedLinkedDocBlockComponent | EmbedSyncedDocCard,\n  cover: HTMLElement | TemplateResult<1>\n) {\n  const coverContainer = await card.bannerContainer;\n  if (!coverContainer) return;\n  while (coverContainer.firstChild) {\n    coverContainer.firstChild.remove();\n  }\n\n  if (cover instanceof HTMLElement) {\n    coverContainer.append(cover);\n  } else {\n    render(cover, coverContainer);\n  }\n}\n\nfunction renderSurfaceRef(\n  card: EmbedLinkedDocBlockComponent | EmbedSyncedDocCard\n) {\n  card.isBannerEmpty = true;\n\n  const surfaceRefService = card.std.getService('affine:surface-ref');\n  assertExists(surfaceRefService, `Surface ref service not found.`);\n  card.surfaceRefService = surfaceRefService;\n\n  card.cleanUpSurfaceRefRenderer();\n\n  const linkedDoc = card.linkedDoc;\n  assertExists(\n    linkedDoc,\n    `Trying to load page ${card.model.pageId} in linked page block, but the page is not found.`\n  );\n\n  card.surfaceRefRenderer = card.surfaceRefService.getRenderer(\n    card.model.id,\n    linkedDoc\n  );\n\n  card.surfaceRefRenderer.slots.mounted.on(() => {\n    if (card.editorMode === 'edgeless') {\n      renderEdgelessAbstract(card).catch(e => {\n        console.error(e);\n        card.isError = true;\n      });\n    } else {\n      renderPageAbstract(card).catch(e => {\n        console.error(e);\n        card.isError = true;\n      });\n    }\n  });\n  card.surfaceRefRenderer.mount();\n}\n\nasync function renderEdgelessAbstract(\n  card: EmbedLinkedDocBlockComponent | EmbedSyncedDocCard\n) {\n  const surfaceRefRenderer = card.surfaceRefRenderer;\n  assertExists(surfaceRefRenderer, 'Surface ref renderer is not found.');\n\n  const renderer = surfaceRefRenderer.surfaceRenderer;\n  const container = document.createElement('div');\n  await addCover(card, container);\n  renderer.attach(container);\n\n  // TODO: we may also need to get bounds of surface block's children\n  const bounds = Array.from(\n    surfaceRefRenderer.surfaceModel?.elementModels ?? []\n  ).map(element => Bound.deserialize(element.xywh));\n  const bound = getCommonBound(bounds);\n  if (bound) {\n    renderer.viewport.onResize();\n    renderer.viewport.setViewportByBound(bound);\n  } else {\n    card.isBannerEmpty = true;\n  }\n}\n\nasync function renderPageAbstract(\n  card: EmbedLinkedDocBlockComponent | EmbedSyncedDocCard\n) {\n  const linkedDoc = card.linkedDoc;\n  assertExists(\n    linkedDoc,\n    `Trying to load page ${card.model.pageId} in linked page block, but the page is not found.`\n  );\n\n  const notes = getNotesFromDoc(linkedDoc);\n  if (!notes) {\n    card.isBannerEmpty = true;\n    return;\n  }\n\n  const target = notes.flatMap(note =>\n    note.children.filter(child => matchFlavours(child, ['affine:image']))\n  )[0];\n\n  if (target) {\n    await renderImageAbstract(card, target);\n    return;\n  }\n\n  card.isBannerEmpty = true;\n}\n\nasync function renderImageAbstract(\n  card: EmbedLinkedDocBlockComponent | EmbedSyncedDocCard,\n  image: BlockModel\n) {\n  const sourceId = (image as ImageBlockModel).sourceId;\n  if (!sourceId) return;\n\n  const storage = card.linkedDoc?.blobSync;\n  if (!storage) return;\n\n  const blob = await storage.get(sourceId);\n  if (!blob) return;\n\n  const url = URL.createObjectURL(blob);\n  const $img = document.createElement('img');\n  $img.src = url;\n  await addCover(card, $img);\n\n  card.isBannerEmpty = false;\n}\n\nexport function addBlocksToDoc(\n  targetDoc: Doc,\n  model: BlockModel,\n  parentId: string\n) {\n  // Add current block to linked doc\n  const blockProps = getBlockProps(model);\n  const newModelId = targetDoc.addBlock(\n    model.flavour as BlockSuite.Flavour,\n    blockProps,\n    parentId\n  );\n  // Add children to linked doc, parent is the new model\n  const children = model.children;\n  if (children.length > 0) {\n    children.forEach(child => {\n      addBlocksToDoc(targetDoc, child, newModelId);\n    });\n  }\n}\n\nexport function convertSelectedBlocksToLinkedDoc(\n  doc: Doc,\n  selectedModels: BlockModel[],\n  docTitle?: string\n) {\n  const firstBlock = selectedModels[0];\n  assertExists(firstBlock);\n  // if title undefined, use the first heading block content as doc title\n  const title = docTitle || getTitleFromSelectedModels(selectedModels);\n  const linkedDoc = createLinkedDocFromBlocks(doc, selectedModels, title);\n  // insert linked doc card\n  doc.addSiblingBlocks(\n    firstBlock,\n    [\n      {\n        flavour: 'affine:embed-linked-doc',\n        pageId: linkedDoc.id,\n      },\n    ],\n    'before'\n  );\n  // delete selected elements\n  selectedModels.forEach(model => doc.deleteBlock(model));\n  return linkedDoc;\n}\n\nexport function createLinkedDocFromBlocks(\n  doc: Doc,\n  blocks: BlockModel[],\n  docTitle?: string\n) {\n  const linkedDoc = doc.collection.createDoc({});\n  linkedDoc.load(() => {\n    const rootId = linkedDoc.addBlock('affine:page', {\n      title: new doc.Text(docTitle),\n    });\n    linkedDoc.addBlock('affine:surface', {}, rootId);\n    const noteId = linkedDoc.addBlock('affine:note', {}, rootId);\n    // Move blocks to linked doc recursively\n    blocks.forEach(model => {\n      addBlocksToDoc(linkedDoc, model, noteId);\n    });\n  });\n  return linkedDoc;\n}\n\nexport function createLinkedDocFromNote(\n  doc: Doc,\n  note: NoteBlockModel,\n  docTitle?: string\n) {\n  const linkedDoc = doc.collection.createDoc({});\n  linkedDoc.load(() => {\n    const rootId = linkedDoc.addBlock('affine:page', {\n      title: new doc.Text(docTitle),\n    });\n    linkedDoc.addBlock('affine:surface', {}, rootId);\n    const blockProps = getBlockProps(note);\n    // keep note props & show in both mode\n    const noteId = linkedDoc.addBlock(\n      'affine:note',\n      {\n        ...blockProps,\n        hidden: false,\n        displayMode: NoteDisplayMode.DocAndEdgeless,\n      },\n      rootId\n    );\n    // Add note to linked doc recursively\n    note.children.forEach(model => {\n      addBlocksToDoc(linkedDoc, model, noteId);\n    });\n  });\n\n  return linkedDoc;\n}\n\nexport function createLinkedDocFromEdgelessElements(\n  host: EditorHost,\n  elements: BlockSuite.EdgelessModel[],\n  docTitle?: string\n) {\n  const linkedDoc = host.doc.collection.createDoc({});\n  linkedDoc.load(() => {\n    const rootId = linkedDoc.addBlock('affine:page', {\n      title: new host.doc.Text(docTitle),\n    });\n    const surfaceId = linkedDoc.addBlock('affine:surface', {}, rootId);\n    const surface = getSurfaceBlock(linkedDoc);\n    if (!surface) return;\n\n    const sortedElements = sortEdgelessElements(elements);\n    const ids = new Map<string, string>();\n    sortedElements.forEach(model => {\n      let newId = model.id;\n      if (model instanceof GfxBlockModel) {\n        const blockProps = getBlockProps(model);\n        if (isNoteBlock(model)) {\n          newId = linkedDoc.addBlock('affine:note', blockProps, rootId);\n          // Add note children to linked doc recursively\n          model.children.forEach(model => {\n            addBlocksToDoc(linkedDoc, model, newId);\n          });\n        } else {\n          if (isFrameBlock(model)) {\n            mapFrameIds(blockProps as unknown as FrameBlockModel, ids);\n          }\n\n          newId = linkedDoc.addBlock(\n            model.flavour as BlockSuite.Flavour,\n            blockProps,\n            surfaceId\n          );\n        }\n      } else {\n        const props = getElementProps(model, ids);\n        newId = surface.addElement(props);\n      }\n      ids.set(model.id, newId);\n    });\n  });\n\n  host.std.get(DocModeProvider).setPrimaryMode('edgeless', linkedDoc.id);\n  return linkedDoc;\n}\n"]}