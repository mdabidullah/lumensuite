{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/_common/components/utils.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,sBAAsB,EAAE,MAAM,yCAAyC,CAAC;AACjF,OAAO,EACL,qBAAqB,EACrB,yBAAyB,GAC1B,MAAM,iCAAiC,CAAC;AACzC,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAC/C,OAAO,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,KAAK,CAAC;AAErC,MAAM,UAAU,QAAQ,CACtB,YAA0B,EAC1B,UAA8B;IAE9B,MAAM,WAAW,GAAG,qBAAqB,EAAE,CAAC;IAC5C,IAAI,CAAC,WAAW,EAAE,CAAC;QACjB,OAAO,IAAI,CAAC;IACd,CAAC;IACD,IAAI,WAAW,CAAC,cAAc,KAAK,WAAW,CAAC,YAAY,EAAE,CAAC;QAC5D,OAAO,CAAC,IAAI,CACV,wDAAwD,EACxD,WAAW,CACZ,CAAC;QACF,OAAO,IAAI,CAAC;IACd,CAAC;IACD,MAAM,QAAQ,GAAG,WAAW,CAAC,cAAc,CAAC;IAC5C,IAAI,QAAQ,CAAC,QAAQ,KAAK,IAAI,CAAC,SAAS,EAAE,CAAC;QACzC,OAAO,CAAC,IAAI,CACV,0DAA0D,EAC1D,WAAW,CACZ,CAAC;QACF,OAAO,IAAI,CAAC;IACd,CAAC;IACD,MAAM,QAAQ,GAAG,YAAY,CAAC,cAAc,EAAE,CAAC;IAC/C,IAAI,CAAC,UAAU,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC7B,OAAO,IAAI,CAAC;IACd,CAAC;IACD,IAAI,QAAQ,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC;QACtC,OAAO,IAAI,CAAC;IACd,CAAC;IACD,MAAM,IAAI,GAAG,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IAC3C,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtD,CAAC;AAeD,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,EACpC,MAAM,EACN,MAAM,EACN,YAAY,EACZ,OAAO,EACP,QAAQ,EACR,MAAM,EACN,SAAS,EACT,OAAO,EACP,OAAO,EACP,WAAW,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,GAClB,EAAE,EAAE;IACnB,oEAAoE;IACpE,mEAAmE;IACnE,MAAM,0BAA0B,GAAG,CAAC,EAAc,EAAE,EAAE;QACpD,YAAY,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAChD,CAAC,CAAC;IAEF,MAAM,eAAe,GAAG,CAAC,CAAgB,EAAE,EAAE;QAC3C,IAAI,CAAC,CAAC,gBAAgB;YAAE,OAAO;QAE/B,IAAI,yBAAyB,CAAC,CAAC,CAAC,EAAE,CAAC;YACjC,MAAM,SAAS,GAAG,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC;YACvE,0BAA0B;YAC1B,IAAI,SAAS,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBACpC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC;oBACd,mBAAmB;oBACnB,KAAK,GAAG,CAAC,CAAC,CAAC;wBACT,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;wBACb,CAAC,CAAC,eAAe,EAAE,CAAC;wBACpB,CAAC,CAAC,cAAc,EAAE,CAAC;wBACnB,OAAO;oBACT,CAAC;oBACD,eAAe;oBACf,KAAK,GAAG,CAAC,CAAC,CAAC;wBACT,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;wBACZ,CAAC,CAAC,eAAe,EAAE,CAAC;wBACpB,CAAC,CAAC,cAAc,EAAE,CAAC;wBACnB,OAAO;oBACT,CAAC;oBACD,gBAAgB;oBAChB,KAAK,GAAG,CAAC,CAAC,CAAC;wBACT,OAAO,EAAE,EAAE,CAAC;wBACZ,OAAO;oBACT,CAAC;gBACH,CAAC;YACH,CAAC;YAED,gEAAgE;YAChE,6CAA6C;YAC7C,yDAAyD;YACzD,IAAI,CAAC,CAAC,GAAG,KAAK,SAAS,IAAI,CAAC,CAAC,GAAG,KAAK,MAAM,IAAI,CAAC,CAAC,GAAG,KAAK,KAAK,EAAE,CAAC;gBAC/D,CAAC,CAAC,eAAe,EAAE,CAAC;gBACpB,OAAO;YACT,CAAC;YAED,wEAAwE;YACxE,oCAAoC;YACpC,OAAO,EAAE,EAAE,CAAC;YACZ,OAAO;QACT,CAAC;QAED,CAAC,CAAC,eAAe,EAAE,CAAC;QAEpB;QACE,uBAAuB;QACvB,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC;YACrD,CAAC,CAAC,WAAW,EACb,CAAC;YACD,0BAA0B,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;YAC9C,OAAO;QACT,CAAC;QAED,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC;YACd,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACd,OAAO,EAAE,EAAE,CAAC;gBACZ,OAAO;YACT,CAAC;YACD,KAAK,WAAW,CAAC,CAAC,CAAC;gBACjB,0BAA0B,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;gBAC/C,OAAO;YACT,CAAC;YACD,KAAK,OAAO,CAAC,CAAC,CAAC;gBACb,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC;oBACf,OAAO,EAAE,EAAE,CAAC;oBACZ,OAAO;gBACT,CAAC;gBACD,SAAS,EAAE,EAAE,CAAC;gBACd,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,OAAO;YACT,CAAC;YACD,KAAK,KAAK,CAAC,CAAC,CAAC;gBACX,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC;oBACf,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACf,CAAC;qBAAM,CAAC;oBACN,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;gBACd,CAAC;gBACD,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,OAAO;YACT,CAAC;YACD,KAAK,SAAS,CAAC,CAAC,CAAC;gBACf,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC;oBACf,OAAO,EAAE,EAAE,CAAC;oBACZ,OAAO;gBACT,CAAC;gBACD,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACb,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,OAAO;YACT,CAAC;YACD,KAAK,WAAW,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC;oBACf,OAAO,EAAE,EAAE,CAAC;oBACZ,OAAO;gBACT,CAAC;gBACD,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;gBACZ,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,OAAO;YACT,CAAC;YACD,KAAK,WAAW,CAAC;YACjB,KAAK,YAAY,CAAC,CAAC,CAAC;gBAClB,OAAO,EAAE,EAAE,CAAC;gBACZ,OAAO;YACT,CAAC;YACD;gBACE,qBAAqB;gBACrB,OAAO;QACX,CAAC;IACH,CAAC,CAAC;IAEF,MAAM,CAAC,gBAAgB,CACrB,SAAS,EACT,CAAC,CAAgB,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAC9D;QACE,4FAA4F;QAC5F,OAAO,EAAE,IAAI;QACb,MAAM;KACP,CACF,CAAC;IAEF,kBAAkB;IAClB,MAAM,CAAC,gBAAgB,CACrB,OAAO,EACP,GAAG,EAAE,CAAC,0BAA0B,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,EACnD,EAAE,MAAM,EAAE,CACX,CAAC;IAEF,wBAAwB;IACxB,MAAM,CAAC,gBAAgB,CACrB,OAAO,EACP,GAAG,EAAE,CAAC,0BAA0B,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,EACnD,EAAE,MAAM,EAAE,CACX,CAAC;AACJ,CAAC,CAAC;AAEF;;GAEG;AACH,MAAM,UAAU,kBAAkB,CAChC,UAAsB,EACtB,mBAAoD,EACpD,GAAW;IAEX,IAAI,CAAC,GAAG,EAAE,CAAC;QACT,OAAO,CAAC,IAAI,CAAC,+CAA+C,CAAC,CAAC;QAC9D,OAAO;IACT,CAAC;IACD,MAAM,YAAY,GAChB,mBAAmB,YAAY,UAAU;QACvC,CAAC,CAAC,sBAAsB,CAAC,UAAU,EAAE,mBAAmB,CAAC;QACzD,CAAC,CAAC,mBAAmB,CAAC;IAC1B,IAAI,CAAC,YAAY,EAAE,CAAC;QAClB,OAAO;IACT,CAAC;IACD,MAAM,WAAW,GAAG,YAAY,CAAC,cAAc,EAAE,CAAC;IAClD,IAAI,CAAC,WAAW,EAAE,CAAC;QACjB,OAAO;IACT,CAAC;IACD,MAAM,GAAG,GAAG,WAAW,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC;IAC3C,MAAM,OAAO,GAAG,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;IAC3E,IAAI,OAAO,KAAK,GAAG,EAAE,CAAC;QACpB,OAAO,CAAC,IAAI,CACV,iDAAiD,GAAG,gBAAgB,OAAO,EAAE,CAC9E,CAAC;QACF,OAAO;IACT,CAAC;IACD,YAAY,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;IAC5D,YAAY,CAAC,cAAc,CAAC;QAC1B,KAAK,EAAE,GAAG;QACV,MAAM,EAAE,CAAC;KACV,CAAC,CAAC;AACL,CAAC;AAED;;GAEG;AACH,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,SAAiB,EAAE,EAAE;IAClD,IAAI,CAAC,SAAS,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CACX,mGAAmG,CACpG,CAAC;QACF,OAAO,GAAG,CAAA,EAAE,CAAC;IACf,CAAC;IAED,0BAA0B;IAC1B,IAAI,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;QACvD,OAAO,CAAC,KAAK,CAAC,0DAA0D,CAAC,CAAC;QAC1E,OAAO,GAAG,CAAA,EAAE,CAAC;IACf,CAAC;IAED,OAAO,GAAG,CAAA;MACN,SAAS,CAAC,SAAS,CAAC;;;MAGpB,SAAS,CAAC,SAAS,CAAC;;;;MAIpB,SAAS,CAAC,SAAS,CAAC;;;;MAIpB,SAAS,CAAC,SAAS,CAAC;;;GAGvB,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import type { AffineInlineEditor } from '@blocksuite/affine-components/rich-text';\nimport type { EditorHost } from '@blocksuite/block-std';\nimport type { InlineEditor, InlineRange } from '@blocksuite/inline';\n\nimport { getInlineEditorByModel } from '@blocksuite/affine-components/rich-text';\nimport {\n  getCurrentNativeRange,\n  isControlledKeyboardEvent,\n} from '@blocksuite/affine-shared/utils';\nimport { BlockModel } from '@blocksuite/store';\nimport { css, unsafeCSS } from 'lit';\n\nexport function getQuery(\n  inlineEditor: InlineEditor,\n  startRange: InlineRange | null\n) {\n  const nativeRange = getCurrentNativeRange();\n  if (!nativeRange) {\n    return null;\n  }\n  if (nativeRange.startContainer !== nativeRange.endContainer) {\n    console.warn(\n      'Failed to parse query! Current range is not collapsed.',\n      nativeRange\n    );\n    return null;\n  }\n  const textNode = nativeRange.startContainer;\n  if (textNode.nodeType !== Node.TEXT_NODE) {\n    console.warn(\n      'Failed to parse query! Current range is not a text node.',\n      nativeRange\n    );\n    return null;\n  }\n  const curRange = inlineEditor.getInlineRange();\n  if (!startRange || !curRange) {\n    return null;\n  }\n  if (curRange.index < startRange.index) {\n    return null;\n  }\n  const text = inlineEditor.yText.toString();\n  return text.slice(startRange.index, curRange.index);\n}\n\ninterface ObserverParams {\n  target: HTMLElement;\n  signal: AbortSignal;\n  inlineEditor: InlineEditor;\n  onInput?: () => void;\n  onDelete?: () => void;\n  onMove?: (step: 1 | -1) => void;\n  onConfirm?: () => void;\n  onAbort?: () => void;\n  onPaste?: () => void;\n  interceptor?: (e: KeyboardEvent, next: () => void) => void;\n}\n\nexport const createKeydownObserver = ({\n  target,\n  signal,\n  inlineEditor,\n  onInput,\n  onDelete,\n  onMove,\n  onConfirm,\n  onAbort,\n  onPaste,\n  interceptor = (_, next) => next(),\n}: ObserverParams) => {\n  // In iOS webkit, using requestAnimationFrame has some timing issues\n  // we need wait inline editor updated before handle the next action\n  const waitForInlineEditorUpdated = (fn: () => void) => {\n    inlineEditor.slots.inlineRangeUpdate.once(fn);\n  };\n\n  const keyDownListener = (e: KeyboardEvent) => {\n    if (e.defaultPrevented) return;\n\n    if (isControlledKeyboardEvent(e)) {\n      const isOnlyCmd = (e.ctrlKey || e.metaKey) && !e.altKey && !e.shiftKey;\n      // Ctrl/Cmd + alphabet key\n      if (isOnlyCmd && e.key.length === 1) {\n        switch (e.key) {\n          // Previous command\n          case 'p': {\n            onMove?.(-1);\n            e.stopPropagation();\n            e.preventDefault();\n            return;\n          }\n          // Next command\n          case 'n': {\n            onMove?.(1);\n            e.stopPropagation();\n            e.preventDefault();\n            return;\n          }\n          // Paste command\n          case 'v': {\n            onPaste?.();\n            return;\n          }\n        }\n      }\n\n      // Pressing **only** modifier key is allowed and will be ignored\n      // Because we don't know the user's intention\n      // Aborting here will cause the above hotkeys to not work\n      if (e.key === 'Control' || e.key === 'Meta' || e.key === 'Alt') {\n        e.stopPropagation();\n        return;\n      }\n\n      // Abort when press modifier key + any other key to avoid weird behavior\n      // e.g. press ctrl + a to select all\n      onAbort?.();\n      return;\n    }\n\n    e.stopPropagation();\n\n    if (\n      // input abc, 123, etc.\n      (!isControlledKeyboardEvent(e) && e.key.length === 1) ||\n      e.isComposing\n    ) {\n      waitForInlineEditorUpdated(() => onInput?.());\n      return;\n    }\n\n    switch (e.key) {\n      case 'Escape': {\n        onAbort?.();\n        return;\n      }\n      case 'Backspace': {\n        waitForInlineEditorUpdated(() => onDelete?.());\n        return;\n      }\n      case 'Enter': {\n        if (e.shiftKey) {\n          onAbort?.();\n          return;\n        }\n        onConfirm?.();\n        e.preventDefault();\n        return;\n      }\n      case 'Tab': {\n        if (e.shiftKey) {\n          onMove?.(-1);\n        } else {\n          onMove?.(1);\n        }\n        e.preventDefault();\n        return;\n      }\n      case 'ArrowUp': {\n        if (e.shiftKey) {\n          onAbort?.();\n          return;\n        }\n        onMove?.(-1);\n        e.preventDefault();\n        return;\n      }\n      case 'ArrowDown': {\n        if (e.shiftKey) {\n          onAbort?.();\n          return;\n        }\n        onMove?.(1);\n        e.preventDefault();\n        return;\n      }\n      case 'ArrowLeft':\n      case 'ArrowRight': {\n        onAbort?.();\n        return;\n      }\n      default:\n        // Other control keys\n        return;\n    }\n  };\n\n  target.addEventListener(\n    'keydown',\n    (e: KeyboardEvent) => interceptor(e, () => keyDownListener(e)),\n    {\n      // Workaround: Use capture to prevent the event from triggering the keyboard bindings action\n      capture: true,\n      signal,\n    }\n  );\n\n  // Fix paste input\n  target.addEventListener(\n    'paste',\n    () => waitForInlineEditorUpdated(() => onInput?.()),\n    { signal }\n  );\n\n  // Fix composition input\n  target.addEventListener(\n    'input',\n    () => waitForInlineEditorUpdated(() => onInput?.()),\n    { signal }\n  );\n};\n\n/**\n * Remove specified text from the current range.\n */\nexport function cleanSpecifiedTail(\n  editorHost: EditorHost,\n  inlineEditorOrModel: AffineInlineEditor | BlockModel,\n  str: string\n) {\n  if (!str) {\n    console.warn('Failed to clean text! Unexpected empty string');\n    return;\n  }\n  const inlineEditor =\n    inlineEditorOrModel instanceof BlockModel\n      ? getInlineEditorByModel(editorHost, inlineEditorOrModel)\n      : inlineEditorOrModel;\n  if (!inlineEditor) {\n    return;\n  }\n  const inlineRange = inlineEditor.getInlineRange();\n  if (!inlineRange) {\n    return;\n  }\n  const idx = inlineRange.index - str.length;\n  const textStr = inlineEditor.yText.toString().slice(idx, idx + str.length);\n  if (textStr !== str) {\n    console.warn(\n      `Failed to clean text! Text mismatch expected: ${str} but actual: ${textStr}`\n    );\n    return;\n  }\n  inlineEditor.deleteText({ index: idx, length: str.length });\n  inlineEditor.setInlineRange({\n    index: idx,\n    length: 0,\n  });\n}\n\n/**\n * You should add a container before the scrollbar style to prevent the style pollution of the whole doc.\n */\nexport const scrollbarStyle = (container: string) => {\n  if (!container) {\n    console.error(\n      'To prevent style pollution of the whole doc, you must add a container before the scrollbar style.'\n    );\n    return css``;\n  }\n\n  // sanitize container name\n  if (container.includes('{') || container.includes('}')) {\n    console.error('Invalid container name! Please use a valid CSS selector.');\n    return css``;\n  }\n\n  return css`\n    ${unsafeCSS(container)} {\n      scrollbar-gutter: stable;\n    }\n    ${unsafeCSS(container)}::-webkit-scrollbar {\n      -webkit-appearance: none;\n      width: 4px;\n    }\n    ${unsafeCSS(container)}::-webkit-scrollbar-thumb {\n      border-radius: 2px;\n      background-color: #b1b1b1;\n    }\n    ${unsafeCSS(container)}::-webkit-scrollbar-corner {\n      display: none;\n    }\n  `;\n};\n"]}