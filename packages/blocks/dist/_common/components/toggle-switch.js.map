{"version":3,"file":"toggle-switch.js","sourceRoot":"","sources":["../../../src/_common/components/toggle-switch.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE5D,MAAM,MAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAiDjB,CAAC;IAGW,YAAY;4BADxB,aAAa,CAAC,eAAe,CAAC;;;;sBACG,UAAU;;;;;;;4BAAlB,SAAQ,WAAU;;;;8BAuBzC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;oCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;YAF/B,2JAAS,EAAE,6BAAF,EAAE,+EAAS;YAGpB,6KAAS,QAAQ,6BAAR,QAAQ,2FAAkD;YA3BrE,6KA4BC;;;;iBA3BiB,WAAM,GAAG,MAAM,AAAT,CAAU;QAExB,aAAa;YACnB,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;YACnB,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACzB,CAAC;QACH,CAAC;QAEQ,MAAM;YACb,OAAO,IAAI,CAAA;qBACM,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;;;;qBAInB,IAAI,CAAC,EAAE;oBACR,IAAI,CAAC,aAAa;;;KAGjC,CAAC;QACJ,CAAC;QAGD,iEAAc,KAAK,EAAC;QAApB,IAAS,EAAE,wCAAS;QAApB,IAAS,EAAE,8CAAS;QAGpB,8HAAyD,SAAS,GAAC;QAAnE,IAAS,QAAQ,8CAAkD;QAAnE,IAAS,QAAQ,oDAAkD;;;;;;YA3BxD,uDAAY;;;;;SAAZ,YAAY","sourcesContent":["import { css, html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nconst styles = css`\n  :host {\n    display: flex;\n  }\n\n  .switch {\n    height: 0;\n    width: 0;\n    visibility: hidden;\n    margin: 0;\n  }\n\n  label {\n    cursor: pointer;\n    text-indent: -9999px;\n    width: 38px;\n    height: 20px;\n    background: var(--affine-icon-color);\n    border: 1px solid var(--affine-black-10);\n    display: block;\n    border-radius: 20px;\n    position: relative;\n  }\n\n  label:after {\n    content: '';\n    position: absolute;\n    top: 1px;\n    left: 1px;\n    width: 16px;\n    height: 16px;\n    background: var(--affine-white);\n    border: 1px solid var(--affine-black-10);\n    border-radius: 16px;\n    transition: 0.1s;\n  }\n\n  label.on {\n    background: var(--affine-primary-color);\n  }\n\n  label.on:after {\n    left: calc(100% - 1px);\n    transform: translateX(-100%);\n  }\n\n  label:active:after {\n    width: 24px;\n  }\n`;\n\n@customElement('toggle-switch')\nexport class ToggleSwitch extends LitElement {\n  static override styles = styles;\n\n  private _toggleSwitch() {\n    this.on = !this.on;\n    if (this.onChange) {\n      this.onChange(this.on);\n    }\n  }\n\n  override render() {\n    return html`\n      <label class=${this.on ? 'on' : ''}>\n        <input\n          type=\"checkbox\"\n          class=\"switch\"\n          ?checked=${this.on}\n          @change=${this._toggleSwitch}\n        />\n      </label>\n    `;\n  }\n\n  @property({ attribute: false })\n  accessor on = false;\n\n  @property({ attribute: false })\n  accessor onChange: ((on: boolean) => void) | undefined = undefined;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'toggle-switch': ToggleSwitch;\n  }\n}\n"]}