{"version":3,"file":"notification-service.js","sourceRoot":"","sources":["../../../src/_common/components/notification-service.ts"],"names":[],"mappings":"","sourcesContent":["import type { TemplateResult } from 'lit';\n\nexport interface NotificationService {\n  toast(\n    message: string,\n    options?: {\n      duration?: number;\n      portal?: HTMLElement;\n    }\n  ): void;\n  confirm(options: {\n    title: string | TemplateResult;\n    message: string | TemplateResult;\n    confirmText?: string;\n    cancelText?: string;\n    abort?: AbortSignal;\n  }): Promise<boolean>;\n  prompt(options: {\n    title: string | TemplateResult;\n    message: string | TemplateResult;\n    autofill?: string;\n    placeholder?: string;\n    confirmText?: string;\n    cancelText?: string;\n    abort?: AbortSignal;\n  }): Promise<string | null>; // when cancel, return null\n  notify(options: {\n    title: string | TemplateResult;\n    message?: string | TemplateResult;\n    accent?: 'info' | 'success' | 'warning' | 'error';\n    duration?: number; // unit ms, give 0 to disable auto dismiss\n    abort?: AbortSignal;\n    action?: {\n      label: string | TemplateResult;\n      onClick: () => void;\n    };\n    onClose: () => void;\n  }): void;\n}\n"]}