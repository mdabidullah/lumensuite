{"version":3,"file":"embed-card-edit-modal.js","sourceRoot":"","sources":["../../../../../src/_common/components/embed-card/modal/embed-card-edit-modal.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  BookmarkBlockModel,\n  EmbedFigmaModel,\n  EmbedGithubModel,\n  EmbedLoomModel,\n  EmbedYoutubeModel,\n} from '@blocksuite/affine-model';\nimport type { EditorHost } from '@blocksuite/block-std';\n\nimport { toast } from '@blocksuite/affine-components/toast';\nimport { ShadowlessElement, WithDisposable } from '@blocksuite/block-std';\nimport { html } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { embedCardModalStyles } from './styles.js';\n\ntype EmbedCardModel =\n  | BookmarkBlockModel\n  | EmbedGithubModel\n  | EmbedYoutubeModel\n  | EmbedFigmaModel\n  | EmbedLoomModel;\n\n@customElement('embed-card-edit-modal')\nexport class EmbedCardEditModal extends WithDisposable(ShadowlessElement) {\n  static override styles = embedCardModalStyles;\n\n  private _handleInput(e: InputEvent) {\n    const target = e.target as HTMLInputElement;\n    this._titleInputValue = target.value;\n  }\n\n  private _onDocumentKeydown(e: KeyboardEvent) {\n    e.stopPropagation();\n    if (e.key === 'Enter' && !e.isComposing) {\n      this._onSave();\n    }\n    if (e.key === 'Escape') {\n      this.remove();\n    }\n  }\n\n  private _onSave() {\n    const title = this.titleInput.value;\n    if (title.length === 0) {\n      toast(this.host, 'Link title can not be empty');\n      return;\n    }\n\n    this.model.doc.updateBlock(this.model, {\n      title,\n      description: this.descInput.value,\n    });\n    this.remove();\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n\n    this.updateComplete\n      .then(() => {\n        this.titleInput.focus();\n        this.titleInput.setSelectionRange(0, this.titleInput.value.length);\n      })\n      .catch(console.error);\n\n    this.disposables.addFromEvent(this, 'keydown', this._onDocumentKeydown);\n\n    this._titleInputValue = this.model.title ?? '';\n  }\n\n  override render() {\n    return html`\n      <div class=\"embed-card-modal\">\n        <div class=\"embed-card-modal-mask\" @click=${() => this.remove()}></div>\n        <div class=\"embed-card-modal-wrapper\">\n          <div class=\"embed-card-modal-row\">\n            <label for=\"card-title\">Text</label>\n            <input\n              class=\"embed-card-modal-input title\"\n              id=\"card-title\"\n              type=\"text\"\n              placeholder=\"Title\"\n              value=${this._titleInputValue}\n              @input=${this._handleInput}\n            />\n          </div>\n          <div class=\"embed-card-modal-row\">\n            <label for=\"card-description\">Description</label>\n            <textarea\n              class=\"embed-card-modal-input description\"\n              id=\"card-description\"\n              placeholder=\"Write a description...\"\n              .value=${this.model.description ?? ''}\n            ></textarea>\n          </div>\n          <div class=\"embed-card-modal-row\">\n            <button\n              class=${classMap({\n                'embed-card-modal-button': true,\n                save: true,\n              })}\n              ?disabled=${this._titleInputValue.length === 0}\n              @click=${() => this._onSave()}\n            >\n              Save\n            </button>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  @state()\n  private accessor _titleInputValue = '';\n\n  @query('.embed-card-modal-input.description')\n  accessor descInput!: HTMLTextAreaElement;\n\n  @property({ attribute: false })\n  accessor host!: EditorHost;\n\n  @property({ attribute: false })\n  accessor model!: EmbedCardModel;\n\n  @query('.embed-card-modal-input.title')\n  accessor titleInput!: HTMLInputElement;\n}\n\nexport function toggleEmbedCardEditModal(\n  host: EditorHost,\n  embedCardModel: EmbedCardModel\n) {\n  host.selection.clear();\n  const embedCardEditModal = new EmbedCardEditModal();\n  embedCardEditModal.model = embedCardModel;\n  embedCardEditModal.host = host;\n  document.body.append(embedCardEditModal);\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'embed-card-edit-modal': EmbedCardEditModal;\n  }\n}\n"]}