{"version":3,"file":"embed-card-caption-edit-modal.js","sourceRoot":"","sources":["../../../../../src/_common/components/embed-card/modal/embed-card-caption-edit-modal.ts"],"names":[],"mappings":"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","sourcesContent":["import type { BlockModel } from '@blocksuite/store';\n\nimport {\n  type BlockComponent,\n  ShadowlessElement,\n  WithDisposable,\n} from '@blocksuite/block-std';\nimport { html } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { embedCardModalStyles } from './styles.js';\n\n@customElement('embed-card-caption-edit-modal')\nexport class EmbedCardEditCaptionEditModal extends WithDisposable(\n  ShadowlessElement\n) {\n  static override styles = embedCardModalStyles;\n\n  private get _doc() {\n    return this.block.doc;\n  }\n\n  private get _model() {\n    return this.block.model as BlockModel<{ caption: string }>;\n  }\n\n  private _onKeydown(e: KeyboardEvent) {\n    e.stopPropagation();\n    if (e.key === 'Enter' && !e.isComposing) {\n      this._onSave();\n    }\n    if (e.key === 'Escape') {\n      this.remove();\n    }\n  }\n\n  private _onSave() {\n    const caption = this.captionInput.value;\n    this._doc.updateBlock(this._model, {\n      caption,\n    });\n    this.remove();\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n\n    this.updateComplete\n      .then(() => {\n        this.captionInput.focus();\n      })\n      .catch(console.error);\n\n    this.disposables.addFromEvent(this, 'keydown', this._onKeydown);\n  }\n\n  override render() {\n    return html`\n      <div class=\"embed-card-modal\">\n        <div class=\"embed-card-modal-mask\" @click=${() => this.remove()}></div>\n        <div class=\"embed-card-modal-wrapper\">\n          <div class=\"embed-card-modal-row\">\n            <label for=\"card-title\">Caption</label>\n            <textarea\n              class=\"embed-card-modal-input caption\"\n              placeholder=\"Write a caption...\"\n              .value=${this._model.caption ?? ''}\n            ></textarea>\n          </div>\n          <div class=\"embed-card-modal-row\">\n            <button\n              class=${classMap({\n                'embed-card-modal-button': true,\n                save: true,\n              })}\n              @click=${() => this._onSave()}\n            >\n              Save\n            </button>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  @property({ attribute: false })\n  accessor block!: BlockComponent;\n\n  @query('.embed-card-modal-input.caption')\n  accessor captionInput!: HTMLTextAreaElement;\n}\n\nexport function toggleEmbedCardCaptionEditModal(block: BlockComponent) {\n  const host = block.host;\n  host.selection.clear();\n  const embedCardEditCaptionEditModal = new EmbedCardEditCaptionEditModal();\n  embedCardEditCaptionEditModal.block = block;\n  document.body.append(embedCardEditCaptionEditModal);\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'embed-card-caption-edit-modal': EmbedCardEditCaptionEditModal;\n  }\n}\n"]}