{"version":3,"file":"embed-card-style-popper.js","sourceRoot":"","sources":["../../../../src/_common/components/embed-card/embed-card-style-popper.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACvD,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAIvD,OAAO,EAAE,iBAAiB,EAAE,MAAM,oBAAoB,CAAC;AACvD,OAAO,gBAAgB,CAAC;IAGX,kBAAkB;4BAD9B,aAAa,CAAC,uBAAuB,CAAC;;;;sBACC,cAAc,CAAC,UAAU,CAAC;;;;;;;kCAAlC,SAAQ,WAA0B;;;;2CA2E/D,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;iCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;YAF/B,kMAAS,eAAe,6BAAf,eAAe,yGAAmB;YAG3C,oKAAS,KAAK,6BAAL,KAAK,qFAA+D;YA/E/E,6KAgFC;;;;iBA/EiB,WAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;GAwB3B,AAxBqB,CAwBpB;QAEM,kBAAkB,CAAC,KAAqB;YAC9C,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;YAClD,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;QAC/B,CAAC;QAEQ,MAAM;YACb,MAAM,EAAE,uBAAuB,EAAE,iBAAiB,EAAE,GAAG,iBAAiB,EAAE,CAAC;YAC3E,OAAO,IAAI,CAAA;;;;yBAIU,CAAC,CAAa,EAAE,EAAE,CAAC,CAAC,CAAC,eAAe,EAAE;;;;;oBAK3C,QAAQ,CAAC;gBACf,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,YAAY;gBAC3C,8BAA8B,EAAE,IAAI;aACrC,CAAC;qBACO,GAAG,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC;;cAElD,uBAAuB;sCACC,CAAC;iBACtB,wBAAwB;;;;;;;oBAOrB,QAAQ,CAAC;gBACf,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,MAAM;gBACrC,wBAAwB,EAAE,IAAI;aAC/B,CAAC;qBACO,GAAG,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;;cAE5C,iBAAiB;sCACO,CAAC;iBACtB,wBAAwB;;;;;KAKpC,CAAC;QACJ,CAAC;QAGD,mGAA2C;QAA3C,IAAS,eAAe,qDAAmB;QAA3C,IAAS,eAAe,2DAAmB;QAG3C,8IAA6E;QAA7E,IAAS,KAAK,2CAA+D;QAA7E,IAAS,KAAK,iDAA+D;;;;;;YA/ElE,uDAAkB;;;;;SAAlB,kBAAkB","sourcesContent":["import type {\n  BookmarkBlockModel,\n  EmbedGithubModel,\n  EmbedLinkedDocModel,\n} from '@blocksuite/affine-model';\n\nimport { WithDisposable } from '@blocksuite/block-std';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport type { EmbedCardStyle } from '../../types.js';\n\nimport { getEmbedCardIcons } from '../../utils/url.js';\nimport './../button.js';\n\n@customElement('embed-card-style-menu')\nexport class EmbedCardStyleMenu extends WithDisposable(LitElement) {\n  static override styles = css`\n    .embed-card-style-menu {\n      box-sizing: border-box;\n      padding-bottom: 8px;\n    }\n\n    .embed-card-style-menu-container {\n      border-radius: 8px;\n      padding: 8px;\n      gap: 8px;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      background: var(--affine-background-overlay-panel-color);\n      box-shadow: var(--affine-shadow-2);\n    }\n\n    .embed-card-style-menu-container > icon-button {\n      padding: var(--1, 0px);\n    }\n\n    .embed-card-style-menu-container > icon-button.selected {\n      border: 1px solid var(--affine-brand-color);\n    }\n  `;\n\n  private _setEmbedCardStyle(style: EmbedCardStyle) {\n    this.model.doc.updateBlock(this.model, { style });\n    this.requestUpdate();\n    this.abortController.abort();\n  }\n\n  override render() {\n    const { EmbedCardHorizontalIcon, EmbedCardListIcon } = getEmbedCardIcons();\n    return html`\n      <div class=\"embed-card-style-menu\">\n        <div\n          class=\"embed-card-style-menu-container\"\n          @pointerdown=${(e: MouseEvent) => e.stopPropagation()}\n        >\n          <icon-button\n            width=\"76px\"\n            height=\"76px\"\n            class=${classMap({\n              selected: this.model.style === 'horizontal',\n              'card-style-button-horizontal': true,\n            })}\n            @click=${() => this._setEmbedCardStyle('horizontal')}\n          >\n            ${EmbedCardHorizontalIcon}\n            <affine-tooltip .offset=${4}\n              >${'Large horizontal style'}</affine-tooltip\n            >\n          </icon-button>\n\n          <icon-button\n            width=\"76px\"\n            height=\"76px\"\n            class=${classMap({\n              selected: this.model.style === 'list',\n              'card-style-button-list': true,\n            })}\n            @click=${() => this._setEmbedCardStyle('list')}\n          >\n            ${EmbedCardListIcon}\n            <affine-tooltip .offset=${4}\n              >${'Small horizontal style'}</affine-tooltip\n            >\n          </icon-button>\n        </div>\n      </div>\n    `;\n  }\n\n  @property({ attribute: false })\n  accessor abortController!: AbortController;\n\n  @property({ attribute: false })\n  accessor model!: BookmarkBlockModel | EmbedGithubModel | EmbedLinkedDocModel;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'embed-card-style-menu': EmbedCardStyleMenu;\n  }\n}\n"]}