{"version":3,"file":"database-convert-view.js","sourceRoot":"","sources":["../../../../src/_common/configs/quick-action/database-convert-view.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DatabaseBlockModel } from '@lumensuite/affine-model';\nimport type { EditorHost } from '@lumensuite/block-std';\nimport type { ViewMeta } from '@lumensuite/data-view';\n\nimport {\n  CloseIcon,\n  DatabaseKanbanViewIcon,\n  DatabaseTableViewIcon,\n} from '@lumensuite/affine-components/icons';\nimport { WithDisposable } from '@lumensuite/block-std';\nimport { viewPresets } from '@lumensuite/data-view/view-presets';\nimport { assertExists } from '@lumensuite/global/utils';\nimport { css, html, LitElement, type TemplateResult } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport {\n  applyColumnUpdate,\n  databaseViewInitConvert,\n} from '../../../database-block/utils.js';\n\ninterface DatabaseView {\n  meta: ViewMeta;\n  text: string;\n  icon: TemplateResult;\n  description?: string;\n  isComingSoon?: boolean;\n}\n\nconst databaseViews: DatabaseView[] = [\n  {\n    meta: viewPresets.tableViewConfig,\n    text: 'Table view',\n    icon: DatabaseTableViewIcon,\n  },\n  {\n    meta: viewPresets.kanbanViewConfig,\n    text: 'Kanban view',\n    icon: DatabaseKanbanViewIcon,\n  },\n];\n\nexport const DATABASE_CONVERT_WHITE_LIST = ['affine:list', 'affine:paragraph'];\n\n@customElement('database-convert-view')\nexport class DatabaseConvertView extends WithDisposable(LitElement) {\n  static override styles = css`\n    :host {\n      position: fixed;\n      inset: 0;\n      z-index: var(--affine-z-index-modal);\n    }\n    .overlay-mask {\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background: rgba(0, 0, 0, 0.6);\n      z-index: var(--affine-z-index-modal);\n    }\n    .modal-container {\n      position: absolute;\n      z-index: var(--affine-z-index-modal);\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      width: 720px;\n      padding: 24px 40px;\n      border-radius: 24px;\n      background: var(--affine-background-overlay-panel-color);\n    }\n    .modal-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n    .modal-header-title {\n      color: var(--affine-text-primary-color);\n      font-size: 20px;\n      font-weight: 600;\n    }\n    .modal-header-close-icon {\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      color: var(--affine-icon-color);\n    }\n    .modal-header-close-icon svg {\n      width: 24px;\n      height: 24px;\n    }\n    .modal-footer {\n      color: var(--affine-text-secondary-color);\n      font-size: 14px;\n      text-align: center;\n    }\n    .modal-body {\n      padding: 24px 0;\n    }\n    .modal-desc {\n      margin-bottom: 38px;\n      color: var(--affine-text-primary-color);\n      font-size: 14px;\n    }\n    .modal-view-container {\n      display: flex;\n      justify-content: center;\n      gap: 18px;\n    }\n    .modal-view-item {\n      display: flex;\n      flex-direction: column;\n      gap: 6px;\n      cursor: pointer;\n    }\n    .modal-view-item.coming-soon {\n      cursor: not-allowed;\n    }\n    .modal-view-item.coming-soon .modal-view-item-content {\n      pointer-events: none;\n    }\n    .modal-view-item-content:hover {\n      background: var(--affine-hover-color);\n    }\n    .modal-view-item-content:hover .modal-view-item-text,\n    .modal-view-item-content:hover svg {\n      fill: var(--affine-primary-color);\n      color: var(--affine-primary-color);\n    }\n    .modal-view-item-content {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      padding: 18px 0;\n      gap: 6px;\n      width: 108px;\n      border: 2px solid var(--affine-border-color);\n      border-radius: 8px;\n    }\n    .modal-view-item-icon {\n      width: 42px;\n      height: 42px;\n    }\n    .modal-view-item-icon svg {\n      width: 42px;\n      height: 42px;\n      fill: var(--affine-black-50);\n    }\n    .modal-view-item-text {\n      font-size: 14px;\n      color: var(--affine-black-50);\n    }\n    .modal-view-item-description {\n      font-size: 12px;\n      color: var(--affine-text-secondary-color);\n      text-align: center;\n    }\n  `;\n\n  get doc() {\n    return this.host.doc;\n  }\n\n  private _convertToDatabase(viewMeta: ViewMeta) {\n    const [_, ctx] = this.host.std.command\n      .chain()\n      .getSelectedModels({\n        types: ['block', 'text'],\n      })\n      .run();\n    const { selectedModels } = ctx;\n    if (!selectedModels || selectedModels.length === 0) return;\n\n    this.doc.captureSync();\n\n    const parentModel = this.doc.getParent(selectedModels[0]);\n    assertExists(parentModel);\n\n    const id = this.doc.addBlock(\n      'affine:database',\n      {},\n      parentModel,\n      parentModel.children.indexOf(selectedModels[0])\n    );\n    const databaseModel = this.doc.getBlockById(id) as DatabaseBlockModel;\n    assertExists(databaseModel);\n    databaseViewInitConvert(databaseModel, viewMeta);\n    applyColumnUpdate(databaseModel);\n    this.doc.moveBlocks(selectedModels, databaseModel);\n\n    const selectionManager = this.host.selection;\n    selectionManager.clear();\n\n    this.remove();\n  }\n\n  override render() {\n    return html`<div>\n      <div\n        @click=\"${() => {\n          this.remove();\n        }}\"\n        class=\"overlay-mask\"\n      ></div>\n      <div class=\"modal-container\">\n        <div class=\"modal-header\">\n          <div class=\"modal-header-title\">Select Database View</div>\n          <div class=\"modal-header-close-icon\">${CloseIcon}</div>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"modal-desc\">\n            Group as Database can quickly convert selected blocks into Database\n            for easy structuring of data.\n          </div>\n          <div class=\"modal-view-container\">\n            ${databaseViews.map(view => {\n              return html`\n                <div\n                  class=\"modal-view-item ${view.meta.type}\"\n                  @mousedown=\"${(e: Event) => {\n                    // prevent range reset\n                    e.preventDefault();\n                  }}\"\n                  @click=\"${() => {\n                    this._convertToDatabase(view.meta);\n                  }}\"\n                >\n                  <div class=\"modal-view-item-content\">\n                    <div class=\"modal-view-item-icon\">${view.icon}</div>\n                    <div class=\"modal-view-item-text\">${view.text}</div>\n                  </div>\n                  <div class=\"modal-view-item-description\">\n                    ${view.description}\n                  </div>\n                </div>\n              `;\n            })}\n          </div>\n        </div>\n        <div class=\"modal-footer\">More views are on the way.</div>\n      </div>\n    </div>`;\n  }\n\n  @property({ attribute: false })\n  accessor host!: EditorHost;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'database-convert-view': DatabaseConvertView;\n  }\n}\n"]}