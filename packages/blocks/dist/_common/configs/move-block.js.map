{"version":3,"file":"move-block.js","sourceRoot":"","sources":["../../../src/_common/configs/move-block.ts"],"names":[],"mappings":"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","sourcesContent":["import type { BlockComponent, BlockSelection } from '@blocksuite/block-std';\n\nconst getSelection = (blockComponent: BlockComponent) =>\n  blockComponent.host.selection;\n\nfunction getBlockSelectionBySide(block: BlockComponent, tail: boolean) {\n  const selection = getSelection(block);\n  const selections = selection.filter('block');\n  const sel = selections.at(tail ? -1 : 0) as BlockSelection | undefined;\n  return sel ?? null;\n}\n\nfunction getTextSelection(block: BlockComponent) {\n  const selection = getSelection(block);\n  return selection.find('text');\n}\n\nconst pathToBlock = (block: BlockComponent, blockId: string) =>\n  block.host.view.getBlock(blockId);\n\ninterface MoveBlockConfig {\n  name: string;\n  hotkey: string[];\n  action: (block: BlockComponent) => void;\n}\n\nexport const moveBlockConfigs: MoveBlockConfig[] = [\n  {\n    name: 'Move Up',\n    hotkey: ['Mod-Alt-ArrowUp', 'Mod-Shift-ArrowUp'],\n    action: block => {\n      const doc = block.doc;\n      const textSelection = getTextSelection(block);\n      if (textSelection) {\n        const currentModel = pathToBlock(\n          block,\n          textSelection.from.blockId\n        )?.model;\n        if (!currentModel) return;\n\n        const previousSiblingModel = doc.getPrev(currentModel);\n        if (!previousSiblingModel) return;\n\n        const parentModel = block.doc.getParent(previousSiblingModel);\n        if (!parentModel) return;\n\n        block.doc.moveBlocks(\n          [currentModel],\n          parentModel,\n          previousSiblingModel,\n          true\n        );\n        block.updateComplete\n          .then(() => {\n            block.std.range.syncTextSelectionToRange(textSelection);\n          })\n          .catch(console.error);\n        return true;\n      }\n      const blockSelection = getBlockSelectionBySide(block, true);\n      if (blockSelection) {\n        const currentModel = pathToBlock(block, blockSelection.blockId)?.model;\n        if (!currentModel) return;\n\n        const previousSiblingModel = doc.getPrev(currentModel);\n        if (!previousSiblingModel) return;\n\n        const parentModel = doc.getParent(previousSiblingModel);\n        if (!parentModel) return;\n\n        doc.moveBlocks(\n          [currentModel],\n          parentModel,\n          previousSiblingModel,\n          false\n        );\n        return true;\n      }\n      return;\n    },\n  },\n  {\n    name: 'Move Down',\n    hotkey: ['Mod-Alt-ArrowDown', 'Mod-Shift-ArrowDown'],\n    action: block => {\n      const doc = block.doc;\n      const textSelection = getTextSelection(block);\n      if (textSelection) {\n        const currentModel = pathToBlock(\n          block,\n          textSelection.from.blockId\n        )?.model;\n        if (!currentModel) return;\n\n        const nextSiblingModel = doc.getNext(currentModel);\n        if (!nextSiblingModel) return;\n\n        const parentModel = doc.getParent(nextSiblingModel);\n        if (!parentModel) return;\n\n        doc.moveBlocks([currentModel], parentModel, nextSiblingModel, false);\n        block.updateComplete\n          .then(() => {\n            block.std.range.syncTextSelectionToRange(textSelection);\n          })\n          .catch(console.error);\n        return true;\n      }\n      const blockSelection = getBlockSelectionBySide(block, true);\n      if (blockSelection) {\n        const currentModel = pathToBlock(block, blockSelection.blockId)?.model;\n        if (!currentModel) return;\n\n        const nextSiblingModel = doc.getNext(currentModel);\n        if (!nextSiblingModel) return;\n\n        const parentModel = doc.getParent(nextSiblingModel);\n        if (!parentModel) return;\n\n        doc.moveBlocks([currentModel], parentModel, nextSiblingModel, false);\n        return true;\n      }\n      return;\n    },\n  },\n];\n"]}