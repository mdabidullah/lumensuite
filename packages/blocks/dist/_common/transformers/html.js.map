{"version":3,"file":"html.js","sourceRoot":"","sources":["../../../src/_common/transformers/html.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,GAAG,EAAE,MAAM,mBAAmB,CAAC;AAExC,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AACnD,OAAO,EAAE,mBAAmB,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AAE3D,KAAK,UAAU,SAAS,CAAC,GAAQ;IAC/B,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,EAAE,UAAU,EAAE,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC;IACpD,MAAM,QAAQ,GAAG,MAAM,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAC9C,MAAM,OAAO,GAAG,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC;IACrC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACd,OAAO;IACT,CAAC;IACD,MAAM,UAAU,GAAG,MAAM,OAAO,CAAC,eAAe,CAAC;QAC/C,QAAQ;QACR,MAAM,EAAE,GAAG,CAAC,aAAa;KAC1B,CAAC,CAAC;IAEH,IAAI,YAAkB,CAAC;IACvB,MAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,EAAE,KAAK,IAAI,UAAU,CAAC;IAC/C,IAAI,IAAY,CAAC;IACjB,MAAM,WAAW,GAAG,IAAI,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;IACxE,IAAI,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QACpC,MAAM,GAAG,GAAG,MAAM,mBAAmB,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC;QAExE,MAAM,GAAG,CAAC,IAAI,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;QAE1C,YAAY,GAAG,MAAM,GAAG,CAAC,QAAQ,EAAE,CAAC;QACpC,IAAI,GAAG,GAAG,QAAQ,MAAM,CAAC;IAC3B,CAAC;SAAM,CAAC;QACN,YAAY,GAAG,WAAW,CAAC;QAC3B,IAAI,GAAG,GAAG,QAAQ,OAAO,CAAC;IAC5B,CAAC;IACD,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;AAC/B,CAAC;AAED,MAAM,CAAC,MAAM,eAAe,GAAG;IAC7B,SAAS;CACV,CAAC","sourcesContent":["import type { Doc } from '@lumensuite/store';\n\nimport { Job } from '@lumensuite/store';\n\nimport { HtmlAdapter } from '../adapters/index.js';\nimport { createAssetsArchive, download } from './utils.js';\n\nasync function exportDoc(doc: Doc) {\n  const job = new Job({ collection: doc.collection });\n  const snapshot = await job.docToSnapshot(doc);\n  const adapter = new HtmlAdapter(job);\n  if (!snapshot) {\n    return;\n  }\n  const htmlResult = await adapter.fromDocSnapshot({\n    snapshot,\n    assets: job.assetsManager,\n  });\n\n  let downloadBlob: Blob;\n  const docTitle = doc.meta?.title || 'Untitled';\n  let name: string;\n  const contentBlob = new Blob([htmlResult.file], { type: 'plain/text' });\n  if (htmlResult.assetsIds.length > 0) {\n    const zip = await createAssetsArchive(job.assets, htmlResult.assetsIds);\n\n    await zip.file('index.html', contentBlob);\n\n    downloadBlob = await zip.generate();\n    name = `${docTitle}.zip`;\n  } else {\n    downloadBlob = contentBlob;\n    name = `${docTitle}.html`;\n  }\n  download(downloadBlob, name);\n}\n\nexport const HtmlTransformer = {\n  exportDoc,\n};\n"]}