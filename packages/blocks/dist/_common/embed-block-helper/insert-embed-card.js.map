{"version":3,"file":"insert-embed-card.js","sourceRoot":"","sources":["../../../src/_common/embed-block-helper/insert-embed-card.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DocMode, EmbedCardStyle } from '@blocksuite/affine-model';\nimport type { BlockStdScope } from '@blocksuite/block-std';\nimport type { BlockModel, Doc } from '@blocksuite/store';\n\nimport {\n  EMBED_CARD_HEIGHT,\n  EMBED_CARD_WIDTH,\n} from '@blocksuite/affine-shared/consts';\nimport { DocModeProvider } from '@blocksuite/affine-shared/services';\nimport { getLastNoteBlock } from '@blocksuite/affine-shared/utils';\nimport { Bound, Vec } from '@blocksuite/global/utils';\n\nimport type { EdgelessRootBlockComponent } from '../../root-block/edgeless/index.js';\n\nimport { getRootByEditorHost } from '../utils/query.js';\n\nfunction getParentModelBySelection(\n  doc: Doc,\n  mode: DocMode,\n  selected?: BlockModel | null\n): {\n  index?: number;\n  model?: BlockModel | null;\n} {\n  const currentMode = mode;\n  const root = doc.root;\n  if (!root)\n    return {\n      index: undefined,\n      model: null,\n    };\n\n  if (currentMode === 'edgeless') {\n    const surface =\n      root.children.find(child => child.flavour === 'affine:surface') ?? null;\n    return { index: undefined, model: surface };\n  }\n\n  if (currentMode === 'page') {\n    let selectedBlock = selected;\n    let index: undefined | number = undefined;\n\n    if (!selectedBlock) {\n      // if no block is selected, append to the last note block\n      selectedBlock = getLastNoteBlock(doc);\n    }\n\n    while (selectedBlock && selectedBlock.flavour !== 'affine:note') {\n      // selectedBlock = this.doc.getParent(selectedBlock.id);\n      const parent = doc.getParent(selectedBlock.id);\n      index = parent?.children.indexOf(selectedBlock);\n      selectedBlock = parent;\n    }\n\n    return { index, model: selectedBlock };\n  }\n\n  return {\n    index: undefined,\n    model: null,\n  };\n}\n\ninterface EmbedCardProperties {\n  flavour: string;\n  targetStyle: EmbedCardStyle;\n  props: Record<string, unknown>;\n}\n\nexport function insertEmbedCard(\n  std: BlockStdScope,\n  properties: EmbedCardProperties\n) {\n  const { doc, host } = std;\n  const rootService = std.getService('affine:page');\n  const mode = rootService.std.get(DocModeProvider).getEditorMode() ?? 'page';\n  const selectedBlock = rootService.selectedBlocks[0]?.model;\n\n  const { model, index } = getParentModelBySelection(doc, mode, selectedBlock);\n  const { flavour, targetStyle, props } = properties;\n\n  if (mode === 'page') {\n    host.doc.addBlock(flavour as never, props, model, index);\n    return;\n  }\n  if (mode === 'edgeless') {\n    const edgelessRoot = getRootByEditorHost(\n      host\n    ) as EdgelessRootBlockComponent | null;\n    if (!edgelessRoot) return;\n\n    edgelessRoot.service.viewport.smoothZoom(1);\n    const surface = edgelessRoot.surface;\n    const center = Vec.toVec(surface.renderer.viewport.center);\n    const cardId = edgelessRoot.service.addBlock(\n      flavour,\n      {\n        ...props,\n        xywh: Bound.fromCenter(\n          center,\n          EMBED_CARD_WIDTH[targetStyle],\n          EMBED_CARD_HEIGHT[targetStyle]\n        ).serialize(),\n        style: targetStyle,\n      },\n      surface.model\n    );\n\n    edgelessRoot.service.selection.set({\n      elements: [cardId],\n      editing: false,\n    });\n\n    edgelessRoot.tools.setEdgelessTool({\n      type: 'default',\n    });\n    return;\n  }\n}\n"]}