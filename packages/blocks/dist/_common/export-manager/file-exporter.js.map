{"version":3,"file":"file-exporter.js","sourceRoot":"","sources":["../../../src/_common/export-manager/file-exporter.ts"],"names":[],"mappings":"AAAA,qCAAqC;AAErC,oFAAoF;AACpF,wEAAwE;AACxE,MAAM,kBAAkB,GAAG,UAAU,CAAC;AAEtC,8EAA8E;AAC9E,MAAM,CAAC,MAAM,YAAY,GAAG;IAC1B;;;;;;;;;;;;;;;;;;;;OAoBG;IACH,UAAU,CAAC,QAAgB,EAAE,OAAe;QAC1C,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC5C,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACtC,MAAM,YAAY,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC;QAC/C,OAAO,CAAC,YAAY,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QAE/C,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QAC/B,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAE9B,OAAO,CAAC,KAAK,EAAE,CAAC;QAEhB,OAAO,CAAC,MAAM,EAAE,CAAC;IACnB,CAAC;IACD,SAAS,CAAC,QAA4B,EAAE,OAAe;QACrD,MAAM,KAAK,GAAG,QAAQ,EAAE,IAAI,EAAE,IAAI,kBAAkB,CAAC;QACrD,YAAY,CAAC,UAAU,CAAC,KAAK,GAAG,MAAM,EAAE,OAAO,CAAC,CAAC;IACnD,CAAC;CACF,CAAC;AAEF,SAAS,eAAe,CAAC,MAAc;IACrC,MAAM,WAAW,GAAG,GAAG,CAAC;IACxB,MAAM,qBAAqB,GAAG,4BAA4B,CAAC;IAC3D,MAAM,wBAAwB,GAAG,kCAAkC,CAAC;IACpE,MAAM,cAAc,GAAG,+BAA+B,CAAC;IACvD,MAAM,iBAAiB,GAAG,MAAM,CAAC;IACjC,MAAM,aAAa,GAAG,EAAE,CAAC;IAEzB,SAAS,YAAY,CAAC,MAAc,EAAE,MAAc;QAClD,MAAM,kBAAkB,GAAG,MAAM;aAC9B,OAAO,CAAC,qBAAqB,EAAE,MAAM,CAAC;aACtC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC1B,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,MAAM,kBAAkB,OAAO,EAAE,GAAG,CAAC,CAAC;QAC/D,OAAO,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACvC,CAAC;IAED,MAAM,GAAG,MAAM;SACZ,SAAS,CAAC,KAAK,CAAC;SAChB,OAAO,CAAC,qBAAqB,EAAE,WAAW,CAAC;SAC3C,OAAO,CAAC,cAAc,EAAE,WAAW,CAAC;SACpC,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;IAElC,MAAM,GAAG,YAAY,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;IAC3C,MAAM,GAAG,wBAAwB,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,CAAC,CAAC,MAAM,GAAG,WAAW;QACtB,CAAC,CAAC,MAAM,CAAC;IACX,MAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACzC,MAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC;IAClD,MAAM,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACzC,MAAM;QACJ,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,aAAa,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;YAChE,SAAS,CAAC;IACZ,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["/* eslint-disable no-control-regex */\n\n// Context: Lean towards breaking out any localizable content into constants so it's\n// easier to track content we may need to localize in the future. (i18n)\nconst UNTITLED_PAGE_NAME = 'Untitled';\n\n/** Tools for exporting files to device. For example, via browser download. */\nexport const FileExporter = {\n  /**\n   * Create a download for the user's browser.\n   *\n   * @param filename\n   * @param text\n   * @param mimeType like `\"text/plain\"`, `\"text/html\"`, `\"application/javascript\"`, etc. See {@link https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types mdn docs List of MIME types}.\n   *\n   * @remarks\n   * Only accepts data in utf-8 encoding (html files, javascript source, text files, etc).\n   *\n   * @example\n   * const todoMDText = `# Todo items\n   * [ ] Item 1\n   * [ ] Item 2\n   * `\n   * FileExporter.exportFile(\"Todo list.md\", todoMDText, \"text/plain\")\n   *\n   * @example\n   * const stateJsonContent = JSON.stringify({ a: 1, b: 2, c: 3 })\n   * FileExporter.exportFile(\"state.json\", jsonContent, \"application/json\")\n   */\n  exportFile(filename: string, dataURL: string) {\n    const element = document.createElement('a');\n    element.setAttribute('href', dataURL);\n    const safeFilename = getSafeFileName(filename);\n    element.setAttribute('download', safeFilename);\n\n    element.style.display = 'none';\n    document.body.append(element);\n\n    element.click();\n\n    element.remove();\n  },\n  exportPng(docTitle: string | undefined, dataURL: string) {\n    const title = docTitle?.trim() || UNTITLED_PAGE_NAME;\n    FileExporter.exportFile(title + '.png', dataURL);\n  },\n};\n\nfunction getSafeFileName(string: string) {\n  const replacement = ' ';\n  const filenameReservedRegex = /[<>:\"/\\\\|?*\\u0000-\\u001F]/g;\n  const windowsReservedNameRegex = /^(con|prn|aux|nul|com\\d|lpt\\d)$/i;\n  const reControlChars = /[\\u0000-\\u001F\\u0080-\\u009F]/g;\n  const reTrailingPeriods = /\\.+$/;\n  const allowedLength = 50;\n\n  function trimRepeated(string: string, target: string) {\n    const escapeStringRegexp = target\n      .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n      .replace(/-/g, '\\\\x2d');\n    const regex = new RegExp(`(?:${escapeStringRegexp}){2,}`, 'g');\n    return string.replace(regex, target);\n  }\n\n  string = string\n    .normalize('NFD')\n    .replace(filenameReservedRegex, replacement)\n    .replace(reControlChars, replacement)\n    .replace(reTrailingPeriods, '');\n\n  string = trimRepeated(string, replacement);\n  string = windowsReservedNameRegex.test(string)\n    ? string + replacement\n    : string;\n  const extIndex = string.lastIndexOf('.');\n  const filename = string.slice(0, extIndex).trim();\n  const extension = string.slice(extIndex);\n  string =\n    filename.slice(0, Math.max(1, allowedLength - extension.length)) +\n    extension;\n  return string;\n}\n"]}