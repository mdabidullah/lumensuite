{"version":3,"file":"export-manager.js","sourceRoot":"","sources":["../../../src/_common/export-manager/export-manager.ts"],"names":[],"mappings":"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","sourcesContent":["import type { BlockService, EditorHost } from '@lumensuite/block-std';\nimport type { IBound } from '@lumensuite/global/utils';\nimport type { Doc } from '@lumensuite/store';\n\nimport {\n  type CanvasRenderer,\n  SurfaceElementModel,\n} from '@lumensuite/affine-block-surface';\nimport {\n  GroupElementModel,\n  type RootBlockModel,\n} from '@lumensuite/affine-model';\nimport {\n  isInsidePageEditor,\n  matchFlavours,\n} from '@lumensuite/affine-shared/utils';\nimport { LumenSuiteError, ErrorCode } from '@lumensuite/global/exceptions';\nimport { assertExists, Bound } from '@lumensuite/global/utils';\n\nimport type { GfxBlockModel } from '../../root-block/edgeless/block-model.js';\nimport type { EdgelessRootBlockComponent } from '../../root-block/edgeless/edgeless-root-block.js';\n\nimport {\n  getBlockComponentByModel,\n  getRootByEditorHost,\n} from '../../_common/utils/index.js';\nimport { getBlocksInFrameBound } from '../../root-block/edgeless/frame-manager.js';\nimport { xywhArrayToObject } from '../../root-block/edgeless/utils/convert.js';\nimport { getBackgroundGrid } from '../../root-block/edgeless/utils/query.js';\nimport { fetchImage } from '../adapters/utils.js';\nimport { CANVAS_EXPORT_IGNORE_TAGS } from '../consts.js';\nimport { FileExporter } from './file-exporter.js';\n\ntype Html2CanvasFunction = typeof import('html2canvas').default;\n\nexport type ExportOptions = {\n  imageProxyEndpoint: string;\n};\nexport class ExportManager {\n  private _blockService: BlockService;\n\n  private _exportOptions: ExportOptions;\n\n  private _replaceRichTextWithSvgElement = (element: HTMLElement) => {\n    const richList = Array.from(element.querySelectorAll('.inline-editor'));\n    richList.map(rich => {\n      const svgEle = this._elementToSvgElement(\n        rich.cloneNode(true) as HTMLElement,\n        rich.clientWidth,\n        rich.clientHeight + 1\n      );\n      rich.parentElement?.append(svgEle);\n      rich.remove();\n    });\n  };\n\n  replaceImgSrcWithSvg = async (element: HTMLElement) => {\n    const imgList = Array.from(element.querySelectorAll('img'));\n    // Create an array of promises\n    const promises = imgList.map(img => {\n      return fetchImage(\n        img.src,\n        undefined,\n        this._exportOptions.imageProxyEndpoint\n      )\n        .then(response => response && response.blob())\n        .then(async blob => {\n          if (!blob) return;\n          // If the file type is SVG, set svg width and height\n          if (blob.type === 'image/svg+xml') {\n            // Parse the SVG\n            const parser = new DOMParser();\n            const svgDoc = parser.parseFromString(\n              await blob.text(),\n              'image/svg+xml'\n            );\n            const svgElement =\n              svgDoc.documentElement as unknown as SVGSVGElement;\n\n            // Check if the SVG has width and height attributes\n            if (\n              !svgElement.hasAttribute('width') &&\n              !svgElement.hasAttribute('height')\n            ) {\n              // Get the viewBox\n              const viewBox = svgElement.viewBox.baseVal;\n              // Set the SVG width and height\n              svgElement.setAttribute('width', `${viewBox.width}px`);\n              svgElement.setAttribute('height', `${viewBox.height}px`);\n            }\n\n            // Replace the img src with the modified SVG\n            const serializer = new XMLSerializer();\n            const newSvgStr = serializer.serializeToString(svgElement);\n            img.src =\n              'data:image/svg+xml;charset=utf-8,' +\n              encodeURIComponent(newSvgStr);\n          }\n        });\n    });\n\n    // Wait for all promises to resolve\n    await Promise.all(promises);\n  };\n\n  get doc(): Doc {\n    return this._blockService.std.doc;\n  }\n\n  get editorHost(): EditorHost {\n    return this._blockService.std.host;\n  }\n\n  constructor(blockService: BlockService, options: ExportOptions) {\n    this._exportOptions = options;\n    this._blockService = blockService;\n  }\n\n  private _checkCanContinueToCanvas(pathName: string, editorMode: boolean) {\n    if (\n      location.pathname !== pathName ||\n      isInsidePageEditor(this.editorHost) !== editorMode\n    ) {\n      throw new LumenSuiteError(\n        ErrorCode.EdgelessExportError,\n        'Unable to export content to canvas'\n      );\n    }\n  }\n\n  private async _checkReady() {\n    const pathname = location.pathname;\n    const editorMode = isInsidePageEditor(this.editorHost);\n\n    const promise = new Promise((resolve, reject) => {\n      let count = 0;\n      const checkReactRender = setInterval(() => {\n        try {\n          this._checkCanContinueToCanvas(pathname, editorMode);\n        } catch (e) {\n          clearInterval(checkReactRender);\n          reject(e);\n        }\n        const rootModel = this.doc.root;\n        const rootComponent = this.doc.root\n          ? getBlockComponentByModel(this.editorHost, rootModel)\n          : null;\n        const imageCard = rootComponent?.querySelector(\n          'affine-image-fallback-card'\n        );\n        const isReady =\n          !imageCard || imageCard.getAttribute('imageState') === '0';\n        if (rootComponent && isReady) {\n          clearInterval(checkReactRender);\n          resolve(true);\n        }\n        count++;\n        if (count > 10 * 60) {\n          clearInterval(checkReactRender);\n          resolve(false);\n        }\n      }, 100);\n    });\n    return promise;\n  }\n\n  private _createCanvas(bound: IBound, fillStyle: string) {\n    const canvas = document.createElement('canvas');\n    const dpr = window.devicePixelRatio || 1;\n    const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n    canvas.width = (bound.w + 100) * dpr;\n    canvas.height = (bound.h + 100) * dpr;\n\n    ctx.scale(dpr, dpr);\n    ctx.fillStyle = fillStyle;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    return { canvas, ctx };\n  }\n\n  private _disableMediaPrint() {\n    document.querySelectorAll('.media-print').forEach(mediaPrint => {\n      mediaPrint.classList.add('hide');\n    });\n  }\n\n  private async _docToCanvas(): Promise<HTMLCanvasElement | void> {\n    const html2canvas = (await import('html2canvas')).default;\n    if (!(html2canvas instanceof Function)) return;\n\n    const pathname = location.pathname;\n    const editorMode = isInsidePageEditor(this.editorHost);\n\n    const rootComponent = getRootByEditorHost(this.editorHost);\n    assertExists(rootComponent);\n    const viewportElement = rootComponent.viewportElement;\n    assertExists(viewportElement);\n    const pageContainer = viewportElement.querySelector(\n      '.affine-page-root-block-container'\n    );\n    const rect = pageContainer?.getBoundingClientRect();\n    const { viewport } = rootComponent;\n    assertExists(viewport);\n    const pageWidth = rect?.width;\n    const pageLeft = rect?.left ?? 0;\n    const viewportHeight = viewportElement?.scrollHeight;\n\n    const html2canvasOption = {\n      ignoreElements: function (element: Element) {\n        if (\n          CANVAS_EXPORT_IGNORE_TAGS.includes(element.tagName) ||\n          element.classList.contains('dg')\n        ) {\n          return true;\n        } else if (\n          (element.classList.contains('close') &&\n            element.parentElement?.classList.contains(\n              'meta-data-expanded-title'\n            )) ||\n          (element.classList.contains('expand') &&\n            element.parentElement?.classList.contains('meta-data'))\n        ) {\n          // the close and expand buttons in affine-doc-meta-data is not needed to be showed\n          return true;\n        } else {\n          return false;\n        }\n      },\n      onclone: async (_documentClone: Document, element: HTMLElement) => {\n        element.style.height = `${viewportHeight}px`;\n        this._replaceRichTextWithSvgElement(element);\n        await this.replaceImgSrcWithSvg(element);\n      },\n      backgroundColor: window.getComputedStyle(viewportElement).backgroundColor,\n      x: pageLeft - viewport.left,\n      width: pageWidth,\n      height: viewportHeight,\n      useCORS: this._exportOptions.imageProxyEndpoint ? false : true,\n      proxy: this._exportOptions.imageProxyEndpoint,\n    };\n\n    let data: HTMLCanvasElement;\n    try {\n      this._enableMediaPrint();\n      data = await html2canvas(\n        viewportElement as HTMLElement,\n        html2canvasOption\n      );\n    } finally {\n      this._disableMediaPrint();\n    }\n    this._checkCanContinueToCanvas(pathname, editorMode);\n    return data;\n  }\n\n  private _drawEdgelessBackground(\n    ctx: CanvasRenderingContext2D,\n    {\n      size,\n      backgroundColor,\n      gridColor,\n    }: {\n      size: number;\n      backgroundColor: string;\n      gridColor: string;\n    }\n  ) {\n    const svgImg = `<svg width='${ctx.canvas.width}px' height='${ctx.canvas.height}px' xmlns='http://www.w3.org/2000/svg' style='background-size:${size}px ${size}px;background-color:${backgroundColor}; background-image: radial-gradient(${gridColor} 1px, ${backgroundColor} 1px)'></svg>`;\n    const img = new Image();\n    const cleanup = () => {\n      img.onload = null;\n      img.onerror = null;\n    };\n\n    return new Promise<void>((resolve, reject) => {\n      img.onload = () => {\n        cleanup();\n        ctx.drawImage(img, 0, 0);\n        resolve();\n      };\n      img.onerror = e => {\n        cleanup();\n        reject(e);\n      };\n\n      img.src = `data:image/svg+xml,${encodeURIComponent(svgImg)}`;\n    });\n  }\n\n  private _elementToSvgElement(\n    node: HTMLElement,\n    width: number,\n    height: number\n  ) {\n    const xmlns = 'http://www.w3.org/2000/svg';\n    const svg = document.createElementNS(xmlns, 'svg');\n    const foreignObject = document.createElementNS(xmlns, 'foreignObject');\n\n    svg.setAttribute('width', `${width}`);\n    svg.setAttribute('height', `${height}`);\n    svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\n\n    foreignObject.setAttribute('width', '100%');\n    foreignObject.setAttribute('height', '100%');\n    foreignObject.setAttribute('x', '0');\n    foreignObject.setAttribute('y', '0');\n    foreignObject.setAttribute('externalResourcesRequired', 'true');\n\n    svg.append(foreignObject);\n    foreignObject.append(node);\n    return svg;\n  }\n\n  private _enableMediaPrint() {\n    document.querySelectorAll('.media-print').forEach(mediaPrint => {\n      mediaPrint.classList.remove('hide');\n    });\n  }\n\n  private async _html2canvas(\n    htmlElement: HTMLElement,\n    options: Parameters<Html2CanvasFunction>[1] = {}\n  ) {\n    const html2canvas = (await import('html2canvas'))\n      .default as unknown as Html2CanvasFunction;\n    const html2canvasOption = {\n      ignoreElements: function (element: Element) {\n        if (\n          CANVAS_EXPORT_IGNORE_TAGS.includes(element.tagName) ||\n          element.classList.contains('dg')\n        ) {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      onclone: async (documentClone: Document, element: HTMLElement) => {\n        // html2canvas can't support transform feature\n        element.style.setProperty('transform', 'none');\n        const layer = element.classList.contains('.affine-edgeless-layer')\n          ? element\n          : null;\n\n        if (layer instanceof HTMLElement) {\n          layer.style.setProperty('transform', 'none');\n        }\n\n        const boxShadowEles = documentClone.querySelectorAll(\n          \"[style*='box-shadow']\"\n        );\n        boxShadowEles.forEach(function (element) {\n          if (element instanceof HTMLElement) {\n            element.style.setProperty('box-shadow', 'none');\n          }\n        });\n\n        this._replaceRichTextWithSvgElement(element);\n        await this.replaceImgSrcWithSvg(element);\n      },\n      useCORS: this._exportOptions.imageProxyEndpoint ? false : true,\n      proxy: this._exportOptions.imageProxyEndpoint,\n    };\n\n    let data: HTMLCanvasElement;\n    try {\n      this._enableMediaPrint();\n      data = await html2canvas(\n        htmlElement,\n        Object.assign(html2canvasOption, options)\n      );\n    } finally {\n      this._disableMediaPrint();\n    }\n    return data;\n  }\n\n  private async _toCanvas(): Promise<HTMLCanvasElement | void> {\n    try {\n      await this._checkReady();\n    } catch (e: unknown) {\n      console.error('Failed to export to canvas');\n      console.error(e);\n      return;\n    }\n\n    if (isInsidePageEditor(this.editorHost)) {\n      return this._docToCanvas();\n    } else {\n      const rootModel = this.doc.root;\n      if (!rootModel) return;\n\n      const edgeless = getBlockComponentByModel(\n        this.editorHost,\n        rootModel\n      ) as EdgelessRootBlockComponent;\n      const bound = edgeless.getElementsBound();\n      assertExists(bound);\n      return this.edgelessToCanvas(edgeless.surface.renderer, bound, edgeless);\n    }\n  }\n\n  // TODO: refactor of this part\n  async edgelessToCanvas(\n    surfaceRenderer: CanvasRenderer,\n    bound: IBound,\n    edgeless?: EdgelessRootBlockComponent,\n    nodes?: GfxBlockModel[],\n    surfaces?: LumenSuite.SurfaceElementModel[],\n    edgelessBackground?: {\n      zoom: number;\n    }\n  ): Promise<HTMLCanvasElement | undefined> {\n    const rootModel = this.doc.root;\n    if (!rootModel) return;\n\n    const pathname = location.pathname;\n    const editorMode = isInsidePageEditor(this.editorHost);\n    const rootComponent = getRootByEditorHost(this.editorHost);\n    assertExists(rootComponent);\n    const viewportElement = rootComponent.viewportElement;\n    assertExists(viewportElement);\n    const containerComputedStyle = window.getComputedStyle(viewportElement);\n\n    const html2canvas = (element: HTMLElement) =>\n      this._html2canvas(element, {\n        backgroundColor: containerComputedStyle.backgroundColor,\n      });\n    const container = rootComponent.querySelector(\n      '.affine-block-children-container'\n    );\n\n    if (!container) return;\n\n    const { ctx, canvas } = this._createCanvas(\n      bound,\n      window.getComputedStyle(container).backgroundColor\n    );\n\n    if (edgelessBackground) {\n      await this._drawEdgelessBackground(ctx, {\n        backgroundColor: containerComputedStyle.getPropertyValue(\n          '--affine-background-primary-color'\n        ),\n        size: getBackgroundGrid(edgelessBackground.zoom, true).gap,\n        gridColor: containerComputedStyle.getPropertyValue(\n          '--affine-edgeless-grid-color'\n        ),\n      });\n    }\n\n    const blocks =\n      nodes ??\n      edgeless?.service.gfx.getElementsByBound(bound, { type: 'block' }) ??\n      [];\n    for (const block of blocks) {\n      if (matchFlavours(block, ['affine:image'])) {\n        if (!block.sourceId) return;\n\n        const blob = await block.doc.blobSync.get(block.sourceId);\n        if (!blob) return;\n\n        const blobToImage = (blob: Blob) =>\n          new Promise<HTMLImageElement>((resolve, reject) => {\n            const img = new Image();\n            img.onload = () => resolve(img);\n            img.onerror = reject;\n            img.src = URL.createObjectURL(blob);\n          });\n        const blockBound = xywhArrayToObject(block);\n        ctx.drawImage(\n          await blobToImage(blob),\n          blockBound.x - bound.x,\n          blockBound.y - bound.y,\n          blockBound.w,\n          blockBound.h\n        );\n      }\n      const blockComponent = this.editorHost.view.getBlock(block.id);\n      if (blockComponent) {\n        const blockBound = xywhArrayToObject(block);\n        const canvasData = await this._html2canvas(\n          blockComponent as HTMLElement\n        );\n        ctx.drawImage(\n          canvasData,\n          blockBound.x - bound.x + 50,\n          blockBound.y - bound.y + 50,\n          blockBound.w,\n          blockBound.h\n        );\n      }\n\n      if (matchFlavours(block, ['affine:frame'])) {\n        // TODO(@L-Sun): use children of frame instead of bound\n        const blocksInsideFrame = getBlocksInFrameBound(this.doc, block, false);\n        const frameBound = Bound.deserialize(block.xywh);\n\n        for (let i = 0; i < blocksInsideFrame.length; i++) {\n          const element = blocksInsideFrame[i];\n          const htmlElement = this.editorHost.view.getBlock(block.id);\n          const blockBound = xywhArrayToObject(element);\n          const canvasData = await html2canvas(htmlElement as HTMLElement);\n\n          ctx.drawImage(\n            canvasData,\n            blockBound.x - bound.x + 50,\n            blockBound.y - bound.y + 50,\n            blockBound.w,\n            (blockBound.w / canvasData.width) * canvasData.height\n          );\n        }\n        const surfaceCanvas = surfaceRenderer.getCanvasByBound(frameBound);\n\n        ctx.drawImage(surfaceCanvas, 50, 50, frameBound.w, frameBound.h);\n      }\n\n      this._checkCanContinueToCanvas(pathname, editorMode);\n    }\n\n    if (surfaces?.length) {\n      const surfaceElements = surfaces.flatMap(element =>\n        element instanceof GroupElementModel\n          ? (element.childElements.filter(\n              el => el instanceof SurfaceElementModel\n            ) as SurfaceElementModel[])\n          : element\n      );\n      const surfaceCanvas = surfaceRenderer.getCanvasByBound(\n        bound,\n        surfaceElements\n      );\n\n      ctx.drawImage(surfaceCanvas, 50, 50, bound.w, bound.h);\n    }\n\n    return canvas;\n  }\n\n  async exportPdf() {\n    const rootModel = this.doc.root;\n    if (!rootModel) return;\n    const canvasImage = await this._toCanvas();\n    if (!canvasImage) {\n      return;\n    }\n\n    const PDFLib = await import('pdf-lib');\n    const pdfDoc = await PDFLib.PDFDocument.create();\n    const page = pdfDoc.addPage([canvasImage.width, canvasImage.height]);\n    const imageEmbed = await pdfDoc.embedPng(canvasImage.toDataURL('PNG'));\n    const { width, height } = imageEmbed.scale(1);\n    page.drawImage(imageEmbed, {\n      x: 0,\n      y: 0,\n      width,\n      height,\n    });\n    const pdfBase64 = await pdfDoc.saveAsBase64({ dataUri: true });\n\n    FileExporter.exportFile(\n      (rootModel as RootBlockModel).title.toString() + '.pdf',\n      pdfBase64\n    );\n  }\n\n  async exportPng() {\n    const rootModel = this.doc.root;\n    if (!rootModel) return;\n    const canvasImage = await this._toCanvas();\n    if (!canvasImage) {\n      return;\n    }\n\n    FileExporter.exportPng(\n      (this.doc.root as RootBlockModel).title.toString(),\n      canvasImage.toDataURL('image/png')\n    );\n  }\n}\n"]}