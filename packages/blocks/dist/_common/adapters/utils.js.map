{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/_common/adapters/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DeltaInsert } from '@blocksuite/inline';\n\nimport { isEqual } from '@blocksuite/global/utils';\n\nexport const fetchImage = async (\n  url: string,\n  init?: RequestInit,\n  proxy?: string\n) => {\n  try {\n    if (!proxy) {\n      return await fetch(url, init);\n    }\n    if (url.startsWith('blob:')) {\n      return await fetch(url, init);\n    }\n    if (url.startsWith('data:')) {\n      return await fetch(url, init);\n    }\n    if (url.startsWith(window.location.origin)) {\n      return await fetch(url, init);\n    }\n    return await fetch(proxy + '?url=' + encodeURIComponent(url), init)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return res;\n      })\n      .catch(() => fetch(url, init));\n  } catch (error) {\n    console.warn('Error fetching image:', error);\n    return null;\n  }\n};\n\nexport const mergeDeltas = (\n  acc: DeltaInsert[],\n  cur: DeltaInsert,\n  options: { force?: boolean } = { force: false }\n) => {\n  if (acc.length === 0) {\n    return [cur];\n  }\n  const last = acc[acc.length - 1];\n  if (options?.force) {\n    last.insert = last.insert + cur.insert;\n    last.attributes = Object.create(null);\n    return acc;\n  } else if (\n    typeof last.insert === 'string' &&\n    typeof cur.insert === 'string' &&\n    (isEqual(last.attributes, cur.attributes) ||\n      (last.attributes === undefined && cur.attributes === undefined))\n  ) {\n    last.insert += cur.insert;\n    return acc;\n  }\n  return [...acc, cur];\n};\n\nexport const isNullish = (value: unknown) =>\n  value === null || value === undefined;\n\nexport const fetchable = (url: string) =>\n  url.startsWith('http:') ||\n  url.startsWith('https:') ||\n  url.startsWith('data:');\n\nexport const createText = (s: string) => {\n  return {\n    '$blocksuite:internal:text$': true,\n    delta: s.length === 0 ? [] : [{ insert: s }],\n  };\n};\nexport const isText = (o: unknown) => {\n  if (\n    typeof o === 'object' &&\n    o !== null &&\n    '$blocksuite:internal:text$' in o\n  ) {\n    return o['$blocksuite:internal:text$'] === true;\n  }\n  return false;\n};\n"]}