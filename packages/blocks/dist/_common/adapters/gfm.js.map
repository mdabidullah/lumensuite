{"version":3,"file":"gfm.js","sourceRoot":"","sources":["../../../src/_common/adapters/gfm.ts"],"names":[],"mappings":"AAUA,OAAO,EAAE,8BAA8B,EAAE,MAAM,iCAAiC,CAAC;AACjF,OAAO,EACL,4BAA4B,EAC5B,0BAA0B,GAC3B,MAAM,8BAA8B,CAAC;AACtC,OAAO,EAAE,oBAAoB,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAChF,OAAO,EACL,2BAA2B,EAC3B,yBAAyB,GAC1B,MAAM,+BAA+B,CAAC;AACvC,OAAO,EAAE,kBAAkB,EAAE,MAAM,0CAA0C,CAAC;AAC9E,OAAO,EAAE,gBAAgB,EAAE,MAAM,uCAAuC,CAAC;AACzE,OAAO,EAAE,QAAQ,EAAE,MAAM,+BAA+B,CAAC;AACzD,OAAO,EAAE,eAAe,EAAE,MAAM,wCAAwC,CAAC;AACzE,OAAO,EAAE,iBAAiB,EAAE,MAAM,mCAAmC,CAAC;AAEtE,MAAM,UAAU,GAAG;IACjB,OAAO,iBAAiB,CAAC;QACvB,kBAAkB,EAAE;QACpB,gBAAgB,EAAE;QAClB,QAAQ,EAAE;QACV,eAAe,EAAE;KAClB,CAAC,CAAC;AACL,CAAC;AAED,SAAS,eAAe;IACtB,OAAO;QACL,4BAA4B,EAAE;QAC9B,oBAAoB,EAAE;QACtB,2BAA2B,EAAE;QAC7B,8BAA8B,EAAE;KACjC,CAAC;AACJ,CAAC;AAED,SAAS,aAAa;IACpB,OAAO;QACL,UAAU,EAAE;YACV,0BAA0B,EAAE;YAC5B,kBAAkB,EAAE;YACpB,yBAAyB,EAAE;SAC5B;KACF,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,SAAS;IACvB,4DAA4D;IAC5D,MAAM,IAAI,GAAG,IAAI,CAAC;IAClB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;IAEzB,MAAM,mBAAmB,GACvB,IAAI,CAAC,mBAAmB,IAAI,CAAC,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC,CAAC;IAC9D,MAAM,sBAAsB,GAC1B,IAAI,CAAC,sBAAsB,IAAI,CAAC,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC,CAAC;IACpE,MAAM,oBAAoB,GACxB,IAAI,CAAC,oBAAoB,IAAI,CAAC,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC,CAAC;IAEhE,mBAAmB,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAChC,sBAAsB,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;IAC/C,oBAAoB,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;AAC7C,CAAC","sourcesContent":["/*\nMIT License\n\nCopyright (c) 2020 Titus Wormer <tituswormer@gmail.com>\n\nmdast-util-gfm-autolink-literal is from markdown only.\nmdast-util-gfm-footnote is not included.\n*/\nimport type { Processor } from 'unified';\n\nimport { gfmAutolinkLiteralFromMarkdown } from 'mdast-util-gfm-autolink-literal';\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown,\n} from 'mdast-util-gfm-strikethrough';\nimport { gfmTableFromMarkdown, gfmTableToMarkdown } from 'mdast-util-gfm-table';\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown,\n} from 'mdast-util-gfm-task-list-item';\nimport { gfmAutolinkLiteral } from 'micromark-extension-gfm-autolink-literal';\nimport { gfmStrikethrough } from 'micromark-extension-gfm-strikethrough';\nimport { gfmTable } from 'micromark-extension-gfm-table';\nimport { gfmTaskListItem } from 'micromark-extension-gfm-task-list-item';\nimport { combineExtensions } from 'micromark-util-combine-extensions';\n\nexport function gfm() {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmStrikethrough(),\n    gfmTable(),\n    gfmTaskListItem(),\n  ]);\n}\n\nfunction gfmFromMarkdown() {\n  return [\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown(),\n    gfmAutolinkLiteralFromMarkdown(),\n  ];\n}\n\nfunction gfmToMarkdown() {\n  return {\n    extensions: [\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(),\n      gfmTaskListItemToMarkdown(),\n    ],\n  };\n}\n\nexport function remarkGfm(this: Processor) {\n  // eslint-disable-next-line @typescript-eslint/no-this-alias\n  const self = this;\n  const data = self.data();\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = []);\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = []);\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = []);\n\n  micromarkExtensions.push(gfm());\n  fromMarkdownExtensions.push(gfmFromMarkdown());\n  toMarkdownExtensions.push(gfmToMarkdown());\n}\n"]}