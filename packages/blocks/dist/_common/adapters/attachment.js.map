{"version":3,"file":"attachment.js","sourceRoot":"","sources":["../../../src/_common/adapters/attachment.ts"],"names":[],"mappings":"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","sourcesContent":["import { BlockSuiteError, ErrorCode } from '@blocksuite/global/exceptions';\nimport { sha } from '@blocksuite/global/utils';\nimport {\n  type AssetsManager,\n  BaseAdapter,\n  type BlockSnapshot,\n  type DocSnapshot,\n  type FromBlockSnapshotPayload,\n  type FromBlockSnapshotResult,\n  type FromDocSnapshotPayload,\n  type FromDocSnapshotResult,\n  type FromSliceSnapshotPayload,\n  type FromSliceSnapshotResult,\n  nanoid,\n  type SliceSnapshot,\n  type ToBlockSnapshotPayload,\n  type ToDocSnapshotPayload,\n} from '@blocksuite/store';\n\nexport type Attachment = File[];\n\ntype AttachmentToSliceSnapshotPayload = {\n  file: Attachment;\n  assets?: AssetsManager;\n  blockVersions: Record<string, number>;\n  pageVersion: number;\n  workspaceVersion: number;\n  workspaceId: string;\n  pageId: string;\n};\n\nexport class AttachmentAdapter extends BaseAdapter<Attachment> {\n  override fromBlockSnapshot(\n    _payload: FromBlockSnapshotPayload\n  ): Promise<FromBlockSnapshotResult<Attachment>> {\n    throw new BlockSuiteError(\n      ErrorCode.TransformerNotImplementedError,\n      'AttachmentAdapter.fromBlockSnapshot is not implemented.'\n    );\n  }\n\n  override fromDocSnapshot(\n    _payload: FromDocSnapshotPayload\n  ): Promise<FromDocSnapshotResult<Attachment>> {\n    throw new BlockSuiteError(\n      ErrorCode.TransformerNotImplementedError,\n      'AttachmentAdapter.fromDocSnapshot is not implemented.'\n    );\n  }\n\n  override fromSliceSnapshot(\n    payload: FromSliceSnapshotPayload\n  ): Promise<FromSliceSnapshotResult<Attachment>> {\n    const attachments: Attachment = [];\n    for (const contentSlice of payload.snapshot.content) {\n      if (contentSlice.type === 'block') {\n        const { flavour, props } = contentSlice;\n        if (flavour === 'affine:attachment') {\n          const { sourceId } = props;\n          const file = payload.assets?.getAssets().get(sourceId as string) as\n            | File\n            | undefined;\n          if (file) {\n            attachments.push(file);\n          }\n        }\n      }\n    }\n    return Promise.resolve({ file: attachments, assetsIds: [] });\n  }\n\n  override toBlockSnapshot(\n    _payload: ToBlockSnapshotPayload<Attachment>\n  ): Promise<BlockSnapshot> {\n    throw new BlockSuiteError(\n      ErrorCode.TransformerNotImplementedError,\n      'AttachmentAdapter.toBlockSnapshot is not implemented.'\n    );\n  }\n\n  override toDocSnapshot(\n    _payload: ToDocSnapshotPayload<Attachment>\n  ): Promise<DocSnapshot> {\n    throw new BlockSuiteError(\n      ErrorCode.TransformerNotImplementedError,\n      'AttachmentAdapter.toDocSnapshot is not implemented.'\n    );\n  }\n\n  override async toSliceSnapshot(\n    payload: AttachmentToSliceSnapshotPayload\n  ): Promise<SliceSnapshot | null> {\n    const content: SliceSnapshot['content'] = [];\n    for (const item of payload.file) {\n      const blobId = await sha(await item.arrayBuffer());\n      payload.assets?.getAssets().set(blobId, item);\n      await payload.assets?.writeToBlob(blobId);\n      content.push({\n        type: 'block',\n        flavour: 'affine:attachment',\n        id: nanoid(),\n        props: {\n          name: item.name,\n          size: item.size,\n          type: item.type,\n          embed: false,\n          style: 'horizontalThin',\n          index: 'a0',\n          xywh: '[0,0,0,0]',\n          rotate: 0,\n          sourceId: blobId,\n        },\n        children: [],\n      });\n    }\n    if (content.length === 0) {\n      return null;\n    }\n    return {\n      type: 'slice',\n      content,\n      pageVersion: payload.pageVersion,\n      workspaceVersion: payload.workspaceVersion,\n      workspaceId: payload.workspaceId,\n      pageId: payload.pageId,\n    };\n  }\n}\n"]}