{"version":3,"file":"define.js","sourceRoot":"","sources":["../../../../src/database-block/columns/rich-text/define.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,uBAAuB,CAAC;AAC9D,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAC;AAEzC,OAAO,EAAyB,OAAO,EAAE,MAAM,aAAa,CAAC;AAE7D,MAAM,CAAC,MAAM,kBAAkB,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC;AAE1D,MAAM,CAAC,MAAM,yBAAyB,GACpC,kBAAkB,CAAC,WAAW,CAAmB;IAC/C,IAAI,EAAE,MAAM;IACZ,IAAI,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,MAAM,EAAE;IAC9B,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;IACvB,YAAY,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC5C,cAAc,EAAE,IAAI,CAAC,EAAE;QACrB,OAAO;YACL,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC;SACtB,CAAC;IACJ,CAAC;IACD,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,IAAI;IAC5C,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE;QACnC,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;QAC7B,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACxB,QAAQ,EAAE,CAAC;QACX,OAAO;YACL,OAAO,EAAE,GAAG,EAAE;gBACZ,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC5B,CAAC;SACF,CAAC;IACJ,CAAC;IACD,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC;IAClD,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;CAC5D,CAAC,CAAC","sourcesContent":["import { columnType, tRichText } from '@lumensuite/data-view';\nimport { Text } from '@lumensuite/store';\n\nimport { type RichTextCellType, toYText } from '../utils.js';\n\nexport const richTextColumnType = columnType('rich-text');\n\nexport const richTextColumnModelConfig =\n  richTextColumnType.modelConfig<RichTextCellType>({\n    name: 'Text',\n    type: () => tRichText.create(),\n    defaultData: () => ({}),\n    cellToString: data => data?.toString() ?? '',\n    cellFromString: data => {\n      return {\n        value: new Text(data),\n      };\n    },\n    cellToJson: data => data?.toString() ?? null,\n    onUpdate: (value, _data, callback) => {\n      const yText = toYText(value);\n      yText.observe(callback);\n      callback();\n      return {\n        dispose: () => {\n          yText.unobserve(callback);\n        },\n      };\n    },\n    isEmpty: data => data == null || data.length === 0,\n    values: data => (data?.toString() ? [data.toString()] : []),\n  });\n"]}