{"version":3,"file":"cell-renderer.js","sourceRoot":"","sources":["../../../../src/database-block/columns/rich-text/cell-renderer.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  type AffineInlineEditor,\n  type AffineTextAttributes,\n  DefaultInlineManagerExtension,\n  type RichText,\n} from '@lumensuite/affine-components/rich-text';\nimport { getViewportElement } from '@lumensuite/affine-shared/utils';\nimport {\n  BaseCellRenderer,\n  createFromBaseCellRenderer,\n  createIcon,\n} from '@lumensuite/data-view';\nimport { IS_MAC } from '@lumensuite/global/env';\nimport { assertExists } from '@lumensuite/global/utils';\nimport { Text } from '@lumensuite/store';\nimport { css, nothing, type PropertyValues } from 'lit';\nimport { customElement, query } from 'lit/decorators.js';\nimport { keyed } from 'lit/directives/keyed.js';\nimport { html } from 'lit/static-html.js';\n\nimport type { DatabaseBlockComponent } from '../../database-block.js';\n\nimport { HostContextKey } from '../../context/host-context.js';\nimport { richTextColumnModelConfig } from './define.js';\n\nfunction toggleStyle(\n  inlineEditor: AffineInlineEditor,\n  attrs: AffineTextAttributes\n): void {\n  const inlineRange = inlineEditor.getInlineRange();\n  if (!inlineRange) return;\n\n  const root = inlineEditor.rootElement;\n  if (!root) {\n    return;\n  }\n\n  const deltas = inlineEditor.getDeltasByInlineRange(inlineRange);\n  let oldAttributes: AffineTextAttributes = {};\n\n  for (const [delta] of deltas) {\n    const attributes = delta.attributes;\n\n    if (!attributes) {\n      continue;\n    }\n\n    oldAttributes = { ...attributes };\n  }\n\n  const newAttributes = Object.fromEntries(\n    Object.entries(attrs).map(([k, v]) => {\n      if (\n        typeof v === 'boolean' &&\n        v === (oldAttributes as Record<string, unknown>)[k]\n      ) {\n        return [k, !v];\n      } else {\n        return [k, v];\n      }\n    })\n  );\n\n  inlineEditor.formatText(inlineRange, newAttributes, {\n    mode: 'merge',\n  });\n  root.blur();\n\n  inlineEditor.syncInlineRange();\n}\n\n@customElement('affine-database-rich-text-cell')\nexport class RichTextCell extends BaseCellRenderer<Text> {\n  static override styles = css`\n    affine-database-rich-text-cell {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      user-select: none;\n    }\n\n    .affine-database-rich-text {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      outline: none;\n      font-size: var(--data-view-cell-text-size);\n      line-height: var(--data-view-cell-text-line-height);\n      word-break: break-all;\n    }\n\n    .affine-database-rich-text v-line {\n      display: flex !important;\n      align-items: center;\n      height: 100%;\n      width: 100%;\n    }\n\n    .affine-database-rich-text v-line > div {\n      flex-grow: 1;\n    }\n  `;\n\n  get attributeRenderer() {\n    return this.inlineManager?.getRenderer();\n  }\n\n  get attributesSchema() {\n    return this.inlineManager?.getSchema();\n  }\n\n  get inlineEditor() {\n    assertExists(this._richTextElement);\n    const inlineEditor = this._richTextElement.inlineEditor;\n    assertExists(inlineEditor);\n    return inlineEditor;\n  }\n\n  get inlineManager() {\n    return this.view\n      .getContext(HostContextKey)\n      ?.std.get(DefaultInlineManagerExtension.identifier);\n  }\n\n  get service() {\n    return this.view\n      .getContext(HostContextKey)\n      ?.std.getService('affine:database');\n  }\n\n  get topContenteditableElement() {\n    const databaseBlock =\n      this.closest<DatabaseBlockComponent>('affine-database');\n    return databaseBlock?.topContenteditableElement;\n  }\n\n  private changeUserSelectAccordToReadOnly() {\n    if (this && this instanceof HTMLElement) {\n      this.style.userSelect = this.readonly ? 'text' : 'none';\n    }\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this.changeUserSelectAccordToReadOnly();\n  }\n\n  override render() {\n    if (!this.service) return nothing;\n    if (!this.value || !(this.value instanceof Text)) {\n      return html`<div class=\"affine-database-rich-text\"></div>`;\n    }\n    return keyed(\n      this.value,\n      html`<rich-text\n        .yText=${this.value}\n        .attributesSchema=${this.attributesSchema}\n        .attributeRenderer=${this.attributeRenderer}\n        .embedChecker=${this.inlineManager?.embedChecker}\n        .markdownShortcutHandler=${this.inlineManager?.markdownShortcutHandler}\n        .readonly=${true}\n        class=\"affine-database-rich-text inline-editor\"\n      ></rich-text>`\n    );\n  }\n\n  override updated(changedProperties: PropertyValues) {\n    if (changedProperties.has('readonly')) {\n      this.changeUserSelectAccordToReadOnly();\n    }\n  }\n\n  @query('rich-text')\n  private accessor _richTextElement: RichText | null = null;\n}\n\n@customElement('affine-database-rich-text-cell-editing')\nexport class RichTextCellEditing extends BaseCellRenderer<Text> {\n  static override styles = css`\n    affine-database-rich-text-cell-editing {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      min-width: 1px;\n      cursor: text;\n    }\n\n    .affine-database-rich-text {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      outline: none;\n    }\n\n    .affine-database-rich-text v-line {\n      display: flex !important;\n      align-items: center;\n      height: 100%;\n      width: 100%;\n    }\n\n    .affine-database-rich-text v-line > div {\n      flex-grow: 1;\n    }\n  `;\n\n  private _handleKeyDown = (event: KeyboardEvent) => {\n    if (event.key !== 'Escape') {\n      if (event.key === 'Tab') {\n        event.preventDefault();\n        return;\n      }\n      event.stopPropagation();\n    }\n\n    if (event.key === 'Enter' && !event.isComposing) {\n      if (event.shiftKey) {\n        // soft enter\n        this._onSoftEnter();\n      } else {\n        // exit editing\n        this.selectCurrentCell(false);\n      }\n      event.preventDefault();\n      return;\n    }\n\n    const inlineEditor = this.inlineEditor;\n\n    switch (event.key) {\n      // bold ctrl+b\n      case 'B':\n      case 'b':\n        if (event.metaKey || event.ctrlKey) {\n          event.preventDefault();\n          toggleStyle(this.inlineEditor, { bold: true });\n        }\n        break;\n      // italic ctrl+i\n      case 'I':\n      case 'i':\n        if (event.metaKey || event.ctrlKey) {\n          event.preventDefault();\n          toggleStyle(this.inlineEditor, { italic: true });\n        }\n        break;\n      // underline ctrl+u\n      case 'U':\n      case 'u':\n        if (event.metaKey || event.ctrlKey) {\n          event.preventDefault();\n          toggleStyle(this.inlineEditor, { underline: true });\n        }\n        break;\n      // strikethrough ctrl+shift+s\n      case 'S':\n      case 's':\n        if ((event.metaKey || event.ctrlKey) && event.shiftKey) {\n          event.preventDefault();\n          toggleStyle(inlineEditor, { strike: true });\n        }\n        break;\n      // inline code ctrl+shift+e\n      case 'E':\n      case 'e':\n        if ((event.metaKey || event.ctrlKey) && event.shiftKey) {\n          event.preventDefault();\n          toggleStyle(inlineEditor, { code: true });\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  private _initYText = (text?: string) => {\n    const yText = new Text(text);\n    this.onChange(yText);\n  };\n\n  private _onSoftEnter = () => {\n    if (this.value && this.inlineEditor) {\n      const inlineRange = this.inlineEditor.getInlineRange();\n      assertExists(inlineRange);\n\n      const text = new Text(this.inlineEditor.yText);\n      text.replace(inlineRange.index, inlineRange.length, '\\n');\n      this.inlineEditor.setInlineRange({\n        index: inlineRange.index + 1,\n        length: 0,\n      });\n    }\n  };\n\n  get attributeRenderer() {\n    return this.inlineManager?.getRenderer();\n  }\n\n  get attributesSchema() {\n    return this.inlineManager?.getSchema();\n  }\n\n  get inlineEditor() {\n    assertExists(this._richTextElement);\n    const inlineEditor = this._richTextElement.inlineEditor;\n    assertExists(inlineEditor);\n    return inlineEditor;\n  }\n\n  get inlineManager() {\n    return this.view\n      .getContext(HostContextKey)\n      ?.std.get(DefaultInlineManagerExtension.identifier);\n  }\n\n  get service() {\n    return this.view\n      .getContext(HostContextKey)\n      ?.std.getService('affine:database');\n  }\n\n  get topContenteditableElement() {\n    const databaseBlock =\n      this.closest<DatabaseBlockComponent>('affine-database');\n    return databaseBlock?.topContenteditableElement;\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n\n    if (!this.value || typeof this.value === 'string') {\n      this._initYText(this.value);\n    }\n\n    const selectAll = (e: KeyboardEvent) => {\n      if (e.key === 'a' && (IS_MAC ? e.metaKey : e.ctrlKey)) {\n        e.stopPropagation();\n        e.preventDefault();\n        this.inlineEditor.selectAll();\n      }\n    };\n    this.addEventListener('keydown', selectAll);\n    this.disposables.addFromEvent(this, 'keydown', selectAll);\n  }\n\n  override firstUpdated() {\n    this._richTextElement?.updateComplete\n      .then(() => {\n        this.disposables.add(\n          this.inlineEditor.slots.keydown.on(this._handleKeyDown)\n        );\n\n        this.inlineEditor.focusEnd();\n      })\n      .catch(console.error);\n  }\n\n  override render() {\n    if (!this.service) return nothing;\n    return html`<rich-text\n      .yText=${this.value}\n      .inlineEventSource=${this.topContenteditableElement}\n      .attributesSchema=${this.attributesSchema}\n      .attributeRenderer=${this.attributeRenderer}\n      .embedChecker=${this.inlineManager?.embedChecker}\n      .markdownShortcutHandler=${this.inlineManager?.markdownShortcutHandler}\n      .verticalScrollContainerGetter=${() =>\n        this.topContenteditableElement?.host\n          ? getViewportElement(this.topContenteditableElement.host)\n          : null}\n      class=\"affine-database-rich-text inline-editor\"\n    ></rich-text>`;\n  }\n\n  @query('rich-text')\n  private accessor _richTextElement: RichText | null = null;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'affine-database-rich-text-cell-editing': RichTextCellEditing;\n  }\n}\n\nexport const richTextColumnConfig = richTextColumnModelConfig.createColumnMeta({\n  icon: createIcon('TextIcon'),\n\n  cellRenderer: {\n    view: createFromBaseCellRenderer(RichTextCell),\n    edit: createFromBaseCellRenderer(RichTextCellEditing),\n  },\n});\n"]}