{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/database-block/components/title/index.ts"],"names":[],"mappings":"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","sourcesContent":["import type { RichText } from '@lumensuite/affine-components/rich-text';\nimport type { InlineRange } from '@lumensuite/inline';\nimport type { Text } from '@lumensuite/store';\n\nimport { getViewportElement } from '@lumensuite/affine-shared/utils';\nimport { ShadowlessElement, WithDisposable } from '@lumensuite/block-std';\nimport { assertExists } from '@lumensuite/global/utils';\nimport { css, html } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport type { DatabaseBlockComponent } from '../../database-block.js';\n\n@customElement('affine-database-title')\nexport class DatabaseTitle extends WithDisposable(ShadowlessElement) {\n  static override styles = css`\n    .affine-database-title {\n      position: relative;\n      flex: 1;\n    }\n\n    .database-title {\n      font-size: 20px;\n      font-weight: 600;\n      line-height: 28px;\n      color: var(--affine-text-primary-color);\n      font-family: inherit;\n      /* overflow-x: scroll; */\n      overflow: hidden;\n      cursor: text;\n    }\n\n    .database-title [data-v-text='true'] {\n      display: block;\n      word-break: break-all !important;\n    }\n\n    .database-title.ellipsis [data-v-text='true'] {\n      white-space: nowrap !important;\n      text-overflow: ellipsis;\n      overflow: hidden;\n    }\n\n    .affine-database-title [data-title-empty='true']::before {\n      content: 'Untitled';\n      position: absolute;\n      pointer-events: none;\n      color: var(--affine-text-primary-color);\n    }\n\n    .affine-database-title [data-title-focus='true']::before {\n      color: var(--affine-placeholder-color);\n    }\n  `;\n\n  private _onKeyDown = (event: KeyboardEvent) => {\n    if (event.key === 'Enter' && !event.isComposing) {\n      // prevent insert v-line\n      event.preventDefault();\n      // insert new row\n      this.onPressEnterKey?.();\n      return;\n    }\n  };\n\n  get database() {\n    return this.closest<DatabaseBlockComponent>('affine-database');\n  }\n\n  get inlineEditor() {\n    assertExists(this.richText.inlineEditor);\n    return this.richText.inlineEditor;\n  }\n\n  get topContenteditableElement() {\n    return this.database?.topContenteditableElement;\n  }\n\n  override firstUpdated() {\n    // for title placeholder\n    this.titleText.yText.observe(() => {\n      this.requestUpdate();\n    });\n\n    this.updateComplete\n      .then(() => {\n        this.disposables.add(\n          this.inlineEditor.slots.keydown.on(this._onKeyDown)\n        );\n\n        this.disposables.add(\n          this.inlineEditor.slots.inputting.on(() => {\n            this.isComposing = this.inlineEditor.isComposing;\n          })\n        );\n\n        let beforeInlineRange: InlineRange | null = null;\n        this.disposables.add(\n          this.inlineEditor.slots.inlineRangeUpdate.on(([inlineRange]) => {\n            if (inlineRange) {\n              if (!beforeInlineRange) {\n                this.isActive = true;\n              }\n            } else {\n              if (beforeInlineRange) {\n                this.isActive = false;\n              }\n            }\n            beforeInlineRange = inlineRange;\n          })\n        );\n      })\n      .catch(console.error);\n  }\n\n  override async getUpdateComplete(): Promise<boolean> {\n    const result = await super.getUpdateComplete();\n    await this.richText?.updateComplete;\n    return result;\n  }\n\n  override render() {\n    const isEmpty =\n      (!this.titleText || !this.titleText.length) && !this.isComposing;\n\n    const classList = classMap({\n      'database-title': true,\n      ellipsis: !this.isActive,\n    });\n\n    return html`<div class=\"affine-database-title\">\n      <rich-text\n        .yText=${this.titleText.yText}\n        .inlineEventSource=${this.topContenteditableElement}\n        .undoManager=${this.database?.doc.history}\n        .enableFormat=${false}\n        .readonly=${this.readonly}\n        .verticalScrollContainerGetter=${() =>\n          this.topContenteditableElement?.host\n            ? getViewportElement(this.topContenteditableElement.host)\n            : null}\n        class=\"${classList}\"\n        data-title-empty=\"${isEmpty}\"\n        data-title-focus=\"${this.isActive}\"\n        data-block-is-database-title=\"true\"\n        title=\"${this.titleText.toString()}\"\n      ></rich-text>\n      <div class=\"database-title\" style=\"float:left;height: 0;\">Untitled</div>\n    </div>`;\n  }\n\n  @state()\n  private accessor isActive = false;\n\n  @state()\n  accessor isComposing = false;\n\n  @property({ attribute: false })\n  accessor onPressEnterKey: (() => void) | undefined = undefined;\n\n  @property({ attribute: false })\n  accessor readonly!: boolean;\n\n  @query('rich-text')\n  private accessor richText!: RichText;\n\n  @property({ attribute: false })\n  accessor titleText!: Text;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'affine-database-title': DatabaseTitle;\n  }\n}\n"]}