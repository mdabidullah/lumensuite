{"version":3,"file":"note-renderer.js","sourceRoot":"","sources":["../../../src/database-block/detail-panel/note-renderer.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DatabaseBlockModel } from '@lumensuite/affine-model';\nimport type { DetailSlotProps, SingleView } from '@lumensuite/data-view';\n\nimport { focusTextModel } from '@lumensuite/affine-components/rich-text';\nimport {\n  createDefaultDoc,\n  matchFlavours,\n} from '@lumensuite/affine-shared/utils';\nimport {\n  BlockStdScope,\n  type EditorHost,\n  ShadowlessElement,\n  WithDisposable,\n} from '@lumensuite/block-std';\nimport { css, html } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\n\n@customElement('database-datasource-note-renderer')\nexport class NoteRenderer\n  extends WithDisposable(ShadowlessElement)\n  implements DetailSlotProps\n{\n  static override styles = css`\n    database-datasource-note-renderer {\n      width: 100%;\n      --affine-editor-side-padding: 0;\n      flex: 1;\n    }\n  `;\n\n  get databaseBlock(): DatabaseBlockModel {\n    return this.model;\n  }\n\n  addNote() {\n    const collection = this.host?.std.collection;\n    if (!collection) {\n      return;\n    }\n    if (!this.databaseBlock.notes) {\n      this.databaseBlock.notes = {};\n    }\n    const note = createDefaultDoc(collection);\n    if (note) {\n      this.databaseBlock.notes[this.rowId] = note.id;\n      this.requestUpdate();\n      requestAnimationFrame(() => {\n        const block = note.root?.children\n          .find(child => child.flavour === 'affine:note')\n          ?.children.find(block =>\n            matchFlavours(block, [\n              'affine:paragraph',\n              'affine:list',\n              'affine:code',\n            ])\n          );\n        if (this.subHost && block) {\n          focusTextModel(this.subHost.std, block.id);\n        }\n      });\n    }\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this.databaseBlock.propsUpdated.on(({ key }) => {\n      if (key === 'notes') {\n        this.requestUpdate();\n      }\n    });\n  }\n\n  protected override render(): unknown {\n    if (\n      !this.model.doc.awarenessStore.getFlag('enable_database_attachment_note')\n    ) {\n      return null;\n    }\n    return html`\n      <div\n        style=\"height: 1px;max-width: var(--affine-editor-width);background-color: var(--affine-border-color);margin: auto;margin-bottom: 16px\"\n      ></div>\n      ${this.renderNote()}\n    `;\n  }\n\n  renderNote() {\n    const host = this.host;\n    const std = host?.std;\n    if (!std || !host) {\n      return;\n    }\n    const pageId = this.databaseBlock.notes?.[this.rowId];\n    if (!pageId) {\n      return html` <div>\n        <div\n          @click=\"${this.addNote}\"\n          style=\"max-width: var(--affine-editor-width);margin: auto;cursor: pointer;color: var(--affine-text-disable-color)\"\n        >\n          Click to add note\n        </div>\n      </div>`;\n    }\n    const page = std.collection.getDoc(pageId);\n    if (!page) {\n      return;\n    }\n    const previewStd = new BlockStdScope({\n      doc: page,\n      extensions: std.extensions,\n    });\n    return html`${previewStd.render()} `;\n  }\n\n  @property({ attribute: false })\n  accessor host!: EditorHost;\n\n  @property({ attribute: false })\n  accessor model!: DatabaseBlockModel;\n\n  @property({ attribute: false })\n  accessor rowId!: string;\n\n  @query('editor-host')\n  accessor subHost!: EditorHost;\n\n  @property({ attribute: false })\n  accessor view!: SingleView;\n}\n"]}