{"version":3,"file":"embed-github-service.js","sourceRoot":"","sources":["../../src/embed-github-block/embed-github-service.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,sBAAsB,EAEtB,iBAAiB,GAClB,MAAM,0BAA0B,CAAC;AAClC,OAAO,EAAE,mBAAmB,EAAE,MAAM,oCAAoC,CAAC;AACzE,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AAErD,OAAO,EAAE,aAAa,EAAE,MAAM,wCAAwC,CAAC;AACvE,OAAO,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AACzD,OAAO,EAAE,uBAAuB,EAAE,oBAAoB,EAAE,MAAM,YAAY,CAAC;AAE3E,MAAM,OAAO,uBAAwB,SAAQ,YAAY;IAAzD;;QAQE,iBAAY,GAAG,CAAC,gBAAkC,EAAE,MAAoB,EAAE,EAAE;YAC1E,OAAO,uBAAuB,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;QAC3D,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAC,gBAAkC,EAAE,MAAoB,EAAE,EAAE;YAC1E,OAAO,oBAAoB,CACzB,gBAAgB,EAChB,uBAAuB,CAAC,aAAa,EACrC,MAAM,CACP,CAAC;QACJ,CAAC,CAAC;IAYJ,CAAC;aA7B0B,YAAO,GAAG,sBAAsB,CAAC,KAAK,CAAC,OAAO,AAAvC,CAAwC;aAEhD,kBAAa,GAAG,IAAI,aAAa,EAAE,AAAtB,CAAuB;aAErD,2BAAsB,GAC3B,uBAAuB,CAAC,aAAa,CAAC,WAAW,AADtB,CACuB;IAc3C,OAAO;QACd,KAAK,CAAC,OAAO,EAAE,CAAC;QAEhB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,yBAAyB,CAAC;YAC1D,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,cAAc;YACxB,MAAM,EAAE,iBAAiB;YACzB,QAAQ,EAAE,MAAM;SACjB,CAAC,CAAC;IACL,CAAC","sourcesContent":["import {\n  EmbedGithubBlockSchema,\n  type EmbedGithubModel,\n  EmbedGithubStyles,\n} from '@blocksuite/affine-model';\nimport { EmbedOptionProvider } from '@blocksuite/affine-shared/services';\nimport { BlockService } from '@blocksuite/block-std';\n\nimport { LinkPreviewer } from '../_common/embed-block-helper/index.js';\nimport { githubUrlRegex } from './embed-github-model.js';\nimport { queryEmbedGithubApiData, queryEmbedGithubData } from './utils.js';\n\nexport class EmbedGithubBlockService extends BlockService {\n  static override readonly flavour = EmbedGithubBlockSchema.model.flavour;\n\n  private static readonly linkPreviewer = new LinkPreviewer();\n\n  static setLinkPreviewEndpoint =\n    EmbedGithubBlockService.linkPreviewer.setEndpoint;\n\n  queryApiData = (embedGithubModel: EmbedGithubModel, signal?: AbortSignal) => {\n    return queryEmbedGithubApiData(embedGithubModel, signal);\n  };\n\n  queryUrlData = (embedGithubModel: EmbedGithubModel, signal?: AbortSignal) => {\n    return queryEmbedGithubData(\n      embedGithubModel,\n      EmbedGithubBlockService.linkPreviewer,\n      signal\n    );\n  };\n\n  override mounted() {\n    super.mounted();\n\n    this.std.get(EmbedOptionProvider).registerEmbedBlockOptions({\n      flavour: this.flavour,\n      urlRegex: githubUrlRegex,\n      styles: EmbedGithubStyles,\n      viewType: 'card',\n    });\n  }\n}\n"]}