{"version":3,"file":"range-conversion.js","sourceRoot":"","sources":["../../src/utils/range-conversion.ts"],"names":[],"mappings":"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","sourcesContent":["import type * as Y from 'yjs';\n\nimport { LumenSuiteError, ErrorCode } from '@lumensuite/global/exceptions';\n\nimport type { InlineRange } from '../types.js';\n\nimport { VElement } from '../components/v-element.js';\nimport { isInEmbedElement } from './embed.js';\nimport {\n  nativePointToTextPoint,\n  textPointToDomPoint,\n} from './point-conversion.js';\nimport { calculateTextLength, getTextNodesFromElement } from './text.js';\n\ntype InlineRangeRunnerContext = {\n  rootElement: HTMLElement;\n  range: Range;\n  yText: Y.Text;\n  startNode: Node | null;\n  startOffset: number;\n  startText: Text;\n  startTextOffset: number;\n  endNode: Node | null;\n  endOffset: number;\n  endText: Text;\n  endTextOffset: number;\n};\n\ntype Predict = (context: InlineRangeRunnerContext) => boolean;\ntype Handler = (context: InlineRangeRunnerContext) => InlineRange | null;\n\nconst rangeHasAnchorAndFocus: Predict = ({\n  rootElement,\n  startText,\n  endText,\n}) => {\n  return rootElement.contains(startText) && rootElement.contains(endText);\n};\n\nconst rangeHasAnchorAndFocusHandler: Handler = ({\n  rootElement,\n  startText,\n  endText,\n  startTextOffset,\n  endTextOffset,\n}) => {\n  const anchorDomPoint = textPointToDomPoint(\n    startText,\n    startTextOffset,\n    rootElement\n  );\n  const focusDomPoint = textPointToDomPoint(\n    endText,\n    endTextOffset,\n    rootElement\n  );\n\n  if (!anchorDomPoint || !focusDomPoint) {\n    return null;\n  }\n\n  return {\n    index: Math.min(anchorDomPoint.index, focusDomPoint.index),\n    length: Math.abs(anchorDomPoint.index - focusDomPoint.index),\n  };\n};\n\nconst rangeOnlyHasFocus: Predict = ({ rootElement, startText, endText }) => {\n  return !rootElement.contains(startText) && rootElement.contains(endText);\n};\n\nconst rangeOnlyHasFocusHandler: Handler = ({\n  rootElement,\n  endText,\n  endTextOffset,\n}) => {\n  const focusDomPoint = textPointToDomPoint(\n    endText,\n    endTextOffset,\n    rootElement\n  );\n\n  if (!focusDomPoint) {\n    return null;\n  }\n\n  return {\n    index: 0,\n    length: focusDomPoint.index,\n  };\n};\n\nconst rangeOnlyHasAnchor: Predict = ({ rootElement, startText, endText }) => {\n  return rootElement.contains(startText) && !rootElement.contains(endText);\n};\n\nconst rangeOnlyHasAnchorHandler: Handler = ({\n  yText,\n  rootElement,\n  startText,\n  startTextOffset,\n}) => {\n  const startDomPoint = textPointToDomPoint(\n    startText,\n    startTextOffset,\n    rootElement\n  );\n\n  if (!startDomPoint) {\n    return null;\n  }\n\n  return {\n    index: startDomPoint.index,\n    length: yText.length - startDomPoint.index,\n  };\n};\n\nconst rangeHasNoAnchorAndFocus: Predict = ({\n  rootElement,\n  startText,\n  endText,\n  range,\n}) => {\n  return (\n    !rootElement.contains(startText) &&\n    !rootElement.contains(endText) &&\n    range.intersectsNode(rootElement)\n  );\n};\n\nconst rangeHasNoAnchorAndFocusHandler: Handler = ({ yText }) => {\n  return {\n    index: 0,\n    length: yText.length,\n  };\n};\n\nconst buildContext = (\n  range: Range,\n  rootElement: HTMLElement,\n  yText: Y.Text\n): InlineRangeRunnerContext | null => {\n  const { startContainer, startOffset, endContainer, endOffset } = range;\n\n  const startTextPoint = nativePointToTextPoint(startContainer, startOffset);\n  const endTextPoint = nativePointToTextPoint(endContainer, endOffset);\n\n  if (!startTextPoint || !endTextPoint) {\n    return null;\n  }\n\n  const [startText, startTextOffset] = startTextPoint;\n  const [endText, endTextOffset] = endTextPoint;\n\n  return {\n    rootElement,\n    range,\n    yText,\n    startNode: startContainer,\n    startOffset,\n    endNode: endContainer,\n    endOffset,\n    startText,\n    startTextOffset,\n    endText,\n    endTextOffset,\n  };\n};\n\n/**\n * calculate the inline range from dom selection for **this Editor**\n * there are three cases when the inline range of this Editor is not null:\n * (In the following, \"|\" mean anchor and focus, each line is a separate Editor)\n * 1. anchor and focus are in this Editor\n *    aaaaaa\n *    b|bbbb|b\n *    cccccc\n *    the inline range of second Editor is {index: 1, length: 4}, the others are null\n * 2. anchor and focus one in this Editor, one in another Editor\n *    aaa|aaa    aaaaaa\n *    bbbbb|b or bbbbb|b\n *    cccccc     cc|cccc\n *    2.1\n *        the inline range of first Editor is {index: 3, length: 3}, the second is {index: 0, length: 5},\n *        the third is null\n *    2.2\n *        the inline range of first Editor is null, the second is {index: 5, length: 1},\n *        the third is {index: 0, length: 2}\n * 3. anchor and focus are in another Editor\n *    aa|aaaa\n *    bbbbbb\n *    cccc|cc\n *    the inline range of first Editor is {index: 2, length: 4},\n *    the second is {index: 0, length: 6}, the third is {index: 0, length: 4}\n */\nexport function domRangeToInlineRange(\n  range: Range,\n  rootElement: HTMLElement,\n  yText: Y.Text\n): InlineRange | null {\n  const context = buildContext(range, rootElement, yText);\n\n  if (!context) return null;\n\n  // handle embed\n  if (\n    context.startNode &&\n    context.startNode === context.endNode &&\n    isInEmbedElement(context.startNode)\n  ) {\n    const anchorDomPoint = textPointToDomPoint(\n      context.startText,\n      context.startTextOffset,\n      rootElement\n    );\n\n    if (anchorDomPoint) {\n      return {\n        index: anchorDomPoint.index,\n        length: 1,\n      };\n    }\n  }\n\n  // case 1\n  if (rangeHasAnchorAndFocus(context)) {\n    return rangeHasAnchorAndFocusHandler(context);\n  }\n\n  // case 2.1\n  if (rangeOnlyHasFocus(context)) {\n    return rangeOnlyHasFocusHandler(context);\n  }\n\n  // case 2.2\n  if (rangeOnlyHasAnchor(context)) {\n    return rangeOnlyHasAnchorHandler(context);\n  }\n\n  // case 3\n  if (rangeHasNoAnchorAndFocus(context)) {\n    return rangeHasNoAnchorAndFocusHandler(context);\n  }\n\n  return null;\n}\n\n/**\n * calculate the dom selection from inline range for **this Editor**\n */\nexport function inlineRangeToDomRange(\n  rootElement: HTMLElement,\n  inlineRange: InlineRange\n): Range | null {\n  const lineElements = Array.from(rootElement.querySelectorAll('v-line'));\n\n  // calculate anchorNode and focusNode\n  let startText: Text | null = null;\n  let endText: Text | null = null;\n  let anchorOffset = 0;\n  let focusOffset = 0;\n  let index = 0;\n\n  for (let i = 0; i < lineElements.length; i++) {\n    if (startText && endText) {\n      break;\n    }\n\n    const texts = getTextNodesFromElement(lineElements[i]);\n    if (texts.length === 0) {\n      throw new LumenSuiteError(\n        ErrorCode.InlineEditorError,\n        'text node in v-text not found'\n      );\n    }\n\n    for (const text of texts) {\n      const textLength = calculateTextLength(text);\n\n      if (!startText && index + textLength >= inlineRange.index) {\n        startText = text;\n        anchorOffset = inlineRange.index - index;\n      }\n      if (\n        !endText &&\n        index + textLength >= inlineRange.index + inlineRange.length\n      ) {\n        endText = text;\n        focusOffset = inlineRange.index + inlineRange.length - index;\n      }\n\n      if (startText && endText) {\n        break;\n      }\n\n      index += textLength;\n    }\n\n    // the one because of the line break\n    index += 1;\n  }\n\n  if (!startText || !endText) {\n    return null;\n  }\n\n  if (isInEmbedElement(startText)) {\n    const anchorVElement = startText.parentElement?.closest('v-element');\n    if (!anchorVElement) {\n      throw new LumenSuiteError(\n        ErrorCode.InlineEditorError,\n        'failed to find vElement for a text note in an embed element'\n      );\n    }\n    const nextSibling = anchorVElement.nextElementSibling;\n    if (!nextSibling) {\n      throw new LumenSuiteError(\n        ErrorCode.InlineEditorError,\n        'failed to find nextSibling sibling of an embed element'\n      );\n    }\n\n    const texts = getTextNodesFromElement(nextSibling);\n    if (texts.length === 0) {\n      throw new LumenSuiteError(\n        ErrorCode.InlineEditorError,\n        'text node in v-text not found'\n      );\n    }\n    if (nextSibling instanceof VElement) {\n      startText = texts[texts.length - 1];\n      anchorOffset = calculateTextLength(startText);\n    } else {\n      // nextSibling is a gap\n      startText = texts[0];\n      anchorOffset = 0;\n    }\n  }\n  if (isInEmbedElement(endText)) {\n    const focusVElement = endText.parentElement?.closest('v-element');\n    if (!focusVElement) {\n      throw new LumenSuiteError(\n        ErrorCode.InlineEditorError,\n        'failed to find vElement for a text note in an embed element'\n      );\n    }\n    const nextSibling = focusVElement.nextElementSibling;\n    if (!nextSibling) {\n      throw new LumenSuiteError(\n        ErrorCode.InlineEditorError,\n        'failed to find nextSibling sibling of an embed element'\n      );\n    }\n\n    const texts = getTextNodesFromElement(nextSibling);\n    if (texts.length === 0) {\n      throw new LumenSuiteError(\n        ErrorCode.InlineEditorError,\n        'text node in v-text not found'\n      );\n    }\n    endText = texts[0];\n    focusOffset = 0;\n  }\n\n  const range = document.createRange();\n  range.setStart(startText, anchorOffset);\n  range.setEnd(endText, focusOffset);\n\n  return range;\n}\n"]}