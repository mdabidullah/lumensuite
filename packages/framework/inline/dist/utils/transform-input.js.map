{"version":3,"file":"transform-input.js","sourceRoot":"","sources":["../../src/utils/transform-input.ts"],"names":[],"mappings":"AAIA,SAAS,gBAAgB,CACvB,WAAwB,EACxB,IAAmB,EACnB,MAAoB,EACpB,UAA0B;IAE1B,IAAI,CAAC,IAAI;QAAE,OAAO;IAClB,MAAM,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;IACjD,MAAM,CAAC,cAAc,CAAC;QACpB,KAAK,EAAE,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM;QACtC,MAAM,EAAE,CAAC;KACV,CAAC,CAAC;AACL,CAAC;AAED,SAAS,2BAA2B,CAClC,WAAwB,EACxB,IAAmB,EACnB,MAAoB,EACpB,UAA0B;IAE1B,MAAM,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;QAC9D,UAAU,GAAG,EAAE,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,GAAG,UAAU,EAAE,CAAC;IAC9D,CAAC,CAAC,CAAC;IACH,IAAI,IAAI,EAAE,CAAC;QACT,MAAM,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;QACjD,MAAM,CAAC,cAAc,CAAC;YACpB,KAAK,EAAE,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM;YACtC,MAAM,EAAE,CAAC;SACV,CAAC,CAAC;IACL,CAAC;AACH,CAAC;AAED,SAAS,qBAAqB,CAAC,WAAwB,EAAE,MAAoB;IAC3E,MAAM,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;IACpC,MAAM,CAAC,cAAc,CAAC;QACpB,KAAK,EAAE,WAAW,CAAC,KAAK,GAAG,CAAC;QAC5B,MAAM,EAAE,CAAC;KACV,CAAC,CAAC;AACL,CAAC;AAED,SAAS,YAAY,CAAC,WAAwB,EAAE,MAAoB;IAClE,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;IAC/B,MAAM,CAAC,cAAc,CAAC;QACpB,KAAK,EAAE,WAAW,CAAC,KAAK;QACxB,MAAM,EAAE,CAAC;KACV,CAAC,CAAC;AACL,CAAC;AAED,MAAM,UAAU,cAAc,CAC5B,SAAiB,EACjB,IAAmB,EACnB,UAA0B,EAC1B,WAAwB,EACxB,MAAoB;IAEpB,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,WAAW,CAAC;QAAE,OAAO;IAEpD,IAAI,SAAS,KAAK,YAAY,EAAE,CAAC;QAC/B,gBAAgB,CAAC,WAAW,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;IAC1D,CAAC;SAAM,IACL,SAAS,KAAK,iBAAiB;QAC/B,SAAS,KAAK,iBAAiB,EAC/B,CAAC;QACD,qBAAqB,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;IAC7C,CAAC;SAAM,IAAI,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;QAC1C,YAAY,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;IACpC,CAAC;SAAM,IAAI,SAAS,KAAK,uBAAuB,EAAE,CAAC;QACjD,gBAAgB;QAChB,2BAA2B,CAAC,WAAW,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;IACrE,CAAC;SAAM,CAAC;QACN,OAAO;IACT,CAAC;AACH,CAAC","sourcesContent":["import type { InlineEditor } from '../inline-editor.js';\nimport type { InlineRange } from '../types.js';\nimport type { BaseTextAttributes } from './base-attributes.js';\n\nfunction handleInsertText<TextAttributes extends BaseTextAttributes>(\n  inlineRange: InlineRange,\n  data: string | null,\n  editor: InlineEditor,\n  attributes: TextAttributes\n) {\n  if (!data) return;\n  editor.insertText(inlineRange, data, attributes);\n  editor.setInlineRange({\n    index: inlineRange.index + data.length,\n    length: 0,\n  });\n}\n\nfunction handleInsertReplacementText<TextAttributes extends BaseTextAttributes>(\n  inlineRange: InlineRange,\n  data: string | null,\n  editor: InlineEditor,\n  attributes: TextAttributes\n) {\n  editor.getDeltasByInlineRange(inlineRange).forEach(deltaEntry => {\n    attributes = { ...deltaEntry[0].attributes, ...attributes };\n  });\n  if (data) {\n    editor.insertText(inlineRange, data, attributes);\n    editor.setInlineRange({\n      index: inlineRange.index + data.length,\n      length: 0,\n    });\n  }\n}\n\nfunction handleInsertParagraph(inlineRange: InlineRange, editor: InlineEditor) {\n  editor.insertLineBreak(inlineRange);\n  editor.setInlineRange({\n    index: inlineRange.index + 1,\n    length: 0,\n  });\n}\n\nfunction handleDelete(inlineRange: InlineRange, editor: InlineEditor) {\n  editor.deleteText(inlineRange);\n  editor.setInlineRange({\n    index: inlineRange.index,\n    length: 0,\n  });\n}\n\nexport function transformInput<TextAttributes extends BaseTextAttributes>(\n  inputType: string,\n  data: string | null,\n  attributes: TextAttributes,\n  inlineRange: InlineRange,\n  editor: InlineEditor\n) {\n  if (!editor.isValidInlineRange(inlineRange)) return;\n\n  if (inputType === 'insertText') {\n    handleInsertText(inlineRange, data, editor, attributes);\n  } else if (\n    inputType === 'insertParagraph' ||\n    inputType === 'insertLineBreak'\n  ) {\n    handleInsertParagraph(inlineRange, editor);\n  } else if (inputType.startsWith('delete')) {\n    handleDelete(inlineRange, editor);\n  } else if (inputType === 'insertReplacementText') {\n    // Spell Checker\n    handleInsertReplacementText(inlineRange, data, editor, attributes);\n  } else {\n    return;\n  }\n}\n"]}