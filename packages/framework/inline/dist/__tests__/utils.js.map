{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/__tests__/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  DeltaInsert,\n  InlineEditor,\n  InlineRange,\n} from '@lumensuite/inline';\n\nimport { expect, type Page } from '@playwright/test';\n\nconst defaultPlaygroundURL = new URL(\n  `http://localhost:${process.env.CI ? 4173 : 5173}/`\n);\n\nexport async function type(page: Page, content: string) {\n  await page.keyboard.type(content, { delay: 50 });\n}\n\nexport async function press(page: Page, content: string) {\n  await page.keyboard.press(content, { delay: 50 });\n  await page.waitForTimeout(50);\n}\n\nexport async function enterInlineEditorPlayground(page: Page) {\n  const url = new URL('examples/inline/index.html', defaultPlaygroundURL);\n  await page.goto(url.toString());\n}\n\nexport async function focusInlineRichText(\n  page: Page,\n  index = 0\n): Promise<void> {\n  await page.evaluate(index => {\n    const richTexts = document\n      .querySelector('test-page')\n      ?.querySelectorAll('test-rich-text');\n\n    if (!richTexts) {\n      throw new Error('Cannot find test-rich-text');\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (richTexts[index] as any).inlineEditor.focusEnd();\n  }, index);\n}\n\nexport async function getDeltaFromInlineRichText(\n  page: Page,\n  index = 0\n): Promise<DeltaInsert> {\n  await page.waitForTimeout(100);\n  return page.evaluate(index => {\n    const richTexts = document\n      .querySelector('test-page')\n      ?.querySelectorAll('test-rich-text');\n\n    if (!richTexts) {\n      throw new Error('Cannot find test-rich-text');\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const editor = (richTexts[index] as any).inlineEditor as InlineEditor;\n    return editor.yText.toDelta();\n  }, index);\n}\n\nexport async function getInlineRangeFromInlineRichText(\n  page: Page,\n  index = 0\n): Promise<InlineRange | null> {\n  await page.waitForTimeout(100);\n  return page.evaluate(index => {\n    const richTexts = document\n      .querySelector('test-page')\n      ?.querySelectorAll('test-rich-text');\n\n    if (!richTexts) {\n      throw new Error('Cannot find test-rich-text');\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const editor = (richTexts[index] as any).inlineEditor as InlineEditor;\n    return editor.getInlineRange();\n  }, index);\n}\n\nexport async function setInlineRichTextRange(\n  page: Page,\n  inlineRange: InlineRange,\n  index = 0\n): Promise<void> {\n  await page.evaluate(\n    ([inlineRange, index]) => {\n      const richTexts = document\n        .querySelector('test-page')\n        ?.querySelectorAll('test-rich-text');\n\n      if (!richTexts) {\n        throw new Error('Cannot find test-rich-text');\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const editor = (richTexts[index as number] as any)\n        .inlineEditor as InlineEditor;\n      editor.setInlineRange(inlineRange as InlineRange);\n    },\n    [inlineRange, index]\n  );\n}\n\nexport async function getInlineRichTextLine(\n  page: Page,\n  index: number,\n  i = 0\n): Promise<readonly [string, number]> {\n  return page.evaluate(\n    ([index, i]) => {\n      const richTexts = document.querySelectorAll('test-rich-text');\n\n      if (!richTexts) {\n        throw new Error('Cannot find test-rich-text');\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const editor = (richTexts[i] as any).inlineEditor as InlineEditor;\n      const result = editor.getLine(index);\n      if (!result) {\n        throw new Error('Cannot find line');\n      }\n      const { line, rangeIndexRelatedToLine } = result;\n      return [line.vTextContent, rangeIndexRelatedToLine] as const;\n    },\n    [index, i]\n  );\n}\n\nexport async function getInlineRangeIndexRect(\n  page: Page,\n  [richTextIndex, inlineIndex]: [number, number],\n  coordOffSet: { x: number; y: number } = { x: 0, y: 0 }\n) {\n  const rect = await page.evaluate(\n    ({ richTextIndex, inlineIndex: vIndex, coordOffSet }) => {\n      const richText = document.querySelectorAll('test-rich-text')[\n        richTextIndex\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ] as any;\n      const domRange = richText.inlineEditor.toDomRange({\n        index: vIndex,\n        length: 0,\n      });\n      const pointBound = domRange.getBoundingClientRect();\n      return {\n        x: pointBound.left + coordOffSet.x,\n        y: pointBound.top + pointBound.height / 2 + coordOffSet.y,\n      };\n    },\n    {\n      richTextIndex,\n      inlineIndex,\n      coordOffSet,\n    }\n  );\n  return rect;\n}\n\nexport async function assertSelection(\n  page: Page,\n  richTextIndex: number,\n  rangeIndex: number,\n  rangeLength = 0\n) {\n  const actual = await page.evaluate(\n    ([richTextIndex]) => {\n      const richText =\n        document?.querySelectorAll('test-rich-text')[richTextIndex];\n      // @ts-ignore\n      const inlineEditor = richText.inlineEditor;\n      return inlineEditor?.getInlineRange();\n    },\n    [richTextIndex]\n  );\n  expect(actual).toEqual({ index: rangeIndex, length: rangeLength });\n}\n"]}