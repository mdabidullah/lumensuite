{"version":3,"file":"types.js","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { TemplateResult } from 'lit';\n\nimport type { InlineEditor } from './inline-editor.js';\nimport type { BaseTextAttributes } from './utils/index.js';\n\nexport type DeltaInsert<\n  TextAttributes extends BaseTextAttributes = BaseTextAttributes,\n> = {\n  insert: string;\n  attributes?: TextAttributes;\n};\n\nexport type AttributeRenderer<\n  TextAttributes extends BaseTextAttributes = BaseTextAttributes,\n> = (props: {\n  editor: InlineEditor<TextAttributes>;\n  delta: DeltaInsert<TextAttributes>;\n  selected: boolean;\n  startOffset: number;\n  endOffset: number;\n  lineIndex: number;\n}) => TemplateResult<1>;\n\nexport interface InlineRange {\n  index: number;\n  length: number;\n}\n\nexport type InlineRangeUpdatedProp = [range: InlineRange | null, sync: boolean];\n\nexport type DeltaEntry<\n  TextAttributes extends BaseTextAttributes = BaseTextAttributes,\n> = [delta: DeltaInsert<TextAttributes>, range: InlineRange];\n\n// corresponding to [anchorNode/focusNode, anchorOffset/focusOffset]\nexport type NativePoint = readonly [node: Node, offset: number];\n// the number here is relative to the text node\nexport type TextPoint = readonly [text: Text, offset: number];\n\nexport interface DomPoint {\n  // which text node this point is in\n  text: Text;\n  // the index here is relative to the Editor, not text node\n  index: number;\n}\n"]}