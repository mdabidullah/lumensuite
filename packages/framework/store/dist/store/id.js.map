{"version":3,"file":"id.js","sourceRoot":"","sources":["../../src/store/id.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,8BAA8B,EAC9B,wCAAwC,EAExC,MAAM,EACN,MAAM,GACP,MAAM,0BAA0B,CAAC;AAElC,MAAM,CAAN,IAAY,eAoBX;AApBD,WAAY,eAAe;IACzB;;;;OAIG;IACH,kDAA+B,CAAA;IAE/B;;;;OAIG;IACH,sEAAmD,CAAA;IAEnD;;OAEG;IACH,oCAAiB,CAAA;IACjB,oCAAiB,CAAA;AACnB,CAAC,EApBW,eAAe,KAAf,eAAe,QAoB1B;AAED,MAAM,UAAU,eAAe,CAC7B,WAAsD,EACtD,QAAgB;IAEhB,IAAI,OAAO,WAAW,KAAK,UAAU,EAAE,CAAC;QACtC,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,QAAQ,WAAW,EAAE,CAAC;QACpB,KAAK,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC;YACnC,OAAO,8BAA8B,EAAE,CAAC;QAC1C,CAAC;QACD,KAAK,eAAe,CAAC,uBAAuB,CAAC,CAAC,CAAC;YAC7C,OAAO,wCAAwC,CAAC,QAAQ,CAAC,CAAC;QAC5D,CAAC;QACD,KAAK,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;YAC5B,OAAO,MAAM,CAAC;QAChB,CAAC;QACD,KAAK,eAAe,CAAC,MAAM,CAAC;QAC5B,OAAO,CAAC,CAAC,CAAC;YACR,OAAO,MAAM,CAAC;QAChB,CAAC;IACH,CAAC;AACH,CAAC","sourcesContent":["import {\n  createAutoIncrementIdGenerator,\n  createAutoIncrementIdGeneratorByClientId,\n  type IdGenerator,\n  nanoid,\n  uuidv4,\n} from '../utils/id-generator.js';\n\nexport enum IdGeneratorType {\n  /**\n   * **Warning**: This generator mode will crash the collaborative feature\n   *  if multiple clients are adding new blocks.\n   * Use this mode only if you know what you're doing.\n   */\n  AutoIncrement = 'autoIncrement',\n\n  /**\n   * This generator is trying to fix the real-time collaboration on debug mode.\n   * This will make generator predictable and won't make conflict\n   * @link https://docs.yjs.dev/api/faq#i-get-a-new-clientid-for-every-session-is-there-a-way-to-make-it-static-for-a-peer-accessing-the-doc\n   */\n  AutoIncrementByClientId = 'autoIncrementByClientId',\n\n  /**\n   * Default mode, generator for the unpredictable id\n   */\n  NanoID = 'nanoID',\n  UUIDv4 = 'uuidV4',\n}\n\nexport function pickIdGenerator(\n  idGenerator: IdGeneratorType | IdGenerator | undefined,\n  clientId: number\n) {\n  if (typeof idGenerator === 'function') {\n    return idGenerator;\n  }\n\n  switch (idGenerator) {\n    case IdGeneratorType.AutoIncrement: {\n      return createAutoIncrementIdGenerator();\n    }\n    case IdGeneratorType.AutoIncrementByClientId: {\n      return createAutoIncrementIdGeneratorByClientId(clientId);\n    }\n    case IdGeneratorType.UUIDv4: {\n      return uuidv4;\n    }\n    case IdGeneratorType.NanoID:\n    default: {\n      return nanoid;\n    }\n  }\n}\n"]}