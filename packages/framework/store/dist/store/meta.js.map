{"version":3,"file":"meta.js","sourceRoot":"","sources":["../../src/store/meta.ts"],"names":[],"mappings":"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","sourcesContent":["import type * as Y from 'yjs';\n\nimport { BlockSuiteError, ErrorCode } from '@blocksuite/global/exceptions';\nimport { Slot } from '@blocksuite/global/utils';\n\nimport type { BlockSuiteDoc } from '../yjs/index.js';\nimport type { DocCollection } from './collection.js';\n\nimport { COLLECTION_VERSION, PAGE_VERSION } from '../consts.js';\n\n// please use `declare module '@blocksuite/store'` to extend this interface\nexport interface DocMeta {\n  id: string;\n  title: string;\n  tags: string[];\n  createDate: number;\n  updatedDate?: number;\n}\n\nexport type Tag = {\n  id: string;\n  value: string;\n  color: string;\n};\nexport type DocsPropertiesMeta = {\n  tags?: {\n    options: Tag[];\n  };\n};\nexport type DocCollectionMetaState = {\n  pages?: unknown[];\n  properties?: DocsPropertiesMeta;\n  workspaceVersion?: number;\n  pageVersion?: number;\n  blockVersions?: Record<string, number>;\n  name?: string;\n  avatar?: string;\n};\n\nexport class DocCollectionMeta {\n  private _handleDocCollectionMetaEvents = (\n    events: Y.YEvent<Y.Array<unknown> | Y.Text | Y.Map<unknown>>[]\n  ) => {\n    events.forEach(e => {\n      const hasKey = (k: string) =>\n        e.target === this._yMap && e.changes.keys.has(k);\n\n      if (\n        e.target === this.yDocs ||\n        e.target.parent === this.yDocs ||\n        hasKey('pages')\n      ) {\n        this._handleDocMetaEvent();\n      }\n\n      if (hasKey('name') || hasKey('avatar')) {\n        this._handleCommonFieldsEvent();\n      }\n    });\n  };\n\n  private _prevDocs = new Set<string>();\n\n  protected readonly _proxy: DocCollectionMetaState;\n\n  protected readonly _yMap: Y.Map<\n    DocCollectionMetaState[keyof DocCollectionMetaState]\n  >;\n\n  commonFieldsUpdated = new Slot();\n\n  readonly doc: BlockSuiteDoc;\n\n  docMetaAdded = new Slot<string>();\n\n  docMetaRemoved = new Slot<string>();\n\n  docMetaUpdated = new Slot();\n\n  readonly id: string = 'meta';\n\n  get avatar() {\n    return this._proxy.avatar;\n  }\n\n  get blockVersions() {\n    return this._proxy.blockVersions;\n  }\n\n  get docMetas() {\n    if (!this._proxy.pages) {\n      return [] as DocMeta[];\n    }\n    return this._proxy.pages as DocMeta[];\n  }\n\n  get docs() {\n    return this._proxy.pages;\n  }\n\n  get hasVersion() {\n    if (!this.blockVersions || !this.pageVersion || !this.workspaceVersion) {\n      return false;\n    }\n    return Object.keys(this.blockVersions).length > 0;\n  }\n\n  get name() {\n    return this._proxy.name;\n  }\n\n  get pageVersion() {\n    return this._proxy.pageVersion;\n  }\n\n  get properties(): DocsPropertiesMeta {\n    const meta = this._proxy.properties;\n    if (!meta) {\n      return {\n        tags: {\n          options: [],\n        },\n      };\n    }\n    return meta;\n  }\n\n  get workspaceVersion() {\n    return this._proxy.workspaceVersion;\n  }\n\n  get yDocs() {\n    return this._yMap.get('pages') as unknown as Y.Array<unknown>;\n  }\n\n  constructor(doc: BlockSuiteDoc) {\n    this.doc = doc;\n    this._yMap = doc.getMap(this.id);\n    this._proxy = doc.getMapProxy<string, DocCollectionMetaState>(this.id);\n    this._yMap.observeDeep(this._handleDocCollectionMetaEvents);\n  }\n\n  private _handleCommonFieldsEvent() {\n    this.commonFieldsUpdated.emit();\n  }\n\n  private _handleDocMetaEvent() {\n    const { docMetas, _prevDocs } = this;\n\n    const newDocs = new Set<string>();\n\n    docMetas.forEach(docMeta => {\n      if (!_prevDocs.has(docMeta.id)) {\n        this.docMetaAdded.emit(docMeta.id);\n      }\n      newDocs.add(docMeta.id);\n    });\n\n    _prevDocs.forEach(prevDocId => {\n      const isRemoved = newDocs.has(prevDocId) === false;\n      if (isRemoved) {\n        this.docMetaRemoved.emit(prevDocId);\n      }\n    });\n\n    this._prevDocs = newDocs;\n\n    this.docMetaUpdated.emit();\n  }\n\n  addDocMeta(doc: DocMeta, index?: number) {\n    this.doc.transact(() => {\n      if (!this.docs) {\n        return;\n      }\n      const docs = this.docs as unknown[];\n      if (index === undefined) {\n        docs.push(doc);\n      } else {\n        docs.splice(index, 0, doc);\n      }\n    }, this.doc.clientID);\n  }\n\n  getDocMeta(id: string) {\n    return this.docMetas.find(doc => doc.id === id);\n  }\n\n  initialize() {\n    if (!this._proxy.pages) {\n      this._proxy.pages = [];\n    }\n  }\n\n  removeDocMeta(id: string) {\n    // you cannot delete a doc if there's no doc\n    if (!this.docs) {\n      return;\n    }\n\n    const docMeta = this.docMetas;\n    const index = docMeta.findIndex((doc: DocMeta) => id === doc.id);\n    if (index === -1) {\n      return;\n    }\n    this.doc.transact(() => {\n      if (!this.docs) {\n        return;\n      }\n      this.docs.splice(index, 1);\n    }, this.doc.clientID);\n  }\n\n  setAvatar(avatar: string) {\n    this.doc.transact(() => {\n      this._proxy.avatar = avatar;\n    }, this.doc.clientID);\n  }\n\n  setDocMeta(id: string, props: Partial<DocMeta>) {\n    const docs = (this.docs as DocMeta[]) ?? [];\n    const index = docs.findIndex((doc: DocMeta) => id === doc.id);\n\n    this.doc.transact(() => {\n      if (!this.docs) {\n        return;\n      }\n      if (index === -1) return;\n\n      const doc = this.docs[index] as Record<string, unknown>;\n      Object.entries(props).forEach(([key, value]) => {\n        doc[key] = value;\n      });\n    }, this.doc.clientID);\n  }\n\n  setName(name: string) {\n    this.doc.transact(() => {\n      this._proxy.name = name;\n    }, this.doc.clientID);\n  }\n\n  setProperties(meta: DocsPropertiesMeta) {\n    this._proxy.properties = meta;\n    this.docMetaUpdated.emit();\n  }\n\n  updateVersion(collection: DocCollection) {\n    this._proxy.workspaceVersion = COLLECTION_VERSION;\n\n    this._proxy.pageVersion = PAGE_VERSION;\n\n    const _versions: Record<string, number> = {};\n    collection.schema.flavourSchemaMap.forEach((schema, flavour) => {\n      _versions[flavour] = schema.version;\n    });\n    this._proxy.blockVersions = _versions;\n  }\n\n  /**\n   * @deprecated Only used for legacy doc version validation\n   */\n  validateVersion(collection: DocCollection) {\n    const workspaceVersion = this._proxy.workspaceVersion;\n    if (!workspaceVersion) {\n      throw new BlockSuiteError(\n        ErrorCode.DocCollectionError,\n        'Invalid workspace data, workspace version is missing. Please make sure the data is valid.'\n      );\n    }\n    if (workspaceVersion < COLLECTION_VERSION) {\n      throw new BlockSuiteError(\n        ErrorCode.DocCollectionError,\n        `Workspace version ${workspaceVersion} is outdated. Please upgrade the editor.`\n      );\n    }\n\n    const pageVersion = this._proxy.pageVersion;\n    if (!pageVersion) {\n      throw new BlockSuiteError(\n        ErrorCode.DocCollectionError,\n        'Invalid workspace data, page version is missing. Please make sure the data is valid.'\n      );\n    }\n    if (pageVersion < PAGE_VERSION) {\n      throw new BlockSuiteError(\n        ErrorCode.DocCollectionError,\n        `Doc version ${pageVersion} is outdated. Please upgrade the editor.`\n      );\n    }\n\n    const blockVersions = { ...this._proxy.blockVersions };\n    if (!blockVersions) {\n      throw new BlockSuiteError(\n        ErrorCode.DocCollectionError,\n        'Invalid workspace data, versions data is missing. Please make sure the data is valid'\n      );\n    }\n    const dataFlavours = Object.keys(blockVersions);\n    if (dataFlavours.length === 0) {\n      throw new BlockSuiteError(\n        ErrorCode.DocCollectionError,\n        'Invalid workspace data, missing versions field. Please make sure the data is valid.'\n      );\n    }\n\n    dataFlavours.forEach(dataFlavour => {\n      const dataVersion = blockVersions[dataFlavour] as number;\n      const editorVersion =\n        collection.schema.flavourSchemaMap.get(dataFlavour)?.version;\n      if (!editorVersion) {\n        throw new BlockSuiteError(\n          ErrorCode.DocCollectionError,\n          `Editor missing ${dataFlavour} flavour. Please make sure this block flavour is registered.`\n        );\n      } else if (dataVersion > editorVersion) {\n        throw new BlockSuiteError(\n          ErrorCode.DocCollectionError,\n          `Editor doesn't support ${dataFlavour}@${dataVersion}. Please upgrade the editor.`\n        );\n      } else if (dataVersion < editorVersion) {\n        throw new BlockSuiteError(\n          ErrorCode.DocCollectionError,\n          `In workspace data, the block flavour ${dataFlavour}@${dataVersion} is outdated. Please downgrade the editor or try data migration.`\n        );\n      }\n    });\n  }\n\n  /**\n   * @internal Only for doc initialization\n   */\n  writeVersion(collection: DocCollection) {\n    const { blockVersions, pageVersion, workspaceVersion } = this._proxy;\n\n    if (!workspaceVersion) {\n      this._proxy.workspaceVersion = COLLECTION_VERSION;\n    } else {\n      console.error('Workspace version is already set');\n    }\n\n    if (!pageVersion) {\n      this._proxy.pageVersion = PAGE_VERSION;\n    } else {\n      console.error('Doc version is already set');\n    }\n\n    if (!blockVersions) {\n      const _versions: Record<string, number> = {};\n      collection.schema.flavourSchemaMap.forEach((schema, flavour) => {\n        _versions[flavour] = schema.version;\n      });\n      this._proxy.blockVersions = _versions;\n    } else {\n      console.error('Block versions is already set');\n    }\n  }\n}\n"]}