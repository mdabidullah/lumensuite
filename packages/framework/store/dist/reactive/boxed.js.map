{"version":3,"file":"boxed.js","sourceRoot":"","sources":["../../src/reactive/boxed.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AAEzB,OAAO,EAAE,sBAAsB,EAAE,MAAM,cAAc,CAAC;AAItD,MAAM,OAAO,KAAK;aACT,SAAI,GAAG,CAAI,GAAa,EAAE,QAAwB,EAAY,EAAE;QACrE,OAAO,IAAI,KAAK,CAAI,GAAG,CAAC,GAAG,CAAC,OAAO,CAAM,EAAE,QAAQ,CAAC,CAAC;IACvD,CAAC,AAFU,CAET;aAEK,OAAE,GAAG,CAAC,KAAc,EAAkB,EAAE;QAC7C,OAAO,CACL,KAAK,YAAY,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,sBAAsB,CACvE,CAAC;IACJ,CAAC,AAJQ,CAIP;IAcF,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED,YAAY,KAAQ,EAAE,QAAwB;QAZ9C,aAAQ,GAAG,GAAG,EAAE;YACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAChC,CAAC,CAAC;QAEF,aAAQ,GAAG,CAAC,KAAQ,EAAE,EAAE;YACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACvC,CAAC,CAAC;QAOA,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IACE,KAAK,YAAY,CAAC,CAAC,GAAG;YACtB,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,sBAAsB,EAC5C,CAAC;YACD,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACpB,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,sBAA2B,CAAC,CAAC;YACnD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAChC,CAAC;QACD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE;YACzB,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,QAAuB;QAC1B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC5B,CAAC","sourcesContent":["import * as Y from 'yjs';\n\nimport { NATIVE_UNIQ_IDENTIFIER } from '../consts.js';\n\nexport type OnBoxedChange = (data: unknown) => void;\n\nexport class Boxed<T = unknown> {\n  static from = <T>(map: Y.Map<T>, onChange?: OnBoxedChange): Boxed<T> => {\n    return new Boxed<T>(map.get('value') as T, onChange);\n  };\n\n  static is = (value: unknown): value is Boxed => {\n    return (\n      value instanceof Y.Map && value.get('type') === NATIVE_UNIQ_IDENTIFIER\n    );\n  };\n\n  private readonly _map: Y.Map<T>;\n\n  private _onChange?: OnBoxedChange;\n\n  getValue = () => {\n    return this._map.get('value');\n  };\n\n  setValue = (value: T) => {\n    return this._map.set('value', value);\n  };\n\n  get yMap() {\n    return this._map;\n  }\n\n  constructor(value: T, onChange?: OnBoxedChange) {\n    this._onChange = onChange;\n    if (\n      value instanceof Y.Map &&\n      value.get('type') === NATIVE_UNIQ_IDENTIFIER\n    ) {\n      this._map = value;\n    } else {\n      this._map = new Y.Map();\n      this._map.set('type', NATIVE_UNIQ_IDENTIFIER as T);\n      this._map.set('value', value);\n    }\n    this._map.observeDeep(() => {\n      this._onChange?.(this.getValue());\n    });\n  }\n\n  bind(onChange: OnBoxedChange) {\n    this._onChange = onChange;\n  }\n}\n"]}