{"version":3,"file":"text.js","sourceRoot":"","sources":["../../src/reactive/text.ts"],"names":[],"mappings":"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","sourcesContent":["import type { BaseTextAttributes, DeltaInsert } from '@lumensuite/inline';\n\nimport { LumenSuiteError, ErrorCode } from '@lumensuite/global/exceptions';\nimport { type Signal, signal } from '@preact/signals-core';\nimport * as Y from 'yjs';\n\nexport interface OptionalAttributes {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  attributes?: Record<string, any>;\n}\nexport type DeltaOperation = {\n  insert?: string;\n  delete?: number;\n  retain?: number;\n} & OptionalAttributes;\n\nexport type OnTextChange = (data: Y.Text) => void;\n\nexport class Text {\n  private _deltas$: Signal<DeltaOperation[]>;\n\n  private _length$: Signal<number>;\n\n  private _onChange?: OnTextChange;\n\n  private readonly _yText: Y.Text;\n\n  get deltas$() {\n    return this._deltas$;\n  }\n\n  get length() {\n    return this._length$.value;\n  }\n\n  get yText() {\n    return this._yText;\n  }\n\n  constructor(\n    input?: Y.Text | string | DeltaInsert[],\n    onChange?: OnTextChange\n  ) {\n    this._onChange = onChange;\n    let length = 0;\n    if (typeof input === 'string') {\n      const text = input.replaceAll('\\r\\n', '\\n');\n      length = text.length;\n      this._yText = new Y.Text(text);\n    } else if (input instanceof Y.Text) {\n      this._yText = input;\n      length = input.length;\n    } else if (input instanceof Array) {\n      for (const delta of input) {\n        if (delta.insert) {\n          delta.insert = delta.insert.replaceAll('\\r\\n', '\\n');\n          length += delta.insert.length;\n        }\n      }\n      const yText = new Y.Text();\n      yText.applyDelta(input);\n      this._yText = yText;\n    } else {\n      this._yText = new Y.Text();\n    }\n\n    this._length$ = signal(length);\n    this._deltas$ = signal([]);\n    this._yText.observe(() => {\n      this._length$.value = this._yText.length;\n      this._deltas$.value = this._yText.toDelta();\n      this._onChange?.(this._yText);\n    });\n  }\n\n  /**\n   * @deprecated\n   * This method will lose the change observer unless you pass the onChange callback.\n   */\n  static fromDelta(delta: DeltaOperation[], onChange?: OnTextChange) {\n    const result = new Y.Text();\n    result.applyDelta(delta);\n    return new Text(result, onChange);\n  }\n\n  private _transact(callback: () => void) {\n    const doc = this._yText.doc;\n    if (!doc) {\n      throw new LumenSuiteError(\n        ErrorCode.ReactiveProxyError,\n        'Failed to transact text! yText is not attached to a doc'\n      );\n    }\n    doc.transact(() => {\n      callback();\n    }, doc.clientID);\n  }\n\n  applyDelta(delta: DeltaOperation[]) {\n    this._transact(() => {\n      this._yText?.applyDelta(delta);\n    });\n  }\n\n  bind(onChange?: OnTextChange) {\n    this._onChange = onChange;\n  }\n\n  clear() {\n    if (!this._yText.length) {\n      return;\n    }\n    this._transact(() => {\n      this._yText.delete(0, this._yText.length);\n    });\n  }\n\n  clone() {\n    return new Text(this._yText.clone(), this._onChange);\n  }\n\n  delete(index: number, length: number) {\n    if (length === 0) {\n      return;\n    }\n    if (index < 0 || length < 0 || index + length > this._yText.length) {\n      throw new LumenSuiteError(\n        ErrorCode.ReactiveProxyError,\n        'Failed to delete text! Index or length out of range, index: ' +\n          index +\n          ', length: ' +\n          length +\n          ', text length: ' +\n          this._yText.length\n      );\n    }\n    this._transact(() => {\n      this._yText.delete(index, length);\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  format(index: number, length: number, format: any) {\n    if (length === 0) {\n      return;\n    }\n    if (index < 0 || length < 0 || index + length > this._yText.length) {\n      throw new LumenSuiteError(\n        ErrorCode.ReactiveProxyError,\n        'Failed to format text! Index or length out of range, index: ' +\n          index +\n          ', length: ' +\n          length +\n          ', text length: ' +\n          this._yText.length\n      );\n    }\n    this._transact(() => {\n      this._yText.format(index, length, format);\n    });\n  }\n\n  insert(content: string, index: number, attributes?: Record<string, unknown>) {\n    if (!content.length) {\n      return;\n    }\n    if (index < 0 || index > this._yText.length) {\n      throw new LumenSuiteError(\n        ErrorCode.ReactiveProxyError,\n        'Failed to insert text! Index or length out of range, index: ' +\n          index +\n          ', length: ' +\n          length +\n          ', text length: ' +\n          this._yText.length\n      );\n    }\n    this._transact(() => {\n      this._yText.insert(index, content, attributes);\n    });\n  }\n\n  join(other: Text) {\n    if (!other || !other.toDelta().length) {\n      return;\n    }\n    this._transact(() => {\n      const yOther = other._yText;\n      const delta: DeltaOperation[] = yOther.toDelta();\n      delta.unshift({ retain: this._yText.length });\n      this._yText.applyDelta(delta);\n    });\n  }\n\n  replace(\n    index: number,\n    length: number,\n    content: string,\n    attributes?: BaseTextAttributes\n  ) {\n    if (index < 0 || length < 0 || index + length > this._yText.length) {\n      throw new LumenSuiteError(\n        ErrorCode.ReactiveProxyError,\n        'Failed to replace text! The length of the text is' +\n          this._yText.length +\n          ', but you are trying to replace from' +\n          index +\n          'to' +\n          index +\n          length\n      );\n    }\n    this._transact(() => {\n      this._yText.delete(index, length);\n      this._yText.insert(index, content, attributes);\n    });\n  }\n\n  sliceToDelta(begin: number, end?: number): DeltaOperation[] {\n    const result: DeltaOperation[] = [];\n    if (end && begin >= end) {\n      return result;\n    }\n\n    if (begin === 0 && end === 0) {\n      return [];\n    }\n\n    const delta = this.toDelta();\n    if (begin < 1 && !end) {\n      return delta;\n    }\n\n    if (delta && delta instanceof Array) {\n      let charNum = 0;\n      for (let i = 0; i < delta.length; i++) {\n        const content = delta[i];\n        let contentText: string = content.insert || '';\n        const contentLen = contentText.length;\n\n        const isLastOp = end && charNum + contentLen > end;\n        const isFirstOp = charNum + contentLen > begin && result.length === 0;\n        if (isFirstOp && isLastOp) {\n          contentText = contentText.slice(begin - charNum, end - charNum);\n          result.push({\n            ...content,\n            insert: contentText,\n          });\n          break;\n        } else if (isFirstOp || isLastOp) {\n          contentText = isLastOp\n            ? contentText.slice(0, end - charNum)\n            : contentText.slice(begin - charNum);\n\n          result.push({\n            ...content,\n            insert: contentText,\n          });\n        } else {\n          result.length > 0 && result.push(content);\n        }\n\n        if (end && charNum + contentLen > end) {\n          break;\n        }\n\n        charNum = charNum + contentLen;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * NOTE: The string included in [index, index + length) will be deleted.\n   *\n   * Here are three cases for point position(index + length):\n   * [{insert: 'abc', ...}, {insert: 'def', ...}, {insert: 'ghi', ...}]\n   * 1. abc|de|fghi\n   *    left: [{insert: 'abc', ...}]\n   *    right: [{insert: 'f', ...}, {insert: 'ghi', ...}]\n   * 2. abc|def|ghi\n   *    left: [{insert: 'abc', ...}]\n   *    right: [{insert: 'ghi', ...}]\n   * 3. abc|defg|hi\n   *    left: [{insert: 'abc', ...}]\n   *    right: [{insert: 'hi', ...}]\n   */\n  split(index: number, length = 0): Text {\n    if (index < 0 || length < 0 || index + length > this._yText.length) {\n      throw new LumenSuiteError(\n        ErrorCode.ReactiveProxyError,\n        'Failed to split text! Index or length out of range, index: ' +\n          index +\n          ', length: ' +\n          length +\n          ', text length: ' +\n          this._yText.length\n      );\n    }\n    const deltas = this._yText.toDelta();\n    if (!(deltas instanceof Array)) {\n      throw new LumenSuiteError(\n        ErrorCode.ReactiveProxyError,\n        'This text cannot be split because we failed to get the deltas of it.'\n      );\n    }\n    let tmpIndex = 0;\n    const rightDeltas: DeltaInsert[] = [];\n    for (let i = 0; i < deltas.length; i++) {\n      const insert = deltas[i].insert;\n      if (typeof insert === 'string') {\n        if (tmpIndex + insert.length >= index + length) {\n          const insertRight = insert.slice(index + length - tmpIndex);\n          rightDeltas.push({\n            insert: insertRight,\n            attributes: deltas[i].attributes,\n          });\n          rightDeltas.push(...deltas.slice(i + 1));\n          break;\n        }\n        tmpIndex += insert.length;\n      } else {\n        throw new LumenSuiteError(\n          ErrorCode.ReactiveProxyError,\n          'This text cannot be split because it contains non-string insert.'\n        );\n      }\n    }\n\n    this.delete(index, this.length - index);\n    const rightYText = new Y.Text();\n    rightYText.applyDelta(rightDeltas);\n    const rightText = new Text(rightYText, this._onChange);\n\n    return rightText;\n  }\n\n  toDelta(): DeltaOperation[] {\n    return this._yText?.toDelta() || [];\n  }\n\n  toString() {\n    return this._yText?.toString() || '';\n  }\n}\n"]}