{"version":3,"file":"doc.unit.spec.js","sourceRoot":"","sources":["../../src/__tests__/doc.unit.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, test, vi } from 'vitest';\nimport * as Y from 'yjs';\n\nimport { Schema } from '../schema/index.js';\nimport {\n  BlockViewType,\n  DocCollection,\n  IdGeneratorType,\n} from '../store/index.js';\nimport {\n  DividerBlockSchema,\n  ListBlockSchema,\n  NoteBlockSchema,\n  ParagraphBlockSchema,\n  type RootBlockModel,\n  RootBlockSchema,\n} from './test-schema.js';\n\nconst BlockSchemas = [\n  RootBlockSchema,\n  ParagraphBlockSchema,\n  ListBlockSchema,\n  NoteBlockSchema,\n  DividerBlockSchema,\n];\n\nfunction createTestOptions() {\n  const idGenerator = IdGeneratorType.AutoIncrement;\n  const schema = new Schema();\n  schema.register(BlockSchemas);\n  return { id: 'test-collection', idGenerator, schema };\n}\n\ntest('trigger props updated', () => {\n  const options = createTestOptions();\n  const collection = new DocCollection(options);\n  collection.meta.initialize();\n\n  const doc = collection.createDoc({ id: 'home' });\n  doc.load();\n\n  doc.addBlock('affine:page');\n\n  const rootModel = doc.root as RootBlockModel;\n\n  expect(rootModel).not.toBeNull();\n\n  const onPropsUpdated = vi.fn();\n  rootModel.propsUpdated.on(onPropsUpdated);\n\n  const getColor = () =>\n    (rootModel.yBlock.get('prop:style') as Y.Map<string>).get('color');\n\n  const getItems = () => rootModel.yBlock.get('prop:items') as Y.Array<unknown>;\n  const getCount = () => rootModel.yBlock.get('prop:count');\n\n  rootModel.count = 1;\n  expect(onPropsUpdated).toBeCalledTimes(1);\n  expect(onPropsUpdated).toHaveBeenNthCalledWith(1, { key: 'count' });\n  expect(getCount()).toBe(1);\n\n  rootModel.count = 2;\n  expect(onPropsUpdated).toBeCalledTimes(2);\n  expect(onPropsUpdated).toHaveBeenNthCalledWith(2, { key: 'count' });\n  expect(getCount()).toBe(2);\n\n  rootModel.style.color = 'blue';\n  expect(onPropsUpdated).toBeCalledTimes(3);\n  expect(onPropsUpdated).toHaveBeenNthCalledWith(3, { key: 'style' });\n  expect(getColor()).toBe('blue');\n\n  rootModel.style = { color: 'red' };\n  expect(onPropsUpdated).toBeCalledTimes(4);\n  expect(onPropsUpdated).toHaveBeenNthCalledWith(4, { key: 'style' });\n  expect(getColor()).toBe('red');\n\n  rootModel.style.color = 'green';\n  expect(onPropsUpdated).toBeCalledTimes(5);\n  expect(onPropsUpdated).toHaveBeenNthCalledWith(5, { key: 'style' });\n  expect(getColor()).toBe('green');\n\n  rootModel.items.push(1);\n  expect(onPropsUpdated).toBeCalledTimes(6);\n  expect(onPropsUpdated).toHaveBeenNthCalledWith(6, { key: 'items' });\n  expect(getItems().get(0)).toBe(1);\n\n  rootModel.items[0] = { id: '1' };\n  expect(onPropsUpdated).toBeCalledTimes(7);\n  expect(onPropsUpdated).toHaveBeenNthCalledWith(7, { key: 'items' });\n  expect(getItems().get(0)).toBeInstanceOf(Y.Map);\n  expect((getItems().get(0) as Y.Map<unknown>).get('id')).toBe('1');\n});\n\ntest('stash and pop', () => {\n  const options = createTestOptions();\n  const collection = new DocCollection(options);\n  collection.meta.initialize();\n\n  const doc = collection.createDoc({ id: 'home' });\n  doc.load();\n\n  doc.addBlock('affine:page');\n\n  const rootModel = doc.root as RootBlockModel;\n\n  expect(rootModel).not.toBeNull();\n\n  const onPropsUpdated = vi.fn();\n  rootModel.propsUpdated.on(onPropsUpdated);\n\n  const getCount = () => rootModel.yBlock.get('prop:count');\n  const getColor = () =>\n    (rootModel.yBlock.get('prop:style') as Y.Map<string>).get('color');\n\n  rootModel.count = 1;\n  expect(onPropsUpdated).toBeCalledTimes(1);\n  expect(onPropsUpdated).toHaveBeenNthCalledWith(1, { key: 'count' });\n  expect(getCount()).toBe(1);\n\n  rootModel.stash('count');\n  rootModel.count = 2;\n  expect(onPropsUpdated).toBeCalledTimes(3);\n  expect(onPropsUpdated).toHaveBeenNthCalledWith(3, { key: 'count' });\n  expect(rootModel.yBlock.get('prop:count')).toBe(1);\n\n  rootModel.pop('count');\n  expect(onPropsUpdated).toBeCalledTimes(4);\n  expect(onPropsUpdated).toHaveBeenNthCalledWith(4, { key: 'count' });\n  expect(rootModel.yBlock.get('prop:count')).toBe(2);\n\n  rootModel.style.color = 'blue';\n  expect(getColor()).toBe('blue');\n  expect(onPropsUpdated).toBeCalledTimes(5);\n  expect(onPropsUpdated).toHaveBeenNthCalledWith(5, { key: 'style' });\n\n  rootModel.stash('style');\n  rootModel.style = {\n    color: 'red',\n  };\n  expect(getColor()).toBe('blue');\n  expect(onPropsUpdated).toBeCalledTimes(7);\n  expect(onPropsUpdated).toHaveBeenNthCalledWith(7, { key: 'style' });\n\n  rootModel.pop('style');\n  expect(getColor()).toBe('red');\n  expect(onPropsUpdated).toBeCalledTimes(8);\n  expect(onPropsUpdated).toHaveBeenNthCalledWith(8, { key: 'style' });\n\n  rootModel.stash('style');\n  expect(onPropsUpdated).toBeCalledTimes(9);\n  expect(onPropsUpdated).toHaveBeenNthCalledWith(9, { key: 'style' });\n\n  rootModel.style.color = 'green';\n  expect(onPropsUpdated).toBeCalledTimes(10);\n  expect(onPropsUpdated).toHaveBeenNthCalledWith(10, { key: 'style' });\n  expect(getColor()).toBe('red');\n\n  rootModel.pop('style');\n  expect(getColor()).toBe('green');\n  expect(onPropsUpdated).toBeCalledTimes(11);\n  expect(onPropsUpdated).toHaveBeenNthCalledWith(11, { key: 'style' });\n});\n\ntest('always get latest value in onChange', () => {\n  const options = createTestOptions();\n  const collection = new DocCollection(options);\n  collection.meta.initialize();\n\n  const doc = collection.createDoc({ id: 'home' });\n  doc.load();\n\n  doc.addBlock('affine:page');\n\n  const rootModel = doc.root as RootBlockModel;\n\n  expect(rootModel).not.toBeNull();\n\n  let value: unknown;\n  rootModel.propsUpdated.on(({ key }) => {\n    // @ts-ignore\n    value = rootModel[key];\n  });\n\n  rootModel.count = 1;\n  expect(value).toBe(1);\n\n  rootModel.stash('count');\n\n  rootModel.count = 2;\n  expect(value).toBe(2);\n\n  rootModel.pop('count');\n\n  rootModel.count = 3;\n  expect(value).toBe(3);\n\n  rootModel.style.color = 'blue';\n  expect(value).toEqual({ color: 'blue' });\n\n  rootModel.stash('style');\n  rootModel.style = { color: 'red' };\n  expect(value).toEqual({ color: 'red' });\n  rootModel.style.color = 'green';\n  expect(value).toEqual({ color: 'green' });\n\n  rootModel.pop('style');\n  rootModel.style.color = 'yellow';\n  expect(value).toEqual({ color: 'yellow' });\n});\n\ntest('query', () => {\n  const options = createTestOptions();\n  const collection = new DocCollection(options);\n  collection.meta.initialize();\n  const doc1 = collection.createDoc({ id: 'home' });\n  doc1.load();\n  const doc2 = collection.getDoc('home');\n\n  const doc3 = collection.getDoc('home', {\n    query: {\n      mode: 'loose',\n      match: [\n        {\n          flavour: 'affine:list',\n          viewType: BlockViewType.Hidden,\n        },\n      ],\n    },\n  });\n  expect(doc1).toBe(doc2);\n  expect(doc1).not.toBe(doc3);\n\n  const page = doc1.addBlock('affine:page');\n  const note = doc1.addBlock('affine:note', {}, page);\n  const paragraph1 = doc1.addBlock('affine:paragraph', {}, note);\n  const list1 = doc1.addBlock('affine:list' as never, {}, note);\n\n  expect(doc2?.getBlock(paragraph1)?.blockViewType).toBe(BlockViewType.Display);\n  expect(doc2?.getBlock(list1)?.blockViewType).toBe(BlockViewType.Display);\n  expect(doc3?.getBlock(list1)?.blockViewType).toBe(BlockViewType.Hidden);\n\n  const list2 = doc1.addBlock('affine:list' as never, {}, note);\n\n  expect(doc2?.getBlock(list2)?.blockViewType).toBe(BlockViewType.Display);\n  expect(doc3?.getBlock(list2)?.blockViewType).toBe(BlockViewType.Hidden);\n});\n\ntest('local readonly', () => {\n  const options = createTestOptions();\n  const collection = new DocCollection(options);\n  collection.meta.initialize();\n  const doc1 = collection.createDoc({ id: 'home' });\n  doc1.load();\n  const doc2 = collection.getDoc('home', { readonly: true });\n  const doc3 = collection.getDoc('home', { readonly: false });\n\n  expect(doc1.readonly).toBeFalsy();\n  expect(doc2?.readonly).toBeTruthy();\n  expect(doc3?.readonly).toBeFalsy();\n\n  collection.awarenessStore.setReadonly(doc1.blockCollection, true);\n\n  expect(doc1.readonly).toBeTruthy();\n  expect(doc2?.readonly).toBeTruthy();\n  expect(doc3?.readonly).toBeTruthy();\n\n  collection.awarenessStore.setReadonly(doc1.blockCollection, false);\n\n  expect(doc1.readonly).toBeFalsy();\n  expect(doc2?.readonly).toBeTruthy();\n  expect(doc3?.readonly).toBeFalsy();\n});\n"]}