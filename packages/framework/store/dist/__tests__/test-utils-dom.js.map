{"version":3,"file":"test-utils-dom.js","sourceRoot":"","sources":["../../src/__tests__/test-utils-dom.ts"],"names":[],"mappings":"AAgBA,MAAM,UAAU,GAAe;IAC7B,OAAO,EAAE,IAAI;IACb,QAAQ,EAAE,EAAE;CACb,CAAC;AAOF,IAAI,SAAS,GAAe,EAAE,CAAC;AAE/B,SAAS,gBAAgB;IACvB,MAAM,KAAK,GAAG,IAAI,WAAW,CAAa,aAAa,EAAE;QACvD,MAAM,EAAE,UAAU;KACnB,CAAC,CAAC;IACH,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC9B,CAAC;AAED,SAAS,UAAU,CAAC,OAAe;IACjC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACrB,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACpC,CAAC;AAED,SAAS,MAAM,CAAC,OAAe;IAC7B,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC;IAC3B,UAAU,CAAC,KAAK,OAAO,EAAE,CAAC,CAAC;AAC7B,CAAC;AAED,MAAM,UAAU,UAAU,CAAC,IAAY,EAAE,QAAgC;IACvE,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;AACrC,CAAC;AAED,SAAS,IAAI,CAAC,EAAU;IACtB,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;AACzD,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,OAAO;IAC3B,MAAM,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,6BAA6B;IAE7C,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE,CAAC;QACjC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,QAAQ,CAAC;QACpC,MAAM,MAAM,GAAG,MAAM,QAAQ,EAAE,CAAC;QAEhC,IAAI,MAAM;YAAE,UAAU,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC;;YAC/B,MAAM,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IACD,gBAAgB,EAAE,CAAC;IACnB,SAAS,GAAG,EAAE,CAAC;AACjB,CAAC;AAED,gEAAgE;AAChE,MAAM,UAAU,YAAY,CAAI,GAAyB;IACvD,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE,CAAC;QACtC,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;IACxC,CAAC;AACH,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,SAAS;IAC7B,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC;AAChE,CAAC;AAED,6DAA6D;AAC7D,MAAM,CAAC,KAAK,UAAU,iBAAiB,CAAC,IAAY;IAClD,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC;IACzC,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;AACrB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,SAAS,CAAC,OAAe;IAC7C,MAAM,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC;IACxB,GAAG,CAAC,GAAG,GAAG,OAAO,CAAC;IAClB,OAAO,IAAI,OAAO,CAAmB,OAAO,CAAC,EAAE;QAC7C,GAAG,CAAC,MAAM,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAM,UAAU,WAAW,CACzB,GAAqB,EACrB,CAAS,EACT,CAAS,EACT,KAA+B;IAE/B,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAChD,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;IACzB,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;IAC3B,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAA6B,CAAC;IAChE,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAEzB,MAAM,IAAI,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IAC/C,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,OAAO,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC;AAED,8BAA8B;AAC9B,MAAM,UAAU,wBAAwB;IACtC,MAAM,OAAO,GAAG,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IACpD,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QACpB,GAAG,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;YACjC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gBACvB,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;YACzB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import type { DocCollection } from '../store/index.js';\n\ndeclare global {\n  interface WindowEventMap {\n    'test-result': CustomEvent<TestResult>;\n  }\n  interface Window {\n    collection: DocCollection;\n  }\n}\n\nexport interface TestResult {\n  success: boolean;\n  messages: string[];\n}\n\nconst testResult: TestResult = {\n  success: true,\n  messages: [],\n};\n\ninterface TestCase {\n  name: string;\n  callback: () => Promise<boolean>;\n}\n\nlet testCases: TestCase[] = [];\n\nfunction reportTestResult() {\n  const event = new CustomEvent<TestResult>('test-result', {\n    detail: testResult,\n  });\n  window.dispatchEvent(event);\n}\n\nfunction addMessage(message: string) {\n  console.log(message);\n  testResult.messages.push(message);\n}\n\nfunction reject(message: string) {\n  testResult.success = false;\n  addMessage(`❌ ${message}`);\n}\n\nexport function testSerial(name: string, callback: () => Promise<boolean>) {\n  testCases.push({ name, callback });\n}\n\nfunction wait(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport async function runOnce() {\n  await wait(50); // for correct event sequence\n\n  for (const testCase of testCases) {\n    const { name, callback } = testCase;\n    const result = await callback();\n\n    if (result) addMessage(`✅ ${name}`);\n    else reject(name);\n  }\n  reportTestResult();\n  testCases = [];\n}\n\n// XXX: workaround typing issue in blobs/__tests__/test-entry.ts\nexport function assertExists<T>(val: T | null | undefined): asserts val is T {\n  if (val === null || val === undefined) {\n    throw new Error('val does not exist');\n  }\n}\n\nexport async function nextFrame() {\n  return new Promise(resolve => requestAnimationFrame(resolve));\n}\n\n// Test image source: https://en.wikipedia.org/wiki/Test_card\nexport async function loadTestImageBlob(name: string): Promise<Blob> {\n  const resp = await fetch(`/${name}.png`);\n  return resp.blob();\n}\n\nexport async function loadImage(blobUrl: string) {\n  const img = new Image();\n  img.src = blobUrl;\n  return new Promise<HTMLImageElement>(resolve => {\n    img.onload = () => resolve(img);\n  });\n}\n\nexport function assertColor(\n  img: HTMLImageElement,\n  x: number,\n  y: number,\n  color: [number, number, number]\n): boolean {\n  const canvas = document.createElement('canvas');\n  canvas.width = img.width;\n  canvas.height = img.height;\n  const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n  ctx.drawImage(img, 0, 0);\n\n  const data = ctx.getImageData(x, y, 1, 1).data;\n  const r = data[0];\n  const g = data[1];\n  const b = data[2];\n  return r === color[0] && g === color[1] && b === color[2];\n}\n\n// prevent redundant test runs\nexport function disableButtonsAfterClick() {\n  const buttons = document.querySelectorAll('button');\n  buttons.forEach(btn => {\n    btn.addEventListener('click', () => {\n      buttons.forEach(button => {\n        button.disabled = true;\n      });\n    });\n  });\n}\n"]}