{"version":3,"file":"jsx.unit.spec.js","sourceRoot":"","sources":["../../src/__tests__/jsx.unit.spec.ts"],"names":[],"mappings":"AAAA,uEAAuE;AAEvE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,QAAQ,CAAC;AAE9C,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAEhD,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE;IACrB,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;QACvC,MAAM,CACJ,aAAa,CACX;YACE,GAAG,EAAE;gBACH,QAAQ,EAAE,GAAG;gBACb,cAAc,EAAE,CAAC,GAAG,CAAC;gBACrB,aAAa,EAAE,aAAa;aAC7B;YACD,GAAG,EAAE;gBACH,QAAQ,EAAE,GAAG;gBACb,cAAc,EAAE,EAAE;gBAClB,aAAa,EAAE,kBAAkB;gBACjC,WAAW,EAAE,EAAE;gBACf,WAAW,EAAE,MAAM;aACpB;SACF,EACD,GAAG,CACJ,CACF,CAAC,qBAAqB,CAAC;;;;;;KAMvB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE,GAAG,EAAE;QACrD,MAAM,CACJ,aAAa,CACX;YACE,GAAG,EAAE;gBACH,QAAQ,EAAE,GAAG;gBACb,aAAa,EAAE,aAAa;gBAC5B,cAAc,EAAE,CAAC,GAAG,CAAC;gBACrB,YAAY,EAAE,eAAe;aAC9B;YACD,GAAG,EAAE;gBACH,QAAQ,EAAE,GAAG;gBACb,aAAa,EAAE,kBAAkB;gBACjC,cAAc,EAAE,EAAE;gBAClB,WAAW,EAAE,MAAM;gBACnB,WAAW,EAAE,CAAC,EAAE,MAAM,EAAE,iBAAiB,EAAE,CAAC;aAC7C;SACF,EACD,GAAG,CACJ,CACF,CAAC,qBAAqB,CAAC;;;;;;;;;KASvB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2BAA2B,EAAE,GAAG,EAAE;QACnC,MAAM,CACJ,aAAa,CACX;YACE,GAAG,EAAE;gBACH,QAAQ,EAAE,GAAG;gBACb,aAAa,EAAE,aAAa;gBAC5B,cAAc,EAAE,CAAC,GAAG,CAAC;gBACrB,YAAY,EAAE,eAAe;aAC9B;YACD,GAAG,EAAE;gBACH,QAAQ,EAAE,GAAG;gBACb,aAAa,EAAE,kBAAkB;gBACjC,cAAc,EAAE,EAAE;gBAClB,WAAW,EAAE,MAAM;gBACnB,WAAW,EAAE;oBACX,EAAE,MAAM,EAAE,UAAU,EAAE;oBACtB;wBACE,MAAM,EAAE,IAAI;wBACZ,UAAU,EAAE,EAAE,IAAI,EAAE,wBAAwB,EAAE;qBAC/C;oBACD;wBACE,MAAM,EAAE,MAAM;wBACd,UAAU,EAAE,EAAE,IAAI,EAAE,wBAAwB,EAAE,IAAI,EAAE,IAAI,EAAE;qBAC3D;oBACD,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE;oBAC/C,EAAE,MAAM,EAAE,OAAO,EAAE;iBACpB;aACF;SACF,EACD,GAAG,CACJ,CACF,CAAC,qBAAqB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA+BvB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// checkout https://vitest.dev/guide/debugging.html for debugging tests\n\nimport { describe, expect, it } from 'vitest';\n\nimport { yDocToJSXNode } from '../utils/jsx.js';\n\ndescribe('basic', () => {\n  it('serialized doc match snapshot', () => {\n    expect(\n      yDocToJSXNode(\n        {\n          '0': {\n            'sys:id': '0',\n            'sys:children': ['1'],\n            'sys:flavour': 'affine:page',\n          },\n          '1': {\n            'sys:id': '1',\n            'sys:children': [],\n            'sys:flavour': 'affine:paragraph',\n            'prop:text': [],\n            'prop:type': 'text',\n          },\n        },\n        '0'\n      )\n    ).toMatchInlineSnapshot(`\n      <affine:page>\n        <affine:paragraph\n          prop:type=\"text\"\n        />\n      </affine:page>\n    `);\n  });\n\n  it('block with plain text should match snapshot', () => {\n    expect(\n      yDocToJSXNode(\n        {\n          '0': {\n            'sys:id': '0',\n            'sys:flavour': 'affine:page',\n            'sys:children': ['1'],\n            'prop:title': 'this is title',\n          },\n          '1': {\n            'sys:id': '2',\n            'sys:flavour': 'affine:paragraph',\n            'sys:children': [],\n            'prop:type': 'text',\n            'prop:text': [{ insert: 'just plain text' }],\n          },\n        },\n        '0'\n      )\n    ).toMatchInlineSnapshot(`\n      <affine:page\n        prop:title=\"this is title\"\n      >\n        <affine:paragraph\n          prop:text=\"just plain text\"\n          prop:type=\"text\"\n        />\n      </affine:page>\n    `);\n  });\n\n  it('doc record match snapshot', () => {\n    expect(\n      yDocToJSXNode(\n        {\n          '0': {\n            'sys:id': '0',\n            'sys:flavour': 'affine:page',\n            'sys:children': ['1'],\n            'prop:title': 'this is title',\n          },\n          '1': {\n            'sys:id': '2',\n            'sys:flavour': 'affine:paragraph',\n            'sys:children': [],\n            'prop:type': 'text',\n            'prop:text': [\n              { insert: 'this is ' },\n              {\n                insert: 'a ',\n                attributes: { link: 'http://www.example.com' },\n              },\n              {\n                insert: 'link',\n                attributes: { link: 'http://www.example.com', bold: true },\n              },\n              { insert: ' with', attributes: { bold: true } },\n              { insert: ' bold' },\n            ],\n          },\n        },\n        '0'\n      )\n    ).toMatchInlineSnapshot(`\n      <affine:page\n        prop:title=\"this is title\"\n      >\n        <affine:paragraph\n          prop:text={\n            <>\n              <text\n                insert=\"this is \"\n              />\n              <text\n                insert=\"a \"\n                link=\"http://www.example.com\"\n              />\n              <text\n                bold={true}\n                insert=\"link\"\n                link=\"http://www.example.com\"\n              />\n              <text\n                bold={true}\n                insert=\" with\"\n              />\n              <text\n                insert=\" bold\"\n              />\n            </>\n          }\n          prop:type=\"text\"\n        />\n      </affine:page>\n    `);\n  });\n});\n"]}