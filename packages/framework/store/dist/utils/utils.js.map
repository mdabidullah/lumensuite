{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/utils/utils.ts"],"names":[],"mappings":"AAMA,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AACxC,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAChD,OAAO,EAAE,kBAAkB,EAAE,MAAM,mBAAmB,CAAC;AAEvD,MAAM,UAAU,cAAc,CAC5B,MAAmC,EACnC,KAAiB,EACjB,MAAc,EACd,KAA0B;IAE1B,MAAM,YAAY,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;IAEpE,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;QAC7C,IAAI,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC;YAAE,OAAO;QAC9B,IAAI,KAAK,KAAK,SAAS;YAAE,OAAO;QAEhC,aAAa;QACb,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IACrB,CAAC,CAAC,CAAC;IAEH,oBAAoB;IACpB,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;QACpD,MAAM,SAAS,GACb,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,GAAG,EAAE,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,QAAQ,GAAG,EAAE,CAAC,KAAK,SAAS,CAAC;QACxE,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,OAAO;QACT,CAAC;QAED,aAAa;QACb,KAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAM,CAAC,MAAM,IAAI,GAAG,CAAC,GAAW,EAAE,EAAE;IAClC,OAAO,GAAG;SACP,KAAK,CAAC,EAAE,CAAC;SACT,MAAM,CACL,CAAC,QAAQ,EAAE,OAAO,EAAE,EAAE,CACpB,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,GAAG,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAC1D,CAAC,CACF,CAAC;AACN,CAAC,CAAC","sourcesContent":["import type { z } from 'zod';\n\nimport type { BlockModel, BlockSchema } from '../schema/base.js';\nimport type { YBlock } from '../store/doc/block/index.js';\nimport type { BlockProps } from '../store/doc/block-collection.js';\n\nimport { SYS_KEYS } from '../consts.js';\nimport { native2Y } from '../reactive/index.js';\nimport { internalPrimitives } from '../schema/base.js';\n\nexport function syncBlockProps(\n  schema: z.infer<typeof BlockSchema>,\n  model: BlockModel,\n  yBlock: YBlock,\n  props: Partial<BlockProps>\n) {\n  const defaultProps = schema.model.props?.(internalPrimitives) ?? {};\n\n  Object.entries(props).forEach(([key, value]) => {\n    if (SYS_KEYS.has(key)) return;\n    if (value === undefined) return;\n\n    // @ts-ignore\n    model[key] = value;\n  });\n\n  // set default value\n  Object.entries(defaultProps).forEach(([key, value]) => {\n    const notExists =\n      !yBlock.has(`prop:${key}`) || yBlock.get(`prop:${key}`) === undefined;\n    if (!notExists) {\n      return;\n    }\n\n    // @ts-ignore\n    model[key] = native2Y(value);\n  });\n}\n\nexport const hash = (str: string) => {\n  return str\n    .split('')\n    .reduce(\n      (prevHash, currVal) =>\n        ((prevHash << 5) - prevHash + currVal.charCodeAt(0)) | 0,\n      0\n    );\n};\n"]}