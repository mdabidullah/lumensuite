{"version":3,"file":"id-generator.js","sourceRoot":"","sources":["../../src/utils/id-generator.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,IAAI,iBAAiB,EAAE,MAAM,gBAAgB,CAAC;AAC7D,OAAO,EAAE,MAAM,IAAI,eAAe,EAAE,MAAM,QAAQ,CAAC;AAInD,MAAM,UAAU,8BAA8B;IAC5C,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;AAChC,CAAC;AAED,MAAM,UAAU,wCAAwC,CACtD,QAAgB;IAEhB,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,OAAO,GAAG,EAAE,CAAC,GAAG,QAAQ,IAAI,CAAC,EAAE,EAAE,CAAC;AACpC,CAAC;AAED,MAAM,CAAC,MAAM,MAAM,GAAgB,GAAG,EAAE;IACtC,OAAO,iBAAiB,EAAE,CAAC;AAC7B,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,MAAM,GAAgB,GAAG,EAAE;IACtC,OAAO,eAAe,CAAC,EAAE,CAAC,CAAC;AAC7B,CAAC,CAAC","sourcesContent":["import { uuidv4 as uuidv4IdGenerator } from 'lib0/random.js';\nimport { nanoid as nanoidGenerator } from 'nanoid';\n\nexport type IdGenerator = () => string;\n\nexport function createAutoIncrementIdGenerator(): IdGenerator {\n  let i = 0;\n  return () => (i++).toString();\n}\n\nexport function createAutoIncrementIdGeneratorByClientId(\n  clientId: number\n): IdGenerator {\n  let i = 0;\n  return () => `${clientId}:${i++}`;\n}\n\nexport const uuidv4: IdGenerator = () => {\n  return uuidv4IdGenerator();\n};\n\nexport const nanoid: IdGenerator = () => {\n  return nanoidGenerator(10);\n};\n"]}