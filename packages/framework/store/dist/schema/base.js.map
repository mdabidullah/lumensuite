{"version":3,"file":"base.js","sourceRoot":"","sources":["../../src/schema/base.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Signal } from '@preact/signals-core';\nimport type * as Y from 'yjs';\n\nimport { type Disposable, Slot } from '@lumensuite/global/utils';\nimport { computed, signal } from '@preact/signals-core';\nimport { z } from 'zod';\n\nimport type { YBlock } from '../store/doc/block/index.js';\nimport type { Doc } from '../store/index.js';\nimport type { BaseBlockTransformer } from '../transformer/base.js';\n\nimport { Boxed } from '../reactive/boxed.js';\nimport { Text } from '../reactive/text.js';\n\nconst FlavourSchema = z.string();\nconst ParentSchema = z.array(z.string()).optional();\nconst ContentSchema = z.array(z.string()).optional();\nconst role = ['root', 'hub', 'content'] as const;\nconst RoleSchema = z.enum(role);\n\nexport type RoleType = (typeof role)[number];\n\nexport interface InternalPrimitives {\n  Text: (input?: Y.Text | string) => Text;\n  Boxed: <T>(input: T) => Boxed<T>;\n}\n\nexport const internalPrimitives: InternalPrimitives = Object.freeze({\n  Text: (input: Y.Text | string = '') => new Text(input),\n  Boxed: <T>(input: T) => new Boxed(input),\n});\n\nexport const BlockSchema = z.object({\n  version: z.number(),\n  model: z.object({\n    role: RoleSchema,\n    flavour: FlavourSchema,\n    parent: ParentSchema,\n    children: ContentSchema,\n    props: z\n      .function()\n      .args(z.custom<InternalPrimitives>())\n      .returns(z.record(z.any()))\n      .optional(),\n    toModel: z.function().args().returns(z.custom<BlockModel>()).optional(),\n  }),\n  transformer: z\n    .function()\n    .args()\n    .returns(z.custom<BaseBlockTransformer>())\n    .optional(),\n  onUpgrade: z\n    .function()\n    .args(z.any(), z.number(), z.number())\n    .returns(z.void())\n    .optional(),\n});\n\nexport type BlockSchemaType = z.infer<typeof BlockSchema>;\n\nexport type PropsGetter<Props> = (\n  internalPrimitives: InternalPrimitives\n) => Props;\n\nexport type SchemaToModel<\n  Schema extends {\n    model: {\n      props: PropsGetter<object>;\n      flavour: string;\n    };\n  },\n> = BlockModel<ReturnType<Schema['model']['props']>> &\n  ReturnType<Schema['model']['props']> & {\n    flavour: Schema['model']['flavour'];\n  };\n\nexport function defineBlockSchema<\n  Flavour extends string,\n  Role extends RoleType,\n  Props extends object,\n  Metadata extends Readonly<{\n    version: number;\n    role: Role;\n    parent?: string[];\n    children?: string[];\n  }>,\n  Model extends BlockModel<Props>,\n  Transformer extends BaseBlockTransformer<Props>,\n>(options: {\n  flavour: Flavour;\n  metadata: Metadata;\n  props?: (internalPrimitives: InternalPrimitives) => Props;\n  onUpgrade?: (\n    data: Props,\n    previousVersion: number,\n    latestVersion: number\n  ) => void;\n  toModel?: () => Model;\n  transformer?: () => Transformer;\n}): {\n  version: number;\n  model: {\n    props: PropsGetter<Props>;\n    flavour: Flavour;\n  } & Metadata;\n  onUpgrade?: (\n    data: Props,\n    previousVersion: number,\n    latestVersion: number\n  ) => void;\n  transformer?: () => Transformer;\n};\n\nexport function defineBlockSchema({\n  flavour,\n  props,\n  metadata,\n  onUpgrade,\n  toModel,\n  transformer,\n}: {\n  flavour: string;\n  metadata: {\n    version: number;\n    role: RoleType;\n    parent?: string[];\n    children?: string[];\n  };\n  props?: (internalPrimitives: InternalPrimitives) => Record<string, unknown>;\n  onUpgrade?: (\n    data: Record<string, unknown>,\n    previousVersion: number,\n    latestVersion: number\n  ) => void;\n  toModel?: () => BlockModel;\n  transformer?: () => BaseBlockTransformer;\n}): BlockSchemaType {\n  const schema = {\n    version: metadata.version,\n    model: {\n      role: metadata.role,\n      parent: metadata.parent,\n      children: metadata.children,\n      flavour,\n      props,\n      toModel,\n    },\n    onUpgrade,\n    transformer,\n  } satisfies z.infer<typeof BlockSchema>;\n  BlockSchema.parse(schema);\n  return schema;\n}\n\ntype SignaledProps<Props> = Props & {\n  [P in keyof Props & string as `${P}$`]: Signal<Props[P]>;\n};\n/**\n * The MagicProps function is used to append the props to the class.\n * For example:\n *\n * ```ts\n * class MyBlock extends MagicProps()<{ foo: string }> {}\n * const myBlock = new MyBlock();\n * // You'll get type checking for the foo prop\n * myBlock.foo = 'bar';\n * ```\n */\nfunction MagicProps(): {\n  new <Props>(): Props;\n} {\n  return class {} as never;\n}\n\nconst modelLabel = Symbol('model_label');\n\n// @ts-ignore\nexport class BlockModel<\n  Props extends object = object,\n  PropsSignal extends object = SignaledProps<Props>,\n> extends MagicProps()<PropsSignal> {\n  private _childModels = computed(() => {\n    const value: BlockModel[] = [];\n    this._children.value.map(id => {\n      const block = this.page.getBlock$(id);\n      if (block) {\n        value.push(block.model);\n      }\n    });\n    return value;\n  });\n\n  private _children = signal<string[]>([]);\n\n  private _onCreated: Disposable;\n\n  private _onDeleted: Disposable;\n\n  childMap = computed(() =>\n    this._children.value.reduce((map, id, index) => {\n      map.set(id, index);\n      return map;\n    }, new Map<string, number>())\n  );\n\n  created = new Slot();\n\n  deleted = new Slot();\n\n  flavour!: string;\n\n  id!: string;\n\n  isEmpty = computed(() => {\n    return this._children.value.length === 0;\n  });\n\n  keys!: string[];\n\n  // This is used to avoid https://stackoverflow.com/questions/55886792/infer-typescript-generic-class-type\n  [modelLabel]: Props = 'type_info_label' as never;\n\n  /**\n   * @deprecated use doc instead\n   */\n  page!: Doc;\n\n  pop!: (prop: keyof Props & string) => void;\n\n  propsUpdated = new Slot<{ key: string }>();\n\n  role!: RoleType;\n\n  stash!: (prop: keyof Props & string) => void;\n\n  // text is optional\n  text?: Text;\n\n  version!: number;\n\n  yBlock!: YBlock;\n\n  get children() {\n    return this._childModels.value;\n  }\n\n  get doc() {\n    return this.page;\n  }\n\n  set doc(doc: Doc) {\n    this.page = doc;\n  }\n\n  get parent() {\n    return this.doc.getParent(this);\n  }\n\n  constructor() {\n    super();\n    this._onCreated = this.created.once(() => {\n      this._children.value = this.yBlock.get('sys:children').toArray();\n      this.yBlock.get('sys:children').observe(event => {\n        this._children.value = event.target.toArray();\n      });\n      this.yBlock.observe(event => {\n        if (event.keysChanged.has('sys:children')) {\n          this._children.value = this.yBlock.get('sys:children').toArray();\n        }\n      });\n    });\n    this._onDeleted = this.deleted.once(() => {\n      this._onCreated.dispose();\n    });\n  }\n\n  dispose() {\n    this.created.dispose();\n    this.deleted.dispose();\n    this.propsUpdated.dispose();\n  }\n\n  firstChild(): BlockModel | null {\n    return this.children[0] || null;\n  }\n\n  lastChild(): BlockModel | null {\n    if (!this.children.length) {\n      return this;\n    }\n    return this.children[this.children.length - 1].lastChild();\n  }\n\n  [Symbol.dispose]() {\n    this._onCreated.dispose();\n    this._onDeleted.dispose();\n  }\n}\n"]}