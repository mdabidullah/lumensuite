{"version":3,"file":"inline-range-provider.js","sourceRoot":"","sources":["../../src/range/inline-range-provider.ts"],"names":[],"mappings":"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","sourcesContent":["import { LumenSuiteError, ErrorCode } from '@lumensuite/global/exceptions';\nimport { Slot } from '@lumensuite/global/utils';\nimport {\n  INLINE_ROOT_ATTR,\n  type InlineRange,\n  type InlineRangeProvider,\n  type InlineRangeUpdatedProp,\n} from '@lumensuite/inline';\n\nimport type { TextSelection } from '../selection/index.js';\nimport type { BlockComponent } from '../view/element/block-component.js';\n\nimport { BLOCK_ID_ATTR } from '../view/index.js';\n\nexport const getInlineRangeProvider: (\n  element: BlockComponent\n) => InlineRangeProvider | null = element => {\n  const editorHost = element.host;\n  const selectionManager = editorHost.selection;\n  const rangeManager = editorHost.range;\n  const inlineRangeUpdatedSlot = new Slot<InlineRangeUpdatedProp>();\n\n  if (!selectionManager || !rangeManager) {\n    return null;\n  }\n\n  const isElementSelected = (range: Range): boolean => {\n    // Most cases, the range is collapsed, so we no need to use `intersectsNode`\n    // because its performance is not good enough.\n    if (range.collapsed) {\n      const startElement =\n        range.startContainer instanceof Element\n          ? range.startContainer\n          : range.startContainer.parentElement;\n      const inlineRoot = startElement?.closest(`[${INLINE_ROOT_ATTR}]`);\n      if (!inlineRoot) return false;\n\n      const block = startElement?.closest(`[${BLOCK_ID_ATTR}]`);\n      if (!block || block !== element) return false;\n    } else {\n      if (!range.intersectsNode(element)) return false;\n    }\n    return true;\n  };\n\n  const calculateInlineRange = (\n    range: Range,\n    textSelection: TextSelection\n  ): InlineRange | null => {\n    if (!isElementSelected(range)) {\n      return null;\n    }\n\n    const { from, to } = textSelection;\n\n    if (from.blockId === element.blockId) {\n      return {\n        index: from.index,\n        length: from.length,\n      };\n    }\n\n    if (to && to.blockId === element.blockId) {\n      return {\n        index: to.index,\n        length: to.length,\n      };\n    }\n\n    if (!element.model.text) {\n      throw new LumenSuiteError(\n        ErrorCode.SelectionError,\n        'element to set text selection has no text'\n      );\n    }\n\n    return {\n      index: 0,\n      length: element.model.text.length,\n    };\n  };\n\n  const setInlineRange = (inlineRange: InlineRange | null, sync = true) => {\n    // skip `setInlineRange` from `inlineEditor` when composing happens across blocks,\n    // selection will be updated in `range-binding`\n    if (rangeManager.binding?.isComposing) return;\n\n    if (!inlineRange) {\n      selectionManager.clear(['text']);\n    } else {\n      const textSelection = selectionManager.create('text', {\n        from: {\n          blockId: element.blockId,\n          index: inlineRange.index,\n          length: inlineRange.length,\n        },\n        to: null,\n      });\n      selectionManager.setGroup('note', [textSelection]);\n    }\n\n    inlineRangeUpdatedSlot.emit([inlineRange, sync]);\n  };\n\n  const getInlineRange = (): InlineRange | null => {\n    const sl = document.getSelection();\n    if (!sl || sl.rangeCount === 0) {\n      return null;\n    }\n    const range = sl.getRangeAt(0);\n    if (!range) {\n      return null;\n    }\n\n    const textSelection = selectionManager.find('text');\n    if (!textSelection) {\n      return null;\n    }\n\n    return calculateInlineRange(range, textSelection);\n  };\n\n  let lastInlineRange: InlineRange | null = null;\n  selectionManager.slots.changed.on(() => {\n    const textSelection = selectionManager.find('text');\n    if (!textSelection) return;\n\n    const range = rangeManager.value;\n    if (!range || !isElementSelected(range)) return;\n\n    // wait for lit updated\n    requestAnimationFrame(() => {\n      const inlineRange = calculateInlineRange(range, textSelection);\n      if (\n        lastInlineRange &&\n        inlineRange &&\n        lastInlineRange.index === inlineRange.index &&\n        lastInlineRange.length === inlineRange.length\n      )\n        return;\n\n      lastInlineRange = inlineRange;\n      inlineRangeUpdatedSlot.emit([inlineRange, false]);\n    });\n  });\n\n  return {\n    setInlineRange,\n    getInlineRange,\n    inlineRangeUpdated: inlineRangeUpdatedSlot,\n  };\n};\n"]}