{"version":3,"file":"range-binding.js","sourceRoot":"","sources":["../../src/range/range-binding.ts"],"names":[],"mappings":"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","sourcesContent":["import type { BlockModel } from '@blocksuite/store';\n\nimport { throttle } from '@blocksuite/global/utils';\n\nimport type { BaseSelection, TextSelection } from '../selection/index.js';\nimport type { BlockComponent } from '../view/element/block-component.js';\nimport type { RangeManager } from './range-manager.js';\n\nimport { blockComponentSymbol } from '../view/element/consts.js';\nimport { BLOCK_ID_ATTR } from '../view/index.js';\nimport { RANGE_SYNC_EXCLUDE_ATTR } from './consts.js';\n\n/**\n * Two-way binding between native range and text selection\n */\nexport class RangeBinding {\n  private _compositionStartCallback:\n    | ((event: CompositionEvent) => Promise<void>)\n    | null = null;\n\n  private _computePath = (modelId: string) => {\n    const block = this.host.std.doc.getBlock(modelId)?.model;\n    if (!block) return [];\n\n    const path: string[] = [];\n    let parent: BlockModel | null = block;\n    while (parent) {\n      path.unshift(parent.id);\n      parent = this.host.doc.getParent(parent);\n    }\n\n    return path;\n  };\n\n  private _onBeforeInput = (event: InputEvent) => {\n    const selection = this.selectionManager.find('text');\n    if (!selection) return;\n\n    if (event.isComposing) return;\n\n    const { from, to } = selection;\n    if (!to || from.blockId === to.blockId) return;\n\n    const range = this.rangeManager?.value;\n    if (!range) return;\n\n    const blocks = this.rangeManager.getSelectedBlockComponentsByRange(range, {\n      mode: 'flat',\n    });\n\n    const start = blocks.at(0);\n    const end = blocks.at(-1);\n    if (!start || !end) return;\n\n    const startText = start.model.text;\n    const endText = end.model.text;\n    if (!startText || !endText) return;\n\n    event.preventDefault();\n\n    this.host.doc.transact(() => {\n      startText.delete(from.index, from.length);\n      startText.insert(event.data ?? '', from.index);\n      endText.delete(0, to.length);\n      startText.join(endText);\n\n      blocks\n        .slice(1)\n        // delete from lowest to highest\n        .reverse()\n        .forEach(block => {\n          const parent = this.host.doc.getParent(block.model);\n          if (!parent) return;\n          this.host.doc.deleteBlock(block.model, {\n            bringChildrenTo: parent,\n          });\n        });\n    });\n\n    const newSelection = this.selectionManager.create('text', {\n      from: {\n        blockId: from.blockId,\n        index: from.index + (event.data?.length ?? 0),\n        length: 0,\n      },\n      to: null,\n    });\n    this.selectionManager.setGroup('note', [newSelection]);\n  };\n\n  private _onCompositionEnd = (event: CompositionEvent) => {\n    if (this._compositionStartCallback) {\n      event.preventDefault();\n      this._compositionStartCallback(event).catch(console.error);\n      this._compositionStartCallback = null;\n    }\n  };\n\n  private _onCompositionStart = () => {\n    const selection = this.selectionManager.find('text');\n    if (!selection) return;\n\n    const { from, to } = selection;\n    if (!to) return;\n\n    this.isComposing = true;\n\n    const range = this.rangeManager?.value;\n    if (!range) return;\n\n    const blocks = this.rangeManager.getSelectedBlockComponentsByRange(range, {\n      mode: 'flat',\n    });\n    const highestBlocks = this.rangeManager.getSelectedBlockComponentsByRange(\n      range,\n      {\n        mode: 'highest',\n        match: block => block.model.role === 'content',\n      }\n    );\n\n    const start = blocks.at(0);\n    const end = blocks.at(-1);\n    if (!start || !end) return;\n\n    const startText = start.model.text;\n    const endText = end.model.text;\n    if (!startText || !endText) return;\n\n    this._compositionStartCallback = async event => {\n      this.isComposing = false;\n\n      const parents: BlockComponent[] = [];\n      for (const highestBlock of highestBlocks) {\n        const parentModel = this.host.doc.getParent(highestBlock.blockId);\n        if (!parentModel) continue;\n        const parent = this.host.view.getBlock(parentModel.id);\n        if (!this._isBlockComponent(parent) || parents.includes(parent))\n          continue;\n\n        // Restore the DOM structure damaged by the composition\n        parent.dirty = true;\n        await parent.updateComplete;\n        await parent.updateComplete;\n        parents.push(parent);\n      }\n\n      this.host.doc.transact(() => {\n        endText.delete(0, to.length);\n        startText.join(endText);\n\n        blocks\n          .slice(1)\n          // delete from lowest to highest\n          .reverse()\n          .forEach(block => {\n            const parent = this.host.doc.getParent(block.model);\n            if (!parent) return;\n            this.host.doc.deleteBlock(block.model, {\n              bringChildrenTo: parent,\n            });\n          });\n      });\n\n      await this.host.updateComplete;\n\n      const selection = this.selectionManager.create('text', {\n        from: {\n          blockId: from.blockId,\n          index: from.index + (event.data?.length ?? 0),\n          length: 0,\n        },\n        to: null,\n      });\n      this.host.selection.setGroup('note', [selection]);\n      this.rangeManager?.syncTextSelectionToRange(selection);\n    };\n  };\n\n  private _onNativeSelectionChanged = async () => {\n    if (this.isComposing) return;\n\n    await this.host.updateComplete;\n\n    const selection = document.getSelection();\n    if (!selection) {\n      this.selectionManager.clear(['text']);\n      return;\n    }\n    const range = selection.rangeCount > 0 ? selection.getRangeAt(0) : null;\n\n    if (!range) {\n      this._prevTextSelection = null;\n      this.selectionManager.clear(['text']);\n      return;\n    }\n\n    if (!this.host.contains(range.commonAncestorContainer)) {\n      return;\n    }\n\n    // range is in a non-editable element\n    // ex. placeholder\n    const isRangeOutNotEditable =\n      range.startContainer instanceof HTMLElement &&\n      range.startContainer.contentEditable === 'false' &&\n      range.endContainer instanceof HTMLElement &&\n      range.endContainer.contentEditable === 'false';\n    if (isRangeOutNotEditable) {\n      this._prevTextSelection = null;\n      this.selectionManager.clear(['text']);\n\n      // force clear native selection to break inline editor input\n      selection.removeRange(range);\n      return;\n    }\n\n    const el =\n      range.commonAncestorContainer instanceof Element\n        ? range.commonAncestorContainer\n        : range.commonAncestorContainer.parentElement;\n    if (!el) return;\n    const block = el.closest<BlockComponent>(`[${BLOCK_ID_ATTR}]`);\n    if (block?.getAttribute(RANGE_SYNC_EXCLUDE_ATTR) === 'true') return;\n\n    const inlineEditor = this.rangeManager?.getClosestInlineEditor(\n      range.commonAncestorContainer\n    );\n    if (inlineEditor?.isComposing) return;\n\n    const isRangeReversed =\n      !!selection.anchorNode &&\n      !!selection.focusNode &&\n      (selection.anchorNode === selection.focusNode\n        ? selection.anchorOffset > selection.focusOffset\n        : selection.anchorNode.compareDocumentPosition(selection.focusNode) ===\n          Node.DOCUMENT_POSITION_PRECEDING);\n    const textSelection = this.rangeManager?.rangeToTextSelection(\n      range,\n      isRangeReversed\n    );\n    if (!textSelection) {\n      this._prevTextSelection = null;\n      this.selectionManager.clear(['text']);\n      return;\n    }\n\n    const model = this.host.doc.getBlockById(textSelection.blockId);\n    // If the model is not found, the selection maybe in another editor\n    if (!model) return;\n\n    this._prevTextSelection = {\n      selection: textSelection,\n      path: this._computePath(model.id),\n    };\n    this.rangeManager?.syncRangeToTextSelection(range, isRangeReversed);\n  };\n\n  private _onStdSelectionChanged = (selections: BaseSelection[]) => {\n    const text =\n      selections.find((selection): selection is TextSelection =>\n        selection.is('text')\n      ) ?? null;\n\n    if (text === this._prevTextSelection) {\n      return;\n    }\n    // wait for lit updated\n    this.host.updateComplete\n      .then(() => {\n        const id = text?.blockId;\n        const path = id && this._computePath(id);\n\n        if (this.host.event.active) {\n          const eq =\n            text && this._prevTextSelection && path\n              ? text.equals(this._prevTextSelection.selection) &&\n                path.join('') === this._prevTextSelection.path.join('')\n              : false;\n\n          if (eq) return;\n        }\n\n        this._prevTextSelection =\n          text && path\n            ? {\n                selection: text,\n                path,\n              }\n            : null;\n        if (text) {\n          this.rangeManager?.syncTextSelectionToRange(text);\n        } else {\n          this.rangeManager?.clear();\n        }\n      })\n      .catch(console.error);\n  };\n\n  private _prevTextSelection: {\n    selection: TextSelection;\n    path: string[];\n  } | null = null;\n\n  isComposing = false;\n\n  get host() {\n    return this.manager.std.host;\n  }\n\n  get rangeManager() {\n    return this.host.range;\n  }\n\n  get selectionManager() {\n    return this.host.selection;\n  }\n\n  constructor(public manager: RangeManager) {\n    this.host.disposables.add(\n      this.selectionManager.slots.changed.on(this._onStdSelectionChanged)\n    );\n\n    this.host.disposables.addFromEvent(\n      document,\n      'selectionchange',\n      throttle(() => {\n        this._onNativeSelectionChanged().catch(console.error);\n      }, 10)\n    );\n\n    this.host.disposables.add(\n      this.host.event.add('beforeInput', ctx => {\n        const event = ctx.get('defaultState').event as InputEvent;\n        this._onBeforeInput(event);\n      })\n    );\n\n    this.host.disposables.add(\n      this.host.event.add('compositionStart', this._onCompositionStart)\n    );\n    this.host.disposables.add(\n      this.host.event.add('compositionEnd', ctx => {\n        const event = ctx.get('defaultState').event as CompositionEvent;\n        this._onCompositionEnd(event);\n      })\n    );\n  }\n\n  private _isBlockComponent(el: Element | null): el is BlockComponent {\n    return Boolean(el && blockComponentSymbol in el);\n  }\n}\n"]}