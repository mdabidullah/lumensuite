{"version":3,"file":"keyboard.js","sourceRoot":"","sources":["../../../src/event/state/keyboard.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,YAAY,CAAC;AAO1C,MAAM,OAAO,kBAAmB,SAAQ,YAAY;IAOlD,YAAY,EAAE,KAAK,EAAE,SAAS,EAA6B;QACzD,KAAK,CAAC,KAAK,CAAC,CAAC;QAHN,SAAI,GAAG,eAAe,CAAC;QAK9B,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;CACF","sourcesContent":["import { UIEventState } from '../base.js';\n\ntype KeyboardEventStateOptions = {\n  event: KeyboardEvent;\n  composing: boolean;\n};\n\nexport class KeyboardEventState extends UIEventState {\n  composing: boolean;\n\n  raw: KeyboardEvent;\n\n  override type = 'keyboardState';\n\n  constructor({ event, composing }: KeyboardEventStateOptions) {\n    super(event);\n\n    this.raw = event;\n    this.composing = composing;\n  }\n}\n\ndeclare global {\n  interface BlockSuiteUIEventState {\n    keyboardState: KeyboardEventState;\n  }\n}\n"]}