{"version":3,"file":"keyboard.js","sourceRoot":"","sources":["../../../src/event/control/keyboard.ts"],"names":[],"mappings":"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","sourcesContent":["import { IS_MAC } from '@lumensuite/global/env';\n\nimport type { EventOptions, UIEventDispatcher } from '../dispatcher.js';\n\nimport {\n  type UIEventHandler,\n  UIEventState,\n  UIEventStateContext,\n} from '../base.js';\nimport { bindKeymap } from '../keymap.js';\nimport { KeyboardEventState } from '../state/index.js';\nimport { EventScopeSourceType, EventSourceState } from '../state/source.js';\n\nexport class KeyboardControl {\n  private _down = (event: KeyboardEvent) => {\n    if (!this._shouldTrigger(event)) {\n      return;\n    }\n    const keyboardEventState = new KeyboardEventState({\n      event,\n      composing: this.composition,\n    });\n    this._dispatcher.run(\n      'keyDown',\n      this._createContext(event, keyboardEventState)\n    );\n  };\n\n  private _shouldTrigger = (event: KeyboardEvent) => {\n    if (event.isComposing) {\n      return false;\n    }\n    const mod = IS_MAC ? event.metaKey : event.ctrlKey;\n    if (\n      ['c', 'v', 'x'].includes(event.key) &&\n      mod &&\n      !event.shiftKey &&\n      !event.altKey\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  private _up = (event: KeyboardEvent) => {\n    if (!this._shouldTrigger(event)) {\n      return;\n    }\n    const keyboardEventState = new KeyboardEventState({\n      event,\n      composing: this.composition,\n    });\n\n    this._dispatcher.run(\n      'keyUp',\n      this._createContext(event, keyboardEventState)\n    );\n  };\n\n  private composition = false;\n\n  constructor(private _dispatcher: UIEventDispatcher) {}\n\n  private _createContext(event: Event, keyboardState: KeyboardEventState) {\n    return UIEventStateContext.from(\n      new UIEventState(event),\n      new EventSourceState({\n        event,\n        sourceType: EventScopeSourceType.Selection,\n      }),\n      keyboardState\n    );\n  }\n\n  bindHotkey(keymap: Record<string, UIEventHandler>, options?: EventOptions) {\n    return this._dispatcher.add(\n      'keyDown',\n      ctx => {\n        if (this.composition) {\n          return false;\n        }\n        const binding = bindKeymap(keymap);\n        return binding(ctx);\n      },\n      options\n    );\n  }\n\n  listen() {\n    this._dispatcher.disposables.addFromEvent(document, 'keydown', this._down);\n    this._dispatcher.disposables.addFromEvent(document, 'keyup', this._up);\n    this._dispatcher.disposables.addFromEvent(\n      document,\n      'compositionstart',\n      () => {\n        this.composition = true;\n      }\n    );\n    this._dispatcher.disposables.addFromEvent(\n      document,\n      'compositionend',\n      () => {\n        this.composition = false;\n      }\n    );\n  }\n}\n"]}