{"version":3,"file":"viewport.js","sourceRoot":"","sources":["../../src/gfx/viewport.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,KAAK,EACL,KAAK,EAGL,IAAI,EACJ,GAAG,GACJ,MAAM,0BAA0B,CAAC;AAElC,SAAS,MAAM,CAAC,KAAa,EAAE,GAAW,EAAE,IAAY;IACtD,IAAI,IAAI,GAAG,CAAC,IAAI,KAAK,GAAG,GAAG;QAAE,OAAO,GAAG,CAAC;IACxC,IAAI,IAAI,GAAG,CAAC,IAAI,KAAK,GAAG,GAAG;QAAE,OAAO,GAAG,CAAC;IACxC,OAAO,KAAK,CAAC;AACf,CAAC;AAED,MAAM,CAAC,MAAM,QAAQ,GAAG,GAAG,CAAC;AAC5B,MAAM,CAAC,MAAM,QAAQ,GAAG,GAAG,CAAC;AAE5B,MAAM,OAAO,QAAQ;IAArB;QACY,YAAO,GAAW,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;QAIjC,YAAO,GAAG,CAAC,CAAC;QAEZ,UAAK,GAAG,CAAC,CAAC;QAEV,YAAO,GAAG,KAAK,CAAC;QAEhB,WAAM,GAAkB,IAAI,CAAC;QAE7B,SAAI,GAAG,CAAC,CAAC;QAET,WAAM,GAAG,CAAC,CAAC;QAEX,UAAK,GAAW,GAAG,CAAC;QAE9B,gBAAW,GAAG,IAAI,IAAI,EAKlB,CAAC;QAEL,kBAAa,GAAG,IAAI,IAAI,EAAQ,CAAC;QAEjC,oBAAe,GAAG,IAAI,IAAI,EAAkC,CAAC;QAE7D,aAAQ,GAAG,QAAQ,CAAC;QAEpB,aAAQ,GAAG,QAAQ,CAAC;IA2StB,CAAC;IAzSC,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC,GAAG,CAAC,qBAAqB,EAAE,CAAC;IAC1C,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACxB,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACxB,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,sEAAsE;IACtE,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,IAAI,MAAM,CAAC,MAAe;QACxB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAED;;;;OAIG;IACH,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC;IAC9D,CAAC;IAED,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED,IAAI,UAAU;QACZ,OAAO,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;IACrC,CAAC;IAED,IAAI,UAAU;QACZ,OAAO,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;IACrC,CAAC;IAED,IAAI,cAAc;QAChB,MAAM,EAAE,aAAa,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC;QAE9C,OAAO,KAAK,CAAC,IAAI,CAAC;YAChB,GAAG,aAAa;YAChB,CAAC,EAAE,aAAa,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC;YACpC,CAAC,EAAE,aAAa,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC;SACrC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,aAAa;QACf,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;QACvD,OAAO;YACL,CAAC,EAAE,OAAO,GAAG,KAAK,GAAG,CAAC,GAAG,IAAI;YAC7B,CAAC,EAAE,OAAO,GAAG,MAAM,GAAG,CAAC,GAAG,IAAI;SAC/B,CAAC;IACJ,CAAC;IAED,IAAI,aAAa;QACf,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;QACvD,OAAO;YACL,CAAC,EAAE,OAAO,GAAG,KAAK,GAAG,CAAC,GAAG,IAAI;YAC7B,CAAC,EAAE,OAAO,GAAG,MAAM,GAAG,CAAC,GAAG,IAAI;SAC/B,CAAC;IACJ,CAAC;IAED,IAAI,SAAS;QACX,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;QACtC,OAAO,OAAO,GAAG,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC;IACpC,CAAC;IAED,IAAI,SAAS;QACX,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;QACvC,OAAO,OAAO,GAAG,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC;IACrC,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,gBAAgB,CAAC,MAAc,EAAE,MAAc;QAC7C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,EAAE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC;IAC/D,CAAC;IAED,OAAO;QACL,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QAC3B,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;QAC7B,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;IACjC,CAAC;IAED,YAAY,CAAC,KAAY;QACvB,MAAM,cAAc,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACvD,OAAO,CACL,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC;YAC9B,cAAc,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAC3C,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;QAC5E,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,qBAAqB,EAAE,CAAC;QACvD,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;QAE9D,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,SAAS,CACZ,OAAO,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,EACvC,OAAO,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,CAC1C,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,OAAe,EAAE,OAAe;QACxC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC;QACzB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;YACxB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAS;SACvC,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CAAC,IAAY,EAAE,GAAW,EAAE,KAAa,EAAE,MAAc;QAC9D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;YACpB,IAAI;YACJ,GAAG;YACH,KAAK;YACL,MAAM;SACP,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CACT,OAAe,EACf,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAClC,MAAM,GAAG,KAAK;QAEd,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3B,IAAI,MAAM,EAAE,CAAC;YACX,MAAM,UAAU,GAAG,OAAO,GAAG,OAAO,CAAC;YACrC,IAAI,UAAU,KAAK,CAAC,EAAE,CAAC;gBACrB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACnD,CAAC;iBAAM,CAAC;gBACN,MAAM,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAS,CAAC;gBACpD,MAAM,UAAU,GAAG,GAAG,CAAC,GAAG,CACxB,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,EAC/C,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC,CACrB,CAAC;gBACF,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;YACpD,CAAC;QACH,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACxB,CAAC;IACH,CAAC;IAED,kBAAkB,CAChB,KAAY,EACZ,UAA4C,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACxD,MAAM,GAAG,KAAK;QAEd,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,OAAO,CAAC;QACjC,MAAM,IAAI,GAAG,KAAK,CAChB,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAClC,IAAI,CAAC,QAAQ,EACb,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CACpC,CAAC;QACF,MAAM,MAAM,GAAG;YACb,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,CAAC;YACnD,KAAK,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,CAAC;SAC5C,CAAC;QAEV,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IACzC,CAAC;IAED,cAAc,CAAC,GAAgB;QAC7B,MAAM,IAAI,GAAG,GAAG,CAAC,qBAAqB,EAAE,CAAC;QAEzC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QAEf,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7D,CAAC;IAED,OAAO,CAAC,IAAY,EAAE,UAAmB;QACvC,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,UAAU,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO,CAAW,CAAC;QACpD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvD,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QAE1B,MAAM,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;QACtE,MAAM,SAAS,GAAG,GAAG,CAAC,GAAG,CACvB,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,EACrB,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,GAAG,OAAO,CAAC,CACpC,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;YACxB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAS;SACvC,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,CAAS,EAAE,CAAS;QAClC,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;QACxB,MAAM,KAAK,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC;QACnD,MAAM,oBAAoB,GAAG,GAAG,EAAE;YAChC,IAAI,IAAI,CAAC,MAAM;gBAAE,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACnD,IAAI,CAAC,MAAM,GAAG,qBAAqB,CAAC,GAAG,EAAE;gBACvC,MAAM,IAAI,GAAG,EAAE,CAAC;gBAChB,MAAM,IAAI,GAAG,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC;gBACtD,MAAM,UAAU,GAAG;oBACjB,CAAC,EAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;oBACxB,CAAC,EAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;iBACzB,CAAC;gBACF,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnC,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnC,UAAU,CAAC,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;gBAC9C,UAAU,CAAC,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;gBAC9C,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC3C,IAAI,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,CAAC,IAAI,CAAC;oBAAE,oBAAoB,EAAE,CAAC;YACrE,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QACF,oBAAoB,EAAE,CAAC;IACzB,CAAC;IAED,UAAU,CAAC,IAAY,EAAE,UAAmB;QAC1C,MAAM,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC/B,IAAI,IAAI,CAAC,MAAM;YAAE,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEnD,MAAM,eAAe,GAAG,GAAG,EAAE;YAC3B,IAAI,CAAC,MAAM,GAAG,qBAAqB,CAAC,GAAG,EAAE;gBACvC,MAAM,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChC,MAAM,KAAK,GAAG,EAAE,CAAC;gBACjB,MAAM,IAAI,GAAG,KAAK,GAAG,KAAK,CAAC;gBAC3B,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBAEtD,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;gBACnC,IAAI,QAAQ,IAAI,IAAI;oBAAE,eAAe,EAAE,CAAC;YAC1C,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QACF,eAAe,EAAE,CAAC;IACpB,CAAC;IAED,YAAY,CAAC,KAAY;QACvB,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,CAAC;QACvB,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;QAEnD,OAAO,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC;IAED,YAAY,CAAC,KAAa,EAAE,KAAa;QACvC,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QACnD,OAAO,CAAC,SAAS,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,EAAE,SAAS,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;IAC9E,CAAC;IAED,2BAA2B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAO;QACtC,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;QAC3B,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;IAC9C,CAAC;IAED,WAAW,CAAC,KAAY;QACtB,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,CAAC;QACvB,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;QAElD,OAAO,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC;IAED,WAAW,CAAC,MAAc,EAAE,MAAc;QACxC,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QACnD,OAAO;YACL,CAAC,MAAM,GAAG,SAAS,CAAC,GAAG,IAAI,GAAG,KAAK;YACnC,CAAC,MAAM,GAAG,SAAS,CAAC,GAAG,IAAI,GAAG,KAAK;SACpC,CAAC;IACJ,CAAC;IAED,0BAA0B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAO;QACrC,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;QAC3B,OAAO,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;IAC7B,CAAC;CACF","sourcesContent":["import {\n  Bound,\n  clamp,\n  type IPoint,\n  type IVec,\n  Slot,\n  Vec,\n} from '@blocksuite/global/utils';\n\nfunction cutoff(value: number, ref: number, sign: number) {\n  if (sign > 0 && value > ref) return ref;\n  if (sign < 0 && value < ref) return ref;\n  return value;\n}\n\nexport const ZOOM_MAX = 6.0;\nexport const ZOOM_MIN = 0.1;\n\nexport class Viewport {\n  protected _center: IPoint = { x: 0, y: 0 };\n\n  protected _el!: HTMLElement;\n\n  protected _height = 0;\n\n  protected _left = 0;\n\n  protected _locked = false;\n\n  protected _rafId: number | null = null;\n\n  protected _top = 0;\n\n  protected _width = 0;\n\n  protected _zoom: number = 1.0;\n\n  sizeUpdated = new Slot<{\n    width: number;\n    height: number;\n    left: number;\n    top: number;\n  }>();\n\n  viewportMoved = new Slot<IVec>();\n\n  viewportUpdated = new Slot<{ zoom: number; center: IVec }>();\n\n  ZOOM_MAX = ZOOM_MAX;\n\n  ZOOM_MIN = ZOOM_MIN;\n\n  get boundingClientRect() {\n    return this._el.getBoundingClientRect();\n  }\n\n  get center() {\n    return this._center;\n  }\n\n  get centerX() {\n    return this._center.x;\n  }\n\n  get centerY() {\n    return this._center.y;\n  }\n\n  get height() {\n    return this._height;\n  }\n\n  get left() {\n    return this._left;\n  }\n\n  // Does not allow the user to move and zoom the canvas in copilot tool\n  get locked() {\n    return this._locked;\n  }\n\n  set locked(locked: boolean) {\n    this._locked = locked;\n  }\n\n  /**\n   * Note this is different from the zoom property.\n   * The editor itself may be scaled by outer container which is common in nested editor scenarios.\n   * This property is used to calculate the scale of the editor.\n   */\n  get scale() {\n    return this.boundingClientRect.width / this._el.offsetWidth;\n  }\n\n  get top() {\n    return this._top;\n  }\n\n  get translateX() {\n    return -this.viewportX * this.zoom;\n  }\n\n  get translateY() {\n    return -this.viewportY * this.zoom;\n  }\n\n  get viewportBounds() {\n    const { viewportMinXY, viewportMaxXY } = this;\n\n    return Bound.from({\n      ...viewportMinXY,\n      w: viewportMaxXY.x - viewportMinXY.x,\n      h: viewportMaxXY.y - viewportMinXY.y,\n    });\n  }\n\n  get viewportMaxXY() {\n    const { centerX, centerY, width, height, zoom } = this;\n    return {\n      x: centerX + width / 2 / zoom,\n      y: centerY + height / 2 / zoom,\n    };\n  }\n\n  get viewportMinXY() {\n    const { centerX, centerY, width, height, zoom } = this;\n    return {\n      x: centerX - width / 2 / zoom,\n      y: centerY - height / 2 / zoom,\n    };\n  }\n\n  get viewportX() {\n    const { centerX, width, zoom } = this;\n    return centerX - width / 2 / zoom;\n  }\n\n  get viewportY() {\n    const { centerY, height, zoom } = this;\n    return centerY - height / 2 / zoom;\n  }\n\n  get width() {\n    return this._width;\n  }\n\n  get zoom() {\n    return this._zoom;\n  }\n\n  applyDeltaCenter(deltaX: number, deltaY: number) {\n    this.setCenter(this.centerX + deltaX, this.centerY + deltaY);\n  }\n\n  dispose() {\n    this.sizeUpdated.dispose();\n    this.viewportMoved.dispose();\n    this.viewportUpdated.dispose();\n  }\n\n  isInViewport(bound: Bound) {\n    const viewportBounds = Bound.from(this.viewportBounds);\n    return (\n      viewportBounds.contains(bound) ||\n      viewportBounds.isIntersectWithBound(bound)\n    );\n  }\n\n  onResize() {\n    const { centerX, centerY, zoom, width: oldWidth, height: oldHeight } = this;\n    const { left, top } = this._el.getBoundingClientRect();\n    const { offsetWidth: width, offsetHeight: height } = this._el;\n\n    this.setRect(left, top, width, height);\n    this.setCenter(\n      centerX - (oldWidth - width) / zoom / 2,\n      centerY - (oldHeight - height) / zoom / 2\n    );\n  }\n\n  setCenter(centerX: number, centerY: number) {\n    this._center.x = centerX;\n    this._center.y = centerY;\n    this.viewportUpdated.emit({\n      zoom: this.zoom,\n      center: Vec.toVec(this.center) as IVec,\n    });\n  }\n\n  setRect(left: number, top: number, width: number, height: number) {\n    this._left = left;\n    this._top = top;\n    this._width = width;\n    this._height = height;\n    this.sizeUpdated.emit({\n      left,\n      top,\n      width,\n      height,\n    });\n  }\n\n  setViewport(\n    newZoom: number,\n    newCenter = Vec.toVec(this.center),\n    smooth = false\n  ) {\n    const preZoom = this._zoom;\n    if (smooth) {\n      const cofficient = preZoom / newZoom;\n      if (cofficient === 1) {\n        this.smoothTranslate(newCenter[0], newCenter[1]);\n      } else {\n        const center = [this.centerX, this.centerY] as IVec;\n        const focusPoint = Vec.mul(\n          Vec.sub(newCenter, Vec.mul(center, cofficient)),\n          1 / (1 - cofficient)\n        );\n        this.smoothZoom(newZoom, Vec.toPoint(focusPoint));\n      }\n    } else {\n      this._center.x = newCenter[0];\n      this._center.y = newCenter[1];\n      this.setZoom(newZoom);\n    }\n  }\n\n  setViewportByBound(\n    bound: Bound,\n    padding: [number, number, number, number] = [0, 0, 0, 0],\n    smooth = false\n  ) {\n    const [pt, pr, pb, pl] = padding;\n    const zoom = clamp(\n      (this.width - (pr + pl)) / bound.w,\n      this.ZOOM_MIN,\n      (this.height - (pt + pb)) / bound.h\n    );\n    const center = [\n      bound.x + (bound.w + pr / zoom) / 2 - pl / zoom / 2,\n      bound.y + (bound.h + pb / zoom) / 2 - pt / zoom / 2,\n    ] as IVec;\n\n    this.setViewport(zoom, center, smooth);\n  }\n\n  setViewportElm(elm: HTMLElement) {\n    const rect = elm.getBoundingClientRect();\n\n    this._el = elm;\n\n    this.setRect(rect.left, rect.top, rect.width, rect.height);\n  }\n\n  setZoom(zoom: number, focusPoint?: IPoint) {\n    const prevZoom = this.zoom;\n    focusPoint = (focusPoint ?? this._center) as IPoint;\n    this._zoom = clamp(zoom, this.ZOOM_MIN, this.ZOOM_MAX);\n    const newZoom = this.zoom;\n\n    const offset = Vec.sub(Vec.toVec(this.center), Vec.toVec(focusPoint));\n    const newCenter = Vec.add(\n      Vec.toVec(focusPoint),\n      Vec.mul(offset, prevZoom / newZoom)\n    );\n    this.setCenter(newCenter[0], newCenter[1]);\n    this.viewportUpdated.emit({\n      zoom: this.zoom,\n      center: Vec.toVec(this.center) as IVec,\n    });\n  }\n\n  smoothTranslate(x: number, y: number) {\n    const { center } = this;\n    const delta = { x: x - center.x, y: y - center.y };\n    const innerSmoothTranslate = () => {\n      if (this._rafId) cancelAnimationFrame(this._rafId);\n      this._rafId = requestAnimationFrame(() => {\n        const rate = 10;\n        const step = { x: delta.x / rate, y: delta.y / rate };\n        const nextCenter = {\n          x: this.centerX + step.x,\n          y: this.centerY + step.y,\n        };\n        const signX = delta.x > 0 ? 1 : -1;\n        const signY = delta.y > 0 ? 1 : -1;\n        nextCenter.x = cutoff(nextCenter.x, x, signX);\n        nextCenter.y = cutoff(nextCenter.y, y, signY);\n        this.setCenter(nextCenter.x, nextCenter.y);\n        if (nextCenter.x != x || nextCenter.y != y) innerSmoothTranslate();\n      });\n    };\n    innerSmoothTranslate();\n  }\n\n  smoothZoom(zoom: number, focusPoint?: IPoint) {\n    const delta = zoom - this.zoom;\n    if (this._rafId) cancelAnimationFrame(this._rafId);\n\n    const innerSmoothZoom = () => {\n      this._rafId = requestAnimationFrame(() => {\n        const sign = delta > 0 ? 1 : -1;\n        const total = 10;\n        const step = delta / total;\n        const nextZoom = cutoff(this.zoom + step, zoom, sign);\n\n        this.setZoom(nextZoom, focusPoint);\n        if (nextZoom != zoom) innerSmoothZoom();\n      });\n    };\n    innerSmoothZoom();\n  }\n\n  toModelBound(bound: Bound) {\n    const { w, h } = bound;\n    const [x, y] = this.toModelCoord(bound.x, bound.y);\n\n    return new Bound(x, y, w / this.zoom, h / this.zoom);\n  }\n\n  toModelCoord(viewX: number, viewY: number): IVec {\n    const { viewportX, viewportY, zoom, scale } = this;\n    return [viewportX + viewX / zoom / scale, viewportY + viewY / zoom / scale];\n  }\n\n  toModelCoordFromClientCoord([x, y]: IVec): IVec {\n    const { left, top } = this;\n    return this.toModelCoord(x - left, y - top);\n  }\n\n  toViewBound(bound: Bound) {\n    const { w, h } = bound;\n    const [x, y] = this.toViewCoord(bound.x, bound.y);\n\n    return new Bound(x, y, w * this.zoom, h * this.zoom);\n  }\n\n  toViewCoord(modelX: number, modelY: number): IVec {\n    const { viewportX, viewportY, zoom, scale } = this;\n    return [\n      (modelX - viewportX) * zoom * scale,\n      (modelY - viewportY) * zoom * scale,\n    ];\n  }\n\n  toViewCoordFromClientCoord([x, y]: IVec): IVec {\n    const { left, top } = this;\n    return [x - left, y - top];\n  }\n}\n"]}