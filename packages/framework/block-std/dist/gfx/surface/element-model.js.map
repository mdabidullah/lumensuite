{"version":3,"file":"element-model.js","sourceRoot":"","sources":["../../../src/gfx/surface/element-model.ts"],"names":[],"mappings":"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","sourcesContent":["import type { EditorHost } from '@blocksuite/block-std';\nimport type { IVec, SerializedXYWH, XYWH } from '@blocksuite/global/utils';\n\nimport {\n  Bound,\n  deserializeXYWH,\n  DisposableGroup,\n  getBoundsWithRotation,\n  getPointsFromBoundsWithRotation,\n  linePolygonIntersects,\n  PointLocation,\n  polygonGetPointTangent,\n  polygonNearestPoint,\n  randomSeed,\n  rotatePoints,\n} from '@blocksuite/global/utils';\nimport { DocCollection, type Y } from '@blocksuite/store';\nimport { createMutex } from 'lib0/mutex';\n\nimport type { GfxBlockElementModel, GfxModel } from '../gfx-block-model.js';\nimport type { SurfaceBlockModel } from './surface-model.js';\n\nimport {\n  convertProps,\n  field,\n  getDerivedProps,\n  getFieldPropsSet,\n  local,\n  updateDerivedProps,\n  watch,\n} from './decorators/index.js';\n\nexport type BaseElementProps = {\n  index: string;\n  seed: number;\n};\n\nexport type GfxCompatibleProps = {\n  xywh: SerializedXYWH;\n  index: string;\n};\n\nexport type SerializedElement = Record<string, unknown> & {\n  type: string;\n  xywh: SerializedXYWH;\n  id: string;\n  index: string;\n  props: Record<string, unknown>;\n};\n\nexport interface PointTestOptions {\n  /**\n   * The threshold of the hit test. The unit is pixel.\n   */\n  hitThreshold?: number;\n\n  /**\n   * The padding of the response area for each element when do the hit testing. The unit is pixel.\n   */\n  responsePadding?: [number, number];\n\n  /**\n   * If true, the transparent area of the element will be ignored during the point inclusion test.\n   * Otherwise, the transparent area will be considered as filled area.\n   *\n   * Default is true.\n   */\n  ignoreTransparent?: boolean;\n\n  zoom?: number;\n}\n\nexport interface GfxElementGeometry {\n  containsBound(bound: Bound): boolean;\n  getNearestPoint(point: IVec): IVec;\n  getLineIntersections(start: IVec, end: IVec): PointLocation[] | null;\n  getRelativePointLocation(point: IVec): PointLocation;\n  includesPoint(\n    x: number,\n    y: number,\n    options: PointTestOptions,\n    host: EditorHost\n  ): boolean;\n  intersectsBound(bound: Bound): boolean;\n}\n\nexport const gfxContainerSymbol = Symbol('GfxContainerElement');\n\nexport const isGfxContainerElm = (elm: unknown): elm is GfxContainerElement => {\n  return (elm as GfxContainerElement)[gfxContainerSymbol] === true;\n};\n\nexport interface GfxContainerElement extends GfxCompatibleProps {\n  [gfxContainerSymbol]: true;\n  childIds: string[];\n  childElements: GfxModel[];\n  hasDescendant(element: string | GfxModel): boolean;\n}\n\nexport abstract class GfxPrimitiveElementModel<\n  Props extends BaseElementProps = BaseElementProps,\n> implements GfxElementGeometry\n{\n  private _lastXYWH!: SerializedXYWH;\n\n  protected _disposable = new DisposableGroup();\n\n  protected _id: string;\n\n  protected _local = new Map<string | symbol, unknown>();\n\n  protected _onChange: (payload: {\n    props: Record<string, unknown>;\n    oldValues: Record<string, unknown>;\n    local: boolean;\n  }) => void;\n\n  /**\n   * Used to store a copy of data in the yMap.\n   */\n  protected _preserved = new Map<string, unknown>();\n\n  protected _stashed: Map<keyof Props | string, unknown>;\n\n  abstract rotate: number;\n\n  surface!: SurfaceBlockModel;\n\n  abstract xywh: SerializedXYWH;\n\n  yMap: Y.Map<unknown>;\n\n  get connectable() {\n    return true;\n  }\n\n  get deserializedXYWH() {\n    if (!this._lastXYWH || this.xywh !== this._lastXYWH) {\n      const xywh = this.xywh;\n      this._local.set('deserializedXYWH', deserializeXYWH(xywh));\n      this._lastXYWH = xywh;\n    }\n\n    return (this._local.get('deserializedXYWH') as XYWH) ?? [0, 0, 0, 0];\n  }\n\n  /**\n   * The bound of the element after rotation.\n   * The bound without rotation should be created by `Bound.deserialize(this.xywh)`.\n   */\n  get elementBound() {\n    if (this.rotate) {\n      return Bound.from(getBoundsWithRotation(this));\n    }\n\n    return Bound.deserialize(this.xywh);\n  }\n\n  get externalBound(): Bound | null {\n    if (!this._local.has('externalBound')) {\n      const bound = this.externalXYWH\n        ? Bound.deserialize(this.externalXYWH)\n        : null;\n\n      this._local.set('externalBound', bound);\n    }\n\n    return this._local.get('externalBound') as Bound | null;\n  }\n\n  get group(): GfxGroupLikeElementModel | null {\n    return this.surface.getGroup(this.id);\n  }\n\n  get groups() {\n    return this.surface.getGroups(this.id);\n  }\n\n  get h() {\n    return this.deserializedXYWH[3];\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get isConnected() {\n    return this.surface.hasElementById(this.id);\n  }\n\n  abstract get type(): string;\n\n  get w() {\n    return this.deserializedXYWH[2];\n  }\n\n  get x() {\n    return this.deserializedXYWH[0];\n  }\n\n  get y() {\n    return this.deserializedXYWH[1];\n  }\n\n  constructor(options: {\n    id: string;\n    yMap: Y.Map<unknown>;\n    model: SurfaceBlockModel;\n    stashedStore: Map<unknown, unknown>;\n    onChange: (payload: {\n      props: Record<string, unknown>;\n      oldValues: Record<string, unknown>;\n      local: boolean;\n    }) => void;\n  }) {\n    const { id, yMap, model, stashedStore, onChange } = options;\n\n    this._id = id;\n    this.yMap = yMap;\n    this.surface = model;\n    this._stashed = stashedStore as Map<keyof Props, unknown>;\n    this._onChange = onChange;\n\n    this.index = 'a0';\n    this.seed = randomSeed();\n  }\n\n  static propsToY(props: Record<string, unknown>) {\n    return props;\n  }\n\n  containsBound(bounds: Bound): boolean {\n    return getPointsFromBoundsWithRotation(this).some(point =>\n      bounds.containsPoint(point)\n    );\n  }\n\n  getLineIntersections(start: IVec, end: IVec) {\n    const points = getPointsFromBoundsWithRotation(this);\n    return linePolygonIntersects(start, end, points);\n  }\n\n  getNearestPoint(point: IVec) {\n    const points = getPointsFromBoundsWithRotation(this);\n    return polygonNearestPoint(points, point);\n  }\n\n  getRelativePointLocation(relativePoint: IVec) {\n    const bound = Bound.deserialize(this.xywh);\n    const point = bound.getRelativePoint(relativePoint);\n    const rotatePoint = rotatePoints([point], bound.center, this.rotate)[0];\n    const points = rotatePoints(bound.points, bound.center, this.rotate);\n    const tangent = polygonGetPointTangent(points, rotatePoint);\n    return new PointLocation(rotatePoint, tangent);\n  }\n\n  includesPoint(\n    x: number,\n    y: number,\n    _: PointTestOptions,\n    __: EditorHost\n  ): boolean {\n    return this.elementBound.isPointInBound([x, y]);\n  }\n\n  intersectsBound(bound: Bound): boolean {\n    return (\n      this.containsBound(bound) ||\n      bound.points.some((point, i, points) =>\n        this.getLineIntersections(point, points[(i + 1) % points.length])\n      )\n    );\n  }\n\n  onCreated() {}\n\n  pop(prop: keyof Props | string) {\n    if (!this._stashed.has(prop)) {\n      return;\n    }\n\n    const value = this._stashed.get(prop);\n    this._stashed.delete(prop);\n    // @ts-ignore\n    delete this[prop];\n\n    if (getFieldPropsSet(this).has(prop as string)) {\n      this.surface.doc.transact(() => {\n        this.yMap.set(prop as string, value);\n      });\n    } else {\n      console.warn('pop a prop that is not field or local:', prop);\n    }\n  }\n\n  serialize() {\n    const result = this.yMap.toJSON();\n    result.xywh = this.xywh;\n    return result as SerializedElement;\n  }\n\n  stash(prop: keyof Props | string) {\n    if (this._stashed.has(prop)) {\n      return;\n    }\n\n    if (!getFieldPropsSet(this).has(prop as string)) {\n      return;\n    }\n\n    const curVal = this[prop as unknown as keyof GfxPrimitiveElementModel];\n\n    this._stashed.set(prop, curVal);\n\n    Object.defineProperty(this, prop, {\n      configurable: true,\n      enumerable: true,\n      get: () => this._stashed.get(prop),\n      set: (original: unknown) => {\n        const value = convertProps(prop as string, original, this);\n        const oldValue = this._stashed.get(prop);\n        const derivedProps = getDerivedProps(\n          prop as string,\n          original,\n          this as unknown as GfxPrimitiveElementModel\n        );\n\n        this._stashed.set(prop, value);\n        this._onChange({\n          props: {\n            [prop]: value,\n          },\n          oldValues: {\n            [prop]: oldValue,\n          },\n          local: true,\n        });\n\n        this.surface['hooks'].update.emit({\n          id: this.id,\n          props: {\n            [prop]: value,\n          },\n          oldValues: {\n            [prop]: oldValue,\n          },\n        });\n\n        updateDerivedProps(\n          derivedProps,\n          this as unknown as GfxPrimitiveElementModel\n        );\n      },\n    });\n  }\n\n  @local()\n  accessor display: boolean = true;\n\n  @watch((_, instance) => {\n    instance['_local'].delete('externalBound');\n  })\n\n  /**\n   * In some cases, you need to draw something related to the element, but it does not belong to the element itself.\n   * And it is also interactive, you can select element by clicking on it. E.g. the title of the group element.\n   * In this case, we need to store this kind of external xywh in order to do hit test. This property should not be synced to the doc.\n   * This property should be updated every time it gets rendered.\n   */\n  @local()\n  accessor externalXYWH: SerializedXYWH | undefined = undefined;\n\n  @field()\n  accessor index!: string;\n\n  @local()\n  accessor opacity: number = 1;\n\n  @field()\n  accessor seed!: number;\n}\n\nexport abstract class GfxGroupLikeElementModel<\n    Props extends BaseElementProps = BaseElementProps,\n  >\n  extends GfxPrimitiveElementModel<Props>\n  implements GfxContainerElement\n{\n  private _childBoundCacheKey: string = '';\n\n  private _childIds: string[] = [];\n\n  private _mutex = createMutex();\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  abstract children: Y.Map<any>;\n\n  [gfxContainerSymbol] = true as const;\n\n  get childElements() {\n    const elements: GfxModel[] = [];\n\n    for (const key of this.childIds) {\n      const element =\n        this.surface.getElementById(key) ||\n        (this.surface.doc.getBlockById(key) as GfxBlockElementModel);\n\n      element && elements.push(element);\n    }\n\n    return elements;\n  }\n\n  /**\n   * The ids of the children. Its role is to provide a unique way to access the children.\n   * You should update this field through `setChildIds` when the children are added or removed.\n   */\n  get childIds() {\n    return this._childIds;\n  }\n\n  get xywh() {\n    if (\n      !this._local.has('xywh') ||\n      this.childElements.reduce(\n        (pre, model) => pre + (model.xywh ?? ''),\n        ''\n      ) !== this._childBoundCacheKey\n    ) {\n      this._mutex(() => {\n        this._updateXYWH();\n      });\n    }\n\n    return (this._local.get('xywh') as SerializedXYWH) ?? '[0,0,0,0]';\n  }\n\n  set xywh(_) {}\n\n  private _updateXYWH() {\n    let bound: Bound | undefined;\n    let cacheKey = '';\n    const oldValue = (this._local.get('xywh') as SerializedXYWH) ?? '[0,0,0,0]';\n\n    this.childElements.forEach(child => {\n      cacheKey += child.xywh ?? '';\n      bound = bound ? bound.unite(child.elementBound) : child.elementBound;\n    });\n\n    if (bound) {\n      this._local.set('xywh', bound.serialize());\n      this._childBoundCacheKey = cacheKey;\n    } else {\n      this._local.delete('xywh');\n      this._childBoundCacheKey = '';\n    }\n\n    this._onChange({\n      props: {\n        xywh: bound?.serialize(),\n      },\n      oldValues: {\n        xywh: oldValue,\n      },\n      local: true,\n    });\n  }\n\n  /**\n   * @deprecated Use `getAllDescendantElements` instead.\n   * Get all descendants of this group\n   * @param withoutGroup if true, will not include group element\n   */\n  descendants(withoutGroup = true) {\n    return this.childElements.reduce((prev, child) => {\n      if (child instanceof GfxGroupLikeElementModel) {\n        prev = prev.concat(child.descendants());\n\n        !withoutGroup && prev.push(child as GfxPrimitiveElementModel);\n      } else {\n        prev.push(child);\n      }\n\n      return prev;\n    }, [] as GfxModel[]);\n  }\n\n  /**\n   * The actual field that stores the children of the group.\n   * It should be a ymap decorated with `@field`.\n   */\n  hasChild(element: string | GfxModel) {\n    return (\n      (typeof element === 'string'\n        ? this.children?.has(element)\n        : this.children?.has(element.id)) ?? false\n    );\n  }\n\n  /**\n   * Check if the group has the given descendant.\n   */\n  hasDescendant(element: string | GfxModel) {\n    const groups = this.surface.getGroups(\n      typeof element === 'string' ? element : element.id\n    );\n\n    return groups.some(group => group.id === this.id);\n  }\n\n  /**\n   * Remove the child from the group\n   */\n  abstract removeChild(id: string): void;\n\n  /**\n   * Set the new value of the childIds\n   * @param value the new value of the childIds\n   * @param fromLocal if true, the change is happened in the local\n   */\n  setChildIds(value: string[], fromLocal: boolean) {\n    const oldChildIds = this.childIds;\n    this._childIds = value;\n\n    this._onChange({\n      props: {\n        childIds: value,\n      },\n      oldValues: {\n        childIds: oldChildIds,\n      },\n      local: fromLocal,\n    });\n\n    this.surface['hooks'].update.emit({\n      id: this.id,\n      props: {\n        childIds: value,\n      },\n      oldValues: {\n        childIds: oldChildIds,\n      },\n    });\n  }\n}\n\nexport abstract class GfxLocalElementModel {\n  private _lastXYWH: SerializedXYWH = '[0,0,-1,-1]';\n\n  protected _local = new Map<string | symbol, unknown>();\n\n  opacity: number = 1;\n\n  abstract rotate: number;\n\n  abstract xywh: SerializedXYWH;\n\n  get deserializedXYWH() {\n    if (this.xywh !== this._lastXYWH) {\n      const xywh = this.xywh;\n      this._local.set('deserializedXYWH', deserializeXYWH(xywh));\n      this._lastXYWH = xywh;\n    }\n\n    return this._local.get('deserializedXYWH') as XYWH;\n  }\n\n  get h() {\n    return this.deserializedXYWH[3];\n  }\n\n  get w() {\n    return this.deserializedXYWH[2];\n  }\n\n  get x() {\n    return this.deserializedXYWH[0];\n  }\n\n  get y() {\n    return this.deserializedXYWH[1];\n  }\n}\n\nexport function syncElementFromY(\n  model: GfxPrimitiveElementModel,\n  callback: (payload: {\n    props: Record<string, unknown>;\n    oldValues: Record<string, unknown>;\n    local: boolean;\n  }) => void\n) {\n  const disposables: Record<string, () => void> = {};\n  const observer = (\n    event: Y.YMapEvent<unknown>,\n    transaction: Y.Transaction\n  ) => {\n    const props: Record<string, unknown> = {};\n    const oldValues: Record<string, unknown> = {};\n\n    event.keysChanged.forEach(key => {\n      const type = event.changes.keys.get(key);\n      const oldValue = event.changes.keys.get(key)?.oldValue;\n\n      if (!type) {\n        return;\n      }\n\n      if (type.action === 'update' || type.action === 'add') {\n        const value = model.yMap.get(key);\n\n        if (value instanceof DocCollection.Y.Text) {\n          disposables[key]?.();\n          disposables[key] = watchText(key, value, callback);\n        }\n\n        model['_preserved'].set(key, value);\n        props[key] = value;\n        oldValues[key] = oldValue;\n      }\n    });\n\n    callback({\n      props,\n      oldValues,\n      local: transaction.local,\n    });\n  };\n\n  Array.from(model.yMap.entries()).forEach(([key, value]) => {\n    if (value instanceof DocCollection.Y.Text) {\n      disposables[key] = watchText(key, value, callback);\n    }\n\n    model['_preserved'].set(key, value);\n  });\n\n  model.yMap.observe(observer);\n  disposables['ymap'] = () => {\n    model.yMap.unobserve(observer);\n  };\n\n  return () => {\n    Object.values(disposables).forEach(fn => fn());\n  };\n}\n\nfunction watchText(\n  key: string,\n  value: Y.Text,\n  callback: (payload: {\n    props: Record<string, unknown>;\n    oldValues: Record<string, unknown>;\n    local: boolean;\n  }) => void\n) {\n  const fn = (_: Y.YTextEvent, transaction: Y.Transaction) => {\n    callback({\n      props: {\n        [key]: value,\n      },\n      oldValues: {},\n      local: transaction.local,\n    });\n  };\n\n  value.observe(fn);\n\n  return () => {\n    value.unobserve(fn);\n  };\n}\n"]}