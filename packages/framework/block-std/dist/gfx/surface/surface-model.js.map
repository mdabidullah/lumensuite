{"version":3,"file":"surface-model.js","sourceRoot":"","sources":["../../../src/gfx/surface/surface-model.ts"],"names":[],"mappings":"AAEA,OAAO,EAAoB,IAAI,EAAE,MAAM,0BAA0B,CAAC;AAClE,OAAO,EAAE,UAAU,EAAE,aAAa,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAC;AAEtE,OAAO,EAAE,oBAAoB,EAAE,MAAM,wBAAwB,CAAC;AAC9D,OAAO,EAAE,mBAAmB,EAAE,kBAAkB,EAAE,MAAM,uBAAuB,CAAC;AAChF,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AACtD,OAAO,EAEL,wBAAwB,EACxB,wBAAwB,GACzB,MAAM,oBAAoB,CAAC;AAkB5B,MAAM,OAAO,iBAAkB,SAAQ,UAA6B;IAoDlE,IAAI,aAAa;QACf,MAAM,MAAM,GAA+B,EAAE,CAAC;QAC9C,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QAC/D,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,IAAI,sBAAsB;QACxB,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC3C,CAAC;IAED;QACE,KAAK,EAAE,CAAC;QA9DA,oBAAe,GAAG,oBAAoB,EAAE,CAAC;QAEzC,oBAAe,GAMrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAEd,mBAAc,GAAG,IAAI,GAAG,EAO/B,CAAC;QAEM,oBAAe,GAAG,IAAI,GAAG,EAAkB,CAAC;QAE5C,oBAAe,GAAG,IAAI,GAAG,EAAsC,CAAC;QAEhE,qBAAgB,GAAG,IAAI,GAAG,EAAoB,CAAC;QAE/C,uBAAkB,GAAG,IAAI,CAAC;QAEpC,iBAAY,GAAG,IAAI,IAAI,EAAkC,CAAC;QAE1D,mBAAc,GAAG,IAAI,IAAI,EAKrB,CAAC;QAEL,mBAAc,GAAG,IAAI,IAAI,EAAsB,CAAC;QAEhD;;;WAGG;QACO,UAAK,GAAG;YAChB,MAAM,EAAE,IAAI,IAAI,EAAqC;YACrD,MAAM,EAAE,IAAI,IAAI,EAIZ;SACL,CAAC;QAcA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IACxC,CAAC;IAEO,uBAAuB,CAC7B,KAA8B,EAC9B,OAOC;QAED,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC;QAEpC,IAAI,CAAC,EAAE,EAAE,CAAC;YACR,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC7C,CAAC;QAED,MAAM,IAAI,GAAG,IAAI,aAAa,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACvC,MAAM,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAC9C,IAAc,EACd,EAAY,EACZ,IAAI,EACJ;YACE,GAAG,OAAO;YACV,SAAS,EAAE,IAAI;SAChB,CACF,CAAC;QAEF,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAc,EAAE,KAAK,CAAC,CAAC;QAE9C,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAEnB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAC9B,IAAI,KAAK,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE,CAAC;gBAC7B,aAAa;gBACb,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;YACvC,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,YAAY,CAAC;IACtB,CAAC;IAEO,sBAAsB,CAC5B,IAAY,EACZ,EAAU,EACV,IAAoB,EACpB,OASC;QAED,MAAM,OAAO,GAAG,IAAI,GAAG,EAA4B,CAAC;QACpD,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAExC,IAAI,CAAC,IAAI,EAAE,CAAC;YACV,MAAM,IAAI,KAAK,CAAC,yBAAyB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAC/D,CAAC;QACD,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC;QAEnC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;QACtB,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC,aAAa,IAAI,KAAK,CAAC;QAEjD,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,aAAa;QACb,IAAI,CAAC,iBAAiB,CAAC,GAAG,KAAK,CAAC;QAEhC,MAAM,YAAY,GAAG,IAAI,IAAI,CAAC;YAC5B,EAAE;YACF,IAAI;YACJ,KAAK,EAAE,IAAI;YACX,YAAY,EAAE,OAAO;YACrB,QAAQ,EAAE,OAAO,CAAC,EAAE,CAAC,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,GAAG,OAAO,EAAE,CAAC;SACrE,CAA6B,CAAC;QAE/B,aAAa;QACb,OAAO,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC/B,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC;QACvB,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;QAExB,MAAM,OAAO,GAAG,GAAG,EAAE;YACnB,OAAO,GAAG,KAAK,CAAC;YAChB,YAAY,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC;QACxC,CAAC,CAAC;QAEF,MAAM,KAAK,GAAG,GAAG,EAAE;YACjB,mBAAmB,CAAC,IAAI,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;YAClD,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;YACjD,YAAY,CAAC,aAAa,CAAC,CAAC,GAAG,CAC7B,gBAAgB,CAAC,YAAY,EAAE,OAAO,CAAC,EAAE;gBACvC,OAAO;oBACL,OAAO,CAAC,QAAQ,CAAC;wBACf,EAAE;wBACF,GAAG,OAAO;qBACX,CAAC,CAAC;YACP,CAAC,CAAC,CACH,CAAC;YACF,OAAO,GAAG,IAAI,CAAC;YACf,YAAY,CAAC,SAAS,EAAE,CAAC;QAC3B,CAAC,CAAC;QAEF,OAAO;YACL,KAAK,EAAE,YAAY;YACnB,KAAK;YACL,OAAO;SACR,CAAC;IACJ,CAAC;IAEO,kBAAkB;QACxB,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAG,CAAC;QAC/C,MAAM,SAAS,GAAG,CAAC,IAAY,EAAE,KAA+B,EAAE,EAAE;YAClE,MAAM,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YAE9D,IAAI,gBAAgB,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;gBAC3C,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC/B,CAAC;YAED,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;QACnD,CAAC,CAAC;QACF,MAAM,cAAc,GAAG,CAAC,IAAY,EAAE,KAA+B,EAAE,EAAE;YACvE,MAAM,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YAC9D,MAAM,KAAK,GAAG,gBAAgB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAE9C,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE,CAAC;gBACjB,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACpC,CAAC;QACH,CAAC,CAAC;QACF,MAAM,mBAAmB,GAAG,CAC1B,KAAkC,EAClC,WAA0B,EAC1B,EAAE;YACF,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,KAAK,CAAC;YACvC,MAAM,aAAa,GAGb,EAAE,CAAC;YACT,MAAM,eAAe,GAGf,EAAE,CAAC;YAET,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;gBACvB,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBACpC,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBAElD,QAAQ,MAAM,EAAE,MAAM,EAAE,CAAC;oBACvB,KAAK,KAAK;wBACR,IAAI,OAAO,EAAE,CAAC;4BACZ,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;4BAC7C,MAAM,KAAK,GAAG,QAAQ;gCACpB,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAE;gCAC9B,CAAC,CAAC,IAAI,CAAC,sBAAsB,CACzB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAW,EAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAW,EAC3B,OAAO,EACP;oCACE,QAAQ,EAAE,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC;oCACtD,aAAa,EAAE,IAAI;iCACpB,CACF,CAAC;4BAEN,CAAC,QAAQ,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;4BAChD,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;4BACzC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBAC5B,CAAC;wBACD,MAAM;oBACR,KAAK,QAAQ;wBACX,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC;4BAChC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAE,CAAC;4BACxD,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;4BAChC,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;4BAClC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;4BAC/B,eAAe,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;wBAC3C,CAAC;wBACD,MAAM;gBACV,CAAC;YACH,CAAC,CAAC,CAAC;YAEH,aAAa,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE;gBACzC,KAAK,EAAE,CAAC;gBACR,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,EAAE,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC;YACrE,CAAC,CAAC,CAAC;YACH,eAAe,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE;gBAC7C,OAAO,EAAE,CAAC;gBACV,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;oBACvB,EAAE,EAAE,KAAK,CAAC,EAAE;oBACZ,IAAI,EAAE,KAAK,CAAC,IAAI;oBAChB,KAAK;oBACL,KAAK,EAAE,WAAW,CAAC,KAAK;iBACzB,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,YAAY,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;YAChC,MAAM,KAAK,GAAG,IAAI,CAAC,sBAAsB,CACvC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAW,EACzB,GAAG,CAAC,GAAG,CAAC,IAAI,CAAW,EACvB,GAAG,EACH;gBACE,QAAQ,EAAE,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC;gBACtD,aAAa,EAAE,IAAI;aACpB,CACF,CAAC;YAEF,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE;YAC/C,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC7B,KAAK,EAAE,CAAC;QACV,CAAC,CAAC,CAAC;QACH,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;QAE1C,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE;YACnB,YAAY,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,SAAS,CAAC,IAAY,EAAE,KAA8B;QAC5D,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAExC,IAAI,CAAC,IAAI,EAAE,CAAC;YACV,MAAM,IAAI,KAAK,CAAC,yBAAyB,IAAI,EAAE,CAAC,CAAC;QACnD,CAAC;QAED,aAAa;QACb,OAAO,CAAC,IAAI,CAAC,QAAQ,IAAI,wBAAwB,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;IACrE,CAAC;IAEO,yBAAyB;QAC/B,MAAM,UAAU,GAAG,CAAC,SAAiB,EAAE,OAAe,EAAE,EAAE;YACxD,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;YAC7C,IAAI,CAAC,gBAAgB,CAAC,GAAG,CACvB,OAAO,EACP,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAC7D,CAAC;QACJ,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,CAAC,SAAiB,EAAE,OAAe,EAAE,EAAE;YAC7D,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC;gBACxC,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,SAAS,CAAE,CAAC;gBACnD,IAAI,KAAK,KAAK,OAAO,EAAE,CAAC;oBACtB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBACzC,CAAC;YACH,CAAC;YAED,IAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;gBACvC,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAE,CAAC;gBACrD,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;gBAE1C,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE,CAAC;oBACjB,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oBAC1B,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACjE,CAAC;YACH,CAAC;QACH,CAAC,CAAC;QACF,MAAM,OAAO,GAAG,CACd,OAAiC,EACI,EAAE,CACvC,OAAO,YAAY,wBAAwB,CAAC;QAE9C,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACjC,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;gBACnB,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBAC/B,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;gBAChC,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;YAC3C,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,EAAE,CAAE,CAAC;YAEzC,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,UAAU,CAAC,EAAE,CAAC;gBAC7C,SAAS,CAAC,UAAU,CAAc,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBACpD,eAAe,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;gBAC/B,CAAC,CAAC,CAAC;gBAEH,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBACjC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;gBAC1B,CAAC,CAAC,CAAC;gBAEH,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;oBAClC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;gBACzB,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9B,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,EAAE,CAAE,CAAC;YAEzC,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;gBACrB,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBACjC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;gBAC1B,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;YACvC,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;gBACnB,MAAM,QAAQ,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBAE5D,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,eAAe,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;YAC5D,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE;YACnE,QAAQ,IAAI,EAAE,CAAC;gBACb,KAAK,QAAQ,CAAC,CAAC,CAAC;oBACd,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;oBAEhC,IAAI,KAAK,EAAE,CAAC;wBACV,0DAA0D;wBAC1D,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;oBACxB,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE;YACnB,YAAY,CAAC,OAAO,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAES,cAAc,CACtB,OAMC;QAED,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;IAC/C,CAAC;IAES,KAAK;QACb,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,UAAU,CACR,KAAoC;QAEpC,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;YACtB,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;QACzD,CAAC;QAED,MAAM,EAAE,GAAG,MAAM,EAAE,CAAC;QAEpB,aAAa;QACb,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;QAEd,MAAM,YAAY,GAAG,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE;YACvD,QAAQ,EAAE,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC;SACvD,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;QAE1C,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE;YACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAG,CAAC,GAAG,CAAC,EAAE,EAAE,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;QAEH,OAAO,EAAE,CAAC;IACZ,CAAC;IAES,gBAAgB,KAAI,CAAC;IAEtB,OAAO;QACd,KAAK,CAAC,OAAO,EAAE,CAAC;QAEhB,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;QAC9B,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;QAE9B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAE5B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;IAC9B,CAAC;IAED,cAAc,CAAC,EAAU;QACvB,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,KAAK,IAAI,IAAI,CAAC;IACpD,CAAC;IAED,iBAAiB,CAAC,IAAY;QAC5B,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;IAC9C,CAAC;IAED,QAAQ,CAGN,EAAU;QACV,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,EAAE,CAAC;YACjC,CAAC,CAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,EAAE,CAAE,CAAO;YAC3D,CAAC,CAAC,IAAI,CAAC;IACX,CAAC;IAED,SAAS,CAAC,EAAU;QAClB,MAAM,MAAM,GAAiD,EAAE,CAAC;QAChE,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAE9B,OAAO,KAAK,EAAE,CAAC;YACb,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnB,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAClC,CAAC;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,cAAc,CAAC,EAAU;QACvB,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACrC,CAAC;IAED,WAAW,CAAC,EAAU;QACpB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAEhC,OAAO,KAAK,EAAE,IAAI,KAAK,SAAS,CAAC;IACnC,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;YACtB,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;QAC5D,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,CAAC;YAC7B,OAAO;QACT,CAAC;QAED,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE;YACrB,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,EAAE,CAAE,CAAC;YACzC,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAEhC,IAAI,OAAO,YAAY,wBAAwB,EAAE,CAAC;gBAChD,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBACjC,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC;wBACjC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;oBAC9B,CAAC;yBAAM,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;wBACtC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAE,CAAC,KAAK,CAAC,CAAC;oBAC1D,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;YAED,IAAI,KAAK,EAAE,CAAC;gBACV,0DAA0D;gBAC1D,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;YACxB,CAAC;YAED,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAErC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;gBACrB,EAAE;gBACF,KAAK,EAAE,OAAmC;gBAC1C,IAAI,EAAE,OAAO,CAAC,IAAI;aACnB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CACX,EAAU,EACV,KAAiB;QAEjB,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;YACtB,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;QAC5D,CAAC;QAED,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QAE7C,IAAI,CAAC,YAAY,EAAE,CAAC;YAClB,MAAM,IAAI,KAAK,CAAC,WAAW,EAAE,eAAe,CAAC,CAAC;QAChD,CAAC;QAED,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE;YACrB,KAAK,GAAG,IAAI,CAAC,SAAS,CACpB,YAAY,CAAC,IAAI,EACjB,KAAgC,CAC5B,CAAC;YACP,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;gBAC7C,aAAa;gBACb,YAAY,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;YAC5B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CACF","sourcesContent":["import type { Boxed, Y } from '@blocksuite/store';\n\nimport { type Constructor, Slot } from '@blocksuite/global/utils';\nimport { BlockModel, DocCollection, nanoid } from '@blocksuite/store';\n\nimport { createDecoratorState } from './decorators/common.js';\nimport { initializeObservers, initializeWatchers } from './decorators/index.js';\nimport { syncElementFromY } from './element-model.js';\nimport {\n  type BaseElementProps,\n  GfxGroupLikeElementModel,\n  GfxPrimitiveElementModel,\n} from './element-model.js';\n\nexport type SurfaceBlockProps = {\n  elements: Boxed<Y.Map<Y.Map<unknown>>>;\n};\n\nexport interface ElementUpdatedData {\n  id: string;\n  props: Record<string, unknown>;\n  oldValues: Record<string, unknown>;\n  local: boolean;\n}\n\nexport type SurfaceMiddleware = (\n  surface: SurfaceBlockModel,\n  hooks: SurfaceBlockModel['hooks']\n) => () => void;\n\nexport class SurfaceBlockModel extends BlockModel<SurfaceBlockProps> {\n  protected _decoratorState = createDecoratorState();\n\n  protected _elementCtorMap: Record<\n    string,\n    Constructor<\n      GfxPrimitiveElementModel,\n      ConstructorParameters<typeof GfxPrimitiveElementModel>\n    >\n  > = Object.create(null);\n\n  protected _elementModels = new Map<\n    string,\n    {\n      mount: () => void;\n      unmount: () => void;\n      model: GfxPrimitiveElementModel;\n    }\n  >();\n\n  protected _elementToGroup = new Map<string, string>();\n\n  protected _elementTypeMap = new Map<string, GfxPrimitiveElementModel[]>();\n\n  protected _groupToElements = new Map<string, string[]>();\n\n  protected _surfaceBlockModel = true;\n\n  elementAdded = new Slot<{ id: string; local: boolean }>();\n\n  elementRemoved = new Slot<{\n    id: string;\n    type: string;\n    model: GfxPrimitiveElementModel;\n    local: boolean;\n  }>();\n\n  elementUpdated = new Slot<ElementUpdatedData>();\n\n  /**\n   * Hooks is used to attach extra logic when calling `addElement`、`updateElement`(or assign property directly) and `removeElement`.\n   * It's useful when dealing with relation between different model.\n   */\n  protected hooks = {\n    update: new Slot<Omit<ElementUpdatedData, 'local'>>(),\n    remove: new Slot<{\n      id: string;\n      type: string;\n      model: GfxPrimitiveElementModel;\n    }>(),\n  };\n\n  get elementModels() {\n    const models: GfxPrimitiveElementModel[] = [];\n    this._elementModels.forEach(model => models.push(model.model));\n    return models;\n  }\n\n  get registeredElementTypes() {\n    return Object.keys(this._elementCtorMap);\n  }\n\n  constructor() {\n    super();\n    this.created.once(() => this._init());\n  }\n\n  private _createElementFromProps(\n    props: Record<string, unknown>,\n    options: {\n      onChange: (payload: {\n        id: string;\n        props: Record<string, unknown>;\n        oldValues: Record<string, unknown>;\n        local: boolean;\n      }) => void;\n    }\n  ) {\n    const { type, id, ...rest } = props;\n\n    if (!id) {\n      throw new Error('Cannot find id in props');\n    }\n\n    const yMap = new DocCollection.Y.Map();\n    const elementModel = this._createElementFromYMap(\n      type as string,\n      id as string,\n      yMap,\n      {\n        ...options,\n        newCreate: true,\n      }\n    );\n\n    props = this._propsToY(type as string, props);\n\n    yMap.set('type', type);\n    yMap.set('id', id);\n\n    Object.keys(rest).forEach(key => {\n      if (props[key] !== undefined) {\n        // @ts-ignore\n        elementModel.model[key] = props[key];\n      }\n    });\n\n    return elementModel;\n  }\n\n  private _createElementFromYMap(\n    type: string,\n    id: string,\n    yMap: Y.Map<unknown>,\n    options: {\n      onChange: (payload: {\n        id: string;\n        props: Record<string, unknown>;\n        oldValues: Record<string, unknown>;\n        local: boolean;\n      }) => void;\n      skipFieldInit?: boolean;\n      newCreate?: boolean;\n    }\n  ) {\n    const stashed = new Map<string | symbol, unknown>();\n    const Ctor = this._elementCtorMap[type];\n\n    if (!Ctor) {\n      throw new Error(`Invalid element type: ${yMap.get('type')}`);\n    }\n    const state = this._decoratorState;\n\n    state.creating = true;\n    state.skipField = options.skipFieldInit ?? false;\n\n    let mounted = false;\n    // @ts-ignore\n    Ctor['_decoratorState'] = state;\n\n    const elementModel = new Ctor({\n      id,\n      yMap,\n      model: this,\n      stashedStore: stashed,\n      onChange: payload => mounted && options.onChange({ id, ...payload }),\n    }) as GfxPrimitiveElementModel;\n\n    // @ts-ignore\n    delete Ctor['_decoratorState'];\n    state.creating = false;\n    state.skipField = false;\n\n    const unmount = () => {\n      mounted = false;\n      elementModel['_disposable'].dispose();\n    };\n\n    const mount = () => {\n      initializeObservers(Ctor.prototype, elementModel);\n      initializeWatchers(Ctor.prototype, elementModel);\n      elementModel['_disposable'].add(\n        syncElementFromY(elementModel, payload => {\n          mounted &&\n            options.onChange({\n              id,\n              ...payload,\n            });\n        })\n      );\n      mounted = true;\n      elementModel.onCreated();\n    };\n\n    return {\n      model: elementModel,\n      mount,\n      unmount,\n    };\n  }\n\n  private _initElementModels() {\n    const elementsYMap = this.elements.getValue()!;\n    const addToType = (type: string, model: GfxPrimitiveElementModel) => {\n      const sameTypeElements = this._elementTypeMap.get(type) || [];\n\n      if (sameTypeElements.indexOf(model) === -1) {\n        sameTypeElements.push(model);\n      }\n\n      this._elementTypeMap.set(type, sameTypeElements);\n    };\n    const removeFromType = (type: string, model: GfxPrimitiveElementModel) => {\n      const sameTypeElements = this._elementTypeMap.get(type) || [];\n      const index = sameTypeElements.indexOf(model);\n\n      if (index !== -1) {\n        sameTypeElements.splice(index, 1);\n      }\n    };\n    const onElementsMapChange = (\n      event: Y.YMapEvent<Y.Map<unknown>>,\n      transaction: Y.Transaction\n    ) => {\n      const { changes, keysChanged } = event;\n      const addedElements: {\n        mount: () => void;\n        model: GfxPrimitiveElementModel;\n      }[] = [];\n      const deletedElements: {\n        unmount: () => void;\n        model: GfxPrimitiveElementModel;\n      }[] = [];\n\n      keysChanged.forEach(id => {\n        const change = changes.keys.get(id);\n        const element = this.elements.getValue()!.get(id);\n\n        switch (change?.action) {\n          case 'add':\n            if (element) {\n              const hasModel = this._elementModels.has(id);\n              const model = hasModel\n                ? this._elementModels.get(id)!\n                : this._createElementFromYMap(\n                    element.get('type') as string,\n                    element.get('id') as string,\n                    element,\n                    {\n                      onChange: payload => this.elementUpdated.emit(payload),\n                      skipFieldInit: true,\n                    }\n                  );\n\n              !hasModel && this._elementModels.set(id, model);\n              addToType(model.model.type, model.model);\n              addedElements.push(model);\n            }\n            break;\n          case 'delete':\n            if (this._elementModels.has(id)) {\n              const { model, unmount } = this._elementModels.get(id)!;\n              this._elementToGroup.delete(id);\n              removeFromType(model.type, model);\n              this._elementModels.delete(id);\n              deletedElements.push({ model, unmount });\n            }\n            break;\n        }\n      });\n\n      addedElements.forEach(({ mount, model }) => {\n        mount();\n        this.elementAdded.emit({ id: model.id, local: transaction.local });\n      });\n      deletedElements.forEach(({ unmount, model }) => {\n        unmount();\n        this.elementRemoved.emit({\n          id: model.id,\n          type: model.type,\n          model,\n          local: transaction.local,\n        });\n      });\n    };\n\n    elementsYMap.forEach((val, key) => {\n      const model = this._createElementFromYMap(\n        val.get('type') as string,\n        val.get('id') as string,\n        val,\n        {\n          onChange: payload => this.elementUpdated.emit(payload),\n          skipFieldInit: true,\n        }\n      );\n\n      this._elementModels.set(key, model);\n    });\n\n    this._elementModels.forEach(({ mount, model }) => {\n      addToType(model.type, model);\n      mount();\n    });\n    elementsYMap.observe(onElementsMapChange);\n\n    this.deleted.on(() => {\n      elementsYMap.unobserve(onElementsMapChange);\n    });\n  }\n\n  private _propsToY(type: string, props: Record<string, unknown>) {\n    const ctor = this._elementCtorMap[type];\n\n    if (!ctor) {\n      throw new Error(`Invalid element type: ${type}`);\n    }\n\n    // @ts-ignore\n    return (ctor.propsToY ?? GfxPrimitiveElementModel.propsToY)(props);\n  }\n\n  private _watchGroupRelationChange() {\n    const addToGroup = (elementId: string, groupId: string) => {\n      this._elementToGroup.set(elementId, groupId);\n      this._groupToElements.set(\n        groupId,\n        (this._groupToElements.get(groupId) || []).concat(elementId)\n      );\n    };\n    const removeFromGroup = (elementId: string, groupId: string) => {\n      if (this._elementToGroup.has(elementId)) {\n        const group = this._elementToGroup.get(elementId)!;\n        if (group === groupId) {\n          this._elementToGroup.delete(elementId);\n        }\n      }\n\n      if (this._groupToElements.has(groupId)) {\n        const elements = this._groupToElements.get(groupId)!;\n        const index = elements.indexOf(elementId);\n\n        if (index !== -1) {\n          elements.splice(index, 1);\n          elements.length === 0 && this._groupToElements.delete(groupId);\n        }\n      }\n    };\n    const isGroup = (\n      element: GfxPrimitiveElementModel\n    ): element is GfxGroupLikeElementModel =>\n      element instanceof GfxGroupLikeElementModel;\n\n    this.elementModels.forEach(model => {\n      if (isGroup(model)) {\n        model.childIds.forEach(childId => {\n          addToGroup(childId, model.id);\n        });\n      }\n    });\n\n    this.elementUpdated.on(({ id, oldValues }) => {\n      const element = this.getElementById(id)!;\n\n      if (isGroup(element) && oldValues['childIds']) {\n        (oldValues['childIds'] as string[]).forEach(childId => {\n          removeFromGroup(childId, id);\n        });\n\n        element.childIds.forEach(childId => {\n          addToGroup(childId, id);\n        });\n\n        if (element.childIds.length === 0) {\n          this.removeElement(id);\n        }\n      }\n    });\n\n    this.elementAdded.on(({ id }) => {\n      const element = this.getElementById(id)!;\n\n      if (isGroup(element)) {\n        element.childIds.forEach(childId => {\n          addToGroup(childId, id);\n        });\n      }\n    });\n\n    this.elementRemoved.on(({ id, model }) => {\n      if (isGroup(model)) {\n        const children = [...(this._groupToElements.get(id) || [])];\n\n        children.forEach(childId => removeFromGroup(childId, id));\n      }\n    });\n\n    const disposeGroup = this.doc.slots.blockUpdated.on(({ type, id }) => {\n      switch (type) {\n        case 'delete': {\n          const group = this.getGroup(id);\n\n          if (group) {\n            // eslint-disable-next-line unicorn/prefer-dom-node-remove\n            group.removeChild(id);\n          }\n        }\n      }\n    });\n    this.deleted.on(() => {\n      disposeGroup.dispose();\n    });\n  }\n\n  protected _extendElement(\n    ctorMap: Record<\n      string,\n      Constructor<\n        GfxPrimitiveElementModel,\n        ConstructorParameters<typeof GfxPrimitiveElementModel>\n      >\n    >\n  ) {\n    Object.assign(this._elementCtorMap, ctorMap);\n  }\n\n  protected _init() {\n    this._initElementModels();\n    this._watchGroupRelationChange();\n    this.applyMiddlewares();\n  }\n\n  addElement<T extends object = Record<string, unknown>>(\n    props: Partial<T> & { type: string }\n  ) {\n    if (this.doc.readonly) {\n      throw new Error('Cannot add element in readonly mode');\n    }\n\n    const id = nanoid();\n\n    // @ts-ignore\n    props.id = id;\n\n    const elementModel = this._createElementFromProps(props, {\n      onChange: payload => this.elementUpdated.emit(payload),\n    });\n\n    this._elementModels.set(id, elementModel);\n\n    this.doc.transact(() => {\n      this.elements.getValue()!.set(id, elementModel.model.yMap);\n    });\n\n    return id;\n  }\n\n  protected applyMiddlewares() {}\n\n  override dispose(): void {\n    super.dispose();\n\n    this.elementAdded.dispose();\n    this.elementRemoved.dispose();\n    this.elementUpdated.dispose();\n\n    this._elementModels.forEach(({ unmount }) => unmount());\n    this._elementModels.clear();\n\n    this.hooks.update.dispose();\n    this.hooks.remove.dispose();\n  }\n\n  getElementById(id: string): GfxPrimitiveElementModel | null {\n    return this._elementModels.get(id)?.model ?? null;\n  }\n\n  getElementsByType(type: string): GfxPrimitiveElementModel[] {\n    return this._elementTypeMap.get(type) || [];\n  }\n\n  getGroup<\n    T extends\n      GfxGroupLikeElementModel<BaseElementProps> = GfxGroupLikeElementModel<BaseElementProps>,\n  >(id: string): T | null {\n    return this._elementToGroup.has(id)\n      ? (this.getElementById(this._elementToGroup.get(id)!) as T)\n      : null;\n  }\n\n  getGroups(id: string): GfxGroupLikeElementModel<BaseElementProps>[] {\n    const groups: GfxGroupLikeElementModel<BaseElementProps>[] = [];\n    let group = this.getGroup(id);\n\n    while (group) {\n      groups.push(group);\n      group = this.getGroup(group.id);\n    }\n\n    return groups;\n  }\n\n  hasElementById(id: string): boolean {\n    return this._elementModels.has(id);\n  }\n\n  isInMindmap(id: string) {\n    const group = this.getGroup(id);\n\n    return group?.type === 'mindmap';\n  }\n\n  removeElement(id: string) {\n    if (this.doc.readonly) {\n      throw new Error('Cannot remove element in readonly mode');\n    }\n\n    if (!this.hasElementById(id)) {\n      return;\n    }\n\n    this.doc.transact(() => {\n      const element = this.getElementById(id)!;\n      const group = this.getGroup(id);\n\n      if (element instanceof GfxGroupLikeElementModel) {\n        element.childIds.forEach(childId => {\n          if (this.hasElementById(childId)) {\n            this.removeElement(childId);\n          } else if (this.doc.hasBlock(childId)) {\n            this.doc.deleteBlock(this.doc.getBlock(childId)!.model);\n          }\n        });\n      }\n\n      if (group) {\n        // eslint-disable-next-line unicorn/prefer-dom-node-remove\n        group.removeChild(id);\n      }\n\n      this.elements.getValue()!.delete(id);\n\n      this.hooks.remove.emit({\n        id,\n        model: element as GfxPrimitiveElementModel,\n        type: element.type,\n      });\n    });\n  }\n\n  updateElement<T extends object = Record<string, unknown>>(\n    id: string,\n    props: Partial<T>\n  ) {\n    if (this.doc.readonly) {\n      throw new Error('Cannot update element in readonly mode');\n    }\n\n    const elementModel = this.getElementById(id);\n\n    if (!elementModel) {\n      throw new Error(`Element ${id} is not found`);\n    }\n\n    this.doc.transact(() => {\n      props = this._propsToY(\n        elementModel.type,\n        props as Record<string, unknown>\n      ) as T;\n      Object.entries(props).forEach(([key, value]) => {\n        // @ts-ignore\n        elementModel[key] = value;\n      });\n    });\n  }\n}\n"]}