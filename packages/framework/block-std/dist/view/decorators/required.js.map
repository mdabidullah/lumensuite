{"version":3,"file":"required.js","sourceRoot":"","sources":["../../../src/view/decorators/required.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,eAAe,EAAE,SAAS,EAAE,MAAM,+BAA+B,CAAC;AAI3E,MAAM,CAAC,MAAM,SAAS,GAAG;IACvB,MAAM,EAAE,CAAC,KAAc,EAAE,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ;IACrD,MAAM,EAAE,CAAC,KAAc,EAAE,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ;IACrD,OAAO,EAAE,CAAC,KAAc,EAAE,EAAE,CAAC,OAAO,KAAK,KAAK,SAAS;IACvD,MAAM,EAAE,CAAC,KAAc,EAAE,EAAE,CAAC,OAAO,KAAK,KAAK,QAAQ;IACrD,KAAK,EAAE,CAAC,KAAc,EAAE,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;IAC/C,UAAU,EAAE,CAAC,aAA0B,EAAE,EAAE,CAAC,CAAC,KAAc,EAAE,EAAE,CAC7D,KAAK,YAAY,aAAa;IAChC,OAAO,EAAE,CAAC,SAA4B,EAAE,EAAE,CAAC,CAAC,KAAc,EAAE,EAAE,CAC5D,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC;IAChD,QAAQ,EAAE,CAAC,SAA4B,EAAE,EAAE,CAAC,CAAC,KAAc,EAAE,EAAE;QAC7D,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI;YAAE,OAAO,KAAK,CAAC;QAC9D,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IAC/C,CAAC;CACF,CAAC;AAEF,SAAS,iBAAiB,CACxB,QAAW,EACX,SAA4C;IAE5C,KAAK,MAAM,CAAC,QAAQ,EAAE,SAAS,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC;QAC9D,MAAM,GAAG,GAAG,QAAmB,CAAC;QAChC,IAAI,QAAQ,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE,CAAC;YAChC,MAAM,IAAI,eAAe,CACvB,SAAS,CAAC,mBAAmB,EAC7B,YAAY,QAAQ,mBAAmB,QAAQ,CAAC,WAAW,CAAC,IAAI,GAAG,CACpE,CAAC;QACJ,CAAC;QACD,IAAI,SAAS,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;YAC3C,MAAM,IAAI,eAAe,CACvB,SAAS,CAAC,mBAAmB,EAC7B,YAAY,QAAQ,kBAAkB,QAAQ,CAAC,WAAW,CAAC,IAAI,GAAG,CACnE,CAAC;QACJ,CAAC;IACH,CAAC;AACH,CAAC;AAED,MAAM,UAAU,kBAAkB,CAChC,SAA4C;IAE5C,OAAO,UAAU,WAAoC;QACnD,MAAM,iBAAiB,GAAG,WAAW,CAAC,SAAS,CAAC,iBAAiB,CAAC;QAElE,WAAW,CAAC,SAAS,CAAC,iBAAiB,GAAG;YACxC,IAAI,iBAAiB,EAAE,CAAC;gBACtB,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/B,CAAC;YACD,iBAAiB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACrC,CAAC,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import type { Constructor } from '@blocksuite/global/utils';\nimport type { LitElement } from 'lit';\n\nimport { BlockSuiteError, ErrorCode } from '@blocksuite/global/exceptions';\n\ntype ValidatorFunction = (value: unknown) => boolean;\n\nexport const PropTypes = {\n  string: (value: unknown) => typeof value === 'string',\n  number: (value: unknown) => typeof value === 'number',\n  boolean: (value: unknown) => typeof value === 'boolean',\n  object: (value: unknown) => typeof value === 'object',\n  array: (value: unknown) => Array.isArray(value),\n  instanceOf: (expectedClass: Constructor) => (value: unknown) =>\n    value instanceof expectedClass,\n  arrayOf: (validator: ValidatorFunction) => (value: unknown) =>\n    Array.isArray(value) && value.every(validator),\n  recordOf: (validator: ValidatorFunction) => (value: unknown) => {\n    if (typeof value !== 'object' || value === null) return false;\n    return Object.values(value).every(validator);\n  },\n};\n\nfunction validatePropTypes<T extends InstanceType<Constructor>>(\n  instance: T,\n  propTypes: Record<string, ValidatorFunction>\n) {\n  for (const [propName, validator] of Object.entries(propTypes)) {\n    const key = propName as keyof T;\n    if (instance[key] === undefined) {\n      throw new BlockSuiteError(\n        ErrorCode.DefaultRuntimeError,\n        `Property ${propName} is required to ${instance.constructor.name}.`\n      );\n    }\n    if (validator && !validator(instance[key])) {\n      throw new BlockSuiteError(\n        ErrorCode.DefaultRuntimeError,\n        `Property ${propName} is invalid to ${instance.constructor.name}.`\n      );\n    }\n  }\n}\n\nexport function requiredProperties(\n  propTypes: Record<string, ValidatorFunction>\n) {\n  return function (constructor: Constructor<LitElement>) {\n    const connectedCallback = constructor.prototype.connectedCallback;\n\n    constructor.prototype.connectedCallback = function () {\n      if (connectedCallback) {\n        connectedCallback.call(this);\n      }\n      validatePropTypes(this, propTypes);\n    };\n  };\n}\n"]}