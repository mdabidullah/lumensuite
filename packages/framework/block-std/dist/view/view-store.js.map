{"version":3,"file":"view-store.js","sourceRoot":"","sources":["../../src/view/view-store.ts"],"names":[],"mappings":"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","sourcesContent":["import type { BlockComponent, WidgetComponent } from './element/index.js';\n\nimport { LifeCycleWatcher } from '../extension/index.js';\n\nexport class ViewStore extends LifeCycleWatcher {\n  static override readonly key = 'viewStore';\n\n  private readonly _blockMap = new Map<string, BlockComponent>();\n\n  private _fromId = (\n    blockId: string | undefined | null\n  ): BlockComponent | null => {\n    const id = blockId ?? this.std.doc.root?.id;\n    if (!id) {\n      return null;\n    }\n    return this._blockMap.get(id) ?? null;\n  };\n\n  private readonly _widgetMap = new Map<string, WidgetComponent>();\n\n  deleteBlock = (node: BlockComponent) => {\n    this._blockMap.delete(node.id);\n  };\n\n  deleteWidget = (node: WidgetComponent) => {\n    const id = node.dataset.widgetId as string;\n    const widgetIndex = `${node.model.id}|${id}`;\n    this._widgetMap.delete(widgetIndex);\n  };\n\n  getBlock = (id: string): BlockComponent | null => {\n    return this._blockMap.get(id) ?? null;\n  };\n\n  getWidget = (\n    widgetName: string,\n    hostBlockId: string\n  ): WidgetComponent | null => {\n    const widgetIndex = `${hostBlockId}|${widgetName}`;\n    return this._widgetMap.get(widgetIndex) ?? null;\n  };\n\n  setBlock = (node: BlockComponent) => {\n    this._blockMap.set(node.model.id, node);\n  };\n\n  setWidget = (node: WidgetComponent) => {\n    const id = node.dataset.widgetId as string;\n    const widgetIndex = `${node.model.id}|${id}`;\n    this._widgetMap.set(widgetIndex, node);\n  };\n\n  walkThrough = (\n    fn: (\n      nodeView: BlockComponent,\n      index: number,\n      parent: BlockComponent\n    ) => undefined | null | true,\n    blockId?: string | undefined | null\n  ) => {\n    const top = this._fromId(blockId);\n    if (!top) {\n      return;\n    }\n\n    const iterate =\n      (parent: BlockComponent) => (node: BlockComponent, index: number) => {\n        const result = fn(node, index, parent);\n        if (result === true) {\n          return;\n        }\n        const children = node.model.children;\n        children.forEach(child => {\n          const childNode = this._blockMap.get(child.id);\n          if (childNode) {\n            iterate(node)(childNode, children.indexOf(child));\n          }\n        });\n      };\n\n    top.model.children.forEach(child => {\n      const childNode = this._blockMap.get(child.id);\n      if (childNode) {\n        iterate(childNode)(childNode, top.model.children.indexOf(child));\n      }\n    });\n  };\n\n  override unmounted() {\n    this._blockMap.clear();\n    this._widgetMap.clear();\n  }\n}\n"]}