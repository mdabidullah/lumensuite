{"version":3,"file":"slots.js","sourceRoot":"","sources":["../../src/spec/slots.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,0BAA0B,CAAC;AAiBhD,MAAM,CAAC,MAAM,QAAQ,GAAG,GAAmB,EAAE;IAC3C,OAAO;QACL,OAAO,EAAE,IAAI,IAAI,EAAE;QACnB,SAAS,EAAE,IAAI,IAAI,EAAE;QACrB,aAAa,EAAE,IAAI,IAAI,EAAE;QACzB,gBAAgB,EAAE,IAAI,IAAI,EAAE;QAC5B,eAAe,EAAE,IAAI,IAAI,EAAE;QAC3B,kBAAkB,EAAE,IAAI,IAAI,EAAE;KAC/B,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { Slot } from '@lumensuite/global/utils';\n\nimport type { BlockService } from '../extension/service.js';\nimport type { BlockComponent, WidgetComponent } from '../view/index.js';\n\nexport type BlockSpecSlots<Service extends BlockService = BlockService> = {\n  mounted: Slot<{ service: Service }>;\n  unmounted: Slot<{ service: Service }>;\n  viewConnected: Slot<{ component: BlockComponent; service: Service }>;\n  viewDisconnected: Slot<{ component: BlockComponent; service: Service }>;\n  widgetConnected: Slot<{ component: WidgetComponent; service: Service }>;\n  widgetDisconnected: Slot<{\n    component: WidgetComponent;\n    service: Service;\n  }>;\n};\n\nexport const getSlots = (): BlockSpecSlots => {\n  return {\n    mounted: new Slot(),\n    unmounted: new Slot(),\n    viewConnected: new Slot(),\n    viewDisconnected: new Slot(),\n    widgetConnected: new Slot(),\n    widgetDisconnected: new Slot(),\n  };\n};\n"]}