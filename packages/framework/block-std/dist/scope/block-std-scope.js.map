{"version":3,"file":"block-std-scope.js","sourceRoot":"","sources":["../../src/scope/block-std-scope.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ServiceProvider } from '@blocksuite/global/di';\nimport type { Doc } from '@blocksuite/store';\n\nimport { Container } from '@blocksuite/global/di';\nimport { BlockSuiteError, ErrorCode } from '@blocksuite/global/exceptions';\n\nimport type { BlockService, ExtensionType } from '../extension/index.js';\n\nimport { Clipboard } from '../clipboard/index.js';\nimport { CommandManager } from '../command/index.js';\nimport { UIEventDispatcher } from '../event/index.js';\nimport { GfxController } from '../gfx/controller.js';\nimport {\n  BlockServiceIdentifier,\n  BlockViewIdentifier,\n  ConfigIdentifier,\n  LifeCycleWatcherIdentifier,\n  StdIdentifier,\n} from '../identifier.js';\nimport { RangeManager } from '../range/index.js';\nimport { SelectionManager } from '../selection/index.js';\nimport { ServiceManager } from '../service/index.js';\nimport { EditorHost } from '../view/element/index.js';\nimport { ViewStore } from '../view/view-store.js';\n\nexport interface BlockStdOptions {\n  doc: Doc;\n  extensions: ExtensionType[];\n}\n\nconst internalExtensions = [\n  ServiceManager,\n  CommandManager,\n  UIEventDispatcher,\n  SelectionManager,\n  RangeManager,\n  ViewStore,\n  Clipboard,\n  GfxController,\n];\n\nexport class BlockStdScope {\n  private _getHost: () => EditorHost;\n\n  readonly container: Container;\n\n  readonly doc: Doc;\n\n  readonly extensions: ExtensionType[];\n\n  readonly provider: ServiceProvider;\n\n  private get _lifeCycleWatchers() {\n    return this.provider.getAll(LifeCycleWatcherIdentifier);\n  }\n\n  get clipboard() {\n    return this.get(Clipboard);\n  }\n\n  get collection() {\n    return this.doc.collection;\n  }\n\n  get command() {\n    return this.get(CommandManager);\n  }\n\n  get event() {\n    return this.get(UIEventDispatcher);\n  }\n\n  get get() {\n    return this.provider.get.bind(this.provider);\n  }\n\n  get getOptional() {\n    return this.provider.getOptional.bind(this.provider);\n  }\n\n  get host() {\n    return this._getHost();\n  }\n\n  get range() {\n    return this.get(RangeManager);\n  }\n\n  get selection() {\n    return this.get(SelectionManager);\n  }\n\n  get view() {\n    return this.get(ViewStore);\n  }\n\n  constructor(options: BlockStdOptions) {\n    this._getHost = () => {\n      throw new BlockSuiteError(\n        ErrorCode.ValueNotExists,\n        'Host is not ready to use, the `render` method should be called first'\n      );\n    };\n    this.doc = options.doc;\n    this.extensions = [...internalExtensions, ...options.extensions];\n    this.container = new Container();\n    this.container.addImpl(StdIdentifier, () => this);\n\n    this.extensions.forEach(ext => {\n      const container = this.container;\n      ext.setup(container);\n    });\n\n    this.provider = this.container.provider();\n\n    this._lifeCycleWatchers.forEach(watcher => {\n      watcher.created.call(watcher);\n    });\n  }\n\n  getConfig<Key extends BlockSuite.ConfigKeys>(\n    flavour: Key\n  ): BlockSuite.BlockConfigs[Key] | null;\n\n  getConfig(flavour: string) {\n    const config = this.provider.getOptional(ConfigIdentifier(flavour));\n    if (!config) {\n      return null;\n    }\n\n    return config;\n  }\n\n  /**\n   * @deprecated\n   * BlockService will be removed in the future.\n   */\n  getService<Key extends BlockSuite.ServiceKeys>(\n    flavour: Key\n  ): BlockSuite.BlockServices[Key];\n  getService<Service extends BlockService>(flavour: string): Service;\n  getService(flavour: string): BlockService {\n    return this.get(BlockServiceIdentifier(flavour));\n  }\n\n  getView(flavour: string) {\n    return this.getOptional(BlockViewIdentifier(flavour));\n  }\n\n  mount() {\n    this._lifeCycleWatchers.forEach(watcher => {\n      watcher.mounted.call(watcher);\n    });\n  }\n\n  render() {\n    const element = new EditorHost();\n    element.std = this;\n    element.doc = this.doc;\n    this._getHost = () => element;\n    this._lifeCycleWatchers.forEach(watcher => {\n      watcher.rendered.call(watcher);\n    });\n\n    return element;\n  }\n\n  unmount() {\n    this._lifeCycleWatchers.forEach(watcher => {\n      watcher.unmounted.call(watcher);\n    });\n  }\n}\n\ndeclare global {\n  namespace BlockSuite {\n    interface BlockServices {}\n    interface BlockConfigs {}\n\n    type ServiceKeys = string & keyof BlockServices;\n    type ConfigKeys = string & keyof BlockConfigs;\n\n    type Std = BlockStdScope;\n  }\n}\n"]}