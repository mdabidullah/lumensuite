{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/clipboard/index.ts"],"names":[],"mappings":"AASA,OAAO,EAAE,eAAe,EAAE,SAAS,EAAE,MAAM,+BAA+B,CAAC;AAC3E,OAAO,EAAE,GAAG,EAAE,MAAM,mBAAmB,CAAC;AACxC,OAAO,KAAK,EAAE,MAAM,WAAW,CAAC;AAChC,OAAO,WAAW,MAAM,cAAc,CAAC;AACvC,OAAO,EAAE,OAAO,EAAE,MAAM,SAAS,CAAC;AAElC,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAC;AAiBzD,MAAM,UAAU,qBAAqB,CACnC,GAA8E;IAE9E,IAAI,GAAG,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;QAC3B,QAAQ,GAAG,CAAC,OAAO,EAAE,CAAC;YACpB,KAAK,MAAM,CAAC;YACZ,KAAK,MAAM;gBACT,OAAO,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC7D,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;wBAC7B,OAAO,IAAI,CAAC;oBACd,CAAC;oBACD,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,KAAK,OAAO,EAAE,CAAC;wBACnC,OAAO,OAAO,CAAC;oBACjB,CAAC;oBACD,OAAO,KAAK,CAAC;gBACf,CAAC,EAAE,OAAO,CAAC,CAAC;YACd,KAAK,KAAK;gBACR,OAAO,KAAK,CAAC;YACf,KAAK,MAAM;gBACT,OAAO,OAAO,CAAC;YACjB;gBACE,OAAO,IAAI,CAAC;QAChB,CAAC;IACH,CAAC;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,MAAM,OAAO,SAAU,SAAQ,gBAAgB;IAA/C;;QAGU,gBAAW,GAAe,IAAI,GAAG,EAAE,CAAC;QAE5C,2CAA2C;QACnC,mBAAc,GAAG,CAAC,aAA2B,EAAE,EAAE;YACvD,MAAM,IAAI,GAAG,IAAI,GAAG,EAA2B,CAAC;YAChD,KAAK,MAAM,IAAI,IAAI,aAAa,CAAC,KAAK,EAAE,CAAC;gBACvC,IAAI,IAAI,KAAK,OAAO,EAAE,CAAC;oBACrB,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;gBAClD,CAAC;qBAAM,CAAC;oBACN,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC9C,CAAC;YACH,CAAC;YACD,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC;gBAC/C,MAAM,OAAO,GAAG,OAAO,EAAE;qBACtB,GAAG,CAAC,WAAW,CAAC;qBAChB,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAW,CAAC,CAAC;gBAE1C,MAAM,SAAS,GACb,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC1D,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;wBAC7B,OAAO,IAAI,CAAC;oBACd,CAAC;oBACD,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,KAAK,OAAO,EAAE,CAAC;wBACnC,OAAO,OAAO,CAAC;oBACjB,CAAC;oBACD,OAAO,KAAK,CAAC;gBACf,CAAC,EAAE,OAAO,CAAC,KAAK,KAAK,CAAC;gBAExB,IAAI,SAAS,EAAE,CAAC;oBACd,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;gBAC3B,CAAC;YACH,CAAC;YACD,OAAO,CAAC,IAAY,EAAE,EAAE;gBACtB,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAC5B,IAAI,IAAI,EAAE,CAAC;oBACT,OAAO,IAAI,CAAC;gBACd,CAAC;gBACD,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAW,CAAC;gBAClD,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBACrB,OAAO,KAAK,CAAC;gBACf,CAAC;gBACD,OAAO,EAAE,CAAC;YACZ,CAAC,CAAC;QACJ,CAAC,CAAC;QAEM,2BAAsB,GAAG,KAAK,EACpC,OAA0C,EAC1C,GAAQ,EACR,MAAe,EACf,KAAc,EACd,EAAE;YACF,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAC5D,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CACxC,CAAC;YACF,KAAK,MAAM,CAAC,IAAI,EAAE,EAAE,OAAO,EAAE,CAAC,IAAI,UAAU,EAAE,CAAC;gBAC7C,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;oBACxB,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;wBACtB,SAAS;oBACX,CAAC;oBACD;oBACE,6DAA6D;oBAC7D,CAAC,IAAI;yBACF,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,CAAC;yBAC3C,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,EACjC,CAAC;wBACD,SAAS;oBACX,CAAC;gBACH,CAAC;gBACD,IAAI,IAAI,EAAE,CAAC;oBACT,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;oBAC3B,MAAM,eAAe,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;oBACzC,MAAM,OAAO,GAAG;wBACd,IAAI,EAAE,IAAI;wBACV,MAAM,EAAE,GAAG,CAAC,aAAa;wBACzB,aAAa,EAAE,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa;wBAChD,WAAW,EAAE,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW;wBAC5C,gBAAgB,EAAE,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB;wBACtD,WAAW,EAAE,GAAG,CAAC,UAAU,CAAC,EAAE;wBAC9B,MAAM,EAAE,GAAG,CAAC,EAAE;qBACf,CAAC;oBACF,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC,OAAO,CAC1C,OAAO,EACP,GAAG,EACH,MAAM,EACN,KAAK,CACN,CAAC;oBACF,IAAI,MAAM,EAAE,CAAC;wBACX,OAAO,MAAM,CAAC;oBAChB,CAAC;gBACH,CAAC;YACH,CAAC;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEM,oBAAe,GAAoB,EAAE,CAAC;QAE9C,SAAI,GAAG,KAAK,EAAE,KAAY,EAAE,EAAE;YAC5B,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC,CAAC;QAEF,kFAAkF;QAClF,cAAS,GAAG,KAAK,EAAE,KAAY,EAAE,EAAE;YACjC,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;YAExD,MAAM,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAC,MAAM,EAAC,EAAE;gBACzC,MAAM,KAAK,GAAG,EAAE,GAAG,MAAM,EAAE,CAAC;gBAE5B,MAAM,OAAO,CAAC,GAAG,CACf,WAAW,CAAC,GAAG,CAAC,KAAK,EAAC,IAAI,EAAC,EAAE;oBAC3B,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;oBACvD,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE,CAAC;wBAC7B,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;oBACrB,CAAC;gBACH,CAAC,CAAC,CACH,CAAC;gBACF,OAAO,KAAK,CAAC;YACf,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,mBAAc,GAAG,KAAK,EACpB,KAAY,EACZ,GAAQ,EACR,MAAe,EACf,KAAc,EACd,IAAI,GAAG,qBAAqB,EAC5B,EAAE;YACF,MAAM,KAAK,GAAG;gBACZ,CAAC,IAAI,CAAC,EAAE,MAAM,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC;aAClD,CAAC;YAEF,MAAM,IAAI,CAAC,sBAAsB,CAC/B,IAAI,CAAC,EAAE,CAAE,KAAK,CAAC,IAAI,CAAqB,IAAI,EAAE,EAC9C,GAAG,EACH,MAAM,EACN,KAAK,CACN,CAAC;QACJ,CAAC,CAAC;QAEF,UAAK,GAAG,KAAK,EACX,KAAqB,EACrB,GAAQ,EACR,MAAe,EACf,KAAc,EACd,EAAE;YACF,MAAM,IAAI,GAAG,KAAK,CAAC,aAAa,CAAC;YACjC,IAAI,CAAC,IAAI;gBAAE,OAAO;YAElB,IAAI,CAAC;gBACH,MAAM,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;gBAC1C,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAC7C,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAClB,GAAG,EACH,MAAM,EACN,KAAK,CACN,CAAC;gBACF,IAAI,CAAC,KAAK,EAAE,CAAC;oBACX,MAAM,IAAI,eAAe,CACvB,SAAS,CAAC,gBAAgB,EAC1B,mBAAmB,CACpB,CAAC;gBACJ,CAAC;gBACD,OAAO,KAAK,CAAC;YACf,CAAC;YAAC,MAAM,CAAC;gBACP,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBAChD,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAC7C,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,EAC3B,GAAG,EACH,MAAM,EACN,KAAK,CACN,CAAC;gBAEF,OAAO,KAAK,CAAC;YACf,CAAC;QACH,CAAC,CAAC;QAEF,uBAAkB,GAAG,KAAK,EACxB,QAAuB,EACvB,GAAQ,EACR,MAAe,EACf,KAAc,EACd,EAAE;YACF,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC,eAAe,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QACtE,CAAC,CAAC;QAEF,oBAAe,GAAG,CAChB,QAAgB,EAChB,OAA8B,EAC9B,QAAQ,GAAG,CAAC,EACZ,EAAE;YACF,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;QACxD,CAAC,CAAC;QAEF,sBAAiB,GAAG,CAAC,QAAgB,EAAE,EAAE;YACvC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACpC,CAAC,CAAC;QAEF,UAAK,GAAG,CAAC,UAAyB,EAAE,EAAE;YACpC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC;QAC5E,CAAC,CAAC;QAEF,QAAG,GAAG,CAAC,UAAyB,EAAE,EAAE;YAClC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACxC,CAAC,CAAC;IA6FJ,CAAC;aA1S0B,QAAG,GAAG,WAAW,AAAd,CAAe;IA+M3C,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC,cAAc,CAAC;IACvC,CAAC;IAEO,KAAK,CAAC,iBAAiB,CAAC,KAAY,EAAE,IAAY;QACxD,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC3B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,WAAW,EAAE,CAAC;YACjB,OAAO;QACT,CAAC;QACD,MAAM,EAAE,OAAO,EAAE,GAAG,WAAW,CAAC;QAChC,MAAM,eAAe,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;QACzC,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACtD,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,OAAO;QACT,CAAC;QACD,OAAO,MAAM,CAAC,IAAI,CAAC;IACrB,CAAC;IAEO,OAAO;QACb,OAAO,IAAI,GAAG,CAAC;YACb,WAAW,EAAE,IAAI,CAAC,eAAe;YACjC,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU;SAChC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB,CAAC,aAA2B;QAC3C,MAAM,KAAK,GAAG,aAAa,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACjD,MAAM,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;QAClC,MAAM,GAAG,GAAG,SAAS,CAAC,eAAe,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;QAC1D,MAAM,GAAG,GAAG,GAAG,CAAC,aAAa,CAAiB,4BAA4B,CAAC,CAAC;QAC5E,IAAI,CAAC,GAAG,EAAE,CAAC;YACT,MAAM,IAAI,eAAe,CACvB,SAAS,CAAC,gBAAgB,EAC1B,mBAAmB,CACpB,CAAC;QACJ,CAAC;QACD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CACrB,EAAE,CAAC,iCAAiC,CAClC,GAAG,CAAC,OAAO,CAAC,kBAA4B,CACzC,CACF,CAAC;QACF,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,gBAAgB,CACpB,WAE+D;QAE/D,MAAM,MAAM,GAAG;YACb,YAAY,EAAE,EAAE;YAChB,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,EAAE;SAChB,CAAC;QAEF,MAAM,KAAK,GAAG,MAAM,WAAW,CAAC,MAAM,CAAC,CAAC;QAExC,MAAM,IAAI,GAAG,KAAK,CAAC,YAAY,CAAW,CAAC;QAC3C,MAAM,SAAS,GAAG,KAAK,CAAC,WAAW,CAAW,CAAC;QAC/C,MAAM,GAAG,GAAG,KAAK,CAAC,WAAW,CAAkB,CAAC;QAEhD,OAAO,KAAK,CAAC,YAAY,CAAC,CAAC;QAC3B,OAAO,KAAK,CAAC,WAAW,CAAC,CAAC;QAC1B,OAAO,KAAK,CAAC,WAAW,CAAC,CAAC;QAE1B,MAAM,QAAQ,GAAG,EAAE,CAAC,6BAA6B,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QACzE,MAAM,IAAI,GAAG,iCAAiC,QAAQ,IAAI,SAAS,QAAQ,CAAC;QAC5E,MAAM,QAAQ,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE;YAChC,IAAI,EAAE,WAAW;SAClB,CAAC,CAAC;QACH,MAAM,cAAc,GAAyB;YAC3C,WAAW,EAAE,QAAQ;SACtB,CAAC;QACF,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACpB,MAAM,QAAQ,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE;gBAChC,IAAI,EAAE,YAAY;aACnB,CAAC,CAAC;YACH,cAAc,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC;QAC1C,CAAC;QAED,IAAI,GAAG,YAAY,IAAI,EAAE,CAAC;YACxB,cAAc,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC;QACpC,CAAC;aAAM,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC1B,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE;gBAC9B,IAAI,EAAE,WAAW;aAClB,CAAC,CAAC;YACH,cAAc,CAAC,WAAW,CAAC,GAAG,OAAO,CAAC;QACxC,CAAC;QACD,MAAM,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACvE,CAAC","sourcesContent":["import type {\n  BaseAdapter,\n  BlockSnapshot,\n  Doc,\n  JobMiddleware,\n  Slice,\n} from '@lumensuite/store';\nimport type { RootContentMap } from 'hast';\n\nimport { LumenSuiteError, ErrorCode } from '@lumensuite/global/exceptions';\nimport { Job } from '@lumensuite/store';\nimport * as lz from 'lz-string';\nimport rehypeParse from 'rehype-parse';\nimport { unified } from 'unified';\n\nimport { LifeCycleWatcher } from '../extension/index.js';\n\ntype AdapterConstructor<T extends BaseAdapter> = new (job: Job) => T;\n\ntype AdapterMap = Map<\n  string,\n  {\n    adapter: AdapterConstructor<BaseAdapter>;\n    priority: number;\n  }\n>;\n\ntype HastUnionType<\n  K extends keyof RootContentMap,\n  V extends RootContentMap[K],\n> = V;\n\nexport function onlyContainImgElement(\n  ast: HastUnionType<keyof RootContentMap, RootContentMap[keyof RootContentMap]>\n): 'yes' | 'no' | 'maybe' {\n  if (ast.type === 'element') {\n    switch (ast.tagName) {\n      case 'html':\n      case 'body':\n        return ast.children.map(onlyContainImgElement).reduce((a, b) => {\n          if (a === 'no' || b === 'no') {\n            return 'no';\n          }\n          if (a === 'maybe' && b === 'maybe') {\n            return 'maybe';\n          }\n          return 'yes';\n        }, 'maybe');\n      case 'img':\n        return 'yes';\n      case 'head':\n        return 'maybe';\n      default:\n        return 'no';\n    }\n  }\n  return 'maybe';\n}\n\nexport class Clipboard extends LifeCycleWatcher {\n  static override readonly key = 'clipboard';\n\n  private _adapterMap: AdapterMap = new Map();\n\n  // Need to be cloned to a map for later use\n  private _getDataByType = (clipboardData: DataTransfer) => {\n    const data = new Map<string, string | File[]>();\n    for (const type of clipboardData.types) {\n      if (type === 'Files') {\n        data.set(type, Array.from(clipboardData.files));\n      } else {\n        data.set(type, clipboardData.getData(type));\n      }\n    }\n    if (data.get('Files') && data.get('text/html')) {\n      const htmlAst = unified()\n        .use(rehypeParse)\n        .parse(data.get('text/html') as string);\n\n      const isImgOnly =\n        htmlAst.children.map(onlyContainImgElement).reduce((a, b) => {\n          if (a === 'no' || b === 'no') {\n            return 'no';\n          }\n          if (a === 'maybe' && b === 'maybe') {\n            return 'maybe';\n          }\n          return 'yes';\n        }, 'maybe') === 'yes';\n\n      if (isImgOnly) {\n        data.delete('text/html');\n      }\n    }\n    return (type: string) => {\n      const item = data.get(type);\n      if (item) {\n        return item;\n      }\n      const files = (data.get('Files') ?? []) as File[];\n      if (files.length > 0) {\n        return files;\n      }\n      return '';\n    };\n  };\n\n  private _getSnapshotByPriority = async (\n    getItem: (type: string) => string | File[],\n    doc: Doc,\n    parent?: string,\n    index?: number\n  ) => {\n    const byPriority = Array.from(this._adapterMap.entries()).sort(\n      (a, b) => b[1].priority - a[1].priority\n    );\n    for (const [type, { adapter }] of byPriority) {\n      const item = getItem(type);\n      if (Array.isArray(item)) {\n        if (item.length === 0) {\n          continue;\n        }\n        if (\n          // if all files are not the same target type, fallback to */*\n          !item\n            .map(f => f.type === type || type === '*/*')\n            .reduce((a, b) => a && b, true)\n        ) {\n          continue;\n        }\n      }\n      if (item) {\n        const job = this._getJob();\n        const adapterInstance = new adapter(job);\n        const payload = {\n          file: item,\n          assets: job.assetsManager,\n          blockVersions: doc.collection.meta.blockVersions,\n          pageVersion: doc.collection.meta.pageVersion,\n          workspaceVersion: doc.collection.meta.workspaceVersion,\n          workspaceId: doc.collection.id,\n          pageId: doc.id,\n        };\n        const result = await adapterInstance.toSlice(\n          payload,\n          doc,\n          parent,\n          index\n        );\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return null;\n  };\n\n  private _jobMiddlewares: JobMiddleware[] = [];\n\n  copy = async (slice: Slice) => {\n    return this.copySlice(slice);\n  };\n\n  // Gated by https://developer.mozilla.org/en-US/docs/Glossary/Transient_activation\n  copySlice = async (slice: Slice) => {\n    const adapterKeys = Array.from(this._adapterMap.keys());\n\n    await this.writeToClipboard(async _items => {\n      const items = { ..._items };\n\n      await Promise.all(\n        adapterKeys.map(async type => {\n          const item = await this._getClipboardItem(slice, type);\n          if (typeof item === 'string') {\n            items[type] = item;\n          }\n        })\n      );\n      return items;\n    });\n  };\n\n  duplicateSlice = async (\n    slice: Slice,\n    doc: Doc,\n    parent?: string,\n    index?: number,\n    type = 'BLOCKSUITE/SNAPSHOT'\n  ) => {\n    const items = {\n      [type]: await this._getClipboardItem(slice, type),\n    };\n\n    await this._getSnapshotByPriority(\n      type => (items[type] as string | File[]) ?? '',\n      doc,\n      parent,\n      index\n    );\n  };\n\n  paste = async (\n    event: ClipboardEvent,\n    doc: Doc,\n    parent?: string,\n    index?: number\n  ) => {\n    const data = event.clipboardData;\n    if (!data) return;\n\n    try {\n      const json = this.readFromClipboard(data);\n      const slice = await this._getSnapshotByPriority(\n        type => json[type],\n        doc,\n        parent,\n        index\n      );\n      if (!slice) {\n        throw new LumenSuiteError(\n          ErrorCode.TransformerError,\n          'No snapshot found'\n        );\n      }\n      return slice;\n    } catch {\n      const getDataByType = this._getDataByType(data);\n      const slice = await this._getSnapshotByPriority(\n        type => getDataByType(type),\n        doc,\n        parent,\n        index\n      );\n\n      return slice;\n    }\n  };\n\n  pasteBlockSnapshot = async (\n    snapshot: BlockSnapshot,\n    doc: Doc,\n    parent?: string,\n    index?: number\n  ) => {\n    return this._getJob().snapshotToBlock(snapshot, doc, parent, index);\n  };\n\n  registerAdapter = <T extends BaseAdapter>(\n    mimeType: string,\n    adapter: AdapterConstructor<T>,\n    priority = 0\n  ) => {\n    this._adapterMap.set(mimeType, { adapter, priority });\n  };\n\n  unregisterAdapter = (mimeType: string) => {\n    this._adapterMap.delete(mimeType);\n  };\n\n  unuse = (middleware: JobMiddleware) => {\n    this._jobMiddlewares = this._jobMiddlewares.filter(m => m !== middleware);\n  };\n\n  use = (middleware: JobMiddleware) => {\n    this._jobMiddlewares.push(middleware);\n  };\n\n  get configs() {\n    return this._getJob().adapterConfigs;\n  }\n\n  private async _getClipboardItem(slice: Slice, type: string) {\n    const job = this._getJob();\n    const adapterItem = this._adapterMap.get(type);\n    if (!adapterItem) {\n      return;\n    }\n    const { adapter } = adapterItem;\n    const adapterInstance = new adapter(job);\n    const result = await adapterInstance.fromSlice(slice);\n    if (!result) {\n      return;\n    }\n    return result.file;\n  }\n\n  private _getJob() {\n    return new Job({\n      middlewares: this._jobMiddlewares,\n      collection: this.std.collection,\n    });\n  }\n\n  readFromClipboard(clipboardData: DataTransfer) {\n    const items = clipboardData.getData('text/html');\n    const domParser = new DOMParser();\n    const doc = domParser.parseFromString(items, 'text/html');\n    const dom = doc.querySelector<HTMLDivElement>('[data-lumensuite-snapshot]');\n    if (!dom) {\n      throw new LumenSuiteError(\n        ErrorCode.TransformerError,\n        'No snapshot found'\n      );\n    }\n    const json = JSON.parse(\n      lz.decompressFromEncodedURIComponent(\n        dom.dataset.lumensuiteSnapshot as string\n      )\n    );\n    return json;\n  }\n\n  async writeToClipboard(\n    updateItems: (\n      items: Record<string, unknown>\n    ) => Promise<Record<string, unknown>> | Record<string, unknown>\n  ) {\n    const _items = {\n      'text/plain': '',\n      'text/html': '',\n      'image/png': '',\n    };\n\n    const items = await updateItems(_items);\n\n    const text = items['text/plain'] as string;\n    const innerHTML = items['text/html'] as string;\n    const png = items['image/png'] as string | Blob;\n\n    delete items['text/plain'];\n    delete items['text/html'];\n    delete items['image/png'];\n\n    const snapshot = lz.compressToEncodedURIComponent(JSON.stringify(items));\n    const html = `<div data-lumensuite-snapshot=${snapshot}>${innerHTML}</div>`;\n    const htmlBlob = new Blob([html], {\n      type: 'text/html',\n    });\n    const clipboardItems: Record<string, Blob> = {\n      'text/html': htmlBlob,\n    };\n    if (text.length > 0) {\n      const textBlob = new Blob([text], {\n        type: 'text/plain',\n      });\n      clipboardItems['text/plain'] = textBlob;\n    }\n\n    if (png instanceof Blob) {\n      clipboardItems['image/png'] = png;\n    } else if (png.length > 0) {\n      const pngBlob = new Blob([png], {\n        type: 'image/png',\n      });\n      clipboardItems['image/png'] = pngBlob;\n    }\n    await navigator.clipboard.write([new ClipboardItem(clipboardItems)]);\n  }\n}\n"]}