{"version":3,"file":"async-queue.spec.js","sourceRoot":"","sources":["../../../src/utils/__tests__/async-queue.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,QAAQ,CAAC;AAEpD,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAE/C,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;IAC3B,IAAI,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE;QAC5B,MAAM,KAAK,GAAG,IAAI,UAAU,EAAE,CAAC;QAC/B,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7B,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,OAAO,EAAE,KAAK,IAAI,EAAE;QACvB,MAAM,KAAK,GAAG,IAAI,UAAU,EAAU,CAAC;QACvC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACjB,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAEnC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAEX,oBAAoB;QACpB,KAAK,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC5B,CAAC,GAAG,IAAI,CAAC;QACX,CAAC,CAAC,CAAC;QACH,KAAK,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC5B,CAAC,GAAG,IAAI,CAAC;QACX,CAAC,CAAC,CAAC;QAEH,iBAAiB;QACjB,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QACvD,0BAA0B;QAC1B,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAEnB,4CAA4C;QAC5C,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACd,MAAM,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAEhC,6CAA6C;QAC7C,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACd,MAAM,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { describe, expect, test, vi } from 'vitest';\n\nimport { AsyncQueue } from '../async-queue.js';\n\ndescribe('async-queue', () => {\n  test('push & pop', async () => {\n    const queue = new AsyncQueue();\n    queue.push(1, 2, 3);\n    expect(queue.length).toBe(3);\n    expect(await queue.next()).toBe(1);\n    expect(await queue.next()).toBe(2);\n    expect(await queue.next()).toBe(3);\n    expect(queue.length).toBe(0);\n  });\n\n  test('await', async () => {\n    const queue = new AsyncQueue<number>();\n    queue.push(1, 2);\n    expect(await queue.next()).toBe(1);\n    expect(await queue.next()).toBe(2);\n\n    let v = -1;\n\n    // setup 2 pop tasks\n    void queue.next().then(next => {\n      v = next;\n    });\n    void queue.next().then(next => {\n      v = next;\n    });\n\n    // Wait for 100ms\n    await new Promise(resolve => setTimeout(resolve, 100));\n    // v should not be changed\n    expect(v).toBe(-1);\n\n    // push 3, should trigger the first pop task\n    queue.push(3);\n    await vi.waitFor(() => v === 3);\n\n    // push 4, should trigger the second pop task\n    queue.push(4);\n    await vi.waitFor(() => v === 4);\n  });\n});\n"]}