{"version":3,"file":"memory.js","sourceRoot":"","sources":["../../../src/blob/impl/memory.ts"],"names":[],"mappings":"AAEA,MAAM,OAAO,gBAAgB;IAA7B;QACW,QAAG,GAAG,IAAI,GAAG,EAAgB,CAAC;QAEvC,SAAI,GAAG,QAAQ,CAAC;QAEhB,aAAQ,GAAG,KAAK,CAAC;IAmBnB,CAAC;IAjBC,MAAM,CAAC,GAAW;QAChB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACrB,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED,GAAG,CAAC,GAAW;QACb,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC;IACpD,CAAC;IAED,IAAI;QACF,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,GAAG,CAAC,GAAW,EAAE,KAAW;QAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACzB,OAAO,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;CACF","sourcesContent":["import type { BlobSource } from '../source.js';\n\nexport class MemoryBlobSource implements BlobSource {\n  readonly map = new Map<string, Blob>();\n\n  name = 'memory';\n\n  readonly = false;\n\n  delete(key: string) {\n    this.map.delete(key);\n    return Promise.resolve();\n  }\n\n  get(key: string) {\n    return Promise.resolve(this.map.get(key) ?? null);\n  }\n\n  list() {\n    return Promise.resolve(Array.from(this.map.keys()));\n  }\n\n  set(key: string, value: Blob) {\n    this.map.set(key, value);\n    return Promise.resolve(key);\n  }\n}\n"]}