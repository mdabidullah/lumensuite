{"version":3,"file":"engine.js","sourceRoot":"","sources":["../../src/doc/engine.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Doc } from 'yjs';\n\nimport { type Logger, Slot } from '@lumensuite/global/utils';\n\nimport type { DocSource } from './source.js';\n\nimport { SharedPriorityTarget } from '../utils/async-queue.js';\nimport { MANUALLY_STOP, throwIfAborted } from '../utils/throw-if-aborted.js';\nimport { DocEngineStep, DocPeerStep } from './consts.js';\nimport { type DocPeerStatus, SyncPeer } from './peer.js';\n\nexport interface DocEngineStatus {\n  step: DocEngineStep;\n  main: DocPeerStatus | null;\n  shadows: (DocPeerStatus | null)[];\n  retrying: boolean;\n}\n\n/**\n * # DocEngine\n *\n * ```\n *                    ┌────────────┐\n *                    │  DocEngine │\n *                    └─────┬──────┘\n *                          │\n *                          ▼\n *                    ┌────────────┐\n *                    │   DocPeer  │\n *          ┌─────────┤    main    ├─────────┐\n *          │         └─────┬──────┘         │\n *          │               │                │\n *          ▼               ▼                ▼\n *   ┌────────────┐   ┌────────────┐   ┌────────────┐\n *   │   DocPeer  │   │   DocPeer  │   │   DocPeer  │\n *   │   shadow   │   │   shadow   │   │   shadow   │\n *   └────────────┘   └────────────┘   └────────────┘\n * ```\n *\n * doc engine manage doc peers\n *\n * Sync steps:\n * 1. start main sync\n * 2. wait for main sync complete\n * 3. start shadow sync\n * 4. continuously sync main and shadows\n */\nexport class DocEngine {\n  private _abort = new AbortController();\n\n  private _status: DocEngineStatus;\n\n  readonly onStatusChange = new Slot<DocEngineStatus>();\n\n  readonly priorityTarget = new SharedPriorityTarget();\n\n  get rootDocId() {\n    return this.rootDoc.guid;\n  }\n\n  get status() {\n    return this._status;\n  }\n\n  constructor(\n    readonly rootDoc: Doc,\n    readonly main: DocSource,\n    readonly shadows: DocSource[],\n    readonly logger: Logger\n  ) {\n    this._status = {\n      step: DocEngineStep.Stopped,\n      main: null,\n      shadows: shadows.map(() => null),\n      retrying: false,\n    };\n    this.logger.debug(`syne-engine:${this.rootDocId} status init`, this.status);\n  }\n\n  private setStatus(s: DocEngineStatus) {\n    this.logger.debug(`syne-engine:${this.rootDocId} status change`, s);\n    this._status = s;\n    this.onStatusChange.emit(s);\n  }\n\n  canGracefulStop() {\n    return !!this.status.main && this.status.main.pendingPushUpdates === 0;\n  }\n\n  forceStop() {\n    this._abort.abort(MANUALLY_STOP);\n    this.setStatus({\n      step: DocEngineStep.Stopped,\n      main: null,\n      shadows: this.shadows.map(() => null),\n      retrying: false,\n    });\n  }\n\n  setPriorityRule(target: ((id: string) => boolean) | null) {\n    this.priorityTarget.priorityRule = target;\n  }\n\n  start() {\n    if (this.status.step !== DocEngineStep.Stopped) {\n      this.forceStop();\n    }\n    this._abort = new AbortController();\n\n    this.sync(this._abort.signal).catch(err => {\n      // should never reach here\n      this.logger.error(`syne-engine:${this.rootDocId}`, err);\n    });\n  }\n\n  // main sync process, should never return until abort\n  async sync(signal: AbortSignal) {\n    const state: {\n      mainPeer: SyncPeer | null;\n      shadowPeers: (SyncPeer | null)[];\n    } = {\n      mainPeer: null,\n      shadowPeers: this.shadows.map(() => null),\n    };\n\n    const cleanUp: (() => void)[] = [];\n    try {\n      // Step 1: start main sync peer\n      state.mainPeer = new SyncPeer(\n        this.rootDoc,\n        this.main,\n        this.priorityTarget,\n        this.logger\n      );\n\n      cleanUp.push(\n        state.mainPeer.onStatusChange.on(() => {\n          if (!signal.aborted)\n            this.updateSyncingState(state.mainPeer, state.shadowPeers);\n        }).dispose\n      );\n\n      this.updateSyncingState(state.mainPeer, state.shadowPeers);\n\n      // Step 2: wait for main sync complete\n      await state.mainPeer.waitForLoaded(signal);\n\n      // Step 3: start shadow sync peer\n      state.shadowPeers = this.shadows.map(shadow => {\n        const peer = new SyncPeer(\n          this.rootDoc,\n          shadow,\n          this.priorityTarget,\n          this.logger\n        );\n        cleanUp.push(\n          peer.onStatusChange.on(() => {\n            if (!signal.aborted)\n              this.updateSyncingState(state.mainPeer, state.shadowPeers);\n          }).dispose\n        );\n        return peer;\n      });\n\n      this.updateSyncingState(state.mainPeer, state.shadowPeers);\n\n      // Step 4: continuously sync main and shadow\n\n      // wait for abort\n      await new Promise((_, reject) => {\n        if (signal.aborted) {\n          reject(signal.reason);\n        }\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      });\n    } catch (error) {\n      if (error === MANUALLY_STOP || signal.aborted) {\n        return;\n      }\n      throw error;\n    } finally {\n      // stop peers\n      state.mainPeer?.stop();\n      for (const shadowPeer of state.shadowPeers) {\n        shadowPeer?.stop();\n      }\n      for (const clean of cleanUp) {\n        clean();\n      }\n    }\n  }\n\n  updateSyncingState(local: SyncPeer | null, shadows: (SyncPeer | null)[]) {\n    let step = DocEngineStep.Synced;\n    const allPeer = [local, ...shadows];\n    for (const peer of allPeer) {\n      if (!peer || peer.status.step !== DocPeerStep.Synced) {\n        step = DocEngineStep.Syncing;\n        break;\n      }\n    }\n    this.setStatus({\n      step,\n      main: local?.status ?? null,\n      shadows: shadows.map(peer => peer?.status ?? null),\n      retrying: allPeer.some(\n        peer => peer?.status.step === DocPeerStep.Retrying\n      ),\n    });\n  }\n\n  async waitForGracefulStop(abort?: AbortSignal) {\n    await Promise.race([\n      new Promise((_, reject) => {\n        if (abort?.aborted) {\n          reject(abort?.reason);\n        }\n        abort?.addEventListener('abort', () => {\n          reject(abort.reason);\n        });\n      }),\n      new Promise<void>(resolve => {\n        this.onStatusChange.on(() => {\n          if (this.canGracefulStop()) {\n            resolve();\n          }\n        });\n      }),\n    ]);\n    throwIfAborted(abort);\n    this.forceStop();\n  }\n\n  async waitForLoadedRootDoc(abort?: AbortSignal) {\n    function isLoadedRootDoc(status: DocEngineStatus) {\n      return ![status.main, ...status.shadows].some(\n        peer => !peer || peer.step <= DocPeerStep.LoadingRootDoc\n      );\n    }\n    if (isLoadedRootDoc(this.status)) {\n      return;\n    } else {\n      return Promise.race([\n        new Promise<void>(resolve => {\n          this.onStatusChange.on(status => {\n            if (isLoadedRootDoc(status)) {\n              resolve();\n            }\n          });\n        }),\n        new Promise((_, reject) => {\n          if (abort?.aborted) {\n            reject(abort?.reason);\n          }\n          abort?.addEventListener('abort', () => {\n            reject(abort.reason);\n          });\n        }),\n      ]);\n    }\n  }\n\n  async waitForSynced(abort?: AbortSignal) {\n    if (this.status.step === DocEngineStep.Synced) {\n      return;\n    } else {\n      return Promise.race([\n        new Promise<void>(resolve => {\n          this.onStatusChange.on(status => {\n            if (status.step === DocEngineStep.Synced) {\n              resolve();\n            }\n          });\n        }),\n        new Promise((_, reject) => {\n          if (abort?.aborted) {\n            reject(abort?.reason);\n          }\n          abort?.addEventListener('abort', () => {\n            reject(abort.reason);\n          });\n        }),\n      ]);\n    }\n  }\n}\n"]}