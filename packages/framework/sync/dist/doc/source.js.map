{"version":3,"file":"source.js","sourceRoot":"","sources":["../../src/doc/source.ts"],"names":[],"mappings":"","sourcesContent":["export interface DocSource {\n  /**\n   * for debug\n   */\n  name: string;\n\n  pull(\n    docId: string,\n    state: Uint8Array\n  ):\n    | Promise<{ data: Uint8Array; state?: Uint8Array } | null>\n    | { data: Uint8Array; state?: Uint8Array }\n    | null;\n  push(docId: string, data: Uint8Array): Promise<void> | void;\n\n  /**\n   * Subscribe to updates from peer\n   *\n   * @param cb callback to handle updates\n   * @param disconnect callback to handle disconnect, reason can be something like 'network-error'\n   *\n   * @returns unsubscribe function\n   */\n  subscribe(\n    cb: (docId: string, data: Uint8Array) => void,\n    disconnect: (reason: string) => void\n  ): Promise<() => void> | (() => void);\n}\n"]}