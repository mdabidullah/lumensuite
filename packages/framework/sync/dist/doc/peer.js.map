{"version":3,"file":"peer.js","sourceRoot":"","sources":["../../src/doc/peer.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Doc } from 'yjs';\n\nimport { type Logger, Slot } from '@lumensuite/global/utils';\nimport { isEqual } from '@lumensuite/global/utils';\nimport {\n  applyUpdate,\n  encodeStateAsUpdate,\n  encodeStateVector,\n  mergeUpdates,\n} from 'yjs';\n\nimport type { DocSource } from './source.js';\n\nimport {\n  PriorityAsyncQueue,\n  SharedPriorityTarget,\n} from '../utils/async-queue.js';\nimport { MANUALLY_STOP, throwIfAborted } from '../utils/throw-if-aborted.js';\nimport { DocPeerStep } from './consts.js';\n\nexport interface DocPeerStatus {\n  step: DocPeerStep;\n  totalDocs: number;\n  loadedDocs: number;\n  pendingPullUpdates: number;\n  pendingPushUpdates: number;\n}\n\n/**\n * # DocPeer\n * A DocPeer is responsible for syncing one Storage with one Y.Doc and its subdocs.\n *\n * ```\n *                    ┌─────┐\n *                    │Start│\n *                    └──┬──┘\n *                       │\n *    ┌──────┐     ┌─────▼──────┐        ┌────┐\n *    │listen◄─────┤pull rootdoc│        │peer│\n *    └──┬───┘     └─────┬──────┘        └──┬─┘\n *       │               │ onLoad()         │\n *    ┌──▼───┐     ┌─────▼──────┐      ┌────▼────┐\n *    │listen◄─────┤pull subdocs│      │subscribe│\n *    └──┬───┘     └─────┬──────┘      └────┬────┘\n *       │               │ onReady()        │\n *    ┌──▼──┐      ┌─────▼───────┐       ┌──▼──┐\n *    │queue├──────►apply updates◄───────┤queue│\n *    └─────┘      └─────────────┘       └─────┘\n * ```\n *\n * listen: listen for updates from ydoc, typically from user modifications.\n * subscribe: listen for updates from storage, typically from other users.\n *\n */\nexport class SyncPeer {\n  private _status: DocPeerStatus = {\n    step: DocPeerStep.LoadingRootDoc,\n    totalDocs: 1,\n    loadedDocs: 0,\n    pendingPullUpdates: 0,\n    pendingPushUpdates: 0,\n  };\n\n  readonly abort = new AbortController();\n\n  // handle updates from storage\n  handleStorageUpdates = (id: string, data: Uint8Array) => {\n    this.state.pullUpdatesQueue.push({\n      id,\n      data,\n    });\n    this.updateSyncStatus();\n  };\n\n  // handle subdocs changes, append new subdocs to queue, remove subdocs from queue\n  handleSubdocsUpdate = ({\n    added,\n    removed,\n  }: {\n    added: Set<Doc>;\n    removed: Set<Doc>;\n  }) => {\n    for (const subdoc of added) {\n      this.state.subdocsLoadQueue.push({ id: subdoc.guid, doc: subdoc });\n    }\n\n    for (const subdoc of removed) {\n      this.disconnectDoc(subdoc);\n      this.state.subdocsLoadQueue.remove(doc => doc.doc === subdoc);\n    }\n    this.updateSyncStatus();\n  };\n\n  // handle updates from ydoc\n  handleYDocUpdates = (update: Uint8Array, origin: string, doc: Doc) => {\n    // don't push updates from storage\n    if (origin === this.name) {\n      return;\n    }\n\n    const exist = this.state.pushUpdatesQueue.find(({ id }) => id === doc.guid);\n    if (exist) {\n      exist.data.push(update);\n    } else {\n      this.state.pushUpdatesQueue.push({\n        id: doc.guid,\n        data: [update],\n      });\n    }\n\n    this.updateSyncStatus();\n  };\n\n  readonly onStatusChange = new Slot<DocPeerStatus>();\n\n  readonly state: {\n    connectedDocs: Map<string, Doc>;\n    pushUpdatesQueue: PriorityAsyncQueue<{\n      id: string;\n      data: Uint8Array[];\n    }>;\n    pushingUpdate: boolean;\n    pullUpdatesQueue: PriorityAsyncQueue<{\n      id: string;\n      data: Uint8Array;\n    }>;\n    subdocLoading: boolean;\n    subdocsLoadQueue: PriorityAsyncQueue<{ id: string; doc: Doc }>;\n  } = {\n    connectedDocs: new Map(),\n    pushUpdatesQueue: new PriorityAsyncQueue([], this.priorityTarget),\n    pushingUpdate: false,\n    pullUpdatesQueue: new PriorityAsyncQueue([], this.priorityTarget),\n    subdocLoading: false,\n    subdocsLoadQueue: new PriorityAsyncQueue([], this.priorityTarget),\n  };\n\n  get name() {\n    return this.source.name;\n  }\n\n  private set status(s: DocPeerStatus) {\n    if (!isEqual(s, this._status)) {\n      this.logger.debug(`doc-peer:${this.name} status change`, s);\n      this._status = s;\n      this.onStatusChange.emit(s);\n    }\n  }\n\n  get status() {\n    return this._status;\n  }\n\n  constructor(\n    readonly rootDoc: Doc,\n    readonly source: DocSource,\n    readonly priorityTarget = new SharedPriorityTarget(),\n    readonly logger: Logger\n  ) {\n    this.logger.debug(`doc-peer:${this.name} start`);\n\n    this.syncRetryLoop(this.abort.signal).catch(err => {\n      // should not reach here\n      console.error(err);\n    });\n  }\n\n  async connectDoc(doc: Doc, abort: AbortSignal) {\n    const { data: docData, state: inStorageState } =\n      (await this.source.pull(doc.guid, encodeStateVector(doc))) ?? {};\n    throwIfAborted(abort);\n\n    if (docData && docData.length > 0) {\n      applyUpdate(doc, docData, 'load');\n    }\n\n    // diff root doc and in-storage, save updates to pendingUpdates\n    this.state.pushUpdatesQueue.push({\n      id: doc.guid,\n      data: [encodeStateAsUpdate(doc, inStorageState)],\n    });\n\n    this.state.connectedDocs.set(doc.guid, doc);\n\n    // start listen root doc changes\n    doc.on('update', this.handleYDocUpdates);\n\n    // mark rootDoc as loaded\n    doc.emit('sync', [true, doc]);\n\n    this.updateSyncStatus();\n  }\n\n  disconnectDoc(doc: Doc) {\n    doc.off('update', this.handleYDocUpdates);\n    this.state.connectedDocs.delete(doc.guid);\n    this.updateSyncStatus();\n  }\n\n  initState() {\n    this.state.connectedDocs.clear();\n    this.state.pushUpdatesQueue.clear();\n    this.state.pullUpdatesQueue.clear();\n    this.state.subdocsLoadQueue.clear();\n    this.state.pushingUpdate = false;\n    this.state.subdocLoading = false;\n  }\n\n  /**\n   * stop sync\n   *\n   * DocPeer is one-time use, this peer should be discarded after call stop().\n   */\n  stop() {\n    this.logger.debug(`doc-peer:${this.name} stop`);\n    this.abort.abort(MANUALLY_STOP);\n  }\n\n  /**\n   * main synchronization logic\n   */\n  async sync(abortOuter: AbortSignal) {\n    this.initState();\n    const abortInner = new AbortController();\n\n    abortOuter.addEventListener('abort', reason => {\n      abortInner.abort(reason);\n    });\n\n    let dispose: (() => void) | null = null;\n    try {\n      this.updateSyncStatus();\n\n      // start listen storage updates\n      dispose = await this.source.subscribe(\n        this.handleStorageUpdates,\n        reason => {\n          // abort if storage disconnect, should trigger retry loop\n          abortInner.abort('subscribe disconnect:' + reason);\n        }\n      );\n      throwIfAborted(abortInner.signal);\n\n      // Step 1: load root doc\n      await this.connectDoc(this.rootDoc, abortInner.signal);\n\n      // Step 2: load subdocs\n      this.state.subdocsLoadQueue.push(\n        ...Array.from(this.rootDoc.getSubdocs()).map(doc => ({\n          id: doc.guid,\n          doc,\n        }))\n      );\n      this.updateSyncStatus();\n\n      this.rootDoc.on('subdocs', this.handleSubdocsUpdate);\n\n      // Finally: start sync\n      await Promise.all([\n        // load subdocs\n        (async () => {\n          while (throwIfAborted(abortInner.signal)) {\n            const subdoc = await this.state.subdocsLoadQueue.next(\n              abortInner.signal\n            );\n            this.state.subdocLoading = true;\n            this.updateSyncStatus();\n            await this.connectDoc(subdoc.doc, abortInner.signal);\n            this.state.subdocLoading = false;\n            this.updateSyncStatus();\n          }\n        })(),\n        // pull updates\n        (async () => {\n          while (throwIfAborted(abortInner.signal)) {\n            const { id, data } = await this.state.pullUpdatesQueue.next(\n              abortInner.signal\n            );\n            // don't apply empty data or Uint8Array([0, 0])\n            if (\n              !(\n                data.byteLength === 0 ||\n                (data.byteLength === 2 && data[0] === 0 && data[1] === 0)\n              )\n            ) {\n              const subdoc = this.state.connectedDocs.get(id);\n              if (subdoc) {\n                applyUpdate(subdoc, data, this.name);\n              }\n            }\n            this.updateSyncStatus();\n          }\n        })(),\n        // push updates\n        (async () => {\n          while (throwIfAborted(abortInner.signal)) {\n            const { id, data } = await this.state.pushUpdatesQueue.next(\n              abortInner.signal\n            );\n            this.state.pushingUpdate = true;\n            this.updateSyncStatus();\n\n            const merged = mergeUpdates(data);\n\n            // don't push empty data or Uint8Array([0, 0])\n            if (\n              !(\n                merged.byteLength === 0 ||\n                (merged.byteLength === 2 && merged[0] === 0 && merged[1] === 0)\n              )\n            ) {\n              await this.source.push(id, merged);\n            }\n\n            this.state.pushingUpdate = false;\n            this.updateSyncStatus();\n          }\n        })(),\n      ]);\n    } finally {\n      dispose?.();\n      for (const docs of this.state.connectedDocs.values()) {\n        this.disconnectDoc(docs);\n      }\n      this.rootDoc.off('subdocs', this.handleSubdocsUpdate);\n    }\n  }\n\n  /**\n   * auto retry after 5 seconds if sync failed\n   */\n  async syncRetryLoop(abort: AbortSignal) {\n    while (abort.aborted === false) {\n      try {\n        await this.sync(abort);\n      } catch (err) {\n        if (err === MANUALLY_STOP || abort.aborted) {\n          return;\n        }\n\n        this.logger.error(`doc-peer:${this.name} sync error`, err);\n      }\n      try {\n        this.logger.error(`doc-peer:${this.name} retry after 5 seconds`);\n        this.status = {\n          step: DocPeerStep.Retrying,\n          totalDocs: 1,\n          loadedDocs: 0,\n          pendingPullUpdates: 0,\n          pendingPushUpdates: 0,\n        };\n        await Promise.race([\n          new Promise<void>(resolve => {\n            setTimeout(resolve, 5 * 1000);\n          }),\n          new Promise((_, reject) => {\n            // exit if manually stopped\n            if (abort.aborted) {\n              reject(abort.reason);\n            }\n            abort.addEventListener('abort', () => {\n              reject(abort.reason);\n            });\n          }),\n        ]);\n      } catch (err) {\n        if (err === MANUALLY_STOP || abort.aborted) {\n          return;\n        }\n\n        // should never reach here\n        throw err;\n      }\n    }\n  }\n\n  updateSyncStatus() {\n    let step;\n    if (this.state.connectedDocs.size === 0) {\n      step = DocPeerStep.LoadingRootDoc;\n    } else if (this.state.subdocsLoadQueue.length || this.state.subdocLoading) {\n      step = DocPeerStep.LoadingSubDoc;\n    } else if (\n      this.state.pullUpdatesQueue.length ||\n      this.state.pushUpdatesQueue.length ||\n      this.state.pushingUpdate\n    ) {\n      step = DocPeerStep.Syncing;\n    } else {\n      step = DocPeerStep.Synced;\n    }\n\n    this.status = {\n      step: step,\n      totalDocs:\n        this.state.connectedDocs.size + this.state.subdocsLoadQueue.length,\n      loadedDocs: this.state.connectedDocs.size,\n      pendingPullUpdates:\n        this.state.pullUpdatesQueue.length + (this.state.subdocLoading ? 1 : 0),\n      pendingPushUpdates:\n        this.state.pushUpdatesQueue.length + (this.state.pushingUpdate ? 1 : 0),\n    };\n  }\n\n  async waitForLoaded(abort?: AbortSignal) {\n    if (this.status.step > DocPeerStep.Loaded) {\n      return;\n    } else {\n      return Promise.race([\n        new Promise<void>(resolve => {\n          this.onStatusChange.on(status => {\n            if (status.step > DocPeerStep.Loaded) {\n              resolve();\n            }\n          });\n        }),\n        new Promise((_, reject) => {\n          if (abort?.aborted) {\n            reject(abort?.reason);\n          }\n          abort?.addEventListener('abort', () => {\n            reject(abort.reason);\n          });\n        }),\n      ]);\n    }\n  }\n\n  async waitForSynced(abort?: AbortSignal) {\n    if (this.status.step >= DocPeerStep.Synced) {\n      return;\n    } else {\n      return Promise.race([\n        new Promise<void>(resolve => {\n          this.onStatusChange.on(status => {\n            if (status.step >= DocPeerStep.Synced) {\n              resolve();\n            }\n          });\n        }),\n        new Promise((_, reject) => {\n          if (abort?.aborted) {\n            reject(abort?.reason);\n          }\n          abort?.addEventListener('abort', () => {\n            reject(abort.reason);\n          });\n        }),\n      ]);\n    }\n  }\n}\n"]}