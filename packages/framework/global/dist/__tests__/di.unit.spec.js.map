{"version":3,"file":"di.unit.spec.js","sourceRoot":"","sources":["../../src/__tests__/di.unit.spec.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { describe, expect, test } from 'vitest';\n\nimport {\n  CircularDependencyError,\n  Container,\n  createIdentifier,\n  createScope,\n  DuplicateServiceDefinitionError,\n  MissingDependencyError,\n  RecursionLimitError,\n  ServiceNotFoundError,\n  ServiceProvider,\n} from '../di/index.js';\n\ndescribe('di', () => {\n  test('basic', () => {\n    const container = new Container();\n    class TestService {\n      a = 'b';\n    }\n\n    container.add(TestService);\n\n    const provider = container.provider();\n    expect(provider.get(TestService)).toEqual({ a: 'b' });\n  });\n\n  test('size', () => {\n    const container = new Container();\n    class TestService {\n      a = 'b';\n    }\n\n    container.add(TestService);\n\n    expect(container.size).toEqual(1);\n  });\n\n  test('dependency', () => {\n    const container = new Container();\n\n    class A {\n      value = 'hello world';\n    }\n\n    class B {\n      constructor(public a: A) {}\n    }\n\n    class C {\n      constructor(public b: B) {}\n    }\n\n    container.add(A).add(B, [A]).add(C, [B]);\n\n    const provider = container.provider();\n\n    expect(provider.get(C).b.a.value).toEqual('hello world');\n  });\n\n  test('identifier', () => {\n    interface Animal {\n      name: string;\n    }\n    const Animal = createIdentifier<Animal>('Animal');\n\n    class Cat {\n      name = 'cat';\n\n      constructor() {}\n    }\n\n    class Zoo {\n      constructor(public animal: Animal) {}\n    }\n\n    const container = new Container();\n    container.addImpl(Animal, Cat).add(Zoo, [Animal]);\n\n    const provider = container.provider();\n    expect(provider.get(Zoo).animal.name).toEqual('cat');\n  });\n\n  test('variant', () => {\n    const container = new Container();\n\n    interface USB {\n      speed: number;\n    }\n\n    const USB = createIdentifier<USB>('USB');\n\n    class TypeA implements USB {\n      speed = 100;\n    }\n    class TypeC implements USB {\n      speed = 300;\n    }\n\n    class PC {\n      constructor(\n        public typeA: USB,\n        public ports: USB[]\n      ) {}\n    }\n\n    container\n      .addImpl(USB('A'), TypeA)\n      .addImpl(USB('C'), TypeC)\n      .add(PC, [USB('A'), [USB]]);\n\n    const provider = container.provider();\n    expect(provider.get(USB('A')).speed).toEqual(100);\n    expect(provider.get(USB('C')).speed).toEqual(300);\n    expect(provider.get(PC).typeA.speed).toEqual(100);\n    expect(provider.get(PC).ports.length).toEqual(2);\n  });\n\n  test('lazy initialization', () => {\n    const container = new Container();\n    interface Command {\n      shortcut: string;\n      callback: () => void;\n    }\n    const Command = createIdentifier<Command>('command');\n\n    let pageSystemInitialized = false;\n\n    class PageSystem {\n      mode = 'page';\n\n      name = 'helloworld';\n\n      constructor() {\n        pageSystemInitialized = true;\n      }\n\n      rename() {\n        this.name = 'foobar';\n      }\n\n      switchToEdgeless() {\n        this.mode = 'edgeless';\n      }\n    }\n\n    class CommandSystem {\n      constructor(public commands: Command[]) {}\n\n      execute(shortcut: string) {\n        const command = this.commands.find(c => c.shortcut === shortcut);\n        if (command) {\n          command.callback();\n        }\n      }\n    }\n\n    container.add(PageSystem);\n    container.add(CommandSystem, [[Command]]);\n    container.addImpl(Command('switch'), p => ({\n      shortcut: 'option+s',\n      callback: () => p.get(PageSystem).switchToEdgeless(),\n    }));\n    container.addImpl(Command('rename'), p => ({\n      shortcut: 'f2',\n      callback: () => p.get(PageSystem).rename(),\n    }));\n\n    const provider = container.provider();\n    const commandSystem = provider.get(CommandSystem);\n\n    expect(\n      pageSystemInitialized,\n      \"PageSystem won't be initialized until command executed\"\n    ).toEqual(false);\n\n    commandSystem.execute('option+s');\n    expect(pageSystemInitialized).toEqual(true);\n    expect(provider.get(PageSystem).mode).toEqual('edgeless');\n\n    expect(provider.get(PageSystem).name).toEqual('helloworld');\n    expect(commandSystem.commands.length).toEqual(2);\n    commandSystem.execute('f2');\n    expect(provider.get(PageSystem).name).toEqual('foobar');\n  });\n\n  test('duplicate, override', () => {\n    const container = new Container();\n\n    const something = createIdentifier<any>('USB');\n\n    class A {\n      a = 'i am A';\n    }\n\n    class B {\n      b = 'i am B';\n    }\n\n    container.addImpl(something, A).override(something, B);\n\n    const provider = container.provider();\n    expect(provider.get(something)).toEqual({ b: 'i am B' });\n  });\n\n  test('scope', () => {\n    const container = new Container();\n\n    const workspaceScope = createScope('workspace');\n    const pageScope = createScope('page', workspaceScope);\n    const editorScope = createScope('editor', pageScope);\n\n    class System {\n      appName = 'affine';\n    }\n\n    container.add(System);\n\n    class Workspace {\n      name = 'workspace';\n\n      constructor(public system: System) {}\n    }\n\n    container.scope(workspaceScope).add(Workspace, [System]);\n    class Page {\n      name = 'page';\n\n      constructor(\n        public system: System,\n        public workspace: Workspace\n      ) {}\n    }\n\n    container.scope(pageScope).add(Page, [System, Workspace]);\n\n    class Editor {\n      name = 'editor';\n\n      constructor(public page: Page) {}\n    }\n\n    container.scope(editorScope).add(Editor, [Page]);\n\n    const root = container.provider();\n    expect(root.get(System).appName).toEqual('affine');\n    expect(() => root.get(Workspace)).toThrowError(ServiceNotFoundError);\n\n    const workspace = container.provider(workspaceScope, root);\n    expect(workspace.get(Workspace).name).toEqual('workspace');\n    expect(workspace.get(System).appName).toEqual('affine');\n    expect(() => root.get(Page)).toThrowError(ServiceNotFoundError);\n\n    const page = container.provider(pageScope, workspace);\n    expect(page.get(Page).name).toEqual('page');\n    expect(page.get(Workspace).name).toEqual('workspace');\n    expect(page.get(System).appName).toEqual('affine');\n\n    const editor = container.provider(editorScope, page);\n    expect(editor.get(Editor).name).toEqual('editor');\n  });\n\n  test('service not found', () => {\n    const container = new Container();\n\n    const provider = container.provider();\n    expect(() => provider.get(createIdentifier('SomeService'))).toThrowError(\n      ServiceNotFoundError\n    );\n  });\n\n  test('missing dependency', () => {\n    const container = new Container();\n\n    class A {\n      value = 'hello world';\n    }\n\n    class B {\n      constructor(public a: A) {}\n    }\n\n    container.add(B, [A]);\n\n    const provider = container.provider();\n    expect(() => provider.get(B)).toThrowError(MissingDependencyError);\n  });\n\n  test('circular dependency', () => {\n    const container = new Container();\n\n    class A {\n      constructor(public c: C) {}\n    }\n\n    class B {\n      constructor(public a: A) {}\n    }\n\n    class C {\n      constructor(public b: B) {}\n    }\n\n    container.add(A, [C]).add(B, [A]).add(C, [B]);\n\n    const provider = container.provider();\n    expect(() => provider.get(A)).toThrowError(CircularDependencyError);\n    expect(() => provider.get(B)).toThrowError(CircularDependencyError);\n    expect(() => provider.get(C)).toThrowError(CircularDependencyError);\n  });\n\n  test('duplicate service definition', () => {\n    const container = new Container();\n\n    class A {}\n\n    container.add(A);\n    expect(() => container.add(A)).toThrowError(\n      DuplicateServiceDefinitionError\n    );\n\n    class B {}\n    const Something = createIdentifier('something');\n    container.addImpl(Something, A);\n    expect(() => container.addImpl(Something, B)).toThrowError(\n      DuplicateServiceDefinitionError\n    );\n  });\n\n  test('recursion limit', () => {\n    // maxmium resolve depth is 100\n    const container = new Container();\n    const Something = createIdentifier('something');\n    let i = 0;\n    for (; i < 100; i++) {\n      const next = i + 1;\n\n      class Test {\n        constructor(_next: any) {}\n      }\n\n      container.addImpl(Something(i.toString()), Test, [\n        Something(next.toString()),\n      ]);\n    }\n\n    class Final {\n      a = 'b';\n    }\n    container.addImpl(Something(i.toString()), Final);\n    const provider = container.provider();\n    expect(() => provider.get(Something('0'))).toThrowError(\n      RecursionLimitError\n    );\n  });\n\n  test('self resolve', () => {\n    const container = new Container();\n    const provider = container.provider();\n    expect(provider.get(ServiceProvider)).toEqual(provider);\n  });\n});\n"]}