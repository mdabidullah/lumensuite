{"version":3,"file":"point.js","sourceRoot":"","sources":["../../../src/utils/model/point.ts"],"names":[],"mappings":"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","sourcesContent":["import { clamp } from '../math.js';\n\nexport interface IPoint {\n  x: number;\n  y: number;\n}\n\nexport class Point {\n  x: number;\n\n  y: number;\n\n  constructor(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Restrict a value to a certain interval.\n   */\n  static clamp(p: Point, min: Point, max: Point) {\n    return new Point(clamp(p.x, min.x, max.x), clamp(p.y, min.y, max.y));\n  }\n\n  static from(point: IPoint | number[] | number, y?: number) {\n    if (Array.isArray(point)) {\n      return new Point(point[0], point[1]);\n    }\n    if (typeof point === 'number') {\n      return new Point(point, y ?? point);\n    }\n    return new Point(point.x, point.y);\n  }\n\n  /**\n   * Compares and returns the maximum of two points.\n   */\n  static max(a: Point, b: Point) {\n    return new Point(Math.max(a.x, b.x), Math.max(a.y, b.y));\n  }\n\n  /**\n   * Compares and returns the minimum of two points.\n   */\n  static min(a: Point, b: Point) {\n    return new Point(Math.min(a.x, b.x), Math.min(a.y, b.y));\n  }\n\n  add(point: IPoint): Point {\n    return new Point(this.x + point.x, this.y + point.y);\n  }\n\n  /**\n   * Returns a copy of the point.\n   */\n  clone() {\n    return new Point(this.x, this.y);\n  }\n\n  cross(point: IPoint): number {\n    return this.x * point.y - this.y * point.x;\n  }\n\n  equals({ x, y }: Point) {\n    return this.x === x && this.y === y;\n  }\n\n  lerp(point: IPoint, t: number): Point {\n    return new Point(\n      this.x + (point.x - this.x) * t,\n      this.y + (point.y - this.y) * t\n    );\n  }\n\n  scale(factor: number): Point {\n    return new Point(this.x * factor, this.y * factor);\n  }\n\n  set(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  subtract(point: IPoint): Point {\n    return new Point(this.x - point.x, this.y - point.y);\n  }\n\n  toArray() {\n    return [this.x, this.y];\n  }\n}\n\nexport class Rect {\n  // `[right, bottom]`\n  max: Point;\n\n  // `[left, top]`\n  min: Point;\n\n  get bottom() {\n    return this.max.y;\n  }\n\n  set bottom(y: number) {\n    this.max.y = y;\n  }\n\n  get height() {\n    return this.max.y - this.min.y;\n  }\n\n  set height(h: number) {\n    this.max.y = this.min.y + h;\n  }\n\n  get left() {\n    return this.min.x;\n  }\n\n  set left(x: number) {\n    this.min.x = x;\n  }\n\n  get right() {\n    return this.max.x;\n  }\n\n  set right(x: number) {\n    this.max.x = x;\n  }\n\n  get top() {\n    return this.min.y;\n  }\n\n  set top(y: number) {\n    this.min.y = y;\n  }\n\n  get width() {\n    return this.max.x - this.min.x;\n  }\n\n  set width(w: number) {\n    this.max.x = this.min.x + w;\n  }\n\n  constructor(left: number, top: number, right: number, bottom: number) {\n    const [minX, maxX] = left <= right ? [left, right] : [right, left];\n    const [minY, maxY] = top <= bottom ? [top, bottom] : [bottom, top];\n    this.min = new Point(minX, minY);\n    this.max = new Point(maxX, maxY);\n  }\n\n  static fromDOM(dom: Element) {\n    return Rect.fromDOMRect(dom.getBoundingClientRect());\n  }\n\n  static fromDOMRect({ left, top, right, bottom }: DOMRect) {\n    return Rect.fromLTRB(left, top, right, bottom);\n  }\n\n  static fromLTRB(left: number, top: number, right: number, bottom: number) {\n    return new Rect(left, top, right, bottom);\n  }\n\n  static fromLWTH(left: number, width: number, top: number, height: number) {\n    return new Rect(left, top, left + width, top + height);\n  }\n\n  static fromPoint(point: Point) {\n    return Rect.fromPoints(point.clone(), point);\n  }\n\n  static fromPoints(start: Point, end: Point) {\n    const width = Math.abs(end.x - start.x);\n    const height = Math.abs(end.y - start.y);\n    const left = Math.min(end.x, start.x);\n    const top = Math.min(end.y, start.y);\n    return Rect.fromLWTH(left, width, top, height);\n  }\n\n  static fromXY(x: number, y: number) {\n    return Rect.fromPoint(new Point(x, y));\n  }\n\n  center() {\n    return new Point(\n      (this.left + this.right) / 2,\n      (this.top + this.bottom) / 2\n    );\n  }\n\n  clamp(p: Point) {\n    return Point.clamp(p, this.min, this.max);\n  }\n\n  clone() {\n    const { left, top, right, bottom } = this;\n    return new Rect(left, top, right, bottom);\n  }\n\n  contains({ min, max }: Rect) {\n    return this.isPointIn(min) && this.isPointIn(max);\n  }\n\n  equals({ min, max }: Rect) {\n    return this.min.equals(min) && this.max.equals(max);\n  }\n\n  extend_with(point: Point) {\n    this.min = Point.min(this.min, point);\n    this.max = Point.max(this.max, point);\n  }\n\n  extend_with_x(x: number) {\n    this.min.x = Math.min(this.min.x, x);\n    this.max.x = Math.max(this.max.x, x);\n  }\n\n  extend_with_y(y: number) {\n    this.min.y = Math.min(this.min.y, y);\n    this.max.y = Math.max(this.max.y, y);\n  }\n\n  intersect(other: Rect) {\n    return Rect.fromPoints(\n      Point.max(this.min, other.min),\n      Point.min(this.max, other.max)\n    );\n  }\n\n  intersects({ left, top, right, bottom }: Rect) {\n    return (\n      this.left <= right &&\n      left <= this.right &&\n      this.top <= bottom &&\n      top <= this.bottom\n    );\n  }\n\n  isPointDown({ x, y }: Point) {\n    return this.bottom < y && this.left <= x && this.right >= x;\n  }\n\n  isPointIn({ x, y }: Point) {\n    return (\n      this.left <= x && x <= this.right && this.top <= y && y <= this.bottom\n    );\n  }\n\n  isPointLeft({ x, y }: Point) {\n    return x < this.left && this.top <= y && this.bottom >= y;\n  }\n\n  isPointRight({ x, y }: Point) {\n    return x > this.right && this.top <= y && this.bottom >= y;\n  }\n\n  isPointUp({ x, y }: Point) {\n    return y < this.top && this.left <= x && this.right >= x;\n  }\n\n  toDOMRect() {\n    const { left, top, width, height } = this;\n    return new DOMRect(left, top, width, height);\n  }\n}\n"]}