{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/utils/figma-squircle/index.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,EAAE,sBAAsB,EAAE,MAAM,iBAAiB,CAAC;AACzD,OAAO,EAAE,sBAAsB,EAAE,wBAAwB,EAAE,MAAM,WAAW,CAAC;AAc7E,MAAM,UAAU,UAAU,CAAC,EACzB,YAAY,GAAG,CAAC,EAChB,mBAAmB,EACnB,oBAAoB,EACpB,uBAAuB,EACvB,sBAAsB,EACtB,eAAe,EACf,KAAK,EACL,MAAM,EACN,iBAAiB,GAAG,KAAK,GACL;IACpB,mBAAmB,GAAG,mBAAmB,IAAI,YAAY,CAAC;IAC1D,oBAAoB,GAAG,oBAAoB,IAAI,YAAY,CAAC;IAC5D,sBAAsB,GAAG,sBAAsB,IAAI,YAAY,CAAC;IAChE,uBAAuB,GAAG,uBAAuB,IAAI,YAAY,CAAC;IAElE,IACE,mBAAmB,KAAK,oBAAoB;QAC5C,oBAAoB,KAAK,uBAAuB;QAChD,uBAAuB,KAAK,sBAAsB;QAClD,sBAAsB,KAAK,mBAAmB,EAC9C,CAAC;QACD,MAAM,0BAA0B,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;QAC/D,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAC3B,mBAAmB,EACnB,0BAA0B,CAC3B,CAAC;QAEF,MAAM,UAAU,GAAG,sBAAsB,CAAC;YACxC,YAAY;YACZ,eAAe;YACf,iBAAiB;YACjB,0BAA0B;SAC3B,CAAC,CAAC;QAEH,OAAO,wBAAwB,CAAC;YAC9B,KAAK;YACL,MAAM;YACN,iBAAiB,EAAE,UAAU;YAC7B,kBAAkB,EAAE,UAAU;YAC9B,oBAAoB,EAAE,UAAU;YAChC,qBAAqB,EAAE,UAAU;SAClC,CAAC,CAAC;IACL,CAAC;IAED,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,WAAW,EAAE,GAAG,sBAAsB,CAC3E;QACE,mBAAmB;QACnB,oBAAoB;QACpB,uBAAuB;QACvB,sBAAsB;QACtB,KAAK;QACL,MAAM;KACP,CACF,CAAC;IAEF,OAAO,wBAAwB,CAAC;QAC9B,KAAK;QACL,MAAM;QACN,iBAAiB,EAAE,sBAAsB,CAAC;YACxC,eAAe;YACf,iBAAiB;YACjB,YAAY,EAAE,OAAO,CAAC,MAAM;YAC5B,0BAA0B,EAAE,OAAO,CAAC,0BAA0B;SAC/D,CAAC;QACF,kBAAkB,EAAE,sBAAsB,CAAC;YACzC,eAAe;YACf,iBAAiB;YACjB,YAAY,EAAE,QAAQ,CAAC,MAAM;YAC7B,0BAA0B,EAAE,QAAQ,CAAC,0BAA0B;SAChE,CAAC;QACF,qBAAqB,EAAE,sBAAsB,CAAC;YAC5C,eAAe;YACf,iBAAiB;YACjB,YAAY,EAAE,WAAW,CAAC,MAAM;YAChC,0BAA0B,EAAE,WAAW,CAAC,0BAA0B;SACnE,CAAC;QACF,oBAAoB,EAAE,sBAAsB,CAAC;YAC3C,eAAe;YACf,iBAAiB;YACjB,YAAY,EAAE,UAAU,CAAC,MAAM;YAC/B,0BAA0B,EAAE,UAAU,CAAC,0BAA0B;SAClE,CAAC;KACH,CAAC,CAAC;AACL,CAAC","sourcesContent":["/**\n * Copyright (c)\n * https://github.com/phamfoo/figma-squircle\n */\n\nimport { distributeAndNormalize } from './distribute.js';\nimport { getPathParamsForCorner, getSVGPathFromPathParams } from './draw.js';\n\nexport interface FigmaSquircleParams {\n  cornerRadius?: number;\n  topLeftCornerRadius?: number;\n  topRightCornerRadius?: number;\n  bottomRightCornerRadius?: number;\n  bottomLeftCornerRadius?: number;\n  cornerSmoothing: number;\n  width: number;\n  height: number;\n  preserveSmoothing?: boolean;\n}\n\nexport function getSvgPath({\n  cornerRadius = 0,\n  topLeftCornerRadius,\n  topRightCornerRadius,\n  bottomRightCornerRadius,\n  bottomLeftCornerRadius,\n  cornerSmoothing,\n  width,\n  height,\n  preserveSmoothing = false,\n}: FigmaSquircleParams) {\n  topLeftCornerRadius = topLeftCornerRadius ?? cornerRadius;\n  topRightCornerRadius = topRightCornerRadius ?? cornerRadius;\n  bottomLeftCornerRadius = bottomLeftCornerRadius ?? cornerRadius;\n  bottomRightCornerRadius = bottomRightCornerRadius ?? cornerRadius;\n\n  if (\n    topLeftCornerRadius === topRightCornerRadius &&\n    topRightCornerRadius === bottomRightCornerRadius &&\n    bottomRightCornerRadius === bottomLeftCornerRadius &&\n    bottomLeftCornerRadius === topLeftCornerRadius\n  ) {\n    const roundingAndSmoothingBudget = Math.min(width, height) / 2;\n    const cornerRadius = Math.min(\n      topLeftCornerRadius,\n      roundingAndSmoothingBudget\n    );\n\n    const pathParams = getPathParamsForCorner({\n      cornerRadius,\n      cornerSmoothing,\n      preserveSmoothing,\n      roundingAndSmoothingBudget,\n    });\n\n    return getSVGPathFromPathParams({\n      width,\n      height,\n      topLeftPathParams: pathParams,\n      topRightPathParams: pathParams,\n      bottomLeftPathParams: pathParams,\n      bottomRightPathParams: pathParams,\n    });\n  }\n\n  const { topLeft, topRight, bottomLeft, bottomRight } = distributeAndNormalize(\n    {\n      topLeftCornerRadius,\n      topRightCornerRadius,\n      bottomRightCornerRadius,\n      bottomLeftCornerRadius,\n      width,\n      height,\n    }\n  );\n\n  return getSVGPathFromPathParams({\n    width,\n    height,\n    topLeftPathParams: getPathParamsForCorner({\n      cornerSmoothing,\n      preserveSmoothing,\n      cornerRadius: topLeft.radius,\n      roundingAndSmoothingBudget: topLeft.roundingAndSmoothingBudget,\n    }),\n    topRightPathParams: getPathParamsForCorner({\n      cornerSmoothing,\n      preserveSmoothing,\n      cornerRadius: topRight.radius,\n      roundingAndSmoothingBudget: topRight.roundingAndSmoothingBudget,\n    }),\n    bottomRightPathParams: getPathParamsForCorner({\n      cornerSmoothing,\n      preserveSmoothing,\n      cornerRadius: bottomRight.radius,\n      roundingAndSmoothingBudget: bottomRight.roundingAndSmoothingBudget,\n    }),\n    bottomLeftPathParams: getPathParamsForCorner({\n      cornerSmoothing,\n      preserveSmoothing,\n      cornerRadius: bottomLeft.radius,\n      roundingAndSmoothingBudget: bottomLeft.roundingAndSmoothingBudget,\n    }),\n  });\n}\n"]}