{"version":3,"file":"getStroke.js","sourceRoot":"","sources":["../../../src/utils/perfect-freehand/getStroke.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,sBAAsB,EAAE,MAAM,6BAA6B,CAAC;AACrE,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AAEvD;;;;;;;;;;;;;GAaG;AAEH,MAAM,UAAU,SAAS,CACvB,MAAsE,EACtE,UAAyB,EAAmB;IAE5C,OAAO,sBAAsB,CAAC,eAAe,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC;AAC3E,CAAC","sourcesContent":["import type { IVec, IVec3 } from '@blocksuite/global/utils';\n\nimport type { StrokeOptions } from './types.js';\n\nimport { getStrokeOutlinePoints } from './getStrokeOutlinePoints.js';\nimport { getStrokePoints } from './getStrokePoints.js';\n\n/**\n * ## getStroke\n * @description Get an array of points describing a polygon that surrounds the input points.\n * @param points An array of points (as `[x, y, pressure]` or `{x, y, pressure}`). Pressure is optional in both cases.\n * @param options (optional) An object with options.\n * @param options.size\tThe base size (diameter) of the stroke.\n * @param options.thinning The effect of pressure on the stroke's size.\n * @param options.smoothing\tHow much to soften the stroke's edges.\n * @param options.easing\tAn easing function to apply to each point's pressure.\n * @param options.simulatePressure Whether to simulate pressure based on velocity.\n * @param options.start Cap, taper and easing for the start of the line.\n * @param options.end Cap, taper and easing for the end of the line.\n * @param options.last Whether to handle the points as a completed stroke.\n */\n\nexport function getStroke(\n  points: (IVec | IVec3 | { x: number; y: number; pressure?: number })[],\n  options: StrokeOptions = {} as StrokeOptions\n) {\n  return getStrokeOutlinePoints(getStrokePoints(points, options), options);\n}\n"]}