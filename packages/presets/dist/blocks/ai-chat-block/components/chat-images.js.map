{"version":3,"file":"chat-images.js","sourceRoot":"","sources":["../../../../src/blocks/ai-chat-block/components/chat-images.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AACrD,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,MAAM,EAAE,MAAM,0BAA0B,CAAC;AAClD,OAAO,EAAE,MAAM,EAAE,MAAM,0BAA0B,CAAC;AAElD,OAAO,EAAE,sBAAsB,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AAC5E,OAAO,wBAAwB,CAAC;IAGnB,SAAS;4BADrB,aAAa,CAAC,YAAY,CAAC;;;;sBACG,UAAU;;;;;;;yBAAlB,SAAQ,WAAU;;;;oCAkDtC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;kCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;YAF/B,6KAAS,QAAQ,6BAAR,QAAQ,2FAAU;YAG3B,uKAAS,MAAM,6BAAN,MAAM,uFAAmC;YAtDpD,6KAuDC;;;;iBAtDiB,WAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;GAmB3B,AAnBqB,CAmBpB;QAEO,MAAM;YACb,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE;gBACzB;oBACE,SAAS;oBACT,GAAG,EAAE,CACH,IAAI,CAAA;oBACM,eAAe;oBACf,WAAW;gCACC;iBACzB;gBACD;oBACE,OAAO;oBACP,GAAG,EAAE,CACH,IAAI,CAAA;oBACM,sBAAsB;oBACtB,sBAAsB;gCACV;iBACzB;gBACD;oBACE,SAAS;oBACT,GAAG,EAAE,CACH,IAAI,CAAA;uBACS,IAAI,CAAC,QAAQ;iBACnB;iBACV;aACF,CAAC,CAAC;QACL,CAAC;QAGD,qFAA2B;QAA3B,IAAS,QAAQ,8CAAU;QAA3B,IAAS,QAAQ,oDAAU;QAG3B,yIAAkD;QAAlD,IAAS,MAAM,4CAAmC;QAAlD,IAAS,MAAM,kDAAmC;;;;;;YAtDvC,uDAAS;;;;;SAAT,SAAS;IA0DT,UAAU;4BADtB,aAAa,CAAC,aAAa,CAAC;;;;sBACG,UAAU;;;;0BAAlB,SAAQ,WAAU;;;;uCA4BvC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;YAC/B,sLAAS,WAAW,6BAAX,WAAW,iGAAuB;YA7B7C,6KA8BC;;;;iBA7BiB,WAAM,GAAG,GAAG,CAAA;;;;;;;GAO3B,AAPqB,CAOpB;QAEO,MAAM;YACb,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBACvD,OAAO,OAAO,CAAC;YACjB,CAAC;YAED,OAAO,IAAI,CAAA;QACP,MAAM,CACN,IAAI,CAAC,WAAW,EAChB,UAAU,CAAC,EAAE,CAAC,UAAU,EACxB,UAAU,CAAC,EAAE,CACX,IAAI,CAAA;wBACU,UAAU;sBACZ,SAAS;yBACN,CAClB;WACI,CAAC;QACV,CAAC;QAGD,2FAA2C;QAA3C,IAAS,WAAW,iDAAuB;QAA3C,IAAS,WAAW,uDAAuB;;;;;;YA7BhC,uDAAU;;;;;SAAV,UAAU","sourcesContent":["import { css, html, LitElement, nothing } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { choose } from 'lit/directives/choose.js';\nimport { repeat } from 'lit/directives/repeat.js';\n\nimport { ImageLoadingFailedIcon, LoadingIcon } from '../../_common/icon.js';\nimport './image-placeholder.js';\n\n@customElement('chat-image')\nexport class ChatImage extends LitElement {\n  static override styles = css`\n    .image-container {\n      border-radius: 4px;\n      overflow: hidden;\n      position: relative;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 70%;\n      max-width: 200px;\n      max-height: 122px;\n\n      img {\n        max-width: 100%;\n        max-height: 100%;\n        width: auto;\n        height: auto;\n      }\n    }\n  `;\n\n  override render() {\n    return choose(this.status, [\n      [\n        'loading',\n        () =>\n          html`<image-placeholder\n            .text=${'Loading image'}\n            .icon=${LoadingIcon}\n          ></image-placeholder>`,\n      ],\n      [\n        'error',\n        () =>\n          html`<image-placeholder\n            .text=${'Image Loading Failed'}\n            .icon=${ImageLoadingFailedIcon}\n          ></image-placeholder>`,\n      ],\n      [\n        'success',\n        () =>\n          html`<div class=\"image-container\">\n            <img src=${this.imageUrl} />\n          </div>`,\n      ],\n    ]);\n  }\n\n  @property({ attribute: false })\n  accessor imageUrl!: string;\n\n  @property({ attribute: false })\n  accessor status!: 'loading' | 'error' | 'success';\n}\n\n@customElement('chat-images')\nexport class ChatImages extends LitElement {\n  static override styles = css`\n    .images-container {\n      display: flex;\n      width: 100%;\n      gap: 8px;\n      flex-wrap: wrap;\n    }\n  `;\n\n  override render() {\n    if (!this.attachments || this.attachments.length === 0) {\n      return nothing;\n    }\n\n    return html`<div class=\"images-container\">\n      ${repeat(\n        this.attachments,\n        attachment => attachment,\n        attachment =>\n          html`<chat-image\n            .imageUrl=${attachment}\n            .status=${'success'}\n          ></chat-image>`\n      )}\n    </div>`;\n  }\n\n  @property({ attribute: false })\n  accessor attachments: string[] | undefined;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'chat-image': ChatImage;\n    'chat-images': ChatImages;\n  }\n}\n"]}