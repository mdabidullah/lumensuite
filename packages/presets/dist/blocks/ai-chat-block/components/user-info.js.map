{"version":3,"file":"user-info.js","sourceRoot":"","sources":["../../../../src/blocks/ai-chat-block/components/user-info.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,qBAAqB,CAAC;AAChD,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAuB,SAAS,EAAE,MAAM,KAAK,CAAC;AAC5E,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAI5D,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;IAGxC,QAAQ;4BADpB,aAAa,CAAC,WAAW,CAAC;;;;sBACG,UAAU;;;;;;;;;;;;;wBAAlB,SAAQ,WAAU;;;;sCAsErC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;8CAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;qCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;oCAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;YAR/B,mLAAS,UAAU,6BAAV,UAAU,+FAA4C;YAG/D,2MAAS,kBAAkB,6BAAlB,kBAAkB,+GAAS;YAGpC,gLAAS,SAAS,6BAAT,SAAS,6FAAiC;YAGnD,6KAAS,QAAQ,6BAAR,QAAQ,2FAAU;YAhF7B,6KAiFC;;;;iBAhFiB,WAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAqCP,SAAS,CAAC,SAAS,CAAC,cAAc,CAAC;;;;;;;;GAQvD,AA7CqB,CA6CpB;QAEM,sBAAsB,CAAC,CAAQ;YACrC,MAAM,MAAM,GAAG,CAAC,CAAC,MAA0B,CAAC;YAC5C,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QACjC,CAAC;QAEQ,MAAM;YACb,OAAO,IAAI,CAAA;;UAEL,IAAI,CAAC,UAAU;gBACf,CAAC,CAAC,IAAI,CAAC,UAAU;gBACjB,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,kBAAkB;oBAC1C,CAAC,CAAC,IAAI,CAAA;uBACK,IAAI,CAAC,SAAS;yBACZ,IAAI,CAAC,sBAAsB;iBACnC;oBACL,CAAC,CAAC,IAAI,CAAA,sCAAsC;;gCAExB,IAAI,CAAC,QAAQ;WAClC,CAAC;QACV,CAAC;QAGD,iFAAqD,SAAS,EAAC;QAA/D,IAAS,UAAU,gDAA4C;QAA/D,IAAS,UAAU,sDAA4C;QAG/D,0JAA8B,KAAK,GAAC;QAApC,IAAS,kBAAkB,wDAAS;QAApC,IAAS,kBAAkB,8DAAS;QAGpC,gJAAyC,SAAS,GAAC;QAAnD,IAAS,SAAS,+CAAiC;QAAnD,IAAS,SAAS,qDAAiC;QAGnD,8IAA2B;QAA3B,IAAS,QAAQ,8CAAU;QAA3B,IAAS,QAAQ,oDAAU;;;;;;YAhFhB,uDAAQ;;;;;SAAR,QAAQ;AAyFrB,MAAM,UAAU,gBAAgB,CAC9B,QAAyB,EACzB,WAAyB;IAEzB,MAAM,MAAM,GAAG,CAAC,CAAC,WAAW,IAAI,WAAW,KAAK,MAAM,CAAC;IAEvD,MAAM,gBAAgB,GAAG,MAAM;QAC7B,CAAC,CAAC,IAAI,CAAA;oBACU,QAAQ,CAAC,QAAQ,IAAI,KAAK;qBACzB,QAAQ,CAAC,SAAS;oBACnB;QAChB,CAAC,CAAC,IAAI,CAAA;oBACU,WAAW;sBACT,YAAY;oBACd,CAAC;IAEnB,OAAO,gBAAgB,CAAC;AAC1B,CAAC","sourcesContent":["import { baseTheme } from '@toeverything/theme';\nimport { css, html, LitElement, type TemplateResult, unsafeCSS } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport type { MessageRole, MessageUserInfo } from '../types.js';\n\nimport { AffineAIIcon } from '../../_common/icon.js';\n\n@customElement('user-info')\nexport class UserInfo extends LitElement {\n  static override styles = css`\n    .user-info-container {\n      display: flex;\n      width: 100%;\n      height: 24px;\n      flex-direction: row;\n      gap: 10px;\n      font-weight: 500;\n\n      .user-avatar-container {\n        width: 24px;\n        height: 24px;\n        color: var(--affine-brand-color);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n\n      .default-avatar,\n      .user-avatar-container img {\n        width: 100%;\n        height: 100%;\n        border-radius: 50%;\n      }\n\n      .user-avatar-container img {\n        object-fit: cover;\n      }\n\n      .default-avatar,\n      .avatar-image {\n        background-color: var(--affine-primary-color);\n      }\n\n      .user-name {\n        color: var(--affine-text-primary-color);\n        text-align: justify;\n        font-family: ${unsafeCSS(baseTheme.fontSansFamily)};\n        font-size: var(--affine-font-sm);\n        font-style: normal;\n        font-weight: 500;\n        line-height: 22px;\n        text-overflow: ellipsis;\n      }\n    }\n  `;\n\n  private _handleAvatarLoadError(e: Event) {\n    const target = e.target as HTMLImageElement;\n    target.onerror = null;\n    this.avatarLoadedFailed = true;\n  }\n\n  override render() {\n    return html`<div class=\"user-info-container\">\n      <div class=\"user-avatar-container\">\n        ${this.avatarIcon\n          ? this.avatarIcon\n          : this.avatarUrl && !this.avatarLoadedFailed\n            ? html`<img\n                .src=${this.avatarUrl}\n                @error=${this._handleAvatarLoadError}\n              />`\n            : html`<span class=\"default-avatar\"></span>`}\n      </div>\n      <span class=\"user-name\">${this.userName}</span>\n    </div>`;\n  }\n\n  @property({ attribute: false })\n  accessor avatarIcon: TemplateResult<1> | undefined = undefined;\n\n  @property({ attribute: false })\n  accessor avatarLoadedFailed = false;\n\n  @property({ attribute: false })\n  accessor avatarUrl: string | undefined = undefined;\n\n  @property({ attribute: false })\n  accessor userName!: string;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'user-info': UserInfo;\n  }\n}\n\nexport function UserInfoTemplate(\n  userInfo: MessageUserInfo,\n  messageRole?: MessageRole\n) {\n  const isUser = !!messageRole && messageRole === 'user';\n\n  const userInfoTemplate = isUser\n    ? html`<user-info\n        .userName=${userInfo.userName ?? 'You'}\n        .avatarUrl=${userInfo.avatarUrl}\n      ></user-info>`\n    : html`<user-info\n        .userName=${'AFFiNE AI'}\n        .avatarIcon=${AffineAIIcon}\n      ></user-info>`;\n\n  return userInfoTemplate;\n}\n"]}