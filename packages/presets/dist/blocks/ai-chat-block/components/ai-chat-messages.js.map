{"version":3,"file":"ai-chat-messages.js","sourceRoot":"","sources":["../../../../src/blocks/ai-chat-block/components/ai-chat-messages.ts"],"names":[],"mappings":"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","sourcesContent":["import type { EditorHost } from '@blocksuite/block-std';\nimport type { AffineAIPanelState } from '@blocksuite/blocks';\n\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { repeat } from 'lit/directives/repeat.js';\n\nimport type { ChatMessage, MessageRole, MessageUserInfo } from '../types.js';\nimport type { TextRendererOptions } from './text-renderer.js';\n\nimport './chat-images.js';\nimport './text-renderer.js';\nimport { UserInfoTemplate } from './user-info.js';\n\n@customElement('ai-chat-message')\nexport class AIChatMessage extends LitElement {\n  static override styles = css`\n    .ai-chat-message {\n      display: flex;\n      width: 100%;\n      flex-direction: column;\n      gap: 4px;\n      box-sizing: border-box;\n    }\n\n    .ai-chat-content {\n      display: block;\n      width: calc(100% - 34px);\n      padding-left: 34px;\n      font-weight: 400;\n    }\n\n    .with-attachments {\n      margin-top: 8px;\n    }\n  `;\n\n  override render() {\n    const {\n      host,\n      textRendererOptions,\n      state,\n      content,\n      attachments,\n      messageRole,\n      userInfo,\n    } = this;\n    const withAttachments = !!attachments && attachments.length > 0;\n\n    const messageClasses = classMap({\n      'with-attachments': withAttachments,\n    });\n\n    return html`\n      <div class=\"ai-chat-message\">\n        ${UserInfoTemplate(userInfo, messageRole)}\n        <div class=\"ai-chat-content\">\n          <chat-images .attachments=${attachments}></chat-images>\n          <div class=${messageClasses}>\n            <text-renderer\n              .host=${host}\n              .answer=${content}\n              .options=${textRendererOptions}\n              .state=${state}\n            ></text-renderer>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  @property({ attribute: false })\n  accessor attachments: string[] | undefined = undefined;\n\n  @property({ attribute: false })\n  accessor content: string = '';\n\n  @property({ attribute: false })\n  accessor host!: EditorHost;\n\n  @property({ attribute: false })\n  accessor messageRole: MessageRole | undefined = undefined;\n\n  @property({ attribute: false })\n  accessor state: AffineAIPanelState = 'finished';\n\n  @property({ attribute: false })\n  accessor textRendererOptions: TextRendererOptions = {};\n\n  @property({ attribute: false })\n  accessor userInfo: MessageUserInfo = {};\n}\n\n@customElement('ai-chat-messages')\nexport class AIChatMessages extends LitElement {\n  static override styles = css`\n    :host {\n      width: 100%;\n      box-sizing: border-box;\n    }\n\n    .ai-chat-messages {\n      display: flex;\n      box-sizing: border-box;\n      width: 100%;\n      height: 100%;\n      flex-direction: column;\n      gap: 24px;\n    }\n  `;\n\n  override render() {\n    return html`<div class=\"ai-chat-messages\">\n      ${repeat(\n        this.messages,\n        message => message.id,\n        message => {\n          const { attachments, role, content } = message;\n          const userInfo = {\n            userId: message.userId,\n            userName: message.userName,\n            avatarUrl: message.avatarUrl,\n          };\n          return html`\n            <ai-chat-message\n              .host=${this.host}\n              .textRendererOptions=${this.textRendererOptions}\n              .content=${content}\n              .attachments=${attachments}\n              .messageRole=${role}\n              .userInfo=${userInfo}\n            ></ai-chat-message>\n          `;\n        }\n      )}\n    </div>`;\n  }\n\n  @property({ attribute: false })\n  accessor host!: EditorHost;\n\n  @property({ attribute: false })\n  accessor messages: ChatMessage[] = [];\n\n  @property({ attribute: false })\n  accessor textRendererOptions: TextRendererOptions = {};\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'ai-chat-message': AIChatMessage;\n    'ai-chat-messages': AIChatMessages;\n  }\n}\n"]}