{"version":3,"file":"page-editor.js","sourceRoot":"","sources":["../../src/editors/page-editor.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Doc } from '@blocksuite/store';\n\nimport {\n  BlockStdScope,\n  EditorHost,\n  ShadowlessElement,\n  WithDisposable,\n} from '@blocksuite/block-std';\nimport { PageEditorBlockSpecs } from '@blocksuite/blocks';\nimport { noop } from '@blocksuite/global/utils';\nimport { css, html, nothing } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { guard } from 'lit/directives/guard.js';\n\nnoop(EditorHost);\n\n@customElement('page-editor')\nexport class PageEditor extends WithDisposable(ShadowlessElement) {\n  static override styles = css`\n    page-editor {\n      font-family: var(--affine-font-family);\n      background: var(--affine-background-primary-color);\n    }\n\n    page-editor * {\n      box-sizing: border-box;\n    }\n\n    @media print {\n      page-editor {\n        height: auto;\n      }\n    }\n\n    .affine-page-viewport {\n      position: relative;\n      height: 100%;\n      overflow-x: hidden;\n      overflow-y: auto;\n      container-name: viewport;\n      container-type: inline-size;\n    }\n\n    .page-editor-container {\n      display: block;\n      height: 100%;\n    }\n  `;\n\n  get host() {\n    try {\n      return this.std.host;\n    } catch {\n      return null;\n    }\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this._disposables.add(\n      this.doc.slots.rootAdded.on(() => this.requestUpdate())\n    );\n    this.std = new BlockStdScope({\n      doc: this.doc,\n      extensions: this.specs,\n    });\n  }\n\n  override async getUpdateComplete(): Promise<boolean> {\n    const result = await super.getUpdateComplete();\n    await this.host?.updateComplete;\n    return result;\n  }\n\n  override render() {\n    const std = this.std;\n    if (!this.doc.root) return nothing;\n\n    return html`\n      <div\n        class=${this.hasViewport\n          ? 'affine-page-viewport'\n          : 'page-editor-container'}\n      >\n        ${guard([std], () => std.render())}\n      </div>\n    `;\n  }\n\n  override willUpdate(\n    changedProperties: Map<string | number | symbol, unknown>\n  ) {\n    super.willUpdate(changedProperties);\n    if (changedProperties.has('doc')) {\n      this.std = new BlockStdScope({\n        doc: this.doc,\n        extensions: this.specs,\n      });\n    }\n  }\n\n  @property({ attribute: false })\n  accessor doc!: Doc;\n\n  @property({ type: Boolean })\n  accessor hasViewport = true;\n\n  @property({ attribute: false })\n  accessor specs = PageEditorBlockSpecs;\n\n  @state()\n  accessor std!: BlockStdScope;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'page-editor': PageEditor;\n  }\n}\n"]}