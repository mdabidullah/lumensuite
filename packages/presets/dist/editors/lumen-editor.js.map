{"version":3,"file":"lumen-editor.js","sourceRoot":"","sources":["../../src/editors/lumen-editor.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Doc } from '@blocksuite/store';\n\nimport {\n  BlockStdScope,\n  EditorHost,\n  ShadowlessElement,\n  WithDisposable,\n} from '@blocksuite/block-std';\nimport { EdgelessEditorBlockSpecs } from '@blocksuite/blocks';\nimport { noop } from '@blocksuite/global/utils';\nimport { css, html, nothing, type TemplateResult } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { guard } from 'lit/directives/guard.js';\n\nnoop(EditorHost);\n\n@customElement('lumen-editor')\nexport class LumenEditor extends WithDisposable(ShadowlessElement) {\n  static override styles = css`\n    lumen-editor {\n      font-family: var(--affine-font-family);\n      background: var(--affine-background-primary-color);\n    }\n\n    lumen-editor * {\n      box-sizing: border-box;\n    }\n\n    @media print {\n      lumen-editor {\n        height: auto;\n      }\n    }\n\n    .affine-edgeless-viewport {\n      display: block;\n      height: 100%;\n      position: relative;\n      overflow: clip;\n      container-name: viewport;\n      container-type: inline-size;\n    }\n  `;\n\n  get host() {\n    try {\n      return this.std.host;\n    } catch {\n      return null;\n    }\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this._disposables.add(\n      this.doc.slots.rootAdded.on(() => this.requestUpdate())\n    );\n    this.std = new BlockStdScope({\n      doc: this.doc,\n      extensions: this.specs,\n    });\n  }\n\n  override async getUpdateComplete(): Promise<boolean> {\n    const result = await super.getUpdateComplete();\n    await this.host?.updateComplete;\n    return result;\n  }\n\n  override render() {\n    const std = this.std;\n    if (!this.doc.root) return nothing;\n\n    return html`\n      <div class=\"affine-edgeless-viewport\">\n        ${guard([std], () => std.render())}\n      </div>\n    `;\n  }\n\n  override willUpdate(\n    changedProperties: Map<string | number | symbol, unknown>\n  ) {\n    super.willUpdate(changedProperties);\n    if (changedProperties.has('doc')) {\n      this.std = new BlockStdScope({\n        doc: this.doc,\n        extensions: this.specs,\n      });\n    }\n  }\n\n  @property({ attribute: false })\n  accessor doc!: Doc;\n\n  @property({ attribute: false })\n  accessor editor!: TemplateResult;\n\n  @property({ attribute: false })\n  accessor specs = EdgelessEditorBlockSpecs;\n\n  @state()\n  accessor std!: BlockStdScope;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'lumen-editor': LumenEditor;\n  }\n}\n"]}