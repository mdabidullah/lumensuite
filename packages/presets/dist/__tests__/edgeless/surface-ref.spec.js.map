{"version":3,"file":"surface-ref.spec.js","sourceRoot":"","sources":["../../../src/__tests__/edgeless/surface-ref.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  EdgelessRootBlockComponent,\n  SurfaceRefBlockComponent,\n} from '@lumensuite/blocks';\n\nimport { beforeEach, describe, expect, test } from 'vitest';\n\nimport { wait } from '../utils/common.js';\nimport { addNote, getDocRootBlock } from '../utils/edgeless.js';\nimport { setupEditor } from '../utils/setup.js';\n\ndescribe('basic', () => {\n  let service: EdgelessRootBlockComponent['service'];\n  let edgelessRoot: EdgelessRootBlockComponent;\n  let noteA = '';\n  let noteB = '';\n  let shapeA = '';\n  let shapeB = '';\n  let frame = '';\n\n  beforeEach(async () => {\n    const cleanup = await setupEditor('edgeless');\n    edgelessRoot = getDocRootBlock(doc, editor, 'edgeless');\n    service = edgelessRoot.service;\n\n    noteA = addNote(doc, {\n      index: service.generateIndex('affine:note'),\n    });\n    shapeA = service.addElement('shape', {\n      type: 'rect',\n      xywh: '[0, 0, 100, 100]',\n    });\n    noteB = addNote(doc, {\n      // force to be the last note\n      index: service.generateIndex('shape'),\n    });\n    shapeB = service.addElement('shape', {\n      type: 'rect',\n      xywh: '[100, 0, 100, 100]',\n    });\n    frame = service.addBlock(\n      'affine:frame',\n      {\n        xywh: '[0, 0, 800, 200]',\n      },\n      service.surface.id\n    );\n\n    return cleanup;\n  });\n\n  test('surface-ref should be rendered in page mode', async () => {\n    const surfaceRefId = doc.addBlock(\n      'affine:surface-ref',\n      {\n        reference: frame,\n      },\n      noteA\n    );\n\n    editor.mode = 'page';\n    await wait();\n\n    expect(\n      document.querySelector(\n        `affine-surface-ref[data-block-id=\"${surfaceRefId}\"]`\n      )\n    ).instanceOf(Element);\n  });\n\n  test('surface-ref should be rendered as empty surface-ref-block-edgeless component page mode', async () => {\n    const surfaceRefId = doc.addBlock(\n      'affine:surface-ref',\n      {\n        reference: frame,\n      },\n      noteA\n    );\n\n    await wait();\n\n    const refBlock = document.querySelector(\n      `affine-edgeless-surface-ref[data-block-id=\"${surfaceRefId}\"]`\n    )! as HTMLElement;\n\n    expect(refBlock).instanceOf(Element);\n    expect(refBlock.innerText).toBe('');\n  });\n\n  test('content in frame should be rendered in the correct order', async () => {\n    const surfaceRefId = doc.addBlock(\n      'affine:surface-ref',\n      {\n        reference: frame,\n      },\n      noteA\n    );\n\n    editor.mode = 'page';\n    await wait();\n\n    const surfaceRef = document.querySelector(\n      `affine-surface-ref[data-block-id=\"${surfaceRefId}\"]`\n    ) as HTMLElement;\n    const refBlocks = Array.from(\n      surfaceRef.querySelectorAll('affine-edgeless-note')\n    ) as HTMLElement[];\n    const stackingCanvas = Array.from(\n      surfaceRef.querySelectorAll('.indexable-canvas')!\n    ) as HTMLCanvasElement[];\n\n    expect(refBlocks.length).toBe(2);\n    expect(stackingCanvas.length).toBe(1);\n    expect(stackingCanvas[0].style.zIndex > refBlocks[0].style.zIndex).toBe(\n      true\n    );\n  });\n\n  test('content in group should be rendered in the correct order', async () => {\n    const groupId = service.addElement('group', {\n      children: {\n        [shapeA]: true,\n        [shapeB]: true,\n        [noteA]: true,\n        [noteB]: true,\n      },\n    });\n    const surfaceRefId = doc.addBlock(\n      'affine:surface-ref',\n      {\n        reference: groupId,\n      },\n      noteA\n    );\n\n    editor.mode = 'page';\n    await wait();\n\n    const surfaceRef = document.querySelector(\n      `affine-surface-ref[data-block-id=\"${surfaceRefId}\"]`\n    ) as HTMLElement;\n    const refBlocks = Array.from(\n      surfaceRef.querySelectorAll('affine-edgeless-note')\n    ) as HTMLElement[];\n    const stackingCanvas = Array.from(\n      surfaceRef.querySelectorAll('.indexable-canvas')\n    ) as HTMLCanvasElement[];\n\n    expect(refBlocks.length).toBe(2);\n    expect(stackingCanvas.length).toBe(2);\n    expect(stackingCanvas[1].style.zIndex > refBlocks[0].style.zIndex).toBe(\n      true\n    );\n  });\n\n  test('view in edgeless mode button', async () => {\n    const groupId = service.addElement('group', {\n      children: {\n        [shapeA]: true,\n        [shapeB]: true,\n        [noteA]: true,\n        [noteB]: true,\n      },\n    });\n    const surfaceRefId = doc.addBlock(\n      'affine:surface-ref',\n      {\n        reference: groupId,\n      },\n      noteA\n    );\n\n    editor.mode = 'page';\n    await wait();\n\n    const surfaceRef = document.querySelector(\n      `affine-surface-ref[data-block-id=\"${surfaceRefId}\"]`\n    ) as HTMLElement;\n\n    expect(surfaceRef).instanceOf(Element);\n    (surfaceRef as SurfaceRefBlockComponent).viewInEdgeless();\n    await wait();\n  });\n});\n"]}