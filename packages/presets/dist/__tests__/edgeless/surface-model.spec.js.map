{"version":3,"file":"surface-model.spec.js","sourceRoot":"","sources":["../../../src/__tests__/edgeless/surface-model.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  BrushElementModel,\n  GroupElementModel,\n  ShapeElementModel,\n  SurfaceBlockModel,\n} from '@lumensuite/blocks';\n\nimport { beforeEach, describe, expect, test, vi } from 'vitest';\n\nimport { wait } from '../utils/common.js';\nimport { setupEditor } from '../utils/setup.js';\n\nlet model: SurfaceBlockModel;\n\nbeforeEach(async () => {\n  const cleanup = await setupEditor('edgeless');\n  const models = doc.getBlockByFlavour('affine:surface') as SurfaceBlockModel[];\n\n  model = models[0];\n\n  return cleanup;\n});\n\ndescribe('elements management', () => {\n  test('addElement should work correctly', () => {\n    const id = model.addElement({\n      type: 'shape',\n    });\n\n    expect(model.elementModels[0].id).toBe(id);\n  });\n\n  test('removeElement should work correctly', () => {\n    const id = model.addElement({\n      type: 'shape',\n    });\n\n    model.removeElement(id);\n\n    expect(model.elementModels.length).toBe(0);\n  });\n\n  test('updateElement should work correctly', () => {\n    const id = model.addElement({\n      type: 'shape',\n    });\n\n    model.updateElement(id, { xywh: '[10,10,200,200]' });\n\n    expect(model.elementModels[0].xywh).toBe('[10,10,200,200]');\n  });\n\n  test('getElementById should return element', () => {\n    const id = model.addElement({\n      type: 'shape',\n    });\n\n    expect(model.getElementById(id)).not.toBeNull();\n  });\n\n  test('getElementById should return null if not found', () => {\n    expect(model.getElementById('not-found')).toBeNull();\n  });\n});\n\ndescribe('element model', () => {\n  test('default value should work correctly', () => {\n    const id = model.addElement({\n      type: 'shape',\n    });\n\n    const element = model.getElementById(id)! as ShapeElementModel;\n\n    expect(element.index).toBe('a0');\n    expect(element.strokeColor).toBe('--affine-palette-line-yellow');\n    expect(element.strokeWidth).toBe(4);\n  });\n\n  test('defined prop should not be overwritten by default value', () => {\n    const id = model.addElement({\n      type: 'shape',\n      strokeColor: '--affine-palette-line-black',\n    });\n\n    const element = model.getElementById(id)! as ShapeElementModel;\n\n    expect(element.strokeColor).toBe('--affine-palette-line-black');\n  });\n\n  test('assign value to model property should update ymap directly', () => {\n    const id = model.addElement({\n      type: 'shape',\n    });\n\n    const element = model.getElementById(id)! as ShapeElementModel;\n\n    expect(element.yMap.get('strokeColor')).toBe(\n      '--affine-palette-line-yellow'\n    );\n\n    element.strokeColor = '--affine-palette-line-black';\n    expect(element.yMap.get('strokeColor')).toBe('--affine-palette-line-black');\n    expect(element.strokeColor).toBe('--affine-palette-line-black');\n  });\n});\n\ndescribe('group', () => {\n  test('should get group', () => {\n    const id = model.addElement({\n      type: 'shape',\n    });\n    const id2 = model.addElement({\n      type: 'shape',\n    });\n\n    const groupId = model.addElement({\n      type: 'group',\n      children: {\n        [id]: true,\n        [id2]: true,\n      },\n    });\n    const group = model.getElementById(groupId);\n    const shape = model.getElementById(id)!;\n    const shape2 = model.getElementById(id2)!;\n\n    expect(group).not.toBe(null);\n    expect(model.getGroup(id)).toBe(group);\n    expect(model.getGroup(id2)).toBe(group);\n    expect(shape.group).toBe(group);\n    expect(shape2.group).toBe(group);\n  });\n\n  test('should return null if children property is updated', () => {\n    const id = model.addElement({\n      type: 'shape',\n    });\n    const id2 = model.addElement({\n      type: 'shape',\n    });\n    const id3 = model.addElement({\n      type: 'shape',\n    });\n\n    const groupId = model.addElement({\n      type: 'group',\n      children: {\n        [id]: true,\n        [id2]: true,\n        [id3]: true,\n      },\n    });\n    const group = model.getElementById(groupId) as GroupElementModel;\n\n    model.doc.transact(() => {\n      group.children.delete(id);\n      group.children.delete(id2);\n    });\n\n    expect(model.getElementById(groupId)).toBe(group);\n    expect(model.getGroup(id)).toBeNull();\n    expect(model.getGroup(id2)).toBeNull();\n  });\n\n  test('should return null if group are deleted', () => {\n    const id = model.addElement({\n      type: 'shape',\n    });\n    const id2 = model.addElement({\n      type: 'shape',\n    });\n\n    const groupId = model.addElement({\n      type: 'group',\n      children: {\n        [id]: true,\n        [id2]: true,\n      },\n    });\n\n    model.removeElement(groupId);\n    expect(model.getGroup(id)).toBeNull();\n    expect(model.getGroup(id2)).toBeNull();\n    // @ts-ignore\n    expect(model._elementToGroup.get(id)).toBeUndefined();\n    // @ts-ignore\n    expect(model._elementToGroup.get(id2)).toBeUndefined();\n  });\n\n  test('children can be updated with a plain object', () => {\n    const id = model.addElement({\n      type: 'shape',\n    });\n    const id2 = model.addElement({\n      type: 'shape',\n    });\n\n    const groupId = model.addElement({\n      type: 'group',\n      children: {\n        [id]: true,\n        [id2]: true,\n      },\n    });\n    const group = model.getElementById(groupId) as GroupElementModel;\n\n    model.updateElement(groupId, {\n      children: {\n        [id]: false,\n      },\n    });\n\n    expect(group.childIds).toEqual([id]);\n  });\n});\n\ndescribe('connector', () => {\n  test('should get connector', () => {\n    const id = model.addElement({\n      type: 'shape',\n    });\n    const id2 = model.addElement({\n      type: 'shape',\n    });\n    const connectorId = model.addElement({\n      type: 'connector',\n      source: {\n        id,\n      },\n      target: {\n        id: id2,\n      },\n    });\n    const connector = model.getElementById(connectorId)!;\n\n    expect(model.getConnectors(id).map(el => el.id)).toEqual([connector.id]);\n    expect(model.getConnectors(id2).map(el => el.id)).toEqual([connector.id]);\n  });\n\n  test('multiple connectors are supported', () => {\n    const id = model.addElement({\n      type: 'shape',\n    });\n    const id2 = model.addElement({\n      type: 'shape',\n    });\n    const connectorId = model.addElement({\n      type: 'connector',\n      source: {\n        id,\n      },\n      target: {\n        id: id2,\n      },\n    });\n    const connectorId2 = model.addElement({\n      type: 'connector',\n      source: {\n        id,\n      },\n      target: {\n        id: id2,\n      },\n    });\n\n    const connector = model.getElementById(connectorId)!;\n    const connector2 = model.getElementById(connectorId2)!;\n    const connectors = [connector.id, connector2.id];\n\n    expect(model.getConnectors(id).map(c => c.id)).toEqual(connectors);\n    expect(model.getConnectors(id2).map(c => c.id)).toEqual(connectors);\n  });\n\n  test('should return null if connector are updated', () => {\n    const id = model.addElement({\n      type: 'shape',\n    });\n    const id2 = model.addElement({\n      type: 'shape',\n    });\n    const connectorId = model.addElement({\n      type: 'connector',\n      source: {\n        id,\n      },\n      target: {\n        id: id2,\n      },\n    });\n\n    model.updateElement(connectorId, {\n      source: {\n        position: [0, 0],\n      },\n      target: {\n        position: [0, 0],\n      },\n    });\n\n    expect(model.getConnectors(id)).toEqual([]);\n    expect(model.getConnectors(id2)).toEqual([]);\n  });\n\n  test('should return null if connector are deleted', async () => {\n    const id = model.addElement({\n      type: 'shape',\n    });\n    const id2 = model.addElement({\n      type: 'shape',\n    });\n    const connectorId = model.addElement({\n      type: 'connector',\n      source: {\n        id,\n      },\n      target: {\n        id: id2,\n      },\n    });\n\n    model.removeElement(connectorId);\n\n    await wait();\n\n    expect(model.getConnectors(id)).toEqual([]);\n    expect(model.getConnectors(id2)).toEqual([]);\n  });\n});\n\ndescribe('stash/pop', () => {\n  test('stash and pop should work correctly', () => {\n    const id = model.addElement({\n      type: 'shape',\n      strokeWidth: 4,\n    });\n    const elementModel = model.getElementById(id)! as ShapeElementModel;\n\n    expect(elementModel.strokeWidth).toBe(4);\n\n    elementModel.stash('strokeWidth');\n    elementModel.strokeWidth = 10;\n    expect(elementModel.strokeWidth).toBe(10);\n    expect(elementModel.yMap.get('strokeWidth')).toBe(4);\n\n    elementModel.pop('strokeWidth');\n    expect(elementModel.strokeWidth).toBe(10);\n    expect(elementModel.yMap.get('strokeWidth')).toBe(10);\n\n    elementModel.strokeWidth = 6;\n    expect(elementModel.strokeWidth).toBe(6);\n    expect(elementModel.yMap.get('strokeWidth')).toBe(6);\n  });\n\n  test('assign stashed property should emit event', () => {\n    const id = model.addElement({\n      type: 'shape',\n      strokeWidth: 4,\n    });\n    const elementModel = model.getElementById(id)! as ShapeElementModel;\n\n    elementModel.stash('strokeWidth');\n\n    const onchange = vi.fn();\n    model.elementUpdated.once(({ id }) => onchange(id));\n\n    elementModel.strokeWidth = 10;\n    expect(onchange).toHaveBeenCalledWith(id);\n  });\n\n  test('stashed property should also trigger derive decorator', () => {\n    const id = model.addElement({\n      type: 'brush',\n      points: [\n        [0, 0],\n        [100, 100],\n        [120, 150],\n      ],\n    });\n    const elementModel = model.getElementById(id)! as BrushElementModel;\n\n    elementModel.stash('points');\n    elementModel.points = [\n      [0, 0],\n      [50, 50],\n      [135, 145],\n      [150, 170],\n      [200, 180],\n    ];\n    const points = elementModel.points;\n\n    expect(elementModel.w).toBe(200 + elementModel.lineWidth);\n    expect(elementModel.h).toBe(180 + elementModel.lineWidth);\n\n    expect(elementModel.yMap.get('points')).not.toEqual(points);\n    expect(elementModel.w).toBe(200 + elementModel.lineWidth);\n    expect(elementModel.h).toBe(180 + elementModel.lineWidth);\n  });\n\n  test('non-field property should not allow stash/pop, and should failed silently ', () => {\n    const id = model.addElement({\n      type: 'group',\n    });\n    const elementModel = model.getElementById(id)! as GroupElementModel;\n\n    elementModel.stash('xywh');\n    elementModel.xywh = '[10,10,200,200]';\n\n    expect(elementModel['_stashed'].has('xywh')).toBe(false);\n\n    elementModel.pop('xywh');\n\n    expect(elementModel['_stashed'].has('xywh')).toBe(false);\n    expect(elementModel.yMap.has('xywh')).toBe(false);\n  });\n});\n\ndescribe('derive decorator', () => {\n  test('derived decorator should work correctly', () => {\n    const id = model.addElement({\n      type: 'brush',\n      points: [\n        [0, 0],\n        [100, 100],\n        [120, 150],\n      ],\n    });\n    const elementModel = model.getElementById(id)! as BrushElementModel;\n\n    expect(elementModel.w).toBe(120 + elementModel.lineWidth);\n    expect(elementModel.h).toBe(150 + elementModel.lineWidth);\n  });\n});\n\ndescribe('local decorator', () => {\n  test('local decorator should work correctly', () => {\n    const id = model.addElement({\n      type: 'shape',\n    });\n    const elementModel = model.getElementById(id)! as BrushElementModel;\n\n    expect(elementModel.display).toBe(true);\n\n    elementModel.display = false;\n    expect(elementModel.display).toBe(false);\n\n    elementModel.opacity = 0.5;\n    expect(elementModel.opacity).toBe(0.5);\n  });\n\n  test('assign local property should emit event', () => {\n    const id = model.addElement({\n      type: 'shape',\n    });\n    const elementModel = model.getElementById(id)! as BrushElementModel;\n\n    const onchange = vi.fn();\n\n    model.elementUpdated.once(({ id }) => onchange(id));\n    elementModel.display = false;\n\n    expect(elementModel.display).toBe(false);\n    expect(onchange).toHaveBeenCalledWith(id);\n  });\n});\n\ndescribe('convert decorator', () => {\n  test('convert decorator', () => {\n    const id = model.addElement({\n      type: 'brush',\n      points: [\n        [50, 25],\n        [200, 200],\n        [300, 300],\n      ],\n    });\n    const elementModel = model.getElementById(id)! as BrushElementModel;\n    const halfLineWidth = elementModel.lineWidth / 2;\n    const xOffset = 50 - halfLineWidth;\n    const yOffset = 25 - halfLineWidth;\n\n    expect(elementModel.points).toEqual([\n      [50 - xOffset, 25 - yOffset],\n      [200 - xOffset, 200 - yOffset],\n      [300 - xOffset, 300 - yOffset],\n    ]);\n  });\n});\n\ndescribe('basic property', () => {\n  test('empty group should have all zero xywh', () => {\n    const id = model.addElement({\n      type: 'group',\n    });\n    const group = model.getElementById(id)! as GroupElementModel;\n\n    expect(group.x).toBe(0);\n    expect(group.y).toBe(0);\n    expect(group.w).toBe(0);\n    expect(group.h).toBe(0);\n  });\n});\n"]}