{"version":3,"file":"last-props.spec.js","sourceRoot":"","sources":["../../../src/__tests__/edgeless/last-props.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  type BrushElementModel,\n  type ConnectorElementModel,\n  type EdgelessRootBlockComponent,\n  type ShapeElementModel,\n  ShapeType,\n  type TextElementModel,\n} from '@lumensuite/blocks';\nimport { beforeEach, describe, expect, test } from 'vitest';\n\nimport { getDocRootBlock } from '../utils/edgeless.js';\nimport { setupEditor } from '../utils/setup.js';\n\ndescribe('apply last props', () => {\n  let edgelessRoot!: EdgelessRootBlockComponent;\n  let service!: EdgelessRootBlockComponent['service'];\n\n  beforeEach(async () => {\n    sessionStorage.removeItem('lumensuite:prop:record');\n    const cleanup = await setupEditor('edgeless');\n    edgelessRoot = getDocRootBlock(window.doc, window.editor, 'edgeless');\n    service = edgelessRoot.service;\n    return cleanup;\n  });\n\n  test('shapes', () => {\n    // rect shape\n    const rectId = service.addElement('shape', { shapeType: ShapeType.Rect });\n    const rectShape = service.getElementById(rectId) as ShapeElementModel;\n    expect(rectShape.fillColor).toBe('--affine-palette-shape-yellow');\n    service.updateElement(rectId, {\n      fillColor: '--affine-palette-shape-orange',\n    });\n    expect(\n      service.editPropsStore.lastProps$.value[`shape:${ShapeType.Rect}`]\n        .fillColor\n    ).toBe('--affine-palette-shape-orange');\n\n    // diamond shape\n    const diamondId = service.addElement('shape', {\n      shapeType: ShapeType.Diamond,\n    });\n    const diamondShape = service.getElementById(diamondId) as ShapeElementModel;\n    expect(diamondShape.fillColor).toBe('--affine-palette-shape-yellow');\n    service.updateElement(diamondId, {\n      fillColor: '--affine-palette-shape-blue',\n    });\n    expect(\n      service.editPropsStore.lastProps$.value[`shape:${ShapeType.Diamond}`]\n        .fillColor\n    ).toBe('--affine-palette-shape-blue');\n\n    // rounded rect shape\n    const roundedRectId = service.addElement('shape', {\n      shapeType: ShapeType.Rect,\n      radius: 0.1,\n    });\n    const roundedRectShape = service.getElementById(\n      roundedRectId\n    ) as ShapeElementModel;\n    expect(roundedRectShape.fillColor).toBe('--affine-palette-shape-yellow');\n    service.updateElement(roundedRectId, {\n      fillColor: '--affine-palette-shape-green',\n    });\n    expect(\n      service.editPropsStore.lastProps$.value['shape:roundedRect'].fillColor\n    ).toBe('--affine-palette-shape-green');\n\n    // apply last props\n    const rectId2 = service.addElement('shape', { shapeType: ShapeType.Rect });\n    const rectShape2 = service.getElementById(rectId2) as ShapeElementModel;\n    expect(rectShape2.fillColor).toBe('--affine-palette-shape-orange');\n\n    const diamondId2 = service.addElement('shape', {\n      shapeType: ShapeType.Diamond,\n    });\n    const diamondShape2 = service.getElementById(\n      diamondId2\n    ) as ShapeElementModel;\n    expect(diamondShape2.fillColor).toBe('--affine-palette-shape-blue');\n\n    const roundedRectId2 = service.addElement('shape', {\n      shapeType: ShapeType.Rect,\n      radius: 0.1,\n    });\n    const droundedRectShape2 = service.getElementById(\n      roundedRectId2\n    ) as ShapeElementModel;\n    expect(droundedRectShape2.fillColor).toBe('--affine-palette-shape-green');\n  });\n\n  test('connector', () => {\n    const id = service.addElement('connector', { mode: 0 });\n    const connector = service.getElementById(id) as ConnectorElementModel;\n    expect(connector.stroke).toBe('--affine-palette-line-grey');\n    expect(connector.strokeWidth).toBe(2);\n    expect(connector.strokeStyle).toBe('solid');\n    expect(connector.frontEndpointStyle).toBe('None');\n    expect(connector.rearEndpointStyle).toBe('Arrow');\n    service.updateElement(id, { strokeWidth: 10 });\n    const secondConnector = service.getElementById(\n      service.addElement('connector', { mode: 1 })\n    ) as ShapeElementModel;\n    expect(secondConnector.strokeWidth).toBe(10);\n  });\n\n  test('brush', () => {\n    const id = service.addElement('brush', {});\n    const brush = service.getElementById(id) as BrushElementModel;\n    expect(brush.color).toEqual({\n      dark: '--affine-palette-line-white',\n      light: '--affine-palette-line-black',\n    });\n    expect(brush.lineWidth).toBe(4);\n    service.updateElement(id, { lineWidth: 10 });\n    const secondBrush = service.getElementById(\n      service.addElement('brush', {})\n    ) as BrushElementModel;\n    expect(secondBrush.lineWidth).toBe(10);\n  });\n\n  test('text', () => {\n    const id = service.addElement('text', {});\n    const text = service.getElementById(id) as TextElementModel;\n    expect(text.fontSize).toBe(24);\n    service.updateElement(id, { fontSize: 36 });\n    const secondText = service.getElementById(\n      service.addElement('text', {})\n    ) as TextElementModel;\n    expect(secondText.fontSize).toBe(36);\n  });\n});\n"]}