{"version":3,"file":"layer.spec.js","sourceRoot":"","sources":["../../../src/__tests__/edgeless/layer.spec.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { BlockComponent } from '@lumensuite/block-std';\nimport type {\n  EdgelessRootBlockComponent,\n  NoteBlockModel,\n} from '@lumensuite/blocks';\n\nimport { CommonUtils } from '@lumensuite/affine-block-surface';\nimport { type BlockModel, DocCollection } from '@lumensuite/store';\nimport { beforeEach, describe, expect, test } from 'vitest';\n\nimport { wait } from '../utils/common.js';\nimport { addNote, getDocRootBlock, getSurface } from '../utils/edgeless.js';\nimport { setupEditor } from '../utils/setup.js';\n\nlet service!: EdgelessRootBlockComponent['service'];\n\nbeforeEach(async () => {\n  const cleanup = await setupEditor('edgeless');\n  service = getDocRootBlock(window.doc, window.editor, 'edgeless').service;\n\n  return async () => {\n    await wait(100);\n    cleanup();\n  };\n});\n\ntest('layer manager inital state', () => {\n  expect(service.layer).toBeDefined();\n  expect(service.layer.layers.length).toBe(0);\n  expect(service.layer.canvasLayers.length).toBe(1);\n});\n\ntest('add new edgeless blocks or canvas elements should update layer automatically', async () => {\n  addNote(doc);\n\n  service.addElement('shape', {\n    shapeType: 'rect',\n  });\n\n  await wait();\n\n  expect(service.layer.layers.length).toBe(2);\n});\n\ntest('delete element should update layer automatically', () => {\n  const id = addNote(doc);\n  const canvasElId = service.addElement('shape', {\n    shapeType: 'rect',\n  });\n\n  service.removeElement(id);\n\n  expect(service.layer.layers.length).toBe(1);\n\n  service.removeElement(canvasElId);\n\n  expect(service.layer.layers.length).toBe(0);\n});\n\ntest('change element should update layer automatically', async () => {\n  const id = addNote(doc);\n  const canvasElId = service.addElement('shape', {\n    shapeType: 'rect',\n  });\n\n  await wait();\n\n  service.updateElement(id, {\n    index: service.layer.getReorderedIndex(\n      service.getElementById(id)!,\n      'forward'\n    ),\n  });\n  expect(service.layer.layers[service.layer.layers.length - 1].type).toBe(\n    'block'\n  );\n\n  service.updateElement(canvasElId, {\n    index: service.layer.getReorderedIndex(\n      service.getElementById(canvasElId)!,\n      'forward'\n    ),\n  });\n  expect(service.layer.layers[service.layer.layers.length - 1].type).toBe(\n    'canvas'\n  );\n});\n\ntest('new added block should be placed under the topmost canvas layer', async () => {\n  service.addElement('shape', {\n    shapeType: 'rect',\n  });\n  service.addElement('shape', {\n    shapeType: 'rect',\n  });\n  addNote(doc, {\n    index: service.layer.generateIndex('affine:note'),\n  });\n  addNote(doc, {\n    index: service.layer.generateIndex('affine:note'),\n  });\n  addNote(doc, {\n    index: service.layer.generateIndex('affine:note'),\n  });\n\n  await wait();\n\n  expect(service.layer.layers.length).toBe(2);\n  expect(service.layer.layers[1].type).toBe('canvas');\n});\n\ntest('new added canvas elements should be placed in the topmost canvas layer', async () => {\n  addNote(doc);\n  service.addElement('shape', {\n    shapeType: 'rect',\n  });\n\n  await wait();\n\n  expect(service.layer.layers.length).toBe(2);\n  expect(service.layer.layers[1].type).toBe('canvas');\n});\n\ntest(\"there should be at lease one layer in canvasLayers property even there's no canvas element\", () => {\n  addNote(doc);\n\n  expect(service.layer.canvasLayers.length).toBe(1);\n});\n\ntest('if the topmost layer is canvas layer, the length of canvasLayers array should equal to the counts of canvas layers', () => {\n  addNote(doc);\n  service.addElement('shape', {\n    shapeType: 'rect',\n  });\n  addNote(doc, {\n    index: service.layer.generateIndex('shape'),\n  });\n  service.addElement('shape', {\n    shapeType: 'rect',\n  });\n\n  expect(service.layer.layers.length).toBe(4);\n  expect(service.layer.canvasLayers.length).toBe(\n    service.layer.layers.filter(layer => layer.type === 'canvas').length\n  );\n});\n\ntest('a new layer should be created in canvasLayers prop when the topmost layer is not canvas layer', () => {\n  service.addElement('shape', {\n    shapeType: 'rect',\n  });\n  addNote(doc, {\n    index: service.layer.generateIndex('shape'),\n  });\n  service.addElement('shape', {\n    shapeType: 'rect',\n  });\n  addNote(doc, {\n    index: service.layer.generateIndex('shape'),\n  });\n\n  expect(service.layer.canvasLayers.length).toBe(3);\n});\n\ntest('layer zindex should update correctly when elements changed', async () => {\n  addNote(doc, {\n    index: service.layer.generateIndex('affine:note'),\n  });\n  const noteId = addNote(doc, {\n    index: service.layer.generateIndex('affine:note'),\n  });\n  const note = service.getElementById(noteId);\n  addNote(doc, {\n    index: service.layer.generateIndex('affine:note'),\n  });\n  service.addElement('shape', {\n    shapeType: 'rect',\n  });\n  const topShapeId = service.addElement('shape', {\n    shapeType: 'rect',\n  });\n  const topShape = service.getElementById(topShapeId);\n\n  await wait();\n\n  const assertInitialState = () => {\n    expect(service.layer.layers[0].type).toBe('block');\n    expect(service.layer.layers[0].zIndex).toBe(1);\n\n    expect(service.layer.layers[1].type).toBe('canvas');\n    expect(service.layer.layers[1].zIndex).toBe(4);\n  };\n  assertInitialState();\n\n  service.doc.captureSync();\n\n  service.updateElement(noteId, {\n    index: service.layer.getReorderedIndex(note!, 'front'),\n  });\n  await wait();\n  service.doc.captureSync();\n\n  const assert2StepState = () => {\n    expect(service.layer.layers[1].type).toBe('canvas');\n    expect(service.layer.layers[1].zIndex).toBe(3);\n\n    expect(service.layer.layers[2].type).toBe('block');\n    expect(service.layer.layers[2].zIndex).toBe(4);\n  };\n  assert2StepState();\n\n  service.updateElement(topShapeId, {\n    index: service.layer.getReorderedIndex(topShape!, 'front'),\n  });\n  await wait();\n  service.doc.captureSync();\n\n  expect(service.layer.layers[3].type).toBe('canvas');\n  expect(service.layer.layers[3].zIndex).toBe(5);\n\n  service.doc.undo();\n  await wait();\n  assert2StepState();\n\n  service.doc.undo();\n  await wait();\n  assertInitialState();\n});\n\ntest('blocks should rerender when their z-index changed', async () => {\n  const blocks = [\n    addNote(doc, {\n      index: service.layer.generateIndex('affine:note'),\n    }),\n    addNote(doc, {\n      index: service.layer.generateIndex('affine:note'),\n    }),\n    addNote(doc, {\n      index: service.layer.generateIndex('affine:note'),\n    }),\n    addNote(doc, {\n      index: service.layer.generateIndex('affine:note'),\n    }),\n  ];\n  const assertBlocksContent = () => {\n    const blocks = Array.from(\n      document.querySelectorAll(\n        'affine-edgeless-root gfx-viewport > [data-block-id]'\n      )\n    );\n\n    expect(blocks.length).toBe(5);\n\n    blocks.forEach(element => {\n      expect(element.children.length).toBeGreaterThan(0);\n    });\n  };\n\n  await wait();\n  assertBlocksContent();\n\n  service.addElement('shape', {\n    shapeType: 'rect',\n    index: CommonUtils.generateKeyBetween(\n      service.getElementById(blocks[1])!.index,\n      service.getElementById(blocks[2])!.index\n    ),\n  });\n\n  await wait();\n  assertBlocksContent();\n});\n\ndescribe('layer reorder functionality', () => {\n  let ids: string[] = [];\n\n  beforeEach(() => {\n    ids = [\n      service.addElement('shape', {\n        shapeType: 'rect',\n      }),\n      addNote(doc, {\n        index: service.layer.generateIndex('shape'),\n      }),\n      service.addElement('shape', {\n        shapeType: 'rect',\n      }),\n      addNote(doc, {\n        index: service.layer.generateIndex('shape'),\n      }),\n    ];\n  });\n\n  test('forward', async () => {\n    service.updateElement(ids[0], {\n      index: service.layer.getReorderedIndex(\n        service.getElementById(ids[0])!,\n        'forward'\n      ),\n    });\n\n    expect(\n      service.layer.layers.findIndex(layer =>\n        layer.set.has(service.getElementById(ids[0]) as any)\n      )\n    ).toBe(1);\n    expect(\n      service.layer.layers.findIndex(layer =>\n        layer.set.has(service.getElementById(ids[1]) as any)\n      )\n    ).toBe(0);\n\n    await wait();\n\n    service.updateElement(ids[1], {\n      index: service.layer.getReorderedIndex(\n        service.getElementById(ids[1])!,\n        'forward'\n      ),\n    });\n\n    expect(\n      service.layer.layers.findIndex(layer =>\n        layer.set.has(service.getElementById(ids[0]) as any)\n      )\n    ).toBe(0);\n    expect(\n      service.layer.layers.findIndex(layer =>\n        layer.set.has(service.getElementById(ids[1]) as any)\n      )\n    ).toBe(1);\n  });\n\n  test('front', async () => {\n    service.updateElement(ids[0], {\n      index: service.layer.getReorderedIndex(\n        service.getElementById(ids[0])!,\n        'front'\n      ),\n    });\n\n    await wait();\n\n    expect(\n      service.layer.layers.findIndex(layer =>\n        layer.set.has(service.getElementById(ids[0]) as any)\n      )\n    ).toBe(3);\n\n    service.updateElement(ids[1], {\n      index: service.layer.getReorderedIndex(\n        service.getElementById(ids[1])!,\n        'front'\n      ),\n    });\n\n    expect(\n      service.layer.layers.findIndex(layer =>\n        layer.set.has(service.getElementById(ids[1]) as any)\n      )\n    ).toBe(3);\n  });\n\n  test('backward', async () => {\n    service.updateElement(ids[3], {\n      index: service.layer.getReorderedIndex(\n        service.getElementById(ids[3])!,\n        'backward'\n      ),\n    });\n\n    expect(\n      service.layer.layers.findIndex(layer =>\n        layer.set.has(service.getElementById(ids[3]) as any)\n      )\n    ).toBe(1);\n    expect(\n      service.layer.layers.findIndex(layer =>\n        layer.set.has(service.getElementById(ids[2]) as any)\n      )\n    ).toBe(2);\n\n    await wait();\n\n    service.updateElement(ids[2], {\n      index: service.layer.getReorderedIndex(\n        service.getElementById(ids[2])!,\n        'backward'\n      ),\n    });\n\n    expect(\n      service.layer.layers.findIndex(layer =>\n        layer.set.has(service.getElementById(ids[3]) as any)\n      )\n    ).toBe(3);\n    expect(\n      service.layer.layers.findIndex(layer =>\n        layer.set.has(service.getElementById(ids[2]) as any)\n      )\n    ).toBe(2);\n  });\n\n  test('back', async () => {\n    service.updateElement(ids[3], {\n      index: service.layer.getReorderedIndex(\n        service.getElementById(ids[3])!,\n        'back'\n      ),\n    });\n\n    expect(\n      service.layer.layers.findIndex(layer =>\n        layer.set.has(service.getElementById(ids[3]) as any)\n      )\n    ).toBe(0);\n\n    await wait();\n\n    service.updateElement(ids[2], {\n      index: service.layer.getReorderedIndex(\n        service.getElementById(ids[2])!,\n        'back'\n      ),\n    });\n\n    expect(\n      service.layer.layers.findIndex(layer =>\n        layer.set.has(service.getElementById(ids[2]) as any)\n      )\n    ).toBe(0);\n  });\n});\n\ndescribe('group related functionality', () => {\n  const createGroup = (\n    service: EdgelessRootBlockComponent['service'],\n    childIds: string[]\n  ) => {\n    const children = new DocCollection.Y.Map<boolean>();\n    childIds.forEach(id => children.set(id, true));\n\n    return service.addElement('group', {\n      children,\n    });\n  };\n\n  test(\"new added group should effect it children's layer\", async () => {\n    const edgeless = getDocRootBlock(doc, editor, 'edgeless');\n    const elements = [\n      service.addElement('shape', {\n        shapeType: 'rect',\n      }),\n      addNote(doc, {\n        index: service.layer.generateIndex('shape'),\n      }),\n      service.addElement('shape', {\n        shapeType: 'rect',\n      }),\n      addNote(doc, {\n        index: service.layer.generateIndex('shape'),\n      }),\n      service.addElement('shape', {\n        shapeType: 'rect',\n      }),\n    ];\n\n    await wait(0);\n    expect(\n      edgeless.querySelectorAll<HTMLCanvasElement>('.indexable-canvas').length\n    ).toBe(2);\n\n    Array.from(\n      edgeless.querySelectorAll<HTMLCanvasElement>('.indexable-canvas')\n    ).forEach(canvas => {\n      const rect = canvas.getBoundingClientRect();\n\n      expect(rect.width).toBeGreaterThan(0);\n      expect(rect.height).toBeGreaterThan(0);\n    });\n\n    createGroup(\n      service,\n      elements.filter((_, idx) => idx !== 1 && idx !== 3)\n    );\n\n    expect(service.layer.layers.length).toBe(2);\n\n    expect(service.layer.layers[0].type).toBe('block');\n    expect(service.layer.layers[0].set.size).toBe(2);\n\n    expect(service.layer.layers[1].type).toBe('canvas');\n    expect(service.layer.layers[1].set.size).toBe(4);\n\n    expect(\n      edgeless.querySelectorAll<HTMLCanvasElement>('.indexable-canvas').length\n    ).toBe(0);\n\n    const topCanvas = edgeless.querySelector(\n      'affine-surface canvas'\n    ) as HTMLCanvasElement;\n\n    expect(\n      Number(\n        (\n          edgeless.querySelector(\n            `[data-block-id=\"${elements[1]}\"]`\n          ) as HTMLElement\n        ).style.zIndex\n      )\n    ).toBeLessThan(Number(topCanvas.style.zIndex));\n    expect(\n      Number(\n        (\n          edgeless.querySelector(\n            `[data-block-id=\"${elements[3]}\"]`\n          ) as HTMLElement\n        ).style.zIndex\n      )\n    ).toBeLessThan(Number(topCanvas.style.zIndex));\n  });\n\n  test(\"change group index should update its children's layer\", () => {\n    const elements = [\n      service.addElement('shape', {\n        shapeType: 'rect',\n      }),\n      addNote(doc, {\n        index: service.layer.generateIndex('shape'),\n      }),\n      service.addElement('shape', {\n        shapeType: 'rect',\n      }),\n      addNote(doc, {\n        index: service.layer.generateIndex('shape'),\n      }),\n      service.addElement('shape', {\n        shapeType: 'rect',\n      }),\n    ];\n\n    const groupId = createGroup(\n      service,\n      elements.filter((_, idx) => idx !== 1 && idx !== 3)\n    );\n    const group = service.getElementById(groupId)!;\n\n    expect(service.layer.layers.length).toBe(2);\n\n    group.index = service.layer.getReorderedIndex(group, 'back');\n    expect(service.layer.layers[0].type).toBe('canvas');\n    expect(service.layer.layers[0].set.size).toBe(4);\n    expect(service.layer.layers[0].elements[0]).toBe(group);\n\n    group.index = service.layer.getReorderedIndex(group, 'front');\n    expect(service.layer.layers[1].type).toBe('canvas');\n    expect(service.layer.layers[1].set.size).toBe(4);\n    expect(service.layer.layers[1].elements[0]).toBe(group);\n  });\n});\n\ndescribe('compare function', () => {\n  const SORT_ORDER = {\n    AFTER: 1,\n    BEFORE: -1,\n    SAME: 0,\n  };\n  const createGroup = (\n    service: EdgelessRootBlockComponent['service'],\n    childIds: string[]\n  ) => {\n    const children = new DocCollection.Y.Map<boolean>();\n    childIds.forEach(id => children.set(id, true));\n\n    return service.addElement('group', {\n      children,\n    });\n  };\n\n  test('compare same element', () => {\n    const shapeId = service.addElement('shape', {\n      shapeType: 'rect',\n    });\n    const shapeEl = service.getElementById(shapeId)!;\n    expect(service.layer.compare(shapeEl, shapeEl)).toBe(SORT_ORDER.SAME);\n\n    const groupId = createGroup(service, [shapeId]);\n    const groupEl = service.getElementById(groupId)!;\n    expect(service.layer.compare(groupEl, groupEl)).toBe(SORT_ORDER.SAME);\n\n    const noteId = addNote(doc, {\n      index: service.layer.generateIndex('affine:note'),\n    });\n    const note = service.getElementById(noteId)! as NoteBlockModel;\n    expect(service.layer.compare(note, note)).toBe(SORT_ORDER.SAME);\n  });\n\n  test('compare a group and its child', () => {\n    const shapeId = service.addElement('shape', {\n      shapeType: 'rect',\n    });\n    const shapeEl = service.getElementById(shapeId)!;\n    const noteId = addNote(doc, {\n      index: service.layer.generateIndex('affine:note'),\n    });\n    const note = service.getElementById(noteId)! as NoteBlockModel;\n    const groupId = createGroup(service, [shapeId, noteId]);\n    const groupEl = service.getElementById(groupId)!;\n\n    expect(service.layer.compare(groupEl, shapeEl)).toBe(SORT_ORDER.BEFORE);\n    expect(service.layer.compare(shapeEl, groupEl)).toBe(SORT_ORDER.AFTER);\n    expect(service.layer.compare(groupEl, note)).toBe(SORT_ORDER.BEFORE);\n    expect(service.layer.compare(note, groupEl)).toBe(SORT_ORDER.AFTER);\n  });\n\n  test('compare two different elements', () => {\n    const shape1Id = service.addElement('shape', {\n      shapeType: 'rect',\n    });\n    const shape1 = service.getElementById(shape1Id)!;\n    const shape2Id = service.addElement('shape', {\n      shapeType: 'rect',\n    });\n    const shape2 = service.getElementById(shape2Id)!;\n    const note1Id = addNote(doc, {\n      index: service.layer.generateIndex('shape'),\n    });\n\n    const note1 = service.getElementById(note1Id)! as NoteBlockModel;\n    const note2Id = addNote(doc, {\n      index: service.layer.generateIndex('shape'),\n    });\n    const note2 = service.getElementById(note2Id)! as NoteBlockModel;\n\n    expect(service.layer.compare(shape1, shape2)).toBe(SORT_ORDER.BEFORE);\n    expect(service.layer.compare(shape2, shape1)).toBe(SORT_ORDER.AFTER);\n\n    expect(service.layer.compare(note1, note2)).toBe(SORT_ORDER.BEFORE);\n    expect(service.layer.compare(note2, note1)).toBe(SORT_ORDER.AFTER);\n\n    expect(service.layer.compare(shape1, note1)).toBe(SORT_ORDER.BEFORE);\n    expect(service.layer.compare(note1, shape1)).toBe(SORT_ORDER.AFTER);\n\n    expect(service.layer.compare(shape2, note2)).toBe(SORT_ORDER.BEFORE);\n    expect(service.layer.compare(note2, shape2)).toBe(SORT_ORDER.AFTER);\n  });\n\n  test('compare nested elements', () => {\n    const shape1Id = service.addElement('shape', {\n      shapeType: 'rect',\n    });\n    const shape2Id = service.addElement('shape', {\n      shapeType: 'rect',\n    });\n    const note1Id = addNote(doc, {\n      index: service.layer.generateIndex('shape'),\n    });\n    const note2Id = addNote(doc, {\n      index: service.layer.generateIndex('shape'),\n    });\n    const group1Id = createGroup(service, [\n      shape1Id,\n      shape2Id,\n      note1Id,\n      note2Id,\n    ]);\n    const group2Id = createGroup(service, [group1Id]);\n\n    const shape1 = service.getElementById(shape1Id)!;\n    const shape2 = service.getElementById(shape2Id)!;\n    const note1 = service.getElementById(note1Id)! as NoteBlockModel;\n    const note2 = service.getElementById(note2Id)! as NoteBlockModel;\n    const group1 = service.getElementById(group1Id)!;\n    const group2 = service.getElementById(group2Id)!;\n\n    // assert nested group to group\n    expect(service.layer.compare(group2, group1)).toBe(SORT_ORDER.BEFORE);\n    expect(service.layer.compare(group1, group2)).toBe(SORT_ORDER.AFTER);\n\n    // assert element in the same group\n    expect(service.layer.compare(shape1, shape2)).toBe(SORT_ORDER.BEFORE);\n    expect(service.layer.compare(shape2, shape1)).toBe(SORT_ORDER.AFTER);\n    expect(service.layer.compare(note1, note2)).toBe(SORT_ORDER.BEFORE);\n    expect(service.layer.compare(note2, note1)).toBe(SORT_ORDER.AFTER);\n\n    // assert group and its nested element\n    expect(service.layer.compare(group2, shape1)).toBe(SORT_ORDER.BEFORE);\n    expect(service.layer.compare(shape1, group2)).toBe(SORT_ORDER.AFTER);\n    expect(service.layer.compare(group1, shape2)).toBe(SORT_ORDER.BEFORE);\n    expect(service.layer.compare(shape2, group1)).toBe(SORT_ORDER.AFTER);\n    expect(service.layer.compare(group2, note1)).toBe(SORT_ORDER.BEFORE);\n    expect(service.layer.compare(note1, group2)).toBe(SORT_ORDER.AFTER);\n    expect(service.layer.compare(group1, note2)).toBe(SORT_ORDER.BEFORE);\n    expect(service.layer.compare(note2, group1)).toBe(SORT_ORDER.AFTER);\n  });\n\n  test('compare two nested elements', () => {\n    const groupAShapeId = service.addElement('shape', {\n      shapeType: 'rect',\n    });\n    const groupANoteId = addNote(doc, {\n      index: service.layer.generateIndex('shape'),\n    });\n    const groupAId = createGroup(service, [\n      createGroup(service, [groupAShapeId, groupANoteId]),\n    ]);\n    const groupAShape = service.getElementById(groupAShapeId)!;\n    const groupANote = service.getElementById(groupANoteId)!;\n    const groupA = service.getElementById(groupAId)!;\n\n    const groupBShapeId = service.addElement('shape', {\n      shapeType: 'rect',\n    });\n    const groupBNoteId = addNote(doc, {\n      index: service.layer.generateIndex('shape'),\n    });\n    const groupBId = createGroup(service, [\n      createGroup(service, [groupBShapeId, groupBNoteId]),\n    ]);\n    const groupBShape = service.getElementById(groupBShapeId)!;\n    const groupBNote = service.getElementById(groupBNoteId)!;\n    const groupB = service.getElementById(groupBId)!;\n\n    expect(service.layer.compare(groupAShape, groupBShape)).toBe(\n      SORT_ORDER.BEFORE\n    );\n    expect(service.layer.compare(groupBShape, groupAShape)).toBe(\n      SORT_ORDER.AFTER\n    );\n    expect(service.layer.compare(groupANote, groupBNote)).toBe(\n      SORT_ORDER.BEFORE\n    );\n    expect(service.layer.compare(groupBNote, groupANote)).toBe(\n      SORT_ORDER.AFTER\n    );\n    expect(service.layer.compare(groupB, groupA)).toBe(SORT_ORDER.AFTER);\n\n    groupB.index = service.layer.getReorderedIndex(groupB, 'back');\n    expect(service.layer.compare(groupB, groupA)).toBe(SORT_ORDER.BEFORE);\n    expect(service.layer.compare(groupAShape, groupBShape)).toBe(\n      SORT_ORDER.AFTER\n    );\n    expect(service.layer.compare(groupBShape, groupAShape)).toBe(\n      SORT_ORDER.BEFORE\n    );\n    expect(service.layer.compare(groupANote, groupBNote)).toBe(\n      SORT_ORDER.AFTER\n    );\n    expect(service.layer.compare(groupBNote, groupANote)).toBe(\n      SORT_ORDER.BEFORE\n    );\n\n    groupA.index = service.layer.getReorderedIndex(groupA, 'back');\n    expect(service.layer.compare(groupA, groupB)).toBe(SORT_ORDER.BEFORE);\n    expect(service.layer.compare(groupAShape, groupBShape)).toBe(\n      SORT_ORDER.BEFORE\n    );\n    expect(service.layer.compare(groupBShape, groupAShape)).toBe(\n      SORT_ORDER.AFTER\n    );\n    expect(service.layer.compare(groupANote, groupBNote)).toBe(\n      SORT_ORDER.BEFORE\n    );\n    expect(service.layer.compare(groupBNote, groupANote)).toBe(\n      SORT_ORDER.AFTER\n    );\n  });\n});\n\ntest('indexed canvas should be inserted into edgeless portal when switch to edgeless mode', async () => {\n  let surface = getSurface(doc, editor);\n\n  service.addElement('shape', {\n    shapeType: 'rect',\n  });\n\n  addNote(doc, {\n    index: service.layer.generateIndex('shape'),\n  });\n\n  await wait();\n\n  service.addElement('shape', {\n    shapeType: 'rect',\n  });\n\n  editor.mode = 'page';\n  await wait();\n  editor.mode = 'edgeless';\n  await wait();\n\n  surface = getSurface(doc, editor);\n  const edgeless = getDocRootBlock(doc, editor, 'edgeless');\n  expect(edgeless.querySelectorAll('.indexable-canvas').length).toBe(1);\n\n  const indexedCanvas = edgeless.querySelectorAll(\n    '.indexable-canvas'\n  )[0] as HTMLCanvasElement;\n\n  expect(indexedCanvas.width).toBe(surface.renderer.canvas.width);\n  expect(indexedCanvas.height).toBe(surface.renderer.canvas.height);\n  expect(indexedCanvas.width).not.toBe(0);\n  expect(indexedCanvas.height).not.toBe(0);\n});\n\ntest('the actual rendering z-index should satisfy the logic order of their indexes', async () => {\n  editor.mode = 'page';\n\n  await wait();\n\n  const indexes = [\n    'ao',\n    'b0D',\n    'ar',\n    'as',\n    'at',\n    'au',\n    'av',\n    'b0Y',\n    'b0V',\n    'b0H',\n    'b0M',\n    'b0T',\n    'b0f',\n    'b0fV',\n    'b0g',\n    'b0i',\n    'b0fl',\n  ];\n\n  indexes.forEach(index => {\n    addNote(doc, {\n      index,\n    });\n  });\n\n  await wait();\n\n  editor.mode = 'edgeless';\n  await wait(500);\n\n  const edgeless = getDocRootBlock(doc, editor, 'edgeless');\n  const blocks = Array.from(\n    edgeless.querySelectorAll('gfx-viewport > [data-block-id]')\n  ) as BlockComponent[];\n\n  expect(blocks.length).toBe(indexes.length + 1);\n\n  blocks\n    .filter(block => block.flavour !== 'affine:surface')\n    .forEach((block, index) => {\n      if (index === blocks.length - 1) return;\n\n      const model = block.model as BlockModel<{ index: string }>;\n      const nextModel = blocks[index + 1].model as BlockModel<{\n        index: string;\n      }>;\n\n      const zIndex = Number(block.style.zIndex);\n      const nextZIndex = Number(blocks[index + 1].style.zIndex);\n\n      expect(model.index <= nextModel.index).equals(zIndex <= nextZIndex);\n    });\n});\n\ndescribe('index generator', () => {\n  let preinsertedShape: LumenSuite.SurfaceElementModel;\n  let preinsertedNote: NoteBlockModel;\n\n  beforeEach(() => {\n    const shapeId = service.addElement('shape', {\n      shapeType: 'rect',\n    });\n    const noteId = addNote(doc, {\n      index: service.layer.generateIndex('affine:block'),\n    });\n\n    preinsertedShape = service.getElementById(\n      shapeId\n    )! as LumenSuite.SurfaceElementModel;\n    preinsertedNote = service.getElementById(noteId)! as NoteBlockModel;\n  });\n\n  test('generator should remember the index it generated', () => {\n    const generator = service.layer.createIndexGenerator();\n\n    const indexA = generator('shape');\n    const indexB = generator('shape');\n    const blockIndex = generator('affine:block');\n\n    expect(indexA > preinsertedShape.index).toBe(true);\n    expect(indexB).not.toBe(indexA);\n    expect(indexB > indexA).toBe(true);\n    expect(blockIndex > preinsertedNote.index).toBe(true);\n    expect(blockIndex < indexA).toBe(true);\n  });\n\n  test('generator can generate incrementing indices regardless the element type', () => {\n    const generator = service.layer.createIndexGenerator(true);\n\n    const indexA = generator('shape');\n    const indexB = generator('shape');\n    const blockIndexA = generator('affine:block');\n    const blockIndexB = generator('affine:block');\n\n    expect(indexA > preinsertedShape.index).toBe(true);\n    expect(indexB > indexA).toBe(true);\n    expect(blockIndexA > indexB).toBe(true);\n    expect(blockIndexB > blockIndexA).toBe(true);\n  });\n});\n"]}