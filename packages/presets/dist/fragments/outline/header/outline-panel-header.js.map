{"version":3,"file":"outline-panel-header.js","sourceRoot":"","sources":["../../../../src/fragments/outline/header/outline-panel-header.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACvD,OAAO,EAAE,kBAAkB,EAAE,MAAM,oBAAoB,CAAC;AACxD,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAE1E,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAC;AACnE,OAAO,2BAA2B,CAAC;AAEnC,MAAM,MAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAmEjB,CAAC;AAEF,MAAM,CAAC,MAAM,2BAA2B,GAAG,6BAA6B,CAAC;IAG5D,kBAAkB;4BAD9B,aAAa,CAAC,2BAA2B,CAAC;;;;sBACH,cAAc,CAAC,UAAU,CAAC;;;;;;;;;;;;;;;;;;;;;;kCAAlC,SAAQ,WAA0B;;;;mDA6D/D,KAAK,CAAC,iCAAiC,CAAC;8CAGxC,KAAK,CAAC,sBAAsB,CAAC;8CAG7B,KAAK,EAAE;8CAGP,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;2CAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;8CAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;iDAG9B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;YAjB/B,0NAAiB,uBAAuB,6BAAvB,uBAAuB,yHAAkB;YAG1D,2MAAiB,kBAAkB,6BAAlB,kBAAkB,+GAAkB;YAGrD,2MAAiB,kBAAkB,6BAAlB,kBAAkB,+GAAS;YAG5C,2MAAS,kBAAkB,6BAAlB,kBAAkB,+GAAW;YAGtC,kMAAS,eAAe,6BAAf,eAAe,yGAAW;YAGnC,2MAAS,kBAAkB,6BAAlB,kBAAkB,+GAAc;YAGzC,oNAAS,qBAAqB,6BAArB,qBAAqB,qHAAyB;YAhFzD,6KAiFC;;;;iBAhFiB,WAAM,GAAG,MAAM,AAAT,CAAU;QAMvB,YAAY;YACnB,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YAEvC,IAAI,CAAC,6BAA6B,GAAG,kBAAkB,CACrD,IAAI,CAAC,kBAAkB,EACvB,IAAI,CAAC,uBAAuB,EAC5B,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE;gBACd,IAAI,CAAC,kBAAkB,GAAG,OAAO,KAAK,MAAM,CAAC;YAC/C,CAAC,EACD;gBACE,QAAQ,EAAE,EAAE;gBACZ,SAAS,EAAE,CAAC,EAAE;aACf,CACF,CAAC;YACF,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;QACvD,CAAC;QAEQ,MAAM;YACb,OAAO,IAAI,CAAA;;;;yCAI0B,IAAI,CAAC,kBAAkB;gBAClD,CAAC,CAAC,QAAQ;gBACV,CAAC,CAAC,EAAE;uBACK,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,kBAAkB;2BAC7C,QAAQ;sBACb,IAAI,CAAC,kBAAkB;0BACnB,YAAY;qBACjB,GAAG,EAAE,CAAC,IAAI,CAAC,6BAA6B,EAAE,MAAM,EAAE;;cAEzD,YAAY;;;;uCAIa,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;qBACzD,mBAAmB;yBACf,MAAM;kCACG,CAAC;oBACf,IAAI,CAAC,kBAAkB;wBACnB,OAAO;mBACZ,GAAG,EAAE,CAAC,IAAI,CAAC,kBAAkB,EAAE;;YAEtC,WAAW;;;;;6BAKM,IAAI,CAAC,eAAe;mCACd,IAAI,CAAC,qBAAqB;;aAEhD,CAAC;QACZ,CAAC;QAGD,0CAA0D;QAA1D,IAAiB,uBAAuB,6DAAkB;QAA1D,IAAiB,uBAAuB,mEAAkB;QAG1D,qCAAqD;QAArD,IAAiB,kBAAkB,wDAAkB;QAArD,IAAiB,kBAAkB,8DAAkB;QAGrD,qCAA4C;QAA5C,IAAiB,kBAAkB,wDAAS;QAA5C,IAAiB,kBAAkB,8DAAS;QAG5C,qCAAsC;QAAtC,IAAS,kBAAkB,wDAAW;QAAtC,IAAS,kBAAkB,8DAAW;QAGtC,kCAAmC;QAAnC,IAAS,eAAe,qDAAW;QAAnC,IAAS,eAAe,2DAAW;QAGnC,qCAAyC;QAAzC,IAAS,kBAAkB,wDAAc;QAAzC,IAAS,kBAAkB,8DAAc;QAGzC,wCAAuD;QAAvD,IAAS,qBAAqB,2DAAyB;QAAvD,IAAS,qBAAqB,iEAAyB;;;YA7E/C,kCAA6B,GAE1B,IAAI,CAAC;YAyDC,wHAAyC;YAGzC,qLAAoC;YAGpC,uKAAqB,KAAK,GAAC;YAGnC,gLAA6B;YAG7B,0KAA0B;YAG1B,6KAAgC;YAGhC,sLAA8C;;;;YAhF5C,uDAAkB;;;;;SAAlB,kBAAkB","sourcesContent":["import { WithDisposable } from '@lumensuite/block-std';\nimport { createButtonPopper } from '@lumensuite/blocks';\nimport { css, html, LitElement } from 'lit';\nimport { customElement, property, query, state } from 'lit/decorators.js';\n\nimport { SettingsIcon, SortingIcon } from '../../_common/icons.js';\nimport './outline-setting-menu.js';\n\nconst styles = css`\n  :host {\n    display: flex;\n    width: 100%;\n    height: 40px;\n    align-items: center;\n    justify-content: space-between;\n    box-sizing: border-box;\n    padding: 8px 16px;\n  }\n\n  .outline-panel-header-container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n    padding-right: 6px;\n  }\n\n  .note-setting-container {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n  }\n\n  .outline-panel-header-label {\n    width: 119px;\n    height: 22px;\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 22px;\n    color: var(--affine-text-secondary-color, #8e8d91);\n  }\n\n  .note-sorting-button {\n    justify-self: end;\n  }\n\n  .note-setting-button svg,\n  .note-sorting-button svg {\n    color: var(--affine-icon-secondary);\n  }\n\n  .note-setting-button:hover svg,\n  .note-setting-button.active svg,\n  .note-sorting-button:hover svg {\n    color: var(--affine-icon-color);\n  }\n\n  .note-sorting-button.active svg {\n    color: var(--affine-primary-color);\n  }\n\n  .note-preview-setting-container {\n    display: none;\n    justify-content: center;\n    align-items: center;\n    background: var(--affine-background-overlay-panel-color);\n    box-shadow: var(--affine-shadow-2);\n    border-radius: 8px;\n  }\n\n  .note-preview-setting-container[data-show] {\n    display: flex;\n  }\n`;\n\nexport const AFFINE_OUTLINE_PANEL_HEADER = 'affine-outline-panel-header';\n\n@customElement(AFFINE_OUTLINE_PANEL_HEADER)\nexport class OutlinePanelHeader extends WithDisposable(LitElement) {\n  static override styles = styles;\n\n  private _notePreviewSettingMenuPopper: ReturnType<\n    typeof createButtonPopper\n  > | null = null;\n\n  override firstUpdated() {\n    const _disposables = this._disposables;\n\n    this._notePreviewSettingMenuPopper = createButtonPopper(\n      this._noteSettingButton,\n      this._notePreviewSettingMenu,\n      ({ display }) => {\n        this._settingPopperShow = display === 'show';\n      },\n      {\n        mainAxis: 14,\n        crossAxis: -30,\n      }\n    );\n    _disposables.add(this._notePreviewSettingMenuPopper);\n  }\n\n  override render() {\n    return html`<div class=\"outline-panel-header-container\">\n        <div class=\"note-setting-container\">\n          <span class=\"outline-panel-header-label\">Table of Contents</span>\n          <edgeless-tool-icon-button\n            class=\"note-setting-button ${this._settingPopperShow\n              ? 'active'\n              : ''}\"\n            .tooltip=${this._settingPopperShow ? '' : 'Preview Settings'}\n            .tipPosition=${'bottom'}\n            .active=${this._settingPopperShow}\n            .activeMode=${'background'}\n            @click=${() => this._notePreviewSettingMenuPopper?.toggle()}\n          >\n            ${SettingsIcon}\n          </edgeless-tool-icon-button>\n        </div>\n        <edgeless-tool-icon-button\n          class=\"note-sorting-button ${this.enableNotesSorting ? 'active' : ''}\"\n          .tooltip=${'Note Sort Options'}\n          .tipPosition=${'left'}\n          .iconContainerPadding=${0}\n          .active=${this.enableNotesSorting}\n          .activeMode=${'color'}\n          @click=${() => this.toggleNotesSorting()}\n        >\n          ${SortingIcon}\n        </edgeless-tool-icon-button>\n      </div>\n      <div class=\"note-preview-setting-container\">\n        <affine-outline-note-preview-setting-menu\n          .showPreviewIcon=${this.showPreviewIcon}\n          .toggleShowPreviewIcon=${this.toggleShowPreviewIcon}\n        ></affine-outline-note-preview-setting-menu>\n      </div>`;\n  }\n\n  @query('.note-preview-setting-container')\n  private accessor _notePreviewSettingMenu!: HTMLDivElement;\n\n  @query('.note-setting-button')\n  private accessor _noteSettingButton!: HTMLDivElement;\n\n  @state()\n  private accessor _settingPopperShow = false;\n\n  @property({ attribute: false })\n  accessor enableNotesSorting!: boolean;\n\n  @property({ attribute: false })\n  accessor showPreviewIcon!: boolean;\n\n  @property({ attribute: false })\n  accessor toggleNotesSorting!: () => void;\n\n  @property({ attribute: false })\n  accessor toggleShowPreviewIcon!: (on: boolean) => void;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    [AFFINE_OUTLINE_PANEL_HEADER]: OutlinePanelHeader;\n  }\n}\n"]}