{"version":3,"file":"scroll.js","sourceRoot":"","sources":["../../../../src/fragments/outline/utils/scroll.ts"],"names":[],"mappings":"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","sourcesContent":["import type { EditorHost } from '@lumensuite/block-std';\n\nimport { NoteDisplayMode } from '@lumensuite/blocks';\nimport { clamp, DisposableGroup } from '@lumensuite/global/utils';\n\nimport type { AffineEditorContainer } from '../../../editors/editor-container.js';\n\nimport { getDocTitleByEditorHost } from '../../doc-title/doc-title.js';\nimport { getHeadingBlocksFromDoc } from './query.js';\n\nexport function scrollToBlock(editor: AffineEditorContainer, blockId: string) {\n  const { host, mode } = editor;\n  if (mode === 'edgeless' || !host) return;\n\n  if (editor.doc.root?.id === blockId) {\n    const docTitle = getDocTitleByEditorHost(host);\n    if (!docTitle) return;\n\n    docTitle.scrollIntoView({\n      behavior: 'smooth',\n      block: 'start',\n    });\n  } else {\n    const block = host.view.getBlock(blockId);\n    if (!block) return;\n    block.scrollIntoView({\n      behavior: 'smooth',\n      block: 'center',\n    });\n  }\n}\n\nexport function isBlockBeforeViewportCenter(\n  blockId: string,\n  editorHost: EditorHost\n) {\n  const block = editorHost.view.getBlock(blockId);\n  if (!block) return false;\n\n  const editorRect = (\n    editorHost.parentElement ?? editorHost\n  ).getBoundingClientRect();\n  const blockRect = block.getBoundingClientRect();\n\n  const editorCenter =\n    clamp(editorRect.top, 0, document.documentElement.clientHeight) +\n    Math.min(editorRect.height, document.documentElement.clientHeight) / 2;\n\n  const blockCenter = blockRect.top + blockRect.height / 2;\n\n  return blockCenter < editorCenter + blockRect.height;\n}\n\nexport const observeActiveHeadingDuringScroll = (\n  getEditor: () => AffineEditorContainer, // workaround for editor changed\n  update: (activeHeading: string | null) => void\n) => {\n  const editor = getEditor();\n  update(editor.doc.root?.id ?? null);\n\n  const disposables = new DisposableGroup();\n  disposables.addFromEvent(\n    window,\n    'scroll',\n    () => {\n      const { host } = getEditor();\n      if (!host) return;\n\n      const headings = getHeadingBlocksFromDoc(\n        host.doc,\n        [NoteDisplayMode.DocAndEdgeless, NoteDisplayMode.DocOnly],\n        true\n      );\n\n      let activeHeadingId = host.doc.root?.id ?? null;\n      headings.forEach(heading => {\n        if (isBlockBeforeViewportCenter(heading.id, host)) {\n          activeHeadingId = heading.id;\n        }\n      });\n      update(activeHeadingId);\n    },\n    true\n  );\n\n  return disposables;\n};\n\nlet highlightMask: HTMLDivElement | null = null;\nlet highlightTimeoutId: ReturnType<typeof setTimeout> | null = null;\n\nfunction highlightBlock(editor: AffineEditorContainer, blockId: string) {\n  const emptyClear = () => {};\n\n  const { host } = editor;\n  if (!host) return emptyClear;\n\n  if (editor.doc.root?.id === blockId) return emptyClear;\n\n  const rootComponent = host.querySelector('affine-page-root');\n  if (!rootComponent) return emptyClear;\n\n  if (!rootComponent.viewport) {\n    console.error('viewport should exist');\n    return emptyClear;\n  }\n\n  const {\n    top: offsetY,\n    left: offsetX,\n    scrollTop,\n    scrollLeft,\n  } = rootComponent.viewport;\n\n  const block = host.view.getBlock(blockId);\n  if (!block) return emptyClear;\n\n  const blockRect = block.getBoundingClientRect();\n  const { top, left, width, height } = blockRect;\n\n  if (!highlightMask) {\n    highlightMask = document.createElement('div');\n    rootComponent.append(highlightMask);\n  }\n\n  Object.assign(highlightMask.style, {\n    position: 'absolute',\n    top: `${top - offsetY + scrollTop}px`,\n    left: `${left - offsetX + scrollLeft}px`,\n    width: `${width}px`,\n    height: `${height}px`,\n    background: 'var(--affine-hover-color)',\n    borderRadius: '4px',\n    display: 'block',\n  });\n\n  // Clear the previous timeout if it exists\n  if (highlightTimeoutId !== null) {\n    clearTimeout(highlightTimeoutId);\n  }\n\n  highlightTimeoutId = setTimeout(() => {\n    if (highlightMask) {\n      highlightMask.style.display = 'none';\n    }\n  }, 1000);\n\n  return () => {\n    if (highlightMask !== null) {\n      highlightMask.remove();\n      highlightMask = null;\n    }\n    if (highlightTimeoutId !== null) {\n      clearTimeout(highlightTimeoutId);\n      highlightTimeoutId = null;\n    }\n  };\n}\n\n// this function is useful when the scroll need smooth animation\nlet highlightIntervalId: ReturnType<typeof setInterval> | null = null;\nexport async function scrollToBlockWithHighlight(\n  editor: AffineEditorContainer,\n  blockId: string,\n  timeout = 3000\n) {\n  scrollToBlock(editor, blockId);\n\n  let timeCount = 0;\n\n  return new Promise<ReturnType<typeof highlightBlock>>(resolve => {\n    if (highlightIntervalId !== null) {\n      clearInterval(highlightIntervalId);\n    }\n\n    // wait block be scrolled into view\n    let lastTop = -1;\n    highlightIntervalId = setInterval(() => {\n      if (highlightIntervalId === null) {\n        console.error('unreachable code');\n        return;\n      }\n\n      const { host } = editor;\n      const block = host?.view.getBlock(blockId);\n\n      if (!host || !block || timeCount > timeout) {\n        clearInterval(highlightIntervalId);\n        resolve(() => {});\n        return;\n      }\n\n      const blockRect = block.getBoundingClientRect();\n      const { top } = blockRect;\n\n      if (top !== lastTop) {\n        timeCount += 100;\n        lastTop = top;\n        return;\n      }\n\n      clearInterval(highlightIntervalId);\n\n      // highlight block\n      resolve(highlightBlock(editor, blockId));\n    }, 100);\n  });\n}\n"]}