{"version":3,"file":"outline-panel.js","sourceRoot":"","sources":["../../../src/fragments/outline/outline-panel.ts"],"names":[],"mappings":"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","sourcesContent":["import { SignalWatcher, WithDisposable } from '@lumensuite/block-std';\nimport { DisposableGroup } from '@lumensuite/global/utils';\nimport { baseTheme } from '@toeverything/theme';\nimport { css, html, LitElement, type PropertyValues, unsafeCSS } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\n\nimport type { AffineEditorContainer } from '../../editors/editor-container.js';\n\nimport './body/outline-notice.js';\nimport './body/outline-panel-body.js';\nimport { type OutlineSettingsDataType, outlineSettingsKey } from './config.js';\nimport './header/outline-panel-header.js';\n\nconst styles = css`\n  :host {\n    display: block;\n    width: 100%;\n    height: 100%;\n  }\n\n  .outline-panel-container {\n    background-color: var(--affine-background-primary-color);\n    box-sizing: border-box;\n\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n\n    height: 100%;\n    font-family: ${unsafeCSS(baseTheme.fontSansFamily)};\n    padding-top: 8px;\n    position: relative;\n  }\n\n  .outline-panel-body {\n    flex-grow: 1;\n    width: 100%;\n\n    overflow-y: scroll;\n  }\n  .outline-panel-body::-webkit-scrollbar {\n    width: 4px;\n  }\n  .outline-panel-body::-webkit-scrollbar-thumb {\n    border-radius: 2px;\n  }\n  .outline-panel-body:hover::-webkit-scrollbar-thumb {\n    background-color: var(--affine-black-30);\n  }\n  .outline-panel-body::-webkit-scrollbar-track {\n    background-color: transparent;\n  }\n  .outline-panel-body::-webkit-scrollbar-corner {\n    display: none;\n  }\n`;\n\nexport const AFFINE_OUTLINE_PANEL = 'affine-outline-panel';\n\n@customElement(AFFINE_OUTLINE_PANEL)\nexport class OutlinePanel extends SignalWatcher(WithDisposable(LitElement)) {\n  static override styles = styles;\n\n  private _editorDisposables: DisposableGroup | null = null;\n\n  private _setNoticeVisibility = (visibility: boolean) => {\n    this._noticeVisible = visibility;\n  };\n\n  private _settings: OutlineSettingsDataType = {\n    showIcons: false,\n    enableSorting: false,\n  };\n\n  private _toggleNotesSorting = () => {\n    this._enableNotesSorting = !this._enableNotesSorting;\n    this._updateAndSaveSettings({ enableSorting: this._enableNotesSorting });\n  };\n\n  private _toggleShowPreviewIcon = (on: boolean) => {\n    this._showPreviewIcon = on;\n    this._updateAndSaveSettings({ showIcons: on });\n  };\n\n  get doc() {\n    return this.editor.doc;\n  }\n\n  get edgeless() {\n    return this.editor.querySelector('affine-edgeless-root');\n  }\n\n  get host() {\n    return this.editor.host;\n  }\n\n  get mode() {\n    return this.editor.mode;\n  }\n\n  private _clearEditorDisposables() {\n    this._editorDisposables?.dispose();\n    this._editorDisposables = null;\n  }\n\n  private _loadSettingsFromLocalStorage() {\n    const settings = localStorage.getItem(outlineSettingsKey);\n    if (settings) {\n      this._settings = JSON.parse(settings);\n      this._showPreviewIcon = this._settings.showIcons;\n      this._enableNotesSorting = this._settings.enableSorting;\n    }\n  }\n\n  private _saveSettingsToLocalStorage() {\n    localStorage.setItem(outlineSettingsKey, JSON.stringify(this._settings));\n  }\n\n  private _setEditorDisposables() {\n    this._clearEditorDisposables();\n    this._editorDisposables = new DisposableGroup();\n    this._editorDisposables.add(\n      this.editor.slots.editorModeSwitched.on(() => {\n        this.editor.updateComplete\n          .then(() => {\n            this.requestUpdate();\n          })\n          .catch(console.error);\n      })\n    );\n    this._editorDisposables.add(\n      this.editor.slots.docUpdated.on(() => {\n        this.editor.updateComplete\n          .then(() => {\n            this.requestUpdate();\n          })\n          .catch(console.error);\n      })\n    );\n  }\n\n  private _updateAndSaveSettings(\n    newSettings: Partial<OutlineSettingsDataType>\n  ) {\n    this._settings = { ...this._settings, ...newSettings };\n    this._saveSettingsToLocalStorage();\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this._loadSettingsFromLocalStorage();\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this._clearEditorDisposables();\n  }\n\n  override render() {\n    if (!this.host) return;\n\n    return html`\n      <div class=\"outline-panel-container\">\n        <affine-outline-panel-header\n          .showPreviewIcon=${this._showPreviewIcon}\n          .enableNotesSorting=${this._enableNotesSorting}\n          .toggleShowPreviewIcon=${this._toggleShowPreviewIcon}\n          .toggleNotesSorting=${this._toggleNotesSorting}\n        ></affine-outline-panel-header>\n        <affine-outline-panel-body\n          class=\"outline-panel-body\"\n          .doc=${this.doc}\n          .fitPadding=${this.fitPadding}\n          .edgeless=${this.edgeless}\n          .editor=${this.editor}\n          .mode=${this.mode}\n          .showPreviewIcon=${this._showPreviewIcon}\n          .enableNotesSorting=${this._enableNotesSorting}\n          .toggleNotesSorting=${this._toggleNotesSorting}\n          .noticeVisible=${this._noticeVisible}\n          .setNoticeVisibility=${this._setNoticeVisibility}\n        >\n        </affine-outline-panel-body>\n        <affine-outline-notice\n          .noticeVisible=${this._noticeVisible}\n          .toggleNotesSorting=${this._toggleNotesSorting}\n          .setNoticeVisibility=${this._setNoticeVisibility}\n        ></affine-outline-notice>\n      </div>\n    `;\n  }\n\n  override updated(_changedProperties: PropertyValues) {\n    if (_changedProperties.has('editor')) {\n      this._setEditorDisposables();\n    }\n  }\n\n  @state()\n  private accessor _enableNotesSorting = false;\n\n  @state()\n  private accessor _noticeVisible = false;\n\n  @state()\n  private accessor _showPreviewIcon = false;\n\n  @property({ attribute: false })\n  accessor editor!: AffineEditorContainer;\n\n  @property({ attribute: false })\n  accessor fitPadding!: number[];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    [AFFINE_OUTLINE_PANEL]: OutlinePanel;\n  }\n}\n"]}