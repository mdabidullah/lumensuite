{"version":3,"file":"drag.js","sourceRoot":"","sources":["../../../../src/fragments/frame-panel/utils/drag.ts"],"names":[],"mappings":"AAGA,OAAO,EAGL,EAAE,EACF,IAAI,GACL,MAAM,oBAAoB,CAAC;AAI5B,OAAO,EAAE,SAAS,EAAE,MAAM,uBAAuB,CAAC;AAElD;;;GAGG;AACH,MAAM,UAAU,aAAa,CAC3B,MAKG,EACH,OAiBC;IAED,MAAM,EACJ,QAAQ,EACR,OAAO,EACP,SAAS,EACT,UAAU,EACV,SAAS,EACT,kBAAkB,EAClB,cAAc,EACd,kBAAkB,EAClB,KAAK,EACL,QAAQ,EACR,GAAG,EACH,UAAU,GACX,GAAG,OAAO,CAAC;IACZ,MAAM,YAAY,GAAG,MAAM;SACxB,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC;SACvC,GAAG,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;QACvB,MAAM,EAAE,GAAG,IAAI,SAAS,EAAE,CAAC;QAE3B,EAAE,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACvB,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC;QACb,EAAE,CAAC,IAAI,GAAG,UAAU,CAAC;QACrB,EAAE,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAEvB,EAAE,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QAC/B,EAAE,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;QACjC,EAAE,CAAC,MAAM,GAAG,UAAU,CAAC;QACvB,EAAE,CAAC,UAAU,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC;QACrC,EAAE,CAAC,GAAG,GAAG,KAAK,CAAC;QACf,EAAE,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QACzB,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC,UAAU,KAAK,CAAC;YAC1C,EAAE,CAAC,kBAAkB,GAAG,MAAM,CAAC,MAAM,CAAC;QAExC,OAAO,EAAE,CAAC;IACZ,CAAC,CAAC,CAAC;IACL,MAAM,WAAW,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC;IAChD,MAAM,iBAAiB,GAAG,cAAc,CAAC,qBAAqB,EAAE,CAAC;IACjE,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAgB,CAAC;IACxE,MAAM,aAAa,GAAG,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;IAC3D,MAAM,qBAAqB,GACzB,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;IACxD,IAAI,GAAuB,CAAC;IAC5B,IAAI,mBAAuC,CAAC;IAE5C,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACzC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,YAAY,CAAC,CAAC;IAE7C,MAAM,mBAAmB,GAAG,CAAC,CAAa,EAAE,EAAE;QAC5C,OAAO,CACL,CAAC,CAAC,OAAO,IAAI,iBAAiB,CAAC,IAAI;YACnC,CAAC,CAAC,OAAO,IAAI,iBAAiB,CAAC,KAAK;YACpC,CAAC,CAAC,OAAO,IAAI,iBAAiB,CAAC,GAAG;YAClC,CAAC,CAAC,OAAO,IAAI,iBAAiB,CAAC,MAAM,CACtC,CAAC;IACJ,CAAC,CAAC;IAEF,MAAM,WAAW,GAAG,EAAE,CAAC,SAAS,EAAE,WAAW,EAAE,CAAC,CAAC,EAAE;QACjD,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACxB,EAAE,CAAC,GAAG,GAAG;gBACP,CAAC,EAAE,CAAC,CAAC,OAAO;gBACZ,CAAC,EAAE,CAAC,CAAC,OAAO;aACb,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC;YAC5B,GAAG,GAAG,SAAS,CAAC;YAChB,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YACrB,OAAO;QACT,CAAC;QAED,GAAG,GAAG,CAAC,CAAC;QACR,KAAK,MAAM,IAAI,IAAI,QAAQ,EAAE,CAAC;YAC5B,IAAI,CAAC,IAAI,CAAC,KAAK;gBAAE,MAAM;YAEvB,MAAM,WAAW,GACf,iBAAiB,CAAC,GAAG;gBACrB,IAAI,CAAC,SAAS;gBACd,cAAc,CAAC,SAAS;gBACxB,qBAAqB,GAAG,CAAC,CAAC;YAC5B,MAAM,WAAW,GAAG,WAAW,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YACxD,MAAM,cAAc,GAClB,WAAW,GAAG,IAAI,CAAC,YAAY,GAAG,qBAAqB,CAAC;YAE1D,IAAI,CAAC,CAAC,OAAO,IAAI,WAAW,IAAI,CAAC,CAAC,OAAO,IAAI,cAAc,EAAE,CAAC;gBAC5D,GAAG,GAAG,CAAC,CAAC,OAAO,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gBAE9C,mBAAmB;oBACjB,GAAG,GAAG,CAAC,kBAAkB,GAAG,qBAAqB,CAAC;wBAClD,qBAAqB,GAAG,CAAC,CAAC;gBAE5B,UAAU,EAAE,CAAC,GAAG,EAAE,mBAAmB,CAAC,CAAC;gBACvC,OAAO;YACT,CAAC;YAED,EAAE,GAAG,CAAC;QACR,CAAC;QAED,UAAU,EAAE,CAAC,GAAG,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;IAEH,IAAI,KAAK,GAAG,KAAK,CAAC;IAClB,MAAM,OAAO,GAAG,GAAG,EAAE;QACnB,IAAI,KAAK;YAAE,OAAO;QAElB,KAAK,GAAG,IAAI,CAAC;QACb,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;QAC9C,WAAW,CAAC,MAAM,EAAE,CAAC;QAErB,WAAW,EAAE,CAAC;QACd,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC,CAAC;IAEF,IAAI,CAAC,OAAmB,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AAChD,CAAC;AAED,SAAS,iBAAiB,CAAC,GAAa;IACtC,MAAM,IAAI,GAAG,GAAG,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAEtC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC;IAC5B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;IAC3B,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IACtB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;IACrB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,4CAA4C,CAAC;IACjE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,CAAC;IAE/B,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["import type { EditorHost } from '@blocksuite/block-std';\nimport type { Doc } from '@blocksuite/store';\n\nimport {\n  type EdgelessRootBlockComponent,\n  type FrameBlockModel,\n  on,\n  once,\n} from '@blocksuite/blocks';\n\nimport type { FramePanelBody } from '../body/frame-panel-body.js';\n\nimport { FrameCard } from '../card/frame-card.js';\n\n/**\n * start drag frame cards\n * @param frames frames to drag\n */\nexport function startDragging(\n  frames: {\n    frame: FrameBlockModel;\n    element: FrameCard;\n    cardIndex: number;\n    frameIndex: string;\n  }[],\n  options: {\n    width: number;\n    onDragEnd?: (insertIndex?: number) => void;\n    onDragMove?: (insertIdx?: number, indicatorTranslateY?: number) => void;\n    framePanelBody: HTMLElement;\n    frameListContainer: HTMLElement;\n    frameElementHeight: number;\n    document: Document;\n    domHost: Document | HTMLElement;\n    container: FramePanelBody;\n    start: {\n      x: number;\n      y: number;\n    };\n    edgeless: EdgelessRootBlockComponent | null;\n    doc: Doc;\n    editorHost: EditorHost;\n  }\n) {\n  const {\n    document,\n    domHost,\n    container,\n    onDragMove,\n    onDragEnd,\n    frameElementHeight,\n    framePanelBody,\n    frameListContainer,\n    start,\n    edgeless,\n    doc,\n    editorHost,\n  } = options;\n  const cardElements = frames\n    .slice(frames.length - 2, frames.length)\n    .map((frame, idx, arr) => {\n      const el = new FrameCard();\n\n      el.edgeless = edgeless;\n      el.doc = doc;\n      el.host = editorHost;\n      el.frame = frame.frame;\n\n      el.cardIndex = frame.cardIndex;\n      el.frameIndex = frame.frameIndex;\n      el.status = 'dragging';\n      el.stackOrder = arr.length - 1 - idx;\n      el.pos = start;\n      el.width = options.width;\n      if (frames.length > 1 && el.stackOrder === 0)\n        el.draggingCardNumber = frames.length;\n\n      return el;\n    });\n  const maskElement = createMaskElement(document);\n  const listContainerRect = framePanelBody.getBoundingClientRect();\n  const children = Array.from(frameListContainer.children) as FrameCard[];\n  const computedStyle = getComputedStyle(frameListContainer);\n  const frameListContainerGap =\n    parseInt(computedStyle.getPropertyValue('gap')) ?? 16;\n  let idx: undefined | number;\n  let indicatorTranslateY: undefined | number;\n\n  container.renderRoot.append(maskElement);\n  container.renderRoot.append(...cardElements);\n\n  const insideListContainer = (e: MouseEvent) => {\n    return (\n      e.clientX >= listContainerRect.left &&\n      e.clientX <= listContainerRect.right &&\n      e.clientY >= listContainerRect.top &&\n      e.clientY <= listContainerRect.bottom\n    );\n  };\n\n  const disposeMove = on(container, 'mousemove', e => {\n    cardElements.forEach(el => {\n      el.pos = {\n        x: e.clientX,\n        y: e.clientY,\n      };\n    });\n\n    if (!insideListContainer(e)) {\n      idx = undefined;\n      onDragMove?.(idx, 0);\n      return;\n    }\n\n    idx = 0;\n    for (const card of children) {\n      if (!card.frame) break;\n\n      const topBoundary =\n        listContainerRect.top +\n        card.offsetTop -\n        framePanelBody.scrollTop -\n        frameListContainerGap / 2;\n      const midBoundary = topBoundary + card.offsetHeight / 2;\n      const bottomBoundary =\n        topBoundary + card.offsetHeight + frameListContainerGap;\n\n      if (e.clientY >= topBoundary && e.clientY <= bottomBoundary) {\n        idx = e.clientY > midBoundary ? idx + 1 : idx;\n\n        indicatorTranslateY =\n          idx * (frameElementHeight + frameListContainerGap) -\n          frameListContainerGap / 2;\n\n        onDragMove?.(idx, indicatorTranslateY);\n        return;\n      }\n\n      ++idx;\n    }\n\n    onDragMove?.(idx);\n  });\n\n  let ended = false;\n  const dragEnd = () => {\n    if (ended) return;\n\n    ended = true;\n    cardElements.forEach(child => child.remove());\n    maskElement.remove();\n\n    disposeMove();\n    onDragEnd?.(idx);\n  };\n\n  once(domHost as Document, 'mouseup', dragEnd);\n}\n\nfunction createMaskElement(doc: Document) {\n  const mask = doc.createElement('div');\n\n  mask.style.height = '100vh';\n  mask.style.width = '100vw';\n  mask.style.position = 'fixed';\n  mask.style.left = '0';\n  mask.style.top = '0';\n  mask.style.zIndex = 'calc(var(--affine-z-index-popover, 0) + 3)';\n  mask.style.cursor = 'grabbing';\n\n  return mask;\n}\n"]}