{"version":3,"file":"frames-setting-menu.js","sourceRoot":"","sources":["../../../../src/fragments/frame-panel/header/frames-setting-menu.ts"],"names":[],"mappings":"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","sourcesContent":["import type { EditorHost } from '@lumensuite/block-std';\nimport type { EdgelessRootBlockComponent } from '@lumensuite/blocks';\n\nimport { WithDisposable } from '@lumensuite/block-std';\nimport { css, html, LitElement, type PropertyValues } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\n\nconst styles = css`\n  :host {\n    display: block;\n    box-sizing: border-box;\n    padding: 8px;\n    width: 220px;\n  }\n\n  .frames-setting-menu-container {\n    display: flex;\n    flex-direction: column;\n    box-sizing: border-box;\n    width: 100%;\n  }\n\n  .frames-setting-menu-item {\n    display: flex;\n    box-sizing: border-box;\n    width: 100%;\n    height: 28px;\n    padding: 4px 12px;\n    align-items: center;\n  }\n\n  .frames-setting-menu-item .setting-label {\n    font-size: 12px;\n    font-weight: 500;\n    line-height: 20px;\n    color: var(--affine-text-secondary-color);\n    padding: 0 4px;\n  }\n\n  .frames-setting-menu-divider {\n    width: 100%;\n    height: 1px;\n    box-sizing: border-box;\n    background: var(--affine-border-color);\n    margin: 8px 0;\n  }\n\n  .frames-setting-menu-item.action {\n    gap: 4px;\n  }\n\n  .frames-setting-menu-item .action-label {\n    width: 138px;\n    height: 20px;\n    padding: 0 4px;\n    font-size: 12px;\n    font-weight: 500;\n    line-height: 20px;\n    color: var(--affine-text-primary-color);\n  }\n\n  .frames-setting-menu-item .toggle-button {\n    display: flex;\n  }\n\n  menu-divider {\n    height: 16px;\n  }\n`;\n\nexport const AFFINE_FRAMES_SETTING_MENU = 'affine-frames-setting-menu';\n\n@customElement(AFFINE_FRAMES_SETTING_MENU)\nexport class FramesSettingMenu extends WithDisposable(LitElement) {\n  static override styles = styles;\n\n  private _onBlackBackgroundChange = (checked: boolean) => {\n    this.blackBackground = checked;\n    this.edgeless?.slots.navigatorSettingUpdated.emit({\n      blackBackground: this.blackBackground,\n    });\n  };\n\n  private _onFillScreenChange = (checked: boolean) => {\n    this.fillScreen = checked;\n    this.edgeless?.slots.navigatorSettingUpdated.emit({\n      fillScreen: this.fillScreen,\n    });\n    this._rootService.editPropsStore.setStorage(\n      'presentFillScreen',\n      this.fillScreen\n    );\n  };\n\n  private _onHideToolBarChange = (checked: boolean) => {\n    this.hideToolbar = checked;\n    this.edgeless?.slots.navigatorSettingUpdated.emit({\n      hideToolbar: this.hideToolbar,\n    });\n    this._rootService.editPropsStore.setStorage(\n      'presentHideToolbar',\n      this.hideToolbar\n    );\n  };\n\n  private get _rootService() {\n    return this.editorHost.std.getService('affine:page');\n  }\n\n  private _tryRestoreSettings() {\n    const { editPropsStore } = this._rootService;\n    const blackBackground = editPropsStore.getStorage('presentBlackBackground');\n\n    this.blackBackground = blackBackground ?? true;\n    this.fillScreen = editPropsStore.getStorage('presentFillScreen') ?? false;\n    this.hideToolbar = editPropsStore.getStorage('presentHideToolbar') ?? false;\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this._tryRestoreSettings();\n  }\n\n  override disconnectedCallback(): void {\n    super.disconnectedCallback();\n  }\n\n  override render() {\n    return html`<div\n      class=\"frames-setting-menu-container\"\n      @click=${(e: MouseEvent) => {\n        e.stopPropagation();\n      }}\n    >\n      <div class=\"frames-setting-menu-item\">\n        <div class=\"setting-label\">Preview Settings</div>\n      </div>\n      <div class=\"frames-setting-menu-item action\">\n        <div class=\"action-label\">Fill Screen</div>\n        <div class=\"toggle-button\">\n          <toggle-switch\n            .on=${this.fillScreen}\n            .onChange=${this._onFillScreenChange}\n          ></toggle-switch>\n        </div>\n      </div>\n\n      <menu-divider></menu-divider>\n\n      <div class=\"frames-setting-menu-item\">\n        <div class=\"setting-label\">Playback Settings</div>\n      </div>\n      <div class=\"frames-setting-menu-item action\">\n        <div class=\"action-label\">Dark background</div>\n        <div class=\"toggle-button\">\n          <toggle-switch\n            .on=${this.blackBackground}\n            .onChange=${this._onBlackBackgroundChange}\n          ></toggle-switch>\n        </div>\n      </div>\n      <div class=\"frames-setting-menu-item action\">\n        <div class=\"action-label\">Hide toolbar</div>\n        <div class=\"toggle-button\">\n          <toggle-switch\n            .on=${this.hideToolbar}\n            .onChange=${this._onHideToolBarChange}\n          ></toggle-switch>\n        </div>\n      </div>\n    </div>`;\n  }\n\n  override updated(_changedProperties: PropertyValues) {\n    if (_changedProperties.has('edgeless')) {\n      if (this.edgeless) {\n        this.disposables.add(\n          this.edgeless.slots.navigatorSettingUpdated.on(\n            ({ blackBackground, hideToolbar }) => {\n              if (\n                blackBackground !== undefined &&\n                blackBackground !== this.blackBackground\n              ) {\n                this.blackBackground = blackBackground;\n              }\n\n              if (\n                hideToolbar !== undefined &&\n                hideToolbar !== this.hideToolbar\n              ) {\n                this.hideToolbar = hideToolbar;\n              }\n            }\n          )\n        );\n      } else {\n        this.disposables.dispose();\n      }\n    }\n  }\n\n  @state()\n  accessor blackBackground = false;\n\n  @property({ attribute: false })\n  accessor edgeless!: EdgelessRootBlockComponent | null;\n\n  @property({ attribute: false })\n  accessor editorHost!: EditorHost;\n\n  @state()\n  accessor fillScreen = false;\n\n  @state()\n  accessor hideToolbar = false;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    [AFFINE_FRAMES_SETTING_MENU]: FramesSettingMenu;\n  }\n}\n"]}