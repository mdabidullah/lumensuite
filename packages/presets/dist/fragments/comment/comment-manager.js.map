{"version":3,"file":"comment-manager.js","sourceRoot":"","sources":["../../../src/fragments/comment/comment-manager.ts"],"names":[],"mappings":"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","sourcesContent":["import type { EditorHost, TextSelection } from '@lumensuite/block-std';\n\nimport { DocCollection, type Y } from '@lumensuite/store';\n\nexport interface CommentMeta {\n  id: string;\n  date: number;\n}\nexport interface CommentRange {\n  start: {\n    id: string;\n    index: Y.RelativePosition;\n  };\n  end: {\n    id: string;\n    index: Y.RelativePosition;\n  };\n}\nexport interface CommentContent {\n  quote: string;\n  author: string;\n  text: Y.Text;\n}\n\nexport type Comment = CommentMeta & CommentRange & CommentContent;\n\nexport class CommentManager {\n  private get _command() {\n    return this.host.command;\n  }\n\n  get commentsMap() {\n    return this.host.doc.spaceDoc.getMap<Y.Map<unknown>>('comments');\n  }\n\n  constructor(readonly host: EditorHost) {}\n\n  addComment(\n    selection: TextSelection,\n    payload: Pick<CommentContent, 'author' | 'text'>\n  ): Comment {\n    const parseResult = this.parseTextSelection(selection);\n    if (!parseResult) {\n      throw new Error('Invalid selection');\n    }\n\n    const { quote, range } = parseResult;\n    const id = this.host.doc.collection.idGenerator();\n    const comment: Comment = {\n      id,\n      date: Date.now(),\n      start: range.start,\n      end: range.end,\n      quote,\n      ...payload,\n    };\n    this.commentsMap.set(\n      id,\n      new DocCollection.Y.Map<unknown>(Object.entries(comment))\n    );\n    return comment;\n  }\n\n  getComments(): Comment[] {\n    const comments: Comment[] = [];\n    this.commentsMap.forEach((comment, key) => {\n      const start = comment.get('start') as Comment['start'];\n      const end = comment.get('end') as Comment['end'];\n\n      const startIndex =\n        DocCollection.Y.createAbsolutePositionFromRelativePosition(\n          start.index,\n          this.host.doc.spaceDoc\n        );\n      const startBlock = this.host.view.getBlock(start.id);\n      const endIndex =\n        DocCollection.Y.createAbsolutePositionFromRelativePosition(\n          end.index,\n          this.host.doc.spaceDoc\n        );\n      const endBlock = this.host.view.getBlock(end.id);\n\n      if (!startIndex || !startBlock || !endIndex || !endBlock) {\n        // remove outdated comment\n        this.commentsMap.delete(key);\n        return;\n      }\n\n      const result: Comment = {\n        id: comment.get('id') as Comment['id'],\n        date: comment.get('date') as Comment['date'],\n        start,\n        end,\n        quote: comment.get('quote') as Comment['quote'],\n        author: comment.get('author') as Comment['author'],\n        text: comment.get('text') as Comment['text'],\n      };\n      comments.push(result);\n    });\n    return comments;\n  }\n\n  parseTextSelection(selection: TextSelection): {\n    quote: CommentContent['quote'];\n    range: CommentRange;\n  } | null {\n    const [_, ctx] = this._command\n      .chain()\n      .getSelectedBlocks({\n        currentTextSelection: selection,\n        types: ['text'],\n      })\n      .run();\n    const blocks = ctx.selectedBlocks;\n    if (!blocks || blocks.length === 0) return null;\n\n    const { from, to } = selection;\n    const fromBlock = blocks[0];\n    const fromBlockText = fromBlock.model.text;\n    const fromBlockId = fromBlock.model.id;\n    const toBlock = blocks[blocks.length - 1];\n    const toBlockText = toBlock.model.text;\n    const toBlockId = toBlock.model.id;\n    if (!fromBlockText || !toBlockText) return null;\n\n    const startIndex = DocCollection.Y.createRelativePositionFromTypeIndex(\n      fromBlockText.yText,\n      from.index\n    );\n    const endIndex = DocCollection.Y.createRelativePositionFromTypeIndex(\n      toBlockText.yText,\n      to ? to.index + to.length : from.index + from.length\n    );\n    const quote = blocks.reduce((acc, block, index) => {\n      const text = block.model.text;\n      if (!text) return acc;\n\n      if (index === 0) {\n        return (\n          acc +\n          text.yText.toString().slice(from.index, from.index + from.length)\n        );\n      }\n      if (index === blocks.length - 1 && to) {\n        return acc + ' ' + text.yText.toString().slice(0, to.index + to.length);\n      }\n\n      return acc + ' ' + text.yText.toString();\n    }, '');\n\n    return {\n      quote,\n      range: {\n        start: {\n          id: fromBlockId,\n          index: startIndex,\n        },\n        end: {\n          id: toBlockId,\n          index: endIndex,\n        },\n      },\n    };\n  }\n}\n"]}