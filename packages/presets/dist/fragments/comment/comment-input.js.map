{"version":3,"file":"comment-input.js","sourceRoot":"","sources":["../../../src/fragments/comment/comment-input.ts"],"names":[],"mappings":"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","sourcesContent":["import type { TextSelection } from '@lumensuite/block-std';\nimport type { RichText } from '@lumensuite/blocks';\n\nimport { ShadowlessElement, WithDisposable } from '@lumensuite/block-std';\nimport { DocCollection } from '@lumensuite/store';\nimport { css, html, nothing } from 'lit';\nimport { customElement, property, query } from 'lit/decorators.js';\n\nimport type { Comment, CommentManager } from './comment-manager.js';\n\n@customElement('comment-input')\nexport class CommentInput extends WithDisposable(ShadowlessElement) {\n  static override styles = css`\n    .comment-input-container {\n      padding: 16px;\n    }\n\n    .comment-quote {\n      font-size: 10px;\n      color: var(--affine-text-secondary-color);\n      padding-left: 8px;\n      border-left: 2px solid var(--affine-text-secondary-color);\n      margin-bottom: 8px;\n    }\n\n    .comment-author {\n      font-size: 12px;\n    }\n\n    .comment-editor {\n      white-space: pre-wrap;\n      overflow-wrap: break-word;\n      min-height: 24px;\n      margin-top: 16px;\n      margin-bottom: 16px;\n    }\n\n    .comment-control {\n      display: flex;\n      gap: 8px;\n      margin-top: 8px;\n    }\n  `;\n\n  private _cancel = () => {\n    this.remove();\n  };\n\n  private _submit = (textSelection: TextSelection) => {\n    const deltas = this._editor.inlineEditor?.yTextDeltas;\n    if (!deltas) {\n      this.remove();\n      return;\n    }\n\n    const yText = new DocCollection.Y.Text();\n    yText.applyDelta(deltas);\n    const comment = this.manager.addComment(textSelection, {\n      author: 'Anonymous',\n      text: yText,\n    });\n\n    this.onSubmit?.(comment);\n\n    this.remove();\n  };\n\n  get host() {\n    return this.manager.host;\n  }\n\n  override render() {\n    const textSelection = this.host.selection.find('text');\n    if (!textSelection) {\n      this.remove();\n      return nothing;\n    }\n    const parseResult = this.manager.parseTextSelection(textSelection);\n    if (!parseResult) {\n      this.remove();\n      return nothing;\n    }\n\n    const { quote } = parseResult;\n\n    const tmpYDoc = new DocCollection.Y.Doc();\n    const tmpYText = tmpYDoc.getText('comment');\n\n    return html`<div class=\"comment-input-container\">\n      <div class=\"comment-state\">\n        <div class=\"comment-quote\">${quote}</div>\n        <div class=\"comment-author\">Anonymous</div>\n      </div>\n      <rich-text\n        @blur=${() => this._submit(textSelection)}\n        .yText=${tmpYText}\n        class=\"comment-editor\"\n      ></rich-text>\n      <div class=\"comment-control\">\n        <button\n          @click=${() => this._submit(textSelection)}\n          class=\"comment-submit\"\n        >\n          Submit\n        </button>\n        <button @click=${this._cancel} class=\"comment-cancel\">Cancel</button>\n      </div>\n    </div>`;\n  }\n\n  @query('rich-text')\n  private accessor _editor!: RichText;\n\n  @property({ attribute: false })\n  accessor manager!: CommentManager;\n\n  @property({ attribute: false })\n  accessor onSubmit: undefined | ((comment: Comment) => void) = undefined;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'comment-input': CommentInput;\n  }\n}\n"]}